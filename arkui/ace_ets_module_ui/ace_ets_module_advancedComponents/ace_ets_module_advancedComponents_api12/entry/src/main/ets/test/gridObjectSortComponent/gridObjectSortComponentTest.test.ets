/**
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect } from "@ohos/hypium";
import { Driver, ON } from '@ohos.UiTest';
import router from '@system.router';
import events_emitter from '@ohos.events.emitter';
import Utils from '../Utils';


export default function gridObjectSortComponentTest() {
  describe('gridObjectSortComponentTest', function () {
    beforeEach(async function (done) {
      console.info("gridObjectSortComponentTest beforeEach start");
      let opt = {
        uri: 'MainAbility/pages/gridObjectSortComponent/gridObjectSortComponentTest',
      }
      let result;
      try {
        router.clear();
        let pages = router.getState();
        console.info("get gridObjectSortComponentTest state pages: " + JSON.stringify(pages));
        if (!('gridObjectSortComponentTest' == pages.name)) {
          console.info("get gridObjectSortComponentTest pages.name: " + JSON.stringify(pages.name));
          result = await router.push(opt);
          await Utils.sleep(2000);
          console.info("push gridObjectSortComponentTest page result: " + JSON.stringify(result));
        }
      } catch (err) {
        console.error("push gridObjectSortComponentTest page error: " + err);
      }

      await Utils.sleep(1000);
      console.info('gridObjectSortComponentTest beforeEach end');
      done();
    });

    afterEach(async function () {
      await Utils.sleep(1000);
      console.info('gridObjectSortComponentTest after each called');
    })

    /**
     * @tc.number gridObjectSortComponentTest
     * @tc.name   gridObjectSortComponentTest_0100
     * @tc.desc   Test gridObjectSortComponent
     * @tc.size   MediumTest
     * @tc.type   Function
     * @tc.level  0
     */

    it('gridObjectSortComponentTest_0100', 0, async function (done) {
      console.info('[gridObjectSortComponentTest_0100] START');
      let driver = await Driver.create();
      await driver.delayMs(2000);
      // 查看gridObjectSortComponent是否存在以下 文本信息。
      let gridObjectSortComponentItem1 = await driver.findComponent(ON.text('位置信息'));
      let gridObjectSortComponentItem2 = await driver.findComponent(ON.text('移动数据'));
      let gridObjectSortComponentItem3 = await driver.findComponent(ON.text('NFC'));
      let gridObjectSortComponentItem4 = await driver.findComponent(ON.text('响铃关闭'));
      let gridObjectSortComponentItem5 = await driver.findComponent(ON.text('响铃'));
      expect(gridObjectSortComponentItem1 !== null).assertTrue();
      expect(gridObjectSortComponentItem2 !== null).assertTrue();
      expect(gridObjectSortComponentItem3 !== null).assertTrue();
      expect(gridObjectSortComponentItem4 !== null).assertTrue();
      expect(gridObjectSortComponentItem5 !== null).assertTrue();
      console.info('[gridObjectSortComponentTest_0100] END');
      done();
    });

    /**
     * @tc.number gridObjectSortComponentTest
     * @tc.name   gridObjectSortComponentTest_0200 item
     * @tc.desc   Click gridObjectSortComponent
     * @tc.size   MediumTest
     * @tc.type   Function
     * @tc.level  0
     */

    it('gridObjectSortComponentTest_0200', 0, async function (done) {
      console.info('[gridObjectSortComponentTest_0200] START');
      let driver = await Driver.create();
      await Utils.sleep(2000);

      //点击GridObjectSortComponentItem中的item
      let textItem1 = await driver.findComponent(ON.text('低电量模式'));
      await textItem1.click();
      await Utils.sleep(1000);
      // 断言GridObjectSortComponentItem中存在‘截屏’。
      let textItem2 = await driver.findComponent(ON.text('截屏'));
      expect(textItem2 !== null).assertTrue();
      console.info('[gridObjectSortComponentTest_0200] END');
      done();
    });
  })
}