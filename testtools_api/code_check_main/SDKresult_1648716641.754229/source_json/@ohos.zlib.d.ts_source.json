{"subsystem_ch": "\u5305\u7ba1\u7406\u5b50\u7cfb\u7edf", "subsystem_en": "appexecfwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.zlib", "api": [{"api_class_name": "zlib", "api_method_all": "declare namespace zlib {\r\n\r\n  export enum ErrorCode {\r\n    ERROR_CODE_OK = 0,\r\n    ERROR_CODE_ERRNO = -1\r\n  }\r\n\r\n\r\n  export enum CompressLevel {\r\n    COMPRESS_LEVEL_NO_COMPRESSION = 0,\r\n    COMPRESS_LEVEL_BEST_SPEED = 1,\r\n    COMPRESS_LEVEL_BEST_COMPRESSION = 9,\r\n    COMPRESS_LEVEL_DEFAULT_COMPRESSION = -1\r\n  }\r\n\r\n\r\n  export enum CompressStrategy {\r\n    COMPRESS_STRATEGY_DEFAULT_STRATEGY = 0,\r\n    COMPRESS_STRATEGY_FILTERED = 1,\r\n    COMPRESS_STRATEGY_HUFFMAN_ONLY = 2,\r\n    COMPRESS_STRATEGY_RLE = 3,\r\n    COMPRESS_STRATEGY_FIXED = 4\r\n  }\r\n\r\n\r\n  export enum MemLevel {\r\n    MEM_LEVEL_MIN = 1,\r\n    MEM_LEVEL_MAX = 9,\r\n    MEM_LEVEL_DEFAULT = 8\r\n  }\r\n\r\n\r\n  interface Options {\r\n    level?: CompressLevel;\r\n    memLevel?: MemLevel;\r\n    strategy?: CompressStrategy;\r\n  }\r\n\r\n  \r\n  function zipFile(inFile:string, outFile:string, options: Options): Promise<void>;\r\n\r\n  \r\n  function unzipFile(inFile:string, outFile:string, options: Options): Promise<void>;\r\n}", "api_method_name": "zlib", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 105, "since": 0, "api_used": "\u662f", "lines": ["", "NO_FLUSH;\n    await zlib.zipFile(src, dir, o", "    options.flush = zlib.FlushType.FLUSH_TYP", "PEED;\n        await zlib.zipFile(path, zipDe", "  };\n\n        await zlib.zipFile(path, zipDe", " options.memLevel = zlib.MemLevel.MEM_LEVEL_", "NO_FLUSH;\n    await zlib.zipFile(path, dir, ", "NO_FLUSH;\n    await zlib.zipFile(path, zipDe", "rt zlib from '@ohos.zlib'\nimport fileio from", "});\n                zlib.unzipFile(zipDest, ", "   };\n        await zlib.zipFile(path, zipDe", "    options.level = zlib.CompressLevel.COMPR", "SION;\n        await zlib.zipFile(path, zipDe", "_MIN;\n        await zlib.zipFile(path, zipDe", "t(data).assertEqual(zlib.ErrorCode.ERROR_COD"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "zlib", "api_method_name": "zipFile", "api_method_all": "function zipFile(inFile:string, outFile:string, options: Options): Promise<void>;", "api_type": "Promise", "api_args_count": 3, "api_level": null, "api_used_count": 22, "since": 7, "api_used": "\u662f", "lines": ["\n            zlib.unzipFile(unzipDest, zipdir, options).then((data)", "RED;\n    await zlib.zipFile(path, zipDest, options).then(data => {\n", "             zlib.unzipFile(zipDest, unzipdir, options).then((data)", "XED;\n    await zlib.zipFile(path, zipDest, options).then(data => {\n", ");\n    await zlib.unzipFile(unzipDest, zipdir, options).then(data =", "ions = {};\n    zlib.zipFile(path, zipDest, options).then((data) => ", "ions = {};\n    zlib.zipFile(src, dir, options).then((data) => {\n   "], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "zlib", "api_method_name": "unzipFile", "api_method_all": "function unzipFile(inFile:string, outFile:string, options: Options): Promise<void>;", "api_type": "Promise", "api_args_count": 3, "api_level": null, "api_used_count": 18, "since": 0, "api_used": "\u662f", "lines": [" });\n    await zlib.unzipFile(unzipDest, zipdir, options).then(data =", "               zlib.unzipFile(zipDest, unzipdir, options).then((data)", ");\n            zlib.unzipFile(unzipDest, zipdir, options).then((data)"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ErrorCode", "api_method_all": "export enum ErrorCode {\r\n    ERROR_CODE_OK = 0,\r\n    ERROR_CODE_ERRNO = -1\r\n  }", "api_method_name": "ErrorCode", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 52, "since": 7, "api_used": "\u662f", "lines": ["a).assertEqual(zlib.ErrorCode.ERROR_CODE_OK);\n\n  ", " expect(demo.InstallErrorCode.STATUS_FAILED_NO_SP", "rtEqual(demo.InstallErrorCode.SUCCESS)\n        ex", "rtEqual(demo.InstallErrorCode.SUCCESS);\n         ", " expect(demo.InstallErrorCode.STATUS_GRANT_REQUES", "a).assertEqual(zlib.ErrorCode.ERROR_CODE_ERRNO);\n", "a).assertEqual(zlib.ErrorCode.ERROR_CODE_OK);\n   ", "rtEqual(demo.InstallErrorCode.STATUS_UNINSTALL_FA", "  * @tc.name InstallErrorCode::STATUS_FAILED_NO_S"], "files": ["ExampleJsunit.test.js", "actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ErrorCode", "api_method_name": "ERROR_CODE_OK", "api_method_all": "ERROR_CODE_OK = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 35, "since": 7, "api_used": "\u662f", "lines": ["qual(zlib.ErrorCode.ERROR_CODE_OK);\n        done();\n ", "qual(zlib.ErrorCode.ERROR_CODE_OK);\n                f", "qual(zlib.ErrorCode.ERROR_CODE_OK);\n            filei", "qual(zlib.ErrorCode.ERROR_CODE_OK);\n\n    }).catch(err", "qual(zlib.ErrorCode.ERROR_CODE_OK);\n                 "], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ErrorCode", "api_method_name": "ERROR_CODE_ERRNO", "api_method_all": "ERROR_CODE_ERRNO = -1", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 7, "since": 7, "api_used": "\u662f", "lines": ["qual(zlib.ErrorCode.ERROR_CODE_ERRNO);\n            done(", "qual(zlib.ErrorCode.ERROR_CODE_ERRNO);\n        done();\n ", "qual(zlib.ErrorCode.ERROR_CODE_ERRNO);\n                d"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CompressLevel", "api_method_all": "export enum CompressLevel {\r\n    COMPRESS_LEVEL_NO_COMPRESSION = 0,\r\n    COMPRESS_LEVEL_BEST_SPEED = 1,\r\n    COMPRESS_LEVEL_BEST_COMPRESSION = 9,\r\n    COMPRESS_LEVEL_DEFAULT_COMPRESSION = -1\r\n  }", "api_method_name": "CompressLevel", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["ptions.level = zlib.CompressLevel.COMPRESS_LEVEL_BEST", "ptions.level = zlib.CompressLevel.COMPRESS_LEVEL_DEFA", "ptions.level = zlib.CompressLevel.COMPRESS_LEVEL_NO_C"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CompressLevel", "api_method_name": "COMPRESS_LEVEL_NO_COMPRESSION", "api_method_all": "COMPRESS_LEVEL_NO_COMPRESSION = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": [" zlib.CompressLevel.COMPRESS_LEVEL_NO_COMPRESSION;\n        await zlib"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CompressLevel", "api_method_name": "COMPRESS_LEVEL_BEST_SPEED", "api_method_all": "COMPRESS_LEVEL_BEST_SPEED = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": [" zlib.CompressLevel.COMPRESS_LEVEL_BEST_SPEED;\n        await zlib"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CompressLevel", "api_method_name": "COMPRESS_LEVEL_BEST_COMPRESSION", "api_method_all": "COMPRESS_LEVEL_BEST_COMPRESSION = 9,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": [" zlib.CompressLevel.COMPRESS_LEVEL_BEST_COMPRESSION;\n        await zlib"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CompressLevel", "api_method_name": "COMPRESS_LEVEL_DEFAULT_COMPRESSION", "api_method_all": "COMPRESS_LEVEL_DEFAULT_COMPRESSION = -1", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": [" zlib.CompressLevel.COMPRESS_LEVEL_DEFAULT_COMPRESSION;\n        await zlib"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CompressStrategy", "api_method_all": "export enum CompressStrategy {\r\n    COMPRESS_STRATEGY_DEFAULT_STRATEGY = 0,\r\n    COMPRESS_STRATEGY_FILTERED = 1,\r\n    COMPRESS_STRATEGY_HUFFMAN_ONLY = 2,\r\n    COMPRESS_STRATEGY_RLE = 3,\r\n    COMPRESS_STRATEGY_FIXED = 4\r\n  }", "api_method_name": "CompressStrategy", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["ons.strategy = zlib.CompressStrategy.COMPRESS_STRATEGY_D", "ons.strategy = zlib.CompressStrategy.COMPRESS_STRATEGY_R", "ons.strategy = zlib.CompressStrategy.COMPRESS_STRATEGY_H", "ons.strategy = zlib.CompressStrategy.COMPRESS_STRATEGY_F"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CompressStrategy", "api_method_name": "COMPRESS_STRATEGY_DEFAULT_STRATEGY", "api_method_all": "COMPRESS_STRATEGY_DEFAULT_STRATEGY = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["ib.CompressStrategy.COMPRESS_STRATEGY_DEFAULT_STRATEGY;\n        await zlib"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CompressStrategy", "api_method_name": "COMPRESS_STRATEGY_FILTERED", "api_method_all": "COMPRESS_STRATEGY_FILTERED = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["zipFile\n* @tc.desc: COMPRESS_STRATEGY_FILTERED,,\n*/\nit('ACTS_ZipFi", "zipFile\n* @tc.desc: COMPRESS_STRATEGY_FILTERED,\n*/\nit('ACTS_ZipFil", "ib.CompressStrategy.COMPRESS_STRATEGY_FILTERED;\n    await zlib.zip", "ib.CompressStrategy.COMPRESS_STRATEGY_FILTERED;\n        await zlib"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CompressStrategy", "api_method_name": "COMPRESS_STRATEGY_HUFFMAN_ONLY", "api_method_all": "COMPRESS_STRATEGY_HUFFMAN_ONLY = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["zipFile\n* @tc.desc: COMPRESS_STRATEGY_HUFFMAN_ONLY,,\n*/\nit('ACTS_ZipFi", "ib.CompressStrategy.COMPRESS_STRATEGY_HUFFMAN_ONLY;\n        await zlib"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CompressStrategy", "api_method_name": "COMPRESS_STRATEGY_RLE", "api_method_all": "COMPRESS_STRATEGY_RLE = 3,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["zipFile\n* @tc.desc: COMPRESS_STRATEGY_RLE,,\n*/\nit('ACTS_ZipFi", "ib.CompressStrategy.COMPRESS_STRATEGY_RLE;\n        await zlib"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CompressStrategy", "api_method_name": "COMPRESS_STRATEGY_FIXED", "api_method_all": "COMPRESS_STRATEGY_FIXED = 4", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["ib.CompressStrategy.COMPRESS_STRATEGY_FIXED;\n    await zlib.zip", "zipFile\n* @tc.desc: COMPRESS_STRATEGY_FIXED,\n*/\nit('ACTS_ZipFil"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MemLevel", "api_method_all": "export enum MemLevel {\r\n    MEM_LEVEL_MIN = 1,\r\n    MEM_LEVEL_MAX = 9,\r\n    MEM_LEVEL_DEFAULT = 8\r\n  }", "api_method_name": "MemLevel", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["ons.memLevel = zlib.MemLevel.MEM_LEVEL_MAX;\n    ", "ons.memLevel = zlib.MemLevel.MEM_LEVEL_DEFAULT;\n", "ons.memLevel = zlib.MemLevel.MEM_LEVEL_MIN;\n    "], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MemLevel", "api_method_name": "MEM_LEVEL_MIN", "api_method_all": "MEM_LEVEL_MIN = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["vel = zlib.MemLevel.MEM_LEVEL_MIN;\n        await zlib"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MemLevel", "api_method_name": "MEM_LEVEL_MAX", "api_method_all": "MEM_LEVEL_MAX = 9,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["vel = zlib.MemLevel.MEM_LEVEL_MAX;\n        await zlib"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MemLevel", "api_method_name": "MEM_LEVEL_DEFAULT", "api_method_all": "MEM_LEVEL_DEFAULT = 8", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["vel = zlib.MemLevel.MEM_LEVEL_DEFAULT;\n        await zlib"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_all": "interface Options {\r\n    level?: CompressLevel;\r\n    memLevel?: MemLevel;\r\n    strategy?: CompressStrategy;\r\n  }", "api_method_name": "Options", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["TH_ABILITIES, bundleOptions, (err, dataInfo) =>", "          let bundleOptions = {\n               ", "TH_ABILITIES, bundleOptions);\n            expec"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "level", "api_method_all": "level?: CompressLevel", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["{};\n        options.level = zlib.CompressLeve"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "memLevel", "api_method_all": "memLevel?: MemLevel", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["{};\n        options.memLevel = zlib.MemLevel.MEM"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "strategy", "api_method_all": "strategy?: CompressStrategy", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["{};\n        options.strategy = zlib.CompressStra", "s = {};\n    options.strategy = zlib.CompressStra"], "files": ["actszipfileandunzipfiletest.test.js"], "is_white": " ", "desc": " "}]}