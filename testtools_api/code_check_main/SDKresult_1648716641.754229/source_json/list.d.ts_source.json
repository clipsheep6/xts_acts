{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@internal\\component\\ets\\list", "api": [{"api_class_name": "ScrollState", "api_method_all": "declare enum ScrollState {\n  \n  Idle,\n\n  \n  Scroll,\n\n  \n  Fling,\n}", "api_method_name": "ScrollState", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["umber, scrollState: ScrollState) => {\n          con", "      console.info('ScrollState:' + scrollState)\n  "], "files": ["List.ets", "list.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollState", "api_method_name": "Idle", "api_method_all": "Idle,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollState", "api_method_name": "Scroll", "api_method_all": "Scroll,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 256, "since": 7, "api_used": "\u662f", "lines": ["\n      }.scrollable(ScrollDirection.Vertical).", ")\n      })\n      .onScrollEnd(() => {\n        ", "      console.info('Scroll Stop')\n      })\n\n  ", "r = 30;\n  scroller: Scroller = new Scroller()\n", " @State scrollable: ScrollDirection = ScrollDi", "  console.info(\"get ScrollCode state success \"", "nt.End }) {\n        Scroll(this.scroller) {\n  ", "lable).assertEqual('ScrollDirection.Vertical')", "y\n@Component\nstruct ScrollBarExample {\n  priva", "      }\n      .key(\"ScrollCode\")\n      .scroll", "umber, scrollState: ScrollState) => {\n        ", "ler: Scroller = new Scroller()\n  private arr: ", ")\n      })\n      .onScrollEdge((side: Edge) =>", "owsGap(10)\n      .onScrollIndex((first: number", "s));\n        if (!(\"ScrollCode\" == pages.name)", "  private scroller: Scroller = new Scroller();", "      })\n        .onScroll((scrollOffset: numb", "crollBarDirection = ScrollBarDirection.Vertica", "llBarJsunit from './ScrollBarJsunit.test.ets';", ".Vertical)\n\n        ScrollBar({ scroller: this", " console.info(\"push ScrollCode page success \" ", "     \"scrollable\": \"ScrollDirection.Vertical\"\n", " console.info('[testScrollBar001] START');\n   ", "ler: Scroller = new Scroller();\n  private sett", " getInspectorByKey('ScrollCode');\n      let ob", "      console.info(\"ScrollCode after each call", "   });\n\n    it('testScrollBar001', 0, async fu", "        .scrollable(ScrollDirection.Vertical)\n", "ate directionValue: ScrollBarDirection = Scrol", "console.error(\"push ScrollCode page error \" + ", "  private scroller: Scroller = new Scroller()\n", "le(true)\n        .onScrollIndex((firstIndex: n", ": ScrollDirection = ScrollDirection.Vertical;\n", "TopStart }) {\n      Scroll(this.scroller) {\n  ", "lBarWidth)\n      .onScroll((xOffset: number, y", " }\n\n  build() {\n    Scroll() {\n      Column() ", "lCodeJsunit from './ScrollCodeJsunit.test.ets'", "  console.info(\"get ScrollCode pages success \"", "/ \u8054\u52a8\u7279\u6548\u5173\u95ed\n        .onScrollIndex((firstIndex: n", "gn.Start }) {\n      Scroll(this.scroller) {\n  "], "files": ["tabContentProps.test.js", "marqueeProps.test.js", "Tab.ets", "canvas2.ets", "ScrollBarJsunit.test.ets", "canvas.ets", "List.test.ets", "checkboxGroup.ets", "Badge.ets", "Prop.ets", "Scroll.ets", "ScrollerBarJsunit.test.ets", "swiperProps.test.js", "list.ets", "AppStorage.ets", "List.ets", "TabJsunit.test.ets", "GridContainer.ets", "tabBarProps.test.js", "index.js", "ScrollCodeJsunit.test.ets", "Link.ets", "edgeEffect.ets", "scrollBar.ets", "grid.ets", "ScrollJsunit.test.ets", "ScrollBar.ets", "ColumnSplit.ets", "scrollCode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollState", "api_method_name": "Fling", "api_method_all": "Fling,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListInterface", "api_method_all": "interface ListInterface {\n  \n  (value?: { initialIndex?: number; space?: number | string; scroller?: Scroller }): ListAttribute;\n}", "api_method_name": "ListInterface", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListInterface", "api_method_name": "value", "api_method_all": "(value?: { initialIndex?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14499, "since": 7, "api_used": "\u662f", "lines": ["      console.info('value:' + value + 'mode:'", "   return this.rect_value = {\n      \"left\": t", ".info(\"this.matrix3 value is\");\n        this.", "xpect(objNew.$attrs.value).assertEqual('10.00", "xpect(objNew.$attrs.value).assertEqual('nan')", "ckbox1 change is' + value)\n          })\n     ", "ull) {\n        this.value = eventData.data.va", "  this.value = this.value + 'Text'\n          ", "g\"},\n              {value:'ddd',icon: \"/image", "ect(indexEvent.data.value).assertEqual('TextT", ".info(\"this.matrix2 value is\" + Matrix4.ident", "      \"value\": this.value,\n              }\n  ", "eckbox2 change is'+ value)\n        })\n    }\n ", "         .onChange((value: number, mode: Slid", "eckbox1 change is'+ value)\n        })\n      C", "g\"},\n              {value:'ccc',icon: \"/image", "=> {\n          this.value = this.value + 'Tex", " {\n                \"value\": this.value,\n     ", "e.info(\"this.matrix value is not\");\n      }\n ", " if (eventData.data.value != null) {\n        ", "rExample {\n  @State value:string=10\n  @State ", " Slider({\n          value: this.outSetValue,\n", " this.outSetValue = value\n            console", "        .value(this.value)\n        .font(this", "s.Vertical\n  @State value: number = 40\n\n  pri", "ttom;\n  static rect_value;\n\n  static sleep(ti", "ngify(oldValue)} newvalue is ${JSON.stringify", "ole.info(\"eventData value is\");\n      if (eve", "  expect(obj.$attrs.value).assertEqual('50.00", "xpect(objNew.$attrs.value).assertEqual('-10.0", "elected(2)\n        .value('TTT')\n        .val", "n() {\n      Gauge({ value: 0, min: 0, max: 10", "g\"},\n              {value:'bbb',icon: \"/image", "ue = eventData.data.value;\n      }\n      if (", ") {\n      Text(this.value)\n        .key('text", "\n        .onChange((value: boolean) => {\n    ", "y(\"gauge\")\n        .value(`${this.gaugeValue}", "ckbox2 change is' + value)\n          })\n     ", "aExample {\n  @State value: string = 'Text';\n ", "ckbox3 change is' + value)\n          })\n     ", "() {\n      Select([{value:'aaa',icon: \"/image", "lue('TTT')\n        .value(this.value)\n       ", "         .onChange((value: boolean) => {\n    "], "files": ["listItemGroupProps.test.js", "pathProps.test.js", "dividerProps.test.js", "tabContentProps.test.js", "ListItemJsunit.test.ets", "textProps.test.js", "ParallelGestureJsunit.test.ets", "toolbarProps.test.js", "Navigation.ets", "TextPickerJsunit.test.ets", "polylineProps.test.js", "Progress.ets", "Panel.ets", "checkboxGroup.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "toolbarItemProps.test.js", "TapGesture.test.ets", "Rating.ets", "badgeProps.test.js", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "textArea.ets", "textInput.ets", "formProps.test.js", "SelectJsunit.test.ets", "circleProps.test.js", "Slider.ets", "SourceTypeJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "PanelJsunit.test.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "ButtonJsunit.test.ets", "StepperJsunit.test.ets", "sideBar.ets", "refreshProps.test.js", "Sidebar.ets", "Prop.ets", "Scroll.ets", "ScrollerBarJsunit.test.ets", "canvasProps.test.js", "AreaChangeJsunit.test.ets", "TextArea.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "tapGesture.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "richtextProps.test.js", "svgProps.test.js", "labelProps.test.js", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "gridContainerProps.test.js", "stepperProps.test.js", "Select.ets", "ratingProps.test.js", "Utils.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "textPickerDialog.ets", "tabsProps.test.js", "badge.ets", "qrcodeProps.test.js", "lineProps.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "videoProps.test.js", "GaugeJsunit.test.ets", "optionProps.test.js", "TextInputJsunit.test.ets", "calendar.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "checkbox.ets", "QrcodeJsunit.test.ets", "TextAreaJsunit.test.ets", "pieceProps.test.js", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "Button.ets", "textareaProps.test.js", "gridColProps.test.js", "fontWeight.ets", "buttonProps.test.js", "animateProps.test.js", "animate.ets", "ContentStorage.test.ets", "BadgeJsunit.test.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "divProps.test.js", "switchProps.test.js", "TextInput.ets", "radio.ets", "rating.ets", "ellipseProps.test.js", "priorityGesture.ets", "DataPanel.ets", "chartProps.test.js", "SliderJsunit.test.ets", "progress.ets", "AlertDialog.ets", "sliderProps.test.js", "WebPage.ets", "swiperProps.test.js", "polygonProps.test.js", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "SwiperJsunit.test.ets", "areaChange.ets", "tspanProps.test.js", "parallelGesture.ets", "imageProps.test.js", "select.ets", "listProps.test.js", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "panelProps.test.js", "search.ets", "panel.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ListInterface", "api_method_name": "space", "api_method_all": "space?: number | string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 77, "since": 7, "api_used": "\u662f", "lines": ["in(15)\n      List({ space: 20, initialIndex: ", "build() {\n    List({space: 3}) {\n      LazyFo", "90%')\n        Row({ space: 20 }) {\n          ", "ld() {\n    Column({ space: 15 }) {\n      Text", "ld() {\n    Column({ space:20 }){\n      Button", "\n          Column({ space: 5 }) {\n           ", "ld() {\n    Column({ space: 20 }) {\n      Text", "ld() {\n    Column({ space: 2 }) {\n      Text(", "() {\n        List({ space: 20, initialIndex: ", "n() {\n      Column({space: 10}) {\n        Tex", "ilder() {\n    Row({ space: 2 }) {\n      Text(", "ld() {\n    Column({ space: 5 }) {\n      Flex(", "() {\n      Column({ space: 5 }) {\n        Tex", "n(15)\n\n      List({ space: 20, initialIndex: ", "mn() {\n      List({ space: 20, initialIndex: ", "erOne() {\n    Row({ space: 2 }) {\n      Text(", "ld() {\n    Column({ space: 5 }) {\n      Grid(", "ld() {\n    Column({ space: 5 }) {\n      Swipe", "('90%')\n      Row({ space: 40 }) {\n        Pr", "(26)\n        List({ space: 5, initialIndex: 0", "ld() {\n    Column({ space: 5 }) {\n      Shape", "t(30)\n        Row({ space: 5 }) {\n          I", "ld() {\n    Column({ space: 10 }) {\n      Text", "ld() {\n    Column({ space:5 }) {\n      ImageA", "ld() {\n    Column({ space: 5 }) {\n      GridC", "'100%')\n      Row({ space: 10 }) {\n        Fo", "ilder() {\n    Row({ space: 2 }) {\n      Image", "ld() {\n    Column({ space: 5 }) {\n      Text(", "ld() {\n    Column({ space:20 }) {\n      Butto"], "files": ["polyline.ets", "flex.ets", "Shape.ets", "focus.ets", "Flex.ets", "gridContainer.ets", "Polyline.ets", "row.ets", "direction2.ets", "mouseEvent.ets", "background.ets", "placement.ets", "enumsImage.ets", "polygon.ets", "Rect.ets", "textStyle.ets", "Navigation.ets", "imageFit.ets", "ScrollBar.ets", "imageEffects.ets", "TextInput.ets", "enumsVerticalAlign.ets", "swiper.ets", "sideBar.ets", "animationStatus.ets", "toggle.ets", "Path.ets", "fillMode.ets", "navigation.ets", "Grid.ets", "progress.ets", "layoutConstraints.ets", "list.ets", "positionSetting.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "enumsLineCapStyle.ets", "shapeClipping.ets", "flexDirection.ets", "flexWrap.ets", "RowJsunit.test.ets", "gradientDirection.ets", "Swiper.ets", "edgeEffect.ets", "backgroundAndSizeSetting.ets", "dragEvent.ets", "shape.ets", "lazyForEach.ets", "Toggle.ets", "listItem.ets", "slider.ets", "grid.ets", "Polygon.ets", "bindPopup.ets", "path.ets", "imageAnimator.ets", "Column.ets", "enumsHorizontalAlign.ets", "colorGradient.ets", "ListJsunit.test.ets", "loadingProgress.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ListInterface", "api_method_name": "scroller", "api_method_all": "scroller?: Scroller }): ListAttribute", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 38, "since": 7, "api_used": "\u662f", "lines": ["        ScrollBar({ scroller: this.scroller2, di", "roller();\n  private scroller2: Scroller = new Sc", "\n              this.scroller.scrollPage({\n      ", ")\n      Scroll(this.scroller) {\n        Column()", "t: 0, yOffset: this.scroller.currentOffset().yOf", "{\n      Scroll(this.scroller) {\n        Column()", "dth: number = 30;\n  scroller: Scroller = new Scr", "ar({ scroller: this.scroller, direction: this.di", "        ScrollBar({ scroller: this.scroller, dir", "ar({ scroller: this.scroller2, direction: Scroll", "        Scroll(this.scroller) {\n          Flex({", "Example {\n  private scroller1: Scroller = new Sc", "        ScrollBar({ scroller: this.scroller1, di", "roller();\n  private scroller3: Scroller = new Sc", "Example {\n  private scroller: Scroller = new Scr", "\n              this.scroller.currentOffset()\n   ", "ar({ scroller: this.scroller1, direction: Scroll", "   }\n          this.scroller.scrollPage({ next: ", "\n              this.scroller.scrollEdge(Edge.Top", "\n              this.scroller.scrollTo({\n        ", " = \"Scroll Page\";\n  scroller: Scroller = new Scr", "        Scroll(this.scroller2) {\n          Flex(", "        Scroll(this.scroller1) {\n          Flex(", "=> {\n          this.scroller.scrollTo({ xOffset:", "=> {\n          this.scroller.scrollEdge(Edge.Top", "\n              this.scroller.scrollToIndex(0)\n  "], "files": ["scrollBar.ets", "canvas2.ets", "ScrollBar.ets", "scrollCode.ets", "canvas.ets", "Scroll.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_all": "declare class ListAttribute extends CommonMethod<ListAttribute> {\n  \n  listDirection(value: Axis): ListAttribute;\n\n  \n  scrollBar(value: BarState): ListAttribute;\n\n  \n  edgeEffect(value: EdgeEffect): ListAttribute;\n\n  \n  divider(\n    value: {\n      strokeWidth: Length;\n      color?: ResourceColor;\n      startMargin?: Length;\n      endMargin?: Length;\n    } | null,\n  ): ListAttribute;\n\n  \n  editMode(value: boolean): ListAttribute;\n\n  \n  multiSelectable(value: boolean): ListAttribute;\n\n  \n  cachedCount(value: number): ListAttribute;\n\n  \n  chainAnimation(value: boolean): ListAttribute;\n\n  \n  onScroll(event: (scrollOffset: number, scrollState: ScrollState) => void): ListAttribute;\n\n  \n  onScrollIndex(event: (start: number, end: number) => void): ListAttribute;\n\n  \n  onReachStart(event: () => void): ListAttribute;\n\n  \n  onReachEnd(event: () => void): ListAttribute;\n\n  \n  onScrollStop(event: () => void): ListAttribute;\n\n  \n  onItemDelete(event: (index: number) => boolean): ListAttribute;\n\n  \n  onItemMove(event: (from: number, to: number) => boolean): ListAttribute;\n\n  \n  onItemDragStart(event: (event: ItemDragInfo, itemIndex: number) => ((() => any) | void)): ListAttribute;\n\n  \n  onItemDragEnter(event: (event: ItemDragInfo) => void): ListAttribute;\n\n  \n  onItemDragMove(event: (event: ItemDragInfo, itemIndex: number, insertIndex: number) => void): ListAttribute;\n\n  \n  onItemDragLeave(event: (event: ItemDragInfo, itemIndex: number) => void): ListAttribute;\n\n  \n  onItemDrop(event: (event: ItemDragInfo, itemIndex: number, insertIndex: number, isSuccess: boolean) => void): ListAttribute;\n}", "api_method_name": "ListAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "listDirection", "api_method_all": "listDirection(value: Axis): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 18, "since": 7, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.listDirection).assertEqual('Axis.", "\n        }\n        .listDirection(Axis.Vertical)\n    ", "ey('list')\n        .listDirection(Axis.Vertical)\n    ", "on = eventData.data.listDirection;\n      }\n      if (", "ey('list')\n        .listDirection(this.listDirection)", " if (eventData.data.listDirection != null) {\n        ", ".listDirection(this.listDirection)\n        .divider({", "console.log('List\u2018s listDirection is ' + JSON.stringi", "ata: {\n            \"listDirection\": Axis.Horizontal\n ", " 7, 8, 9];\n  @State listDirection: Axis = Axis.Vertic", "ey('list')\n        .listDirection(Axis.Vertical) // \u6392", "ull) {\n        this.listDirection = eventData.data.li", "tringify(obj.$attrs.listDirection))\n      console.log"], "files": ["Navigation.ets", "list.ets", "List.ets", "ListJsunit.test.ets", "navigation.ets", "edgeEffect.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "scrollBar", "api_method_all": "scrollBar(value: BarState): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 109, "since": 7, "api_used": "\u662f", "lines": [" console.info(\"this.scrollBarColor:\" + this.scrol", "s null or empty \" + scrollBarColorValue);\n      }", "ue = eventData.data.scrollBarColor;\n      console", "ue = eventData.data.scrollBarWidth;\n      console", "BarValue != null && scrollBarValue.length != 0) {", "      console.info(\"scrollBarValue:\" + scrollBarV", "thValue);\n      if (scrollBarWidthValue != null &", "llBarColorValue:\" + scrollBarColorValue);\n      i", "s null or empty \" + scrollBarWidthValue);\n      }", ".Vertical;\n  @State scrollBar: BarState = BarStat", "llBarColor:\" + this.scrollBarColor);\n      } else", "= 0) {\n        this.scrollBar = scrollBarValue;\n ", "lorValue != null && scrollBarColorValue.length !=", ";\n      }\n      var scrollBarValue = eventData.da", "BarState.On)\n      .scrollBarColor(Color.Gray).sc", "s null or empty \" + scrollBarValue);\n      }\n    ", ".scrollable)\n      .scrollBar(this.scrollBar)\n   ", "arValue);\n      if (scrollBarValue != null && scr", "= 0) {\n        this.scrollBarColor = scrollBarCol", "dthValue != null && scrollBarWidthValue.length !=", "    .scrollBar(this.scrollBar)\n      .scrollBarCo", "      console.info(\"scrollBarWidthValue:\" + scrol", "   this.scrollBar = scrollBarValue;\n        conso", "is.scrollBarWidth = scrollBarWidthValue;\n        ", ";\n      }\n      var scrollBarWidthValue = eventDa", "FF0000FF\";\n  @State scrollBarWidth: number = 30;\n", "orValue);\n      if (scrollBarColorValue != null &", "ollBarColor)\n      .scrollBarWidth(this.scrollBar", "rState.On;\n  @State scrollBarColor: Color = \"#FF0", "      console.info(\"scrollBarColorValue is null o", "arColor(Color.Gray).scrollBarWidth(10)\n    }\n    ", ";\n      }\n      var scrollBarColorValue = eventDa", "llBarWidth:\" + this.scrollBarWidth);\n      } else", ".scrollBar:\" + this.scrollBar);\n      } else {\n  ", " console.info(\"this.scrollBar:\" + this.scrollBar)", "      console.info(\"scrollBarWidthValue is null o", "Direction.Vertical).scrollBar(BarState.On)\n      ", "= 0) {\n        this.scrollBarWidth = scrollBarWid", "ue = eventData.data.scrollBar;\n      console.info", " console.info(\"this.scrollBarWidth:\" + this.scrol", "llBarWidthValue:\" + scrollBarWidthValue);\n      i", "      console.info(\"scrollBarColorValue:\" + scrol", "is.scrollBarColor = scrollBarColorValue;\n        ", "      console.info(\"scrollBarValue is null or emp", "s.scrollBar)\n      .scrollBarColor(this.scrollBar", "\"scrollBarValue:\" + scrollBarValue);\n      if (sc", "scrollBarColor(this.scrollBarColor)\n      .scroll"], "files": ["scrollBar.ets", "ScrollJsunit.test.ets", "canvas2.ets", "ScrollBarJsunit.test.ets", "List.test.ets", "scrollCode.ets", "ScrollerBarJsunit.test.ets", "canvas.ets", "Scroll.ets", "ScrollCodeJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "edgeEffect", "api_method_all": "edgeEffect(value: EdgeEffect): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 47, "since": 7, "api_used": "\u662f", "lines": [");\n    });\n\n    it('edgeEffectTest_0200', 0, async", "      console.info(\"edgeEffect page state change c", "an = false\n  @State edgeEffect: EdgeEffect = EdgeE", "      console.info('edgeEffectTest_0100 START');\n ", "console.error(\"push edgeEffect page error: \" + err", "rt default function edgeEffectJsunit(){\n  describe", "  console.info(\"get edgeEffect state success \" + J", "tringify(obj.$attrs.edgeEffect))\n      expect(obj.", "        uri: 'pages/edgeEffect',\n      }\n      try", "      console.info('edgeEffectTest_0200 END');\n   ", "      console.info('edgeEffectTest_0200 START');\n ", "/ \u6bcf\u884c\u4e4b\u95f4\u7684\u5206\u754c\u7ebf\n        .edgeEffect(this.edgeEffect) //", "      console.info(\"edgeEffect after each called\")", "  expect(obj.$attrs.edgeEffect).assertEqual('EdgeE", ");\n    });\n\n    it('edgeEffectTest_0100', 0, async", "t.test.ets';\nimport edgeEffectJsunit from './EdgeE", "xpect(objNew.$attrs.edgeEffect).assertEqual('EdgeE", "      console.info(\"edgeEffectTest_0100 component ", "      console.info(\"edgeEffectTest_0200 component ", "ct = eventData.data.edgeEffect;\n      }\n      if (", "{\n    console.info('edgeEffect page show called');", "       console.log(\"edgeEffectTest_0200 change com", " if (eventData.data.edgeEffect != null) {\n        ", "   .effectMode(this.edgeEffect)\n      .indicatorSt", "ull) {\n        this.edgeEffect = eventData.data.ed", "ata: {\n            \"edgeEffect\": EdgeEffect.Spring", "ct = eventData.data.edgeEffect;\n      }\n    }\n  }\n", "AutoLinear\n  @State edgeEffect: number = EdgeEffec", "        })\n        .edgeEffect(this.edgeEffect)\n  ", "console.log('List\u2018s edgeEffect is ' + JSON.stringi", "  expect(obj.$attrs.edgeEffect).assertEqual(\"EdgeE", " console.info(\"push edgeEffect page success \" + JS", "   .edgeEffect(this.edgeEffect) // \u6ed1\u52a8\u5230\u8fb9\u7f18\u65e0\u6548\u679c\n      ", "      console.info(\"edgeEffectTest_0200 start to p", "gin: 20 })\n        .edgeEffect(EdgeEffect.None)\n  ", "n = false;\n  @State edgeEffect: EdgeEffect = EdgeE", "   .edgeEffect(this.edgeEffect)\n        .chainAnim", "unit(){\n  describe('edgeEffectTest', function (){\n", "  sliderJsunit();\n  edgeEffectJsunit();\n  checkbox", "s));\n        if (!(\"edgeEffect\" == pages.name)) {\n"], "files": ["EdgeEffectJsunit.test.ets", "swiper.ets", "list.ets", "List.ets", "ListJsunit.test.ets", "List.test.ets", "edgeEffect.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "divider", "api_method_all": "divider(\n    value: {\n      strokeWidth: Length;\n      color?: ResourceColor;\n      startMargin?: Length;\n      endMargin?: Length;\n    } | null,\n  ): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 249, "since": 7, "api_used": "\u662f", "lines": [" console.info(\"push divider page success \" + JS", "        uri: 'pages/divider',\n      }\n      try", "      console.info(\"dividerTest_0300 component ", "(150)\n        .key('divider2')\n    }\n    .key('", ");\n    });\n\n    it('dividerTest_0200', 0, async", "  console.info(\"get divider state success \" + J", ");\n    });\n\n    it('dividerTest_0300', 0, async", ");\n    });\n\n    it('dividerTest_0100', 0, async", "irectionJsunit();\n  dividerJsunit();\n  directio", "y\n@Component\nstruct divider_textcase {\n  @State", "Direction)\n        .divider({\n          strokeW", "(150)\n        .key('divider1')\n      Divider()\n", "      console.info(\"dividerTest_0200 component ", "  expect(obj.$attrs.divider.endMargin).assertEq", "(150)\n        .key('divider')\n        .onClick(", "nit() {\n  describe('dividerTest', function () {", " width: 1 })\n      .divider({ strokeWidth: 2, c", "console.error(\"push divider page error: \" + err", "       console.log(\"dividerTest_0300 change com", "      console.info(\"divider after each called\")", "      console.info('dividerTest_0200 END');\n   ", "      console.info(\"dividerTest_0300 start to p", "      console.info('dividerTest_0100 START');\n ", "t.test.ets';\nimport dividerJsunit from './Divid", "rt default function dividerJsunit() {\n  describ", "s));\n        if (!(\"divider\" == pages.name)) {\n", "{\n    console.info('divider page show called');", "      console.info('dividerTest_0200 START');\n ", "  expect(obj.$attrs.divider.color).assertEqual(", "rt default function dividerJsunit() {\n\n  functi", "})\n  }\n\n  describe('dividerTest', function () {", "l) // \u6392\u5217\u65b9\u5411\n        .divider({ strokeWidth: 2, c", "  expect(obj.$attrs.divider.startMargin).assert", "   Text('Horizontal divider').fontSize(9).fontC", "      console.info(\"dividerTest_0100 component ", "      console.info('dividerTest_0300 START');\n ", "     Text('Vertical divider').fontSize(9).fontC", "      console.info('dividerTest_0300 END');\n   ", "  expect(obj.$attrs.divider.strokeWidth).assert", "      console.info(\"divider page state change c"], "files": ["divider.ets", "dragEvent.ets", "index.js", "List.test.js", "dividerProps.test.js", "listProps.test.js", "list.ets", "Divider.ets", "List.ets", "commonComponentJsApi.test.js", "dragEvent2.ets", "ListJsunit.test.ets", "List.test.ets", "DividerJsunit.test.ets", "edgeEffect.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "editMode", "api_method_all": "editMode(value: boolean): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 29, "since": 7, "api_used": "\u662f", "lines": ["de = eventData.data.editMode;\n      }\n      if (", "ata: {\n            \"editMode\": \"true123\"\n       ", "  if(eventData.data.editMode != null) {\n        ", "     .editMode(this.editMode)\n      .onItemDelet", "        })\n        .editMode(this.editFlag)\n    ", "ky.Normal;\n  @State editMode: boolean = true;\n\n ", "ata: {\n            \"editMode\": true\n          }\n", ".key('List')\n      .editMode(this.editMode)\n    ", "tem)\n      }\n      .editMode(true)\n      .height", "ull) {\n        this.editMode = eventData.data.ed", "        })\n        .editMode(this.editMode)\n    ", "  expect(obj.$attrs.editMode).assertEqual('false", "  expect(obj.$attrs.editMode).assertEqual(\"false", "de = eventData.data.editMode;\n      }\n    }\n  }\n", "=> {\n          this.editMode = !this.editMode\n  ", "ata: {\n            \"editMode\": \"39000000\"\n      ", "ata: {\n            \"editMode\": false\n          }", "tem)\n      }\n      .editMode(true)\n      .restor", ".Vertical;\n  @State editMode: boolean = false;\n ", "     .editMode(this.editMode)\n        .onItemDel", " if (eventData.data.editMode != null) {\n        ", "  expect(obj.$attrs.editMode).assertEqual('true'", "is.editMode = !this.editMode\n        }).margin({"], "files": ["dragEvent.ets", "list.ets", "listItem.ets", "ListItemJsunit.test.ets", "List.ets", "dragEvent2.ets", "ListJsunit.test.ets", "edgeEffect.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "multiSelectable", "api_method_all": "multiSelectable(value: boolean): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["Animation)\n        .multiSelectable(true)\n        .onSc", ".height(300)\n      .multiSelectable(false)\n      .layou"], "files": ["list.ets", "grid.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "cachedCount", "api_method_all": "cachedCount(value: number): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["tem)\n      }\n      .cachedCount(2)\n      .index(thi", "ey('swiper')\n      .cachedCount(2)\n      .index(1)\n"], "files": ["swiper.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "chainAnimation", "api_method_all": "chainAnimation(value: boolean): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 13, "since": 7, "api_used": "\u662f", "lines": ["chainAnimation(this.chainAnimation)\n        .multiSele", "ata: {\n            \"chainAnimation\": true\n          }\n", "on = eventData.data.chainAnimation;\n      }\n    }\n  }\n", "ata: {\n            \"chainAnimation\": \"true123\"\n       ", "ull) {\n        this.chainAnimation = eventData.data.ch", "  expect(obj.$attrs.chainAnimation).assertEqual('true'", "fect.None)\n        .chainAnimation(false)\n        .onS", "/ \u6ed1\u52a8\u5230\u8fb9\u7f18\u65e0\u6548\u679c\n        .chainAnimation(false) // \u8054\u52a8\u7279\u6548\u5173\u95ed\n  ", "fect.None;\n  @State chainAnimation: boolean = false;\n ", " if (eventData.data.chainAnimation != null) {\n        ", "  expect(obj.$attrs.chainAnimation).assertEqual('false", "dgeEffect)\n        .chainAnimation(this.chainAnimation"], "files": ["List.ets", "list.ets", "ListJsunit.test.ets", "edgeEffect.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onScrollevent", "api_method_all": "onScroll(event: (scrollOffset: number, scrollState: ScrollState) => void): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onScrollevent", "api_method_all": "onScroll(event: (scrollOffset: number, scrollState: ScrollState) => void): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onScrollIndexevent", "api_method_all": "onScrollIndex(event: (start: number, end: number) => void): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onScrollIndexevent", "api_method_all": "onScrollIndex(event: (start: number, end: number) => void): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onReachStartevent", "api_method_all": "onReachStart(event: () => void): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onReachStartevent", "api_method_all": "onReachStart(event: () => void): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onReachEndevent", "api_method_all": "onReachEnd(event: () => void): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onReachEndevent", "api_method_all": "onReachEnd(event: () => void): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onScrollStopevent", "api_method_all": "onScrollStop(event: () => void): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onScrollStopevent", "api_method_all": "onScrollStop(event: () => void): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDeleteevent", "api_method_all": "onItemDelete(event: (index: number) => boolean): ListAttribute;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDeleteevent", "api_method_all": "onItemDelete(event: (index: number) => boolean): ListAttribute;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemMoveevent", "api_method_all": "onItemMove(event: (from: number, to: number) => boolean): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemMoveevent", "api_method_all": "onItemMove(event: (from: number, to: number) => boolean): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDragStartevent", "api_method_all": "onItemDragStart(event: (event: ItemDragInfo, itemIndex: number) => ((() => any) | void)): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDragStartevent", "api_method_all": "onItemDragStart(event: (event: ItemDragInfo, itemIndex: number) => ((() => any) | void)): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDragStartevent", "api_method_all": "onItemDragStart(event: (event: ItemDragInfo, itemIndex: number) => ((() => any) | void)): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDragStartevent", "api_method_all": "onItemDragStart(event: (event: ItemDragInfo, itemIndex: number) => ((() => any) | void)): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDragStartevent", "api_method_all": "onItemDragStart(event: (event: ItemDragInfo, itemIndex: number) => ((() => any) | void)): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDragEnterevent", "api_method_all": "onItemDragEnter(event: (event: ItemDragInfo) => void): ListAttribute;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDragEnterevent", "api_method_all": "onItemDragEnter(event: (event: ItemDragInfo) => void): ListAttribute;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDragMoveevent", "api_method_all": "onItemDragMove(event: (event: ItemDragInfo, itemIndex: number, insertIndex: number) => void): ListAttribute;", "api_type": "", "api_args_count": 4, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDragMoveevent", "api_method_all": "onItemDragMove(event: (event: ItemDragInfo, itemIndex: number, insertIndex: number) => void): ListAttribute;", "api_type": "", "api_args_count": 4, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDragLeaveevent", "api_method_all": "onItemDragLeave(event: (event: ItemDragInfo, itemIndex: number) => void): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDragLeaveevent", "api_method_all": "onItemDragLeave(event: (event: ItemDragInfo, itemIndex: number) => void): ListAttribute;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDropevent", "api_method_all": "onItemDrop(event: (event: ItemDragInfo, itemIndex: number, insertIndex: number, isSuccess: boolean) => void): ListAttribute;", "api_type": "", "api_args_count": 5, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListAttribute", "api_method_name": "onItemDropevent", "api_method_all": "onItemDrop(event: (event: ItemDragInfo, itemIndex: number, insertIndex: number, isSuccess: boolean) => void): ListAttribute;", "api_type": "", "api_args_count": 5, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}