{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@internal\\component\\ets\\plugin_component", "api": [{"api_class_name": "PluginComponentTemplate", "api_method_all": "interface PluginComponentTemplate {\r\n  \r\n  source: string;\r\n  \r\n  ability: string;\r\n}", "api_method_name": "PluginComponentTemplate", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PluginComponentTemplate", "api_method_name": "source", "api_method_all": "source: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 63, "since": 8, "api_used": "\u662f", "lines": ["      console.info(\"sourceTypeTest_0100 emit a", "      console.info(\"sourceTypeTest_0100 rectIn", ")\n  selectedIcon: Resource = ($rawfile(\"test.p", " foregroundUri: '/resources/rawfile/star-1-3.p", " backgroundUri: '/resources/rawfile/star-1-1.p", "      console.info(\"sourceType after each call", " console.info(\"push sourceType page result:\" +", "      console.info(\"sourceTypeTest_0100 onTouc", "t.test.ets';\nimport sourceTypeJsunit from './S", "  console.info(\"get sourceType state pages.nam", "      console.info(\"sourceTypeTest_0100 get ev", "rt default function sourceTypeJsunit() {\n  des", "       .fontFamily('source-sans-pro,cursive,sa", "  secondaryUri: '/resources/rawfile/star-1-2.p", "      console.info('sourceTypeTest_0100 testSe", "console.log(\"image1 sourceSize\" + JSON.stringi", "e.info(this.text = 'source\uff1a' + event.source);\n", "\n          .alt(\"/resources/rawfile/person.png", "      console.info(\"sourceTypeTest_0100 on eve", "d(false)\n          .sourceSize({ width: 200, h", "       expect(event.source).assertEqual(0)\n   ", "      console.info('sourceTypeTest_0100 sendTo", "empromptJsunit();\n  sourceTypeJsunit();\n}", "et source_ = oneWay.source_;\n      let wrapped", "t('Orange 18 Normal source-sans-pro text')\n   ", "  console.info(\"get sourceType state pages:\" +", "console.error(\"push sourceType page error:\" + ", ");\n    });\n\n    it('sourceTypeTest_0100', 0, a", "      console.info(\"sourceType beforeEach star", "        uri: 'pages/sourceType',\n      }\n     ", "          if (event.source === Unknown) {\n    ", ")\n        Image(\"/resources/rawfile/hand.png\")", "      console.info(\"sourceTypeTest_0100 start ", "          if (event.source === Mouse) {\n      ", " {\n  normalIcon : Resource = ($rawfile(\"ic_hea", "mpositeOperation = 'source-over';\n  }\n\n  shado", "= 'source\uff1a' + event.source);\n          try {\n ", "s));\n        if (!(\"sourceType\" == pages.name)", "ring>());\n      let source_ = oneWay.source_;\n", "mpositeOperation = 'source-over';\n    this.con", "et source_ = twoWay.source_;\n      let wrapped", "ring>());\n      let source_ = twoWay.source_;\n"], "files": ["textStyle.ets", "index.js", "ImageJsunit.test.ets", "Video.ets", "WebPage.ets", "SubscribaleAbstractJsunit.test.ets", "SourceTypeJsunit.test.ets", "Image.ets", "RatingJsunit.test.ets", "Rating.ets", "sideBar.ets", "sourceType.ets", "List.test.ets", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "PluginComponentTemplate", "api_method_name": "ability", "api_method_all": "ability: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 11, "since": 8, "api_used": "\u662f", "lines": ["", "Ability from \"@ohos.ability.featureAbility\"\n\n\n@", "x';\n\ndescribe('basicabilityapi', function () {\n", "plication\",\n        ability:\"com.example.myappl", "Ability from \"@ohos.ability.featureAbility\";\n\n@", "Ability from \"@ohos.ability.featureAbility\"\n\n@E"], "files": ["FormComponentPage.ets", "List.test.js", "basicabilityapi.test.js", "index.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "PluginComponentInterface", "api_method_all": "interface PluginComponentInterface {\r\n  \r\n  (value: { template: PluginComponentTemplate; data: any }): PluginComponentAttribute;\r\n}", "api_method_name": "PluginComponentInterface", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PluginComponentInterface", "api_method_name": "value", "api_method_all": "(value: { template: PluginComponentTemplate", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14499, "since": 8, "api_used": "\u662f", "lines": ["      console.info('value:' + value + 'mode:'", "   return this.rect_value = {\n      \"left\": t", ".info(\"this.matrix3 value is\");\n        this.", "xpect(objNew.$attrs.value).assertEqual('10.00", "xpect(objNew.$attrs.value).assertEqual('nan')", "ckbox1 change is' + value)\n          })\n     ", "ull) {\n        this.value = eventData.data.va", "  this.value = this.value + 'Text'\n          ", "g\"},\n              {value:'ddd',icon: \"/image", "ect(indexEvent.data.value).assertEqual('TextT", ".info(\"this.matrix2 value is\" + Matrix4.ident", "      \"value\": this.value,\n              }\n  ", "eckbox2 change is'+ value)\n        })\n    }\n ", "         .onChange((value: number, mode: Slid", "eckbox1 change is'+ value)\n        })\n      C", "g\"},\n              {value:'ccc',icon: \"/image", "=> {\n          this.value = this.value + 'Tex", " {\n                \"value\": this.value,\n     ", "e.info(\"this.matrix value is not\");\n      }\n ", " if (eventData.data.value != null) {\n        ", "rExample {\n  @State value:string=10\n  @State ", " Slider({\n          value: this.outSetValue,\n", " this.outSetValue = value\n            console", "        .value(this.value)\n        .font(this", "s.Vertical\n  @State value: number = 40\n\n  pri", "ttom;\n  static rect_value;\n\n  static sleep(ti", "ngify(oldValue)} newvalue is ${JSON.stringify", "ole.info(\"eventData value is\");\n      if (eve", "  expect(obj.$attrs.value).assertEqual('50.00", "xpect(objNew.$attrs.value).assertEqual('-10.0", "elected(2)\n        .value('TTT')\n        .val", "n() {\n      Gauge({ value: 0, min: 0, max: 10", "g\"},\n              {value:'bbb',icon: \"/image", "ue = eventData.data.value;\n      }\n      if (", ") {\n      Text(this.value)\n        .key('text", "\n        .onChange((value: boolean) => {\n    ", "y(\"gauge\")\n        .value(`${this.gaugeValue}", "ckbox2 change is' + value)\n          })\n     ", "aExample {\n  @State value: string = 'Text';\n ", "ckbox3 change is' + value)\n          })\n     ", "() {\n      Select([{value:'aaa',icon: \"/image", "lue('TTT')\n        .value(this.value)\n       ", "         .onChange((value: boolean) => {\n    "], "files": ["listItemGroupProps.test.js", "pathProps.test.js", "dividerProps.test.js", "tabContentProps.test.js", "ListItemJsunit.test.ets", "textProps.test.js", "ParallelGestureJsunit.test.ets", "toolbarProps.test.js", "Navigation.ets", "TextPickerJsunit.test.ets", "polylineProps.test.js", "Progress.ets", "Panel.ets", "checkboxGroup.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "toolbarItemProps.test.js", "TapGesture.test.ets", "Rating.ets", "badgeProps.test.js", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "textArea.ets", "textInput.ets", "formProps.test.js", "SelectJsunit.test.ets", "circleProps.test.js", "Slider.ets", "SourceTypeJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "PanelJsunit.test.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "ButtonJsunit.test.ets", "StepperJsunit.test.ets", "sideBar.ets", "refreshProps.test.js", "Sidebar.ets", "Prop.ets", "Scroll.ets", "ScrollerBarJsunit.test.ets", "canvasProps.test.js", "AreaChangeJsunit.test.ets", "TextArea.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "tapGesture.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "richtextProps.test.js", "svgProps.test.js", "labelProps.test.js", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "gridContainerProps.test.js", "stepperProps.test.js", "Select.ets", "ratingProps.test.js", "Utils.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "textPickerDialog.ets", "tabsProps.test.js", "badge.ets", "qrcodeProps.test.js", "lineProps.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "videoProps.test.js", "GaugeJsunit.test.ets", "optionProps.test.js", "TextInputJsunit.test.ets", "calendar.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "checkbox.ets", "QrcodeJsunit.test.ets", "TextAreaJsunit.test.ets", "pieceProps.test.js", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "Button.ets", "textareaProps.test.js", "gridColProps.test.js", "fontWeight.ets", "buttonProps.test.js", "animateProps.test.js", "animate.ets", "ContentStorage.test.ets", "BadgeJsunit.test.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "divProps.test.js", "switchProps.test.js", "TextInput.ets", "radio.ets", "rating.ets", "ellipseProps.test.js", "priorityGesture.ets", "DataPanel.ets", "chartProps.test.js", "SliderJsunit.test.ets", "progress.ets", "AlertDialog.ets", "sliderProps.test.js", "WebPage.ets", "swiperProps.test.js", "polygonProps.test.js", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "SwiperJsunit.test.ets", "areaChange.ets", "tspanProps.test.js", "parallelGesture.ets", "imageProps.test.js", "select.ets", "listProps.test.js", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "panelProps.test.js", "search.ets", "panel.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "PluginComponentInterface", "api_method_name": "data", "api_method_all": "data: any }): PluginComponentAttribute", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2739, "since": 8, "api_used": "\u662f", "lines": [".isShow = eventData.data.isShow;\n      }\n   ", "is.text = eventData.data.text\n      }\n    }\n", "      if (eventData.data.gaugeValue != null)", "\n      if(eventData.data.alignItems != null)", "thValue = eventData.data.strokeWidthValue;\n ", "      if (eventData.data.alignSelf != null) ", "SON.parse(eventData.data.colorValues);\n     ", "s.width = eventData.data.width;\n      }\n    ", "      if (eventData.data.flexBasis != null) ", "      if (eventData.data.text != null) {\n   ", "= {\n                data: {\n                ", "      if (eventData.data.flexShrink != null)", "mOffset = eventData.data.offset;\n      } els", "      if (eventData.data.blurValue != null) ", "xShrink = eventData.data.flexShrink;\n      }", ".smSpan = eventData.data.span;\n        this.", "exBasis = eventData.data.flexBasis;\n      }\n", "ignSelf = eventData.data.alignSelf;\n      }\n", "      if (eventData.data.grayscaleValue != n", "geValue = eventData.data.gaugeValue;\n      }", "gnItems = eventData.data.alignItems;\n      }", "      if (eventData.data.height != null) {\n ", "imgData = imageData.data;\n    console.log(\"i", "ntData && eventData.data) {\n      if (eventD", "urValue = eventData.data.blurValue;\n      }\n", "      if (eventData.data.isShow != null) {\n ", "  switch (eventData.data.alignSelf) {\n      ", "      if (eventData.data.flexGrow != null) {", "  switch (eventData.data.sizeType) {\n       ", "      if (eventData.data.width != null) {\n  ", "enabled = eventData.data.enabled\n      }\n   ", ".height = eventData.data.height;\n      }\n   ", "      if (eventData.data.enabled != null) {\n", "leValue = eventData.data.startAngleValue;\n  ", "      if (eventData.data.colorValues != null", "      if (eventData.data.span) {\n        thi", " else if (eventData.data.gridOffset) {\n     ", "      if (eventData.data.strokeWidthValue !=", "ridSpan = eventData.data.gridSpan;\n      }\n ", "dOffset = eventData.data.gridOffset;\n      }", "      if (eventData.data.shadowValue != null", "      if (eventData.data.startAngleValue != ", "SON.parse(eventData.data.shadowValue);\n     ", "a = {\n              data: {\n                ", " else if (eventData.data.gridSpan) {\n       ", "lexGrow = eventData.data.flexGrow;\n      }\n ", "      if (eventData.data.endAngleValue != nu", "leValue = eventData.data.endAngleValue;\n    "], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "systemRouterA.ets", "configuration.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "video.ets", "ListItemJsunit.test.ets", "Navigator.ets", "tabContentProps.test.js", "longPressGesture.ets", "DragEventJsunit.test.ets", "textProps.test.js", "canvas2.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "Row.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "richText.ets", "column.ets", "checkboxGroup.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "geometryTransition.ets", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "toolbarItemProps.test.js", "marquee.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "Swiper.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "border.ets", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "badgeProps.test.js", "scrollBar.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "transition.ets", "systemPrompt.ets", "TouchJsunit.test.ets", "transForm.ets", "LongPressGesture.test.ets", "path.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "formProps.test.js", "focus.ets", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "background.ets", "SourceTypeJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "gauge.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "sideBar.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "refreshProps.test.js", "customDialogController.ets", "text.ets", "TransitionJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "canvasProps.test.js", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "tapGesture.ets", "flexDirection.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "PanGesture.ets", "stepper.ets", "shape.ets", "labelProps.test.js", "ListJsunit.test.ets", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "ratingProps.test.js", "flex.ets", "MotionPathJsunit.test.ets", "stepperProps.test.js", "marqueeProps.test.js", "gridContainer.ets", "imageAnimatorProps.test.js", "gridPage.ets", "ShapeJsunit.test.ets", "enable.ets", "PieceCode.ets", "tabsProps.test.js", "badge.ets", "qrcodeProps.test.js", "textStyle.ets", "imageEffects.ets", "popupProps.test.js", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "videoProps.test.js", "list.ets", "colorGradient.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "QrCode.ets", "DatePickerJsunit.test.ets", "BasicJsunit.test.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "DataPanelJsunit.test.ets", "checkbox.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "textareaProps.test.js", "gridColProps.test.js", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "global.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "direction2.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "canvas.ets", "AboutToDisappearJsunit.test.ets", "ohosMatrix4.ets", "CircleJsunit.test.ets", "divProps.test.js", "pickerViewProps.test.js", "switchProps.test.js", "divider.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "line.ets", "TransFormJsunit.test.ets", "priorityGesture.ets", "DataPanel.ets", "Grid.ets", "chartProps.test.js", "touchAble.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "progress.ets", "datePicker.ets", "pageTransition.ets", "WebPage.ets", "sliderProps.test.js", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "swiperProps.test.js", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "areaChange.ets", "ohosRouterA.ets", "BindPopupJsunit.test.ets", "GridItem.ets", "parallelGesture.ets", "imageProps.test.js", "select.ets", "timeStamp.ets", "listProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "progressProps.test.js", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "panelProps.test.js", "sharedTransition.ets", "refresh.ets", "motionPath.ets", "search.ets", "panel.ets", "menuProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "PluginComponentAttribute", "api_method_all": "declare class PluginComponentAttribute extends CommonMethod<PluginComponentAttribute> {\r\n  \r\n  size(value: { width: number; height: number }): PluginComponentAttribute;\r\n\r\n  \r\n  onComplete(callback: () => void): PluginComponentAttribute;\r\n\r\n  \r\n  onError(callback: (info: { errcode: number; msg: string }) => void): PluginComponentAttribute;\r\n}", "api_method_name": "PluginComponentAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PluginComponentAttribute", "api_method_name": "size", "api_method_all": "size(value: { width: number; height: number }): PluginComponentAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 1127, "since": 8, "api_used": "\u662f", "lines": ["MD':\n          this.sizeType = SizeType.MD;\n", "    GridContainer({ sizeType: SizeType.SM })", "ontSize(20)\n      }.size({ width: '90%', hei", "ght(2)')\n          .size({ width: '30%', hei", " 12, sizeType: this.sizeType, gutter: 10, ma", "a.width;\n      this.sizeHeight = eventData.d", ")}`)\n          this.size = JSON.stringify(ne", ".$attrs.constructor.sizeType).assertEqual('S", "ring = 20;\n  @State sizeWidth: string = '100", " 'Small container', size: '30%' }];\n  @State", "ole.info(\"size page sizeChangCallBack\" + JSO", "    Text(`text font size ${this.fontSize}`)\n", "LG':\n          this.sizeType = SizeType.LG;\n", " = '100%';\n  @State sizeHeight: string = '10", "   Row()\n          .size({width: '30%', heig", "{\n    console.info(\"size page stateChangCall", "r(0xAFEEEE)\n      }.size({ width: '90%', hei", "Width, height: this.sizeHeight })\n          ", "llBackOne)\n\n    let sizeChangeEvent = {\n    ", "Weight')\n          .size({ width: '30%', hei", "[this.currentIndex].size)\n      .backgroundC", "area is: \\n' + this.size)\n        .key('text", " Row()\n            .size({ width: this.sizeW", "SM':\n          this.sizeType = SizeType.SM;\n", "  events_emitter.on(sizeChangeEvent, this.si", "rExample {\n  @State sizeType: SizeType = Siz", "tch (eventData.data.sizeType) {\n        case", "l: 'Big container', size: '97%' },\n    { lab", "ult:\n          this.sizeType = SizeType.Auto", "dex(2)')\n          .size({ width: '40%', hei", ".size({ width: this.sizeWidth, height: this.", "ght(1)')\n          .size({ width: '30%', hei", "to':\n          this.sizeType = SizeType.Auto", "abel: string = ''\n  size: string = ''\n};\n\ncl", "XS':\n          this.sizeType = SizeType.XS;\n", "top: 20, right: 20, size: 2, color: Color.Bl", "tem)\n      }\n      .size({ width: \"100%\", he", "t('background image size').fontSize(9).width", "{\n    console.info(\"size page weightChangCal", "   }\n  }\n\n  private sizeChangCallBack = (eve", ".rowsGap(10)\n      .size({ width: \"100%\", he", " = 'Text';\n  @State size: string = '';\n  @St", "{\n    console.info(\"size page sizeChangCallB", "iner({ columns: 12, sizeType: this.sizeType,", "dex(1)')\n          .size({ width: '70%', hei", "ata: {\n            \"sizeType\": 'SM'\n        ", "zeChangeEvent, this.sizeChangCallBack)\n\n    ", "dex(0)')\n          .size({ width: '90%', hei", "tData) {\n      this.sizeWidth = eventData.da"], "files": ["Select.ets", "ratingProps.test.js", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "SelectJsunit.test.ets", "gridContainer.ets", "imageAnimatorProps.test.js", "ContentStorage.test.ets", "RowSplit.ets", "background.ets", "Text.ets", "ColumnSplitJsunit.test.ets", "textStyle.ets", "TextInput.ets", "swiper.ets", "AlphabetIndexer.ets", "SystemRouterJsunit.test.ets", "zIndex.ets", "ColumnSplit.ets", "FormComponentPage.ets", "GridContainerJsunit.test.ets", "layoutConstraints.ets", "OhosRouterJsnuit.test.ets", "enumsItemAlign.ets", "swiperProps.test.js", "positionSetting.ets", "TextArea.ets", "GridContainer.ets", "dragEvent2.ets", "index.js", "AppStorageJsunit.test.ets", "areaChange.ets", "basicabilityapi.test.js", "backgroundAndSizeSetting.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "select.ets", "Toggle.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "Image.ets", "search.ets", "gridContainerProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "PluginComponentAttribute", "api_method_name": "onCompletecallback", "api_method_all": "onComplete(callback: () => void): PluginComponentAttribute;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PluginComponentAttribute", "api_method_name": "onCompletecallback", "api_method_all": "onComplete(callback: () => void): PluginComponentAttribute;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PluginComponentAttribute", "api_method_name": "onErrorcallback", "api_method_all": "onError(callback: (info: { errcode: number; msg: string }) => void): PluginComponentAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PluginComponentAttribute", "api_method_name": "onErrorcallback", "api_method_all": "onError(callback: (info: { errcode: number; msg: string }) => void): PluginComponentAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}