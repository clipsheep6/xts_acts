{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\application\\MissionSnapshot", "api": [{"api_class_name": "MissionSnapshot", "api_method_all": "export interface MissionSnapshot {\n    \n    ability: ElementName;\n\n    \n    snapshot: image.PixelMap;\n}", "api_method_name": "MissionSnapshot", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 88, "since": 8, "api_used": "\u662f", "lines": ["console.debug('ACTS_MissionSnapshot_0100====<end err');", "\n\n    \n    it('ACTS_MissionSnapshot_0400', 0, async fun", "onsole.debug(\"=ACTS_MissionSnapshot_0200 ====> JSON.str", "console.debug('ACTS_MissionSnapshot_0100====<end err' +", "onsole.debug(\"=ACTS_MissionSnapshot_0400 catch err ====", "onsole.debug(\"=ACTS_MissionSnapshot_0500 catch err ====", "console.debug('ACTS_MissionSnapshot_0300====<end catch ", "console.debug('ACTS_MissionSnapshot_0300====<end catch(", "console.debug('ACTS_MissionSnapshot_0200====<begin');\n ", "console.debug('ACTS_MissionSnapshot_0500====<begin');\n ", "console.debug('ACTS_MissionSnapshot_0300====< ')\n    cu", "console.debug('ACTS_MissionSnapshot_0300 MissionInfo da", "onsole.debug(\"=ACTS_MissionSnapshot_0300 createSubscrib", "onsole.debug(\"=ACTS_MissionSnapshot_0400 then data====>", "\n\n    \n    it('ACTS_MissionSnapshot_0200', 0, async fun", "console.debug('ACTS_MissionSnapshot_0200 MissionInfo da", "onsole.debug(\"=ACTS_MissionSnapshot_0300 subscribe (err", "console.debug('ACTS_MissionSnapshot_0300====<end 0')\n  ", "console.debug('ACTS_MissionSnapshot_0400====<end catch(", "onsole.debug(\"=ACTS_MissionSnapshot_0500 m_missionId===", "console.debug('ACTS_MissionSnapshot_0500====<end .catch", "Name: \"com.amsst.amsMissionSnapshotTestSingleton.MainAb", "console.debug('ACTS_MissionSnapshot_0400====<begin');\n ", "console.debug('ACTS_MissionSnapshot_0200====<end err' +", "console.debug('ACTS_MissionSnapshot_0400====<end .catch", "onsole.debug(\"=ACTS_MissionSnapshot_0500 then data====>", "Name: \"com.amsst.amsMissionSnapshotTestSingleton\",\n    ", "console.debug('ACTS_MissionSnapshot_0500 MissionInfo da", "onsole.debug(\"=ACTS_MissionSnapshot_0200 m_missionId===", "console.debug('ACTS_MissionSnapshot_0300====<end setTim", "console.debug('ACTS_MissionSnapshot_0200====<end 0')\n  ", "onsole.debug(\"=ACTS_MissionSnapshot_0300 m_missionId===", "onsole.debug(\"=ACTS_MissionSnapshot_0500 err,data======", "console.debug('ACTS_MissionSnapshot_0100====<begin');\n ", "onsole.debug(\"=ACTS_MissionSnapshot_0300 err,data======", "\n\n    \n    it('ACTS_MissionSnapshot_0100', 0, async fun", "console.debug('ACTS_MissionSnapshot_0100====<end')\n    ", "onsole.debug(\"=ACTS_MissionSnapshot_0100 err.code,data=", "onsole.debug(\"=ACTS_MissionSnapshot_0200 err,data======", "console.debug('ACTS_MissionSnapshot_0500====<end 0')\n  ", "console.debug('ACTS_MissionSnapshot_0400====<end');\n   ", "dex'\n\ndescribe('ActsMissionSnapshotTest', function () {", "onsole.debug(\"=ACTS_MissionSnapshot_0300 then data====>", "    })\n\n \n it('ACTS_MissionSnapshot_0300', 0, async fun", "console.debug('ACTS_MissionSnapshot_0300====<begin');\n ", "\n\n    \n    it('ACTS_MissionSnapshot_0500', 0, async fun", ",\n            \"ACTS_MissionSnapshot_onShow\"\n        ],\n", "     events: [\"ACTS_MissionSnapshot_OnActive\",\n        "], "files": ["List.test.js", "taskSwitchJsunit.test.js", "MissionManagerTest.js", "index.js", "amsMissionSnapshotTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MissionSnapshot", "api_method_name": "ability", "api_method_all": "ability: ElementName", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1044, "since": 8, "api_used": "\u662f", "lines": ["                    abilityName: \"com.example.V", "cjsunit/index'\n\nlet abilityNameList = [\n    \"co", "Ability from '@ohos.ability.featureability'\nimp", "ndexOf(data[i].want.abilityName)).assertLarger(", "m 'deccjsunit'\n\nvar abilityNameList = [\n    \"co", "ypeof (info[i].want.abilityName)).assertEqual(\"", "ohos.ability.featureability'\nimport missionMana", "m 'deccjsunit'\n\nlet abilityNameList = [\n    \"co", "expect(info[i].want.abilityName.length).assertL", "                    abilityName: \"com.example.S", "ndexOf(info[i].want.abilityName)).assertLarger(", " if (result[i].want.abilityName != 'com.example", "             expect(abilityNameList.indexOf(dat", "ypeof (data[i].want.abilityName)).assertEqual(\"", "expect(data[i].want.abilityName.length).assertL", "m.ohos.telephonydataability\",\n    \"com.ohos.con", "om.ohos.contactsdataability\",\n    \"com.ix.simul", "             expect(abilityNameList.indexOf(inf"], "files": ["FormFuzzArray.test.js", "getHapModuleInfoJsunit.test.ets", "ContextJsunit.test.ets", "FormsOneAndOneJsunit.test.js", "ActsGetWantAllTest.js", "coverApiTest.js", "ActsProcessManageJsTest.test.js", "getAbilityInfoJsunit2.test.ets", "FormFuzzString.test.js", "taskSwitchJsunit.test.js", "app.js", "MissionManagerTest.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "ActsAbilityLifecycleStateNewTest.test.js", "amsMissionSnapshotTest.test.js", "getApplicationContextJsunit.test.ets", "MangerAbilityJsunit.test.js", "LockNew.js", "FormFuzzFunction.test.js", "startFULL.test.js", "getHapModuleInfoJsunit_app1.test.ets", "ActsDataAbilityJsTest.test.js", "DataUriUtilsJsSt.test.js", "ActsAbilityDelegatorCaseTest.test.js", "FeatureAbilityDistribute.test.js", "FormFuzzNull.test.js", "ActsKillProcessTest.test.js", "index.js", "MissionManager.test.js", "index.ets", "addContextAndAbilityJsunit.test.ets", "Getactive.test.js", "ActsStServiceAbilityClientCaseTest.test.js", "FormFuzzNum.test.js", "FeatureAbilityJsunit.test.js", "FormsOneAndTwoJsunit.test.js", "FormFuzzUndefined.test.js", "FormFuzzObject.test.js", "FormFuzzBool.test.js", "FormsZeroAndOneJsunit.test.js", "ContextJsunit.test.js", "FormsZeroJsunit.test.js", "AbilityDisableTest.js", "getAppVersionInfoJsunit.test.ets", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MissionSnapshot", "api_method_name": "snapshot", "api_method_all": "snapshot: image.PixelMap", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 9, "since": 0, "api_used": "\u662f", "lines": ["JSON.stringify(data.snapshot)=\"\n                ", "hot) + \" , \" + data.snapshot);\n                 ", "JSON.stringify(data.snapshot) + \" , \" + data.sna"], "files": ["amsMissionSnapshotTest.test.js"], "is_white": " ", "desc": " "}]}