{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@internal\\component\\ets\\image_animator", "api": [{"api_class_name": "ImageAnimatorInterface", "api_method_all": "interface ImageAnimatorInterface {\n  \n  (): ImageAnimatorAttribute;\n}", "api_method_name": "ImageAnimatorInterface", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_all": "declare class ImageAnimatorAttribute extends CommonMethod<ImageAnimatorAttribute> {\n  \n  images(\n    value: Array<{\n      src: string;\n      width?: number | string;\n      height?: number | string;\n      top?: number | string;\n      left?: number | string;\n      duration?: number;\n    }>,\n  ): ImageAnimatorAttribute;\n\n  \n  state(value: AnimationStatus): ImageAnimatorAttribute;\n\n  \n  duration(value: number): ImageAnimatorAttribute;\n\n  \n  reverse(value: boolean): ImageAnimatorAttribute;\n\n  \n  fixedSize(value: boolean): ImageAnimatorAttribute;\n\n  \n  preDecode(value: number): ImageAnimatorAttribute;\n\n  \n  fillMode(value: FillMode): ImageAnimatorAttribute;\n\n  \n  iterations(value: number): ImageAnimatorAttribute;\n\n  \n  onStart(event: () => void): ImageAnimatorAttribute;\n\n  \n  onPause(event: () => void): ImageAnimatorAttribute;\n\n  \n  onRepeat(event: () => void): ImageAnimatorAttribute;\n\n  \n  onCancel(event: () => void): ImageAnimatorAttribute;\n\n  \n  onFinish(event: () => void): ImageAnimatorAttribute;\n}", "api_method_name": "ImageAnimatorAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "images", "api_method_all": "images(\n    value: Array<{\n      src: string;\n      width?: number | string;\n      height?: number | string;\n      top?: number | string;\n      left?: number | string;\n      duration?: number;\n    }>,\n  ): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 95, "since": 7, "api_used": "\u662f", "lines": ["te7')\n      Image('/images/bg.jpg').transform(", "value:'ddd',icon: \"/images/img.png\"}])\n       ", "r img = new Image(\"/images/bg.jpg\", 100, 100)\n", " .backgroundImage('/images/download.png')\n    ", "Animator()\n        .images([\n          {\n     ", "CCC)\n\n      Image('/images/clip.png')\n        ", "= new ImageBitmap('/images/img.jpeg');\n    let", " .backgroundImage('/images/bg.jpg', ImageRepea", "iewUris: string = \"/images/img.jpeg\";\n  @State", "te srcs: string = \"/images/trailer.mp4\";\n  @St", "te5')\n      Image('/images/bg.jpg')\n        .p", "{\n          Image('/images/img.jpeg')\n        ", "Animator')\n        .images([\n          {\n     ", " .backgroundImage('/images/download.png',Image", "te8')\n      Image('/images/bg.jpg').transform(", "value:'bbb',icon: \"/images/img.png\"},\n        ", "te6')\n      Image('/images/bg.jpg').transform(", "10 })\n      Image('/images/dialog.png').width(", "90%')\n      Image('/images/download.png')\n    ", ") {\n        Image('/images/clip.png')\n        ", "value:'ccc',icon: \"/images/img.png\"},\n        ", ")\n          Image('/images/ic_health_heart.png", "= new ImageBitmap('/images/img.jpeg');\n    thi", "= new ImageBitmap('/images/ic_health_heart.png", "= new ImageBitmap(\"/images/bg.jpg\");\n    let w", "();\n    img.src = \"/images/bg.jpg\";\n    offCan", "90%')\n      Image('/images/download.png').widt", "value:'aaa',icon: \"/images/img.png\"},\n        "], "files": ["global.ets", "video.ets", "imageAnimatorProps.test.js", "background.ets", "enumsImage.ets", "canvas.ets", "ohosMatrix4.ets", "imageEffects.ets", "animationStatus.ets", "fillMode.ets", "navigation.ets", "customDialogController.ets", "searchProps.test.js", "sliderProps.test.js", "toolbarItemProps.test.js", "videoProps.test.js", "positionSetting.ets", "inputProps.test.js", "index.js", "shapeClipping.ets", "backgroundAndSizeSetting.ets", "imageProps.test.js", "select.ets", "textareaProps.test.js", "imageAnimator.ets", "overlay.ets", "buttonProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "state", "api_method_all": "state(value: AnimationStatus): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 1569, "since": 7, "api_used": "\u662f", "lines": ["tart to emit action state\")\n            event", "ange current action state is: ' + this.onActi", "stateChangCallBack] stateChangCallBack \");\n  ", "teChangeEvent, this.stateChangCallBack);\n  }\n", "ngeEventThree, this.stateChangCallBack);\n  }\n", "  events_emitter.on(stateChangeEvent2, this.s", "ck);\n  }\n\n  private stateChangCallBack = (eve", "    }\n  }\n  private stateChangCallBack = (eve", "  events_emitter.on(stateChangeEvent, this.st", "onClick emit action state err: \" + JSON.strin", "info(\"[column] page state change called:\" + J", "\n    console.info(\"[stateChangCallBack] state", "Flag current action state is: ' + this.disApp", "CallBack);\n\n    var stateChangeEventTwo = {\n ", " called ');\n    var stateChangeEvent = {\n    ", "info(\"[column] page stateChangCallBack\");\n   ", "     console.info(\"[stateChangCallBack] state", "CallBack);\n\n    var stateChangeEventThree = {", "CallBack);\n\n    var stateChangeEvent2 = {\n   ", "info(\"[appear] page state change called:\" + J", "teChangeEvent, this.stateChangCallBack);\n\n   ", "aChange emit action state err: \" + JSON.strin", "ction.Row\n  private stateChangCallBack = (eve", "tart to emit action state\")\n              eve", "w called');\n    var stateChangeEvent = {\n    ", "stateChangCallBack] state change called: \" + ", "k);\n\n  }\n\n  private stateChangCallBack = (eve", "Flag current action state is: ' + this.appear", "ole.info(\"Flex page state change called:\" + J", "earFlag emit action state err: \" + JSON.strin", "hangeEventTwo, this.stateChangCallBack);\n\n   ", "info(\"[appear] page stateChangCallBack\");\n   ", "nfo(\"[ellipse] page state change called:\" + J", "nfo(\"[ellipse] page stateChangCallBack\");\n   ", "  events_emitter.on(stateChangeEventThree, th", "  events_emitter.on(stateChangeEventTwo, this", "eChangeEvent2, this.stateChangCallBack);\n\n  }"], "files": ["ohosPrompt.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "configuration.ets", "CounterJsunit.test.ets", "ImageEffectsJsunit.test.ets", "video.ets", "ListItemJsunit.test.ets", "longPressGesture.ets", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "ColumnSplitJsunit.test.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "CheckboxGroupJsunit.test.ets", "column.ets", "richText.ets", "checkboxGroup.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "TextStyleJsunit.test.ets", "geometryTransition.ets", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "marquee.ets", "panel.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "border.ets", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "scrollBar.ets", "FillModeJsunit.test.ets", "CalendarJsunit.test.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "transition.ets", "TouchJsunit.test.ets", "transForm.ets", "LongPressGesture.test.ets", "path.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "LinkJsunit.test.ets", "scrollCode.ets", "CurvesJsunit.test.ets", "button.ets", "FlexWrapJsunit.test.ets", "GridJsnuit.test.ets", "focus.ets", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "background.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "gauge.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "sideBar.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "ScrollerBarJsunit.test.ets", "customDialogController.ets", "text.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "tapGesture.ets", "flexDirection.ets", "FlexJsunit.test.ets", "shapeClipping.ets", "PropJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "edgeEffect.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "PanGesture.ets", "stepper.ets", "shape.ets", "Canvas2Jsunit.test.ets", "ListJsunit.test.ets", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "ColorGradientJsunit.test.ets", "flex.ets", "MotionPathJsunit.test.ets", "gridContainer.ets", "gridPage.ets", "ShapeJsunit.test.ets", "enable.ets", "PieceCode.ets", "badge.ets", "GlobalJsunit.test.ets", "textStyle.ets", "imageEffects.ets", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "list.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "QrCode.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "DataPanelJsunit.test.ets", "checkbox.ets", "QrcodeJsunit.test.ets", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "circle.ets", "listItem.ets", "CustomDialogControllerJsunit.test.ets", "Button.ets", "ScrollJsunit.test.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "ContentStorage.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "direction2.ets", "AnimationStatusJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "ohosMatrix4.ets", "CircleJsunit.test.ets", "divider.ets", "ScrollBar.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "line.ets", "TransFormJsunit.test.ets", "priorityGesture.ets", "GestureModeJsunit.test.ets", "touchAble.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "CheckboxJsunit.test.ets", "progress.ets", "CanvasJsunit.test.ets", "TextTimerJsunit.test.ets", "datePicker.ets", "pageTransition.ets", "TabsJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "GridSettingsJsunit.test.ets", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "areaChange.ets", "BindPopupJsunit.test.ets", "Link.ets", "parallelGesture.ets", "select.ets", "timeStamp.ets", "slider.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "sharedTransition.ets", "refresh.ets", "motionPath.ets", "search.ets", "colorGradient.ets", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "duration", "api_method_all": "duration(value: number): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 240, "since": 7, "api_used": "\u662f", "lines": ["reateAnimator({\n    duration: 3000,\n    fill: 'f", "ata: {\n            \"duration\": \"nan\"\n          }", "xpect(objNew.$attrs.duration).assertEqual('500.0", "ull) {\n        this.duration = parseInt(eventDat", "he text is hidden', duration: 2000 })\n          ", "nsole.info(\"button6 duration value is : \" + this", "value is : \" + this.duration)\n          animateT", "xpect(objNew.$attrs.duration).assertEqual('nan')", "ata: {\n            \"duration\": \"500\"\n          }", "        animateTo({ duration: this.duration }, (", "To({ duration: this.duration }, () => {\n        ", "gify(this.matrix1), duration: 200 })\n          t", "nsole.info(\"button6 duration test animateTo STAR", " if (eventData.data.duration != null) {\n        ", "3.jpg',\n            duration: 500,\n            w", "ssage: \"sucessful\", duration: 200 })\n          t", "     .duration(this.duration)\n      .vertical(th", "s = {\n              duration: 5000,\n            ", "        animateTo({ duration: 1000 }, () => {\n  ", "nsole.info(\"button1 duration test animateTo STAR", "nsole.info(\"button1 duration value is : \" + this", " {\n                \"duration\": this.duration,\n  ", "an = false\n  @State duration: number = 100\n  @St", "2.jpg',\n            duration: 500,\n            w", "options = {\n        duration: 2000,\n        iter", "   \"duration\": this.duration,\n              }\n  ", "  expect(obj.$attrs.duration).assertEqual('1000.", "4.jpg',\n            duration: 500,\n            w", "nsole.info(\"button7 duration test animateTo STAR", "eInt(eventData.data.duration);\n      }\n      if ", "an = false\n  @State duration: number = 1000\n  @S", "nsole.info(\"button7 duration value is : \" + this", "The text is shown', duration: 2000 })\n          ", "p(this.loop)\n      .duration(this.duration)\n    ", "1.jpg',\n            duration: 500,\n            w"], "files": ["animate.ets", "pageTransition2.ets", "ohosPrompt.ets", "imageAnimatorProps.test.js", "ohosMatrix4.ets", "swiper.ets", "appear.ets", "animationStatus.ets", "fillMode.ets", "curves.ets", "chartProps.test.js", "SharedTransitionJsunit.test.ets", "pageTransition.ets", "geometryTransition.ets", "swiperProps.test.js", "AnimateJsunit.test.ets", "animatorOption.ets", "index.js", "SwiperJsunit.test.ets", "Swiper.ets", "basicabilityapi.test.js", "transition.ets", "sharedTransition.ets", "motionPath.ets", "imageAnimator.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "reverse", "api_method_all": "reverse(value: boolean): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 70, "since": 7, "api_used": "\u662f", "lines": ["          animation.reverse()\n        }, 500)\n\n", "state).reverse(this.reverse).fixedSize(this.fix", ") {\n        Button('reverse').key('button3').wi", "s.Initial;\n  @State reverse: boolean = false;\n ", "state).reverse(this.reverse).fixedSize(false).p", "lMode.None\n  @State reverse: boolean = false\n  ", "     this.animation.reverse();\n          });\n  ", "> {\n      animation.reverse()\n    }, 500)\n\n    ", ") {\n        Button('reverse').width(100).paddin", ";\n          Button('reverse').borderRadius(8).b", "his.reverse = !this.reverse\n        })\n        ", "his.reverse = !this.reverse\n          try {\n   ", "=> {\n          this.reverse = !this.reverse\n   ", " .state(this.state).reverse(this.reverse).fixed", "rizontal,\n          reverse: false,\n          s"], "files": ["index.js", "animateMotionProps.test.js", "imageAnimatorProps.test.js", "animationStatus.ets", "imageAnimator.ets", "Slider.ets", "animatorOption.ets", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "fixedSize", "api_method_all": "fixedSize(value: boolean): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["verse(this.reverse).fixedSize(false).preDecode(2)", "verse(this.reverse).fixedSize(this.fixedSize).pre", "rse).fixedSize(this.fixedSize).preDecode(this.pre", "number = 1\n  @State fixedSize: boolean = false\n\n\n", "e,\n                \"fixedSize\": this.fixedSize\n  ", "  \"fixedSize\": this.fixedSize\n              }\n   ", "number = 1\n  @State fixedSize: boolean = false\n\n ", "ect(indexEvent.data.fixedSize).assertEqual(false)"], "files": ["fillMode.ets", "animationStatus.ets", "ImageAnimatorJsunit.test.ets", "imageAnimator.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "preDecode", "api_method_all": "preDecode(value: number): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 17, "since": 7, "api_used": "\u662f", "lines": ["de = eventData.data.preDecode;\n      }\n    }\n  }\n", "e,\n                \"preDecode\": this.preDecode\n  ", "ize).preDecode(this.preDecode)\n        .fillMode(", "(indexEventOne.data.preDecode).assertEqual(2);\n  ", "ull) {\n        this.preDecode = eventData.data.pr", " {\n                \"preDecode\": this.preDecode\n  ", "ect(indexEvent.data.preDecode).assertEqual(0);\n  ", "ata: {\n            \"preDecode\": 2,\n          }\n  ", "e).fixedSize(false).preDecode(2)\n        .fillMod", "us.Initial\n  @State preDecode: number = 0\n  @Stat", "  \"preDecode\": this.preDecode\n              }\n   ", " if (eventData.data.preDecode != null) {\n        ", "ize(this.fixedSize).preDecode(this.preDecode)\n   "], "files": ["fillMode.ets", "animationStatus.ets", "ImageAnimatorJsunit.test.ets", "imageAnimator.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "fillMode", "api_method_all": "fillMode(value: FillMode): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 57, "since": 7, "api_used": "\u662f", "lines": ["or('beforeEach push fillMode page error:' + err)", "      console.info(\"fillModeTest_0200 click resu", "pped\n          this.fillMode = FillMode.None\n   ", "   \"fillMode\": this.fillMode\n              }\n   ", "      console.info(\"fillModeTest_0200 on events_", "  selectJsunit();\n  fillModeJsunit();\n  enumsIma", "ning\n          this.fillMode = FillMode.Backward", "fo('beforeEach push fillMode page result:' + JSO", "y\n@Component\nstruct fillModeExample {\n  @State s", "\n    });\n\n      it('fillModeText_0100', 0, async", "preDecode)\n        .fillMode(this.fillMode).iter", "      console.info('fillMode test after each cal", "      console.info('fillModeTest beforeEach call", " {\n                \"fillMode\": this.fillMode\n   ", "        uri: 'pages/fillMode',\n      }\n      try", "number = 0\n  @State fillMode: FillMode = FillMod", "nfo('beforeEach get fillMode state pages.name:' ", "      console.info('fillModeTest_0300 END');\n   ", "      console.info('fillModeTest_0100 END');\n   ", "      console.info(\"fillModeTest_0100 click resu", "      console.info(\"fillModeTest_0300 on events_", "rt default function fillModeJsunit(){\n  describe", "unit(){\n  describe('fillModeTest', function (){\n", "      console.info(\"fillModeText_0100 component ", ");\n    });\n\n    it('fillModeTest_0200', 0, async", ");\n    });\n\n    it('fillModeTest_0300', 0, async", ");\n    });\n\n    it('fillModeTest_0100', 0, async", "     .fillMode(this.fillMode).iterations(this.it", "      console.info(\"fillModeTest_0200 get state ", "      console.info('fillModeTest_0200 END');\n   ", "      console.info(\"fillModeTest_0300 click resu", "      console.info('fillModeTest_0300 START');\n ", "      console.info('fillModeTest_0100 START');\n ", "ect(indexEvent.data.fillMode).assertEqual(FillMo", "      console.info('fillModeText_0100 START');\n ", "t.test.ets';\nimport fillModeJsunit from './FillM", "      console.info(\"fillModeTest_0100 get state ", "      console.info('fillModeTest_0200 START');\n ", "used\n          this.fillMode = FillMode.Both\n   ", "nfo('beforeEach get fillMode state pages:' + JSO", "      console.info(\"fillModeTest_0300 get state ", "      console.info(\"fillModeTest_0100 on events_", "s));\n        if (!('fillMode' == pages.name)) {\n"], "files": ["GestureModeJsunit.test.ets", "FillModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "animationStatus.ets", "imageAnimator.ets", "List.test.ets", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "iterations", "api_method_all": "iterations(value: number): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 64, "since": 7, "api_used": "\u662f", "lines": ["=> {\n          this.iterations = -1\n        })\n   ", " {\n                \"iterations\": this.iterations\n ", "an = false\n  @State iterations: number = 1\n  @Stat", "        animateTo({ iterations: this.iteration }, ", "de).iterations(this.iterations).width(325).height(", "n = false;\n  @State iterations: number = 1;\n\n  bui", "ect(indexEvent.data.iterations).assertEqual(1);\n  ", "Mode(FillMode.None).iterations(this.iterations).wi", "ll: 'forwards',\n    iterations: 2,\n    direction: ", "ne).iterations(this.iterations).width(325).height(", "Mode(this.fillMode).iterations(this.iterations).wi", "fill: 'forwards',\n  iterations: 2,\n  direction: 'n", "=> {\n          this.iterations = 1\n          try {", " \"iterations\": this.iterations\n              }\n   ", "=> {\n          this.iterations = 1\n        })\n    ", "=> {\n          this.iterations = -1\n          try ", " {\n                \"iterations\": this.iteration,\n ", "nsole.info(\"button3 iterations test animateTo STAR", "tion: 2000,\n        iterations: 1,\n        directi", "5000,\n              iterations: 2,\n              b"], "files": ["animate.ets", "ImageAnimatorJsunit.test.ets", "animationStatus.ets", "imageAnimator.ets", "animatorOption.ets", "index.js", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "onStartevent", "api_method_all": "onStart(event: () => void): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "onStartevent", "api_method_all": "onStart(event: () => void): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "onPauseevent", "api_method_all": "onPause(event: () => void): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "onPauseevent", "api_method_all": "onPause(event: () => void): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "onRepeatevent", "api_method_all": "onRepeat(event: () => void): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "onRepeatevent", "api_method_all": "onRepeat(event: () => void): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "onCancelevent", "api_method_all": "onCancel(event: () => void): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "onCancelevent", "api_method_all": "onCancel(event: () => void): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "onFinishevent", "api_method_all": "onFinish(event: () => void): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorAttribute", "api_method_name": "onFinishevent", "api_method_all": "onFinish(event: () => void): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}