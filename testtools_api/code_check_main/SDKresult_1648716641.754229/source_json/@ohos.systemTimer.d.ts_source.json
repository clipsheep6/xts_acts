{"subsystem_ch": "Misc\u8f6f\u4ef6\u670d\u52a1\u5b50\u7cfb\u7edf", "subsystem_en": "miscservices", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.systemTimer", "api": [{"api_class_name": "systemTimer", "api_method_all": "declare namespace systemTimer {\n  \n  const TIMER_TYPE_REALTIME: number;\n\n  \n  const TIMER_TYPE_WAKEUP: number;\n\n  \n  const TIMER_TYPE_EXACT: number;\n\n  \n  const TIMER_TYPE_IDLE: number;\n\n  \n  function createTimer(options: TimerOptions, callback: AsyncCallback<number>): void;\n  function createTimer(options: TimerOptions): Promise<number>;\n\n  \n  function startTimer(timer: number, triggerTime: number, callback: AsyncCallback<void>): void;\n  function startTimer(timer: number, triggerTime: number): Promise<void>;\n\n  \n  function stopTimer(timer: number, callback: AsyncCallback<void>): void;\n  function stopTimer(timer: number): Promise<void>;\n\n  \n  function destroyTimer(timer: number, callback: AsyncCallback<void>): void;\n  function destroyTimer(timer: number): Promise<void>;\n\n    \n  interface TimerOptions {\n    \n    type: number;\n\n    \n    repeat: boolean;\n\n    \n    interval?: number;\n\n    \n    wantAgent?: WantAgent;\n\n    \n    callback?: () => void;\n  }\n}", "api_method_name": "systemTimer", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 247, "since": 0, "api_used": "\u662f", "lines": ["\n\t\tconsole.log('SUB_systemTimer_Timer_JS_API_0100 e", "###start');\n\n\t\n\tit('systemTimer_Timer_test1',0, asy", "\n\t\tconsole.log(\"SUB_systemTimer_Timer_JS_API_0600 s", "end');\n\t});\n\n\t\n\tit('systemTimer_Timer_test3',0, asy", "\n\t\tconsole.log('SUB_systemTimer_Timer_JS_API_0700 e", "end');\n\t});\n\n\t\n\tit('systemTimer_Timer_test2',0, asy", "sunit/index'\nimport systemTimer from '@ohos.systemt", "\n\t\tconsole.log(\"SUB_systemTimer_Timer_JS_API_0500 s", "log(\"stop timer\")\n\t\tsystemTimer.stopTimer(timer)\n\t\t", "og(\"start timer\")\n\t\tsystemTimer.startTimer(timer, 0", "\n\t\tconsole.log(\"SUB_systemTimer_Timer_JS_API_0200 s", "end');\n\t});\n\n\t\n\tit('systemTimer_Timer_test6',0, asy", "end');\n\t});\n\n\t\n\tit('systemTimer_Timer_test7',0, asy", "\n\t\tconsole.log('SUB_systemTimer_Timer_JS_API_0500 e", "\n\t\tconsole.log('SUB_systemTimer_Timer_JS_API_0200 e", "(\"destroy timer\")\n\t\tsystemTimer.destroyTimer(timer)", "\n\t\tconsole.log(\"SUB_systemTimer_Timer_JS_API_0700 s", "og(\"start timer\")\n\t\tsystemTimer.startTimer(timer, N", "end');\n\t});\n\n\t\n\tit('systemTimer_Timer_test4',0, asy", "end');\n\t});\n\n\t\n\tit('systemTimer_Timer_test5',0, asy", "\n\t\tconsole.log('SUB_systemTimer_Timer_JS_API_0300 e", "og(\"start timer\")\n\t\tsystemTimer.startTimer(timer, 5", "\n\t\tconsole.log(\"SUB_systemTimer_Timer_JS_API_0100 s", "\n\t\tconsole.log(\"SUB_systemTimer_Timer_JS_API_0400 s", "        let timer = systemTimer.createTimer(options", "og(\"start timer\")\n\t\tsystemTimer.startTimer(timer, 1", "\n\t\tconsole.log('SUB_systemTimer_Timer_JS_API_0600 e", "\n\t\tconsole.log(\"SUB_systemTimer_Timer_JS_API_0300 s", "\n\t\tconsole.log('SUB_systemTimer_Timer_JS_API_0400 e"], "files": ["SystemTimerJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "systemTimer", "api_method_name": "createTimer", "api_method_all": "function createTimer(options: TimerOptions, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 42, "since": 0, "api_used": "\u662f", "lines": ["timer = systemTimer.createTimer(options)\n\t\texpect(parseInt(timer) == pa", "   Test systemTimer.createTimer repeat to stop a timer\n     * @tc.desc ", "   Test systemTimer.createTimer interval = Number.MAX_VALUE\n     * @tc.", "   Test systemTimer.createTimer interval = Number.MAX_VALUE-1\n     * @t", "   Test systemTimer.createTimer start a not exist timer\n     * @tc.desc", "   Test systemTimer.createTimer destroy a started timer\n     * @tc.desc", "   Test systemTimer.createTimer repeat to destroy a timer\n     * @tc.de", "   Test systemTimer.createTimer stop a not started timer\n     * @tc.des", "   Test systemTimer.createTimer repeat to start a timer\n     * @tc.desc", "   Test systemTimer.createTimer stop a not exist timer\n     * @tc.desc ", "   Test systemTimer.createTimer Called back when the timer goes off.\n  ", "timer = systemTimer.createTimer(options)\n\t\t\texpect(parseInt(timer) == p", "   Test systemTimer.createTimer interval = Number.MAX_VALUE/2\n     * @t", "   Test systemTimer.createTimer destroy a not exist timer\n     * @tc.de", "   Test systemTimer.createTimer WantAgent\n     * @tc.desc      Test sys"], "files": ["SystemTimerJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "systemTimer", "api_method_name": "createTimer", "api_method_all": "function createTimer(options: TimerOptions): Promise<number>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "systemTimer", "api_method_name": "startTimer", "api_method_all": "function startTimer(timer: number, triggerTime: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 29, "since": 0, "api_used": "\u662f", "lines": ["mer\")\n\t\tsystemTimer.startTimer(timer, 0)\n\t\t\n\t\tconsole.log(\"stop timer\"", "mer\")\n\t\tsystemTimer.startTimer(timer, 100000)\n\t\t\n\t\tconsole.log(\"stop t", "mer\")\n\t\tsystemTimer.startTimer(timer, Number.MAX_VALUE)\n\t\t\n\t\tconsole.l", "mer\")\n\t\tsystemTimer.startTimer(timer, Number.MAX_VALUE/2)\n\t\t\n\t\tconsole", "mer\")\n\t\tsystemTimer.startTimer(timer, 100000)\n\t\t\n\t\tconsole.log(\"destro", "mer\")\n\t\tsystemTimer.startTimer(timer, 100000)\n\t\t\n\t\tconsole.log(\"stop a", "er\")\n\t\t\tsystemTimer.startTimer(timer, 100000)\n\n\t\t\tconsole.log(\"stop ti", "mer\")\n\t\tsystemTimer.startTimer(timer, 5000)\n\t\t\n\t\tconsole.log(\"stop tim", "mer\")\n\t\tsystemTimer.startTimer(timer, Number.MAX_VALUE-1)\n\t\t\n\t\tconsole", "ain\")\n\t\tsystemTimer.startTimer(timer, 100000)\n\t\t\n\t\tconsole.log(\"stop t", "mer\")\n\t\tsystemTimer.startTimer(timer + 1, 100000)\n\t\t\n\t\tconsole.log(\"de", "mer\")\n\t\tsystemTimer.startTimer(timer, 100000)\n\t\t\n\t\tconsole.log(\"start "], "files": ["SystemTimerJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "systemTimer", "api_method_name": "startTimer", "api_method_all": "function startTimer(timer: number, triggerTime: number): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "systemTimer", "api_method_name": "stopTimer", "api_method_all": "function stopTimer(timer: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 29, "since": 0, "api_used": "\u662f", "lines": ["er\")\n\t\t\tsystemTimer.stopTimer(timer)\n\n\t\t\tconsole.log(\"destroy timer\")", "mer\")\n\t\tsystemTimer.stopTimer(timer)\n\t\t\n\t\tconsole.log(\"destroy a not ", "ain\")\n\t\tsystemTimer.stopTimer(timer)\n\t\t\n\t\tconsole.log(\"destroy timer\"", "mer\")\n\t\tsystemTimer.stopTimer(timer + 1)\n\t\t\n\t\tconsole.log(\"stop the c", "mer\")\n\t\tsystemTimer.stopTimer(timer)\n\t\t\n\t\tconsole.log(\"destroy timer\"", "imer\")\n\t\tystemTimer.stopTimer(timer)\n\t\t\n\t\tconsole.log(\"destroy timer\"", "mer\")\n\t\tsystemTimer.stopTimer(timer)\n\t\t\n\t\tconsole.log(\"stop timer aga"], "files": ["SystemTimerJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "systemTimer", "api_method_name": "stopTimer", "api_method_all": "function stopTimer(timer: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "systemTimer", "api_method_name": "destroyTimer", "api_method_all": "function destroyTimer(timer: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 31, "since": 0, "api_used": "\u662f", "lines": ["er\")\n\t\t\tsystemTimer.destroyTimer(timer)\n\t\t\tconsole.log('SUB_systemTimer_", "mer\")\n\t\tsystemTimer.destroyTimer(timer)\n\t\tconsole.log('SUB_systemTimer_T", "ain\")\n\t\tsystemTimer.destroyTimer(timer)\n\t\tconsole.log('SUB_systemTimer_T", "mer\")\n\t\tsystemTimer.destroyTimer(timer)\n\t\t\n\t\tconsole.log(\"destroy timer ", "mer\")\n\t\tsystemTimer.destroyTimer(timer + 1)\n\t\t\n\t\tconsole.log(\"destroy ti"], "files": ["SystemTimerJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "systemTimer", "api_method_name": "destroyTimer", "api_method_all": "function destroyTimer(timer: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "systemTimer", "api_method_name": "TIMER_TYPE_REALTIME", "api_method_all": "const TIMER_TYPE_REALTIME: number", "api_type": "", "api_args_count": 1, "api_level": 31, "api_used_count": 26, "since": 0, "api_used": "\u662f", "lines": ["options = {\n\t\t\ttype:TIMER_TYPE_REALTIME,\n\t\t\trepeat:false,\n\t", "options = {\n\t\t\ttype:TIMER_TYPE_REALTIME,\n\t\t\trepeat:true,\n\t\t"], "files": ["SystemTimerJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "systemTimer", "api_method_name": "TIMER_TYPE_WAKEUP", "api_method_all": "const TIMER_TYPE_WAKEUP: number", "api_type": "", "api_args_count": 1, "api_level": 31, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["options = {\n\t\t\ttype:TIMER_TYPE_WAKEUP,\n\t\t\trepeat:false,\n\t"], "files": ["SystemTimerJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "systemTimer", "api_method_name": "TIMER_TYPE_EXACT", "api_method_all": "const TIMER_TYPE_EXACT: number", "api_type": "", "api_args_count": 1, "api_level": 31, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["options = {\n\t\t\ttype:TIMER_TYPE_EXACT,\n\t\t\trepeat:false,\n\t"], "files": ["SystemTimerJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "systemTimer", "api_method_name": "TIMER_TYPE_IDLE", "api_method_all": "const TIMER_TYPE_IDLE: number", "api_type": "", "api_args_count": 1, "api_level": 31, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["options = {\n\t\t\ttype:TIMER_TYPE_IDLE,\n\t\t\trepeat:false,\n\t", "createTTimer type = TIMER_TYPE_IDLE\n     * @tc.desc    "], "files": ["SystemTimerJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TimerOptions", "api_method_all": "interface TimerOptions {\n    \n    type: number;\n\n    \n    repeat: boolean;\n\n    \n    interval?: number;\n\n    \n    wantAgent?: WantAgent;\n\n    \n    callback?: () => void;\n  }", "api_method_name": "TimerOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TimerOptions", "api_method_name": "callback", "api_method_all": "callback?: () => void;", "api_type": "callback", "api_args_count": 0, "api_level": 21, "api_used_count": 10, "since": 0, "api_used": "\u662f", "lines": ["(err, data) => { // callback\u5f62\u5f0f\u8c03\u7528\u5f02\u6b65\u63a5\u53e3\n        if ((typeof err !== 'un", "ersistent:false,\n\t\t\tcallback:callbackFunction\n\t\t}\n\t\tconsole.log(\"cre", "    * @tc.name      callbackFunction\n     */\n\tfunction callbackFunct", "    /**\n     *  The callback function is used for pasteboard content", "(\"Start to call the callback function\")\n\t}\n})", "nction     Used for callback functions\n     * @tc.name      callback", "n\n     */\n\tfunction callbackFunction()\n\t{\n\t\tconsole.log(\"Start to ca", ":false,\n\t\t\tcallback:callbackFunction\n\t\t}\n\t\tconsole.log(\"create timer", "nabled change. This callback is invoked when screenlockEnabled is ca"], "files": ["SystemTimerJsunit.test.js", "ScreenLockJsunit.test.ets", "SystemTimeJsunit.Pertest.js", "PasteBoardJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TimerOptions", "api_method_name": "type", "api_method_all": "type: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 163, "since": 0, "api_used": "\u662f", "lines": ["ef = Object.getPrototypeOf(global) || global", "TYPE_TEXT_WANT MIME type of data')\n        a", ": MEDIUM\n     * @tc.type      : Function\n   ", "r word' })\n        .type(InputType.Normal)\n ", "TYPE_TEXT_HTML MIME type of data')\n        a", "he/test.txt',\n      type: 'txt'\n    }\n    le", "YPE_TEXT_PLAIN MIME type of data')\n        a", "og('Checks the MIME types of all content on ", "    y: downY,\n      type: TouchType.Down,\n  ", "ETYPE_TEXT_URI MIME type of data')\n        a", "y: y_value,\n        type: TouchType.Move,\n  ", "      y: upY,\n      type: TouchType.Up,\n    ", "yStep * i),\n        type: TouchType.Move\n   ", "ogram Files',\n      type: 'text'\n    };\n    "], "files": ["Utils.ets", "RequestJsunit.test.ets", "SystemTimeJsunit.test.js", "PasteBoardJsunit.test.js", "SystemTimerJsunit.test.js", "Publicfunction.js", "SystemTimeJsunit.Pertest.js", "input.ets", "index.js", "RequestDownloadTaskJsunit.test.ets", "UploadCallbackXTSJsunit.test.js", "InputmethodEngineJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TimerOptions", "api_method_name": "repeat", "api_method_all": "repeat: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 32, "since": 0, "api_used": "\u662f", "lines": ["emTimer.createTimer repeat to start a timer\n  ", "MER_TYPE_WAKEUP,\n\t\t\trepeat:false,\n\t\t\tpersisten", "TIMER_TYPE_IDLE,\n\t\t\trepeat:false,\n\t\t\tpersisten", "emTimer.createTimer repeat to stop a timer\n   ", "emTimer.createTimer repeat to destroy a timer\n", "R_TYPE_REALTIME,\n\t\t\trepeat:true,\n\t\t\tpersistent", "R_TYPE_REALTIME,\n\t\t\trepeat:false,\n\t\t\tinterval:", "IMER_TYPE_EXACT,\n\t\t\trepeat:false,\n\t\t\tpersisten", "R_TYPE_REALTIME,\n\t\t\trepeat:false,\n\t\t\tpersisten"], "files": ["SystemTimerJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TimerOptions", "api_method_name": "interval", "api_method_all": "interval?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 0, "api_used": "\u662f", "lines": ["emTimer.createTimer interval = Number.MAX_VALUE-", "emTimer.createTimer interval = Number.MAX_VALUE/", "\t\t\trepeat:false,\n\t\t\tinterval:Number.MAX_VALUE-1,", "\t\t\trepeat:false,\n\t\t\tinterval:5000,\n\t\t\tpersistent", "emTimer.createTimer interval = Number.MAX_VALUE\n", "\t\t\trepeat:false,\n\t\t\tinterval:Number.MAX_VALUE,\n\t", "\t\t\trepeat:false,\n\t\t\tinterval:Number.MAX_VALUE/2,", "\t\t\trepeat:false,\n\t\t\tinterval:0,\n\t\t\tpersistent:fa", "\t\t\trepeat:false,\n\t\t\tinterval:100000,\n\t\t\tpersiste"], "files": ["SystemTimerJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TimerOptions", "api_method_name": "wantAgent", "api_method_all": "wantAgent?: WantAgent", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}