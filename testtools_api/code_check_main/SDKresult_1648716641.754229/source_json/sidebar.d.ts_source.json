{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@internal\\component\\ets\\sidebar", "api": [{"api_class_name": "SideBarContainerType", "api_method_all": "declare enum SideBarContainerType {\r\n  \r\n  Embed,\r\n  \r\n  Overlay,\r\n}", "api_method_name": "SideBarContainerType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["   SideBarContainer(SideBarContainerType.Embed)\n    {\n      "], "files": ["sideBar.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerType", "api_method_name": "Embed", "api_method_all": "Embed,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["ideBarContainerType.Embed)\n    {\n      Column", "deBarContainerStyle.Embed }) {\n        Column"], "files": ["sideBar.ets", "Sidebar.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerType", "api_method_name": "Overlay", "api_method_all": "Overlay,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 49, "since": 8, "api_used": "\u662f", "lines": ["   });\n\n    it('testOverlay03', 0, async functi", "  console.info('testOverlay05 END');\n      done", "   });\n\n    it('testOverlay04', 0, async functi", " console.info(\"[testOverlay07] obj is: \" + JSON", " console.info(\"[testOverlay05] start to publish", "  console.info('testOverlay02 END');\n      done", "   });\n\n    it('testOverlay01', 0, async functi", "  console.log(\"[testOverlay07] change component", "   });\n\n    it('testOverlay08', 0, async functi", "  console.log(\"[testOverlay05] change component", " console.info(\"[testOverlay04] start to publish", " console.info(\"[testOverlay07] start to publish", "  console.info('testOverlay08 END');\n      done", "  console.info('testOverlay04 END');\n      done", " console.info(\"[testOverlay04] obj is: \" + JSON", " console.info('[testOverlay01] START');\n      a", "   });\n\n    it('testOverlay06', 0, async functi", "  console.log(\"[testOverlay02] change component", " console.info('[testOverlay05] START');\n      t", " console.info(\"[testOverlay06] start to publish", " console.info('[testOverlay08] START');\n      t", "deBarContainerStyle.Overlay,\n        buttonAttr", " console.info('[testOverlay04] START');\n      a", " console.info('[testOverlay07] START');\n      t", "  console.info('testOverlay03 END');\n      done", "  console.log(\"[testOverlay06] change component", " console.info(\"[testOverlay03] obj is: \" + JSON", " console.info(\"[testOverlay02] obj is: \" + JSON", " console.info(\"[testOverlay05] obj is: \" + JSON", " console.info(\"[testOverlay03] start to publish", " console.info('[testOverlay02] START');\n      t", " console.info(\"[testOverlay08] obj is: \" + JSON", " console.info('[testOverlay03] START');\n      t", "y\n@Component\nstruct OverlayExample {\n  @State t", "  console.info('testOverlay06 END');\n      done", "  console.log(\"[testOverlay08] change component", "erLayJsunit from './OverlayJsunit.test.ets';\nim", "  console.info('testOverlay07 END');\n      done", "  console.log(\"[testOverlay04] change component", " console.info('[testOverlay06] START');\n      t", "  console.log(\"[testOverlay03] change component", "   });\n\n    it('testOverlay05', 0, async functi", "   });\n\n    it('testOverlay07', 0, async functi", "   });\n\n    it('testOverlay02', 0, async functi", " console.info('[testOverlay01] END');\n      don", " console.info(\"[testOverlay02] start to publish", " console.info(\"[testOverlay06] obj is: \" + JSON", " console.info(\"[testOverlay08] start to publish", " console.info(\"[testOverlay01] obj is: \" + JSON"], "files": ["List.test.ets", "overlay.ets", "OverlayJsunit.test.ets", "Sidebar.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ButtonStyle", "api_method_all": "declare interface ButtonStyle {\r\n  \r\n  left?: number;\r\n  \r\n  top?: number;\r\n  \r\n  width?: number;\r\n\r\n  \r\n  height?: number;\r\n\r\n  \r\n  icons?: {\r\n    shown: string | PixelMap | Resource;\r\n    hidden: string | PixelMap | Resource;\r\n    switching?: string | PixelMap | Resource;\r\n  };\r\n}", "api_method_name": "ButtonStyle", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["tate controlButton: ButtonStyle = ButtonStyle.left\n", "tton: ButtonStyle = ButtonStyle.left\n  @State icons"], "files": ["sideBar.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ButtonStyle", "api_method_name": "left", "api_method_all": "left?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 341, "since": 8, "api_used": "\u662f", "lines": ["One.right - rectOne.left) / 2;\n      let upY", "Style = ButtonStyle.left\n  @State iconsValue", "top: 30, right: 30, left: 30 })\n  }\n}", " (rect.right - rect.left) / 2;\n      let dow", "RGIN_LEFT = 'margin-left'\nconst ATTRS_BACKGR", "\n        .padding({ left: 5 })\n        .key(", "margin({ right: 30, left: 30 })\n    }\n    .w", "nfo);\n    this.rect_left = JSON.parse('[' + ", "          }.margin({left: 10, right: 10})\n  ", "}).margin({ top: 5, left: 20 })\n    }.width(", " (rect.right - rect.left);\n      let upY = r", "ct_value = {\n      \"left\": this.rect_left, \"", "  \"left\": this.rect_left, \"top\": this.rect_t", "5)\n      .padding({ left: 12 })\n    }.backgr", "0xFF0000).padding({ left: 20 })\n        .onC", "   let downX = rect.left + (rect.right - rec", "top: 0,\n            left: 0\n          }\n    ", "ontSize(20).margin({left:10})\n          }.ma", "top: 0,\n            left: 0\n          },\n   ", "350)\n    .padding({ left: 35, right: 35, top", "ight(400).padding({ left: 35, right: 35, top", "  let upX = rectOne.left + (rectOne.right - ", "ils {\n  static rect_left;\n  static rect_top;"], "files": ["Utils.ets", "marqueeProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "SourceTypeJsunit.test.ets", "canvas.ets", "Text.ets", "Navigation.ets", "divider.ets", "imageEffects.ets", "PanGestureJsunit.test.ets", "popupProps.test.js", "AlphabetIndexer.ets", "Constants.ets", "scrollCode.ets", "sideBar.ets", "animationStatus.ets", "toggle.ets", "Panel.ets", "Sidebar.ets", "fillMode.ets", "navigation.ets", "Scroll.ets", "text.ets", "FormComponentPage.ets", "TapGesture.test.ets", "list.ets", "List.ets", "ResponseRegionJsunit.test.ets", "index.js", "areaChange.ets", "edgeEffect.ets", "calendar.ets", "PriorityGestureJsunit.test.ets", "scrollBar.ets", "lazyForEach.ets", "Toggle.ets", "image.ets", "Calendar.ets", "fontWeight.ets", "sharedTransition.ets", "imageAnimator.ets", "ScrollBar.ets", "bindPopup.ets", "panel.ets", "button.ets", "span.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ButtonStyle", "api_method_name": "top", "api_method_all": "top?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 607, "since": 8, "api_used": "\u662f", "lines": ["\n        }.margin({ top: 25 }).border({ wid", "th('100%').margin({ top: 5 })\n  }\n}\n", "t('100%').padding({ top: 5 })\n  }\n}\n", "')[0]\n    this.rect_top = JSON.parse('[' + ", "th('100%').margin({ top: 5 })\n  }\n  onPageS", " = AnimationStatus.Stopped\n          this.f", "00%')\n    .margin({ top: 5 })\n  }\n}", "          .margin({ top: 250 })\n      }\n   ", "})\n        Button('stop').key('button2').wi", "0%')\n    .padding({ top: 5 })\n  }\n}", "ontainer').margin({ top: 300 })\n    }\n  }\n}", "       }\n          stopPropagation: () => {", "          .margin({ top: 250 })\n          .", "ARGIN_TOP = 'margin-top'\nconst ATTRS_BORDER", ")\n        .margin({ top: 5 })\n        .key(", "\": this.rect_left, \"top\": this.rect_top, \"r", " }\n      .padding({ top: 50 })\n      .width", "        }).margin({ top: 5, left: 20 })\n   ", "ity\")\n        Text('top start')\n          .", "ht('100%').margin({ top: 30 })\n  }\n}", "%')\n    }.padding({ top: 20 })\n  }\n}", "th('100%').margin({ top: 20 })\n  }\n\n  onPag", "left;\n  static rect_top;\n  static rect_righ", "t, \"top\": this.rect_top, \"right\": this.rect", "0%')\n    .padding({ top: 5 })\n  }\n}\n", "0xDCDCDC).padding({ top: 5 })\n  }\n}", "0)\n        .margin({top:100})\n        .onSt", "t('100%').padding({ top: 5 })\n  }\n}", "   }\n    }.margin({ top: 5 })\n  }\n\n  onPage", "0xDCDCDC).padding({ top: 5 })\n  }\n\n   onPag", "th('100%').margin({ top: 5 })\n  }\n}", "f3f5)\n    .margin({ top: 10 })\n    .key('gr", "     console.info('stopPropagation')\n      ", "t: 200,\n            top: 0,\n            lef", "h('100%').padding({ top: 5 })\n  }\n}", "th('100%').margin({ top: 300 })\n  }\n}\n\n", "  .indicatorStyle({ top: 20, right: 20, siz"], "files": ["systemRouterA.ets", "configuration.ets", "video.ets", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "playMode.ets", "Navigation.ets", "imageFit.ets", "richText.ets", "column.ets", "Panel.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "TapGesture.test.ets", "enumsLineCapStyle.ets", "Swiper.ets", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "scrollBar.ets", "transition.ets", "systemPrompt.ets", "gridSettings.ets", "transForm.ets", "path.ets", "Column.ets", "scrollCode.ets", "button.ets", "polyline.ets", "focus.ets", "VideoJsunit.test.ets", "touch.ets", "ListItem.ets", "background.ets", "SourceTypeJsunit.test.ets", "Text.ets", "PanGestureJsunit.test.ets", "gauge.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "Sidebar.ets", "customDialogController.ets", "text.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "flexDirection.ets", "shapeClipping.ets", "edgeEffect.ets", "stepper.ets", "shape.ets", "image.ets", "loadingProgress.ets", "flex.ets", "Shape.ets", "Utils.ets", "gridContainer.ets", "Tab.ets", "Polyline.ets", "Stepper.ets", "gridPage.ets", "enumsImage.ets", "enable.ets", "PieceCode.ets", "polygon.ets", "badge.ets", "textStyle.ets", "imageEffects.ets", "popupProps.test.js", "textClock.ets", "tabs.ets", "videoProps.test.js", "list.ets", "colorGradient.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "flexWrap.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "dragEvent.ets", "circle.ets", "listItem.ets", "grid.ets", "Polygon.ets", "fontWeight.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "buttonProps.test.js", "animate.ets", "Flex.ets", "AnimationStatusJsunit.test.ets", "direction2.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "Rect.ets", "divider.ets", "radio.ets", "ImageAnimatorJsunit.test.ets", "Constants.ets", "animationStatus.ets", "Path.ets", "fillMode.ets", "line.ets", "curves.ets", "FormComponentPage.ets", "Grid.ets", "visibility.ets", "progress.ets", "swiperProps.test.js", "WebPage.ets", "index.js", "areaChange.ets", "ohosRouterA.ets", "GridItem.ets", "slider.ets", "aboutToDisappear.ets", "Calendar.ets", "ScrollBar.ets", "panel.ets", "overlay.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ButtonStyle", "api_method_name": "width", "api_method_all": "width?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1772, "since": 8, "api_used": "\u662f", "lines": ["temsColumn\")\n      .width('90%')\n      .borde", "thValue}`)\n        .width(200)\n        .heigh", ");\n        })\n    }.width('100%').height('100", "Stretch)\n          .width('33%')\n          .h", "s.alignItems)\n    }.width('100%').padding({ t", ")\n        }\n      }.width('90%').key('gridCon", "gnSelf,height:100').width('34%').height(100)\n", "hrink(2)\n          .width('40%')\n          .h", "ull) {\n        this.width = eventData.data.wi", "(\"img_width=\" + img.width);\n    console.log(\"", "blurValue)\n        .width('90%')\n        .hei", "s/bg.jpg\");\n    let width = img.width;\n    le", "ign.Center)\n      }.width('90%').height(120).", "le.log(\"imagebitmap_width=\" + width);\n    con", "fontColor(0xCCCCCC).width('90%')\n      Column", "pse().width(`${this.width}`).height(`${this.h", "fontColor(0xCCCCCC).width('90%')\n      Flex({", "fontColor(0xCCCCCC).width('90%')\n      Text()", "Shrink')\n          .width('40%')\n          .h", "fontColor(0xCCCCCC).width('90%')\n      Text('", "eExample {\n  @State width: string = \"200px\";\n", "agebitmap_width=\" + width);\n    console.log(\"", "lor(0xAFEEEE)\n    }.width('100%').margin({ to", "xBasis\")\n          .width('60%')\n          .h", "    let width = img.width;\n    let height = i", "%')\n      .border({ width: 1 })\n      .alignI", "enabled)\n    }\n    .width('100%')\n    .paddin", "t: 30 })\n    }\n    .width('100%').height('100", "sole.log(\"imageData_width=\" + imageData.width", "}\n    }.padding(30).width('100%')\n  }\n}", "Shrink\")\n          .width('50%')\n          .h", "    Text()\n        .width('90%')\n        .hei", " .height(200)\n    }.width('100%').margin({ to", "ey('ellipse')\n    }.width('100%').height('100", ") {\n      Ellipse().width(`${this.width}`).he", " {\n        Column().width('50%').height(30).b", "ckgroundImageSize({ width: 1200, height: 160 ", " if (eventData.data.width != null) {\n        ", "   console.log(\"img_width=\" + img.width);\n   ", ".key('flex')\n      .width('90%')\n      .heigh", "ignSelf,height:80').width('33%').height(80)\n ", "s.context)\n        .width('100%').height('40%", "width=\" + imageData.width);\n    console.log(\"", "fontColor(0xCCCCCC).width('90%')\n      Flex()", "th = eventData.data.width;\n      }\n      if (", "E)\n        Column().width('50%').height(30).b"], "files": ["pageTransition2.ets", "ohosPrompt.ets", "systemRouterA.ets", "pathProps.test.js", "dividerProps.test.js", "video.ets", "Navigator.ets", "longPressGesture.ets", "canvas2.ets", "placement.ets", "playMode.ets", "Qrcode.ets", "Row.ets", "Navigation.ets", "imageFit.ets", "PathJsunit.test.ets", "Span.ets", "polylineProps.test.js", "Progress.ets", "column.ets", "Panel.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "toolbarItemProps.test.js", "marquee.ets", "Rating.ets", "enumsLineCapStyle.ets", "mediaquery.test.js", "Swiper.ets", "Divider.ets", "border.ets", "ResponseRegion.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "transition.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "polyline.ets", "focus.ets", "touch.ets", "circleProps.test.js", "ListItem.ets", "background.ets", "Slider.ets", "Text.ets", "Counter.ets", "gauge.ets", "enumsVerticalAlign.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "TextJsunit.test.ets", "sideBar.ets", "toggle.ets", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "canvasProps.test.js", "positionSetting.ets", "TextArea.ets", "animatorOption.ets", "tapGesture.ets", "shapeClipping.ets", "flexDirection.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "PanGesture.ets", "stepper.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "image.ets", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "stepperProps.test.js", "ratingProps.test.js", "flex.ets", "sharedTransition2.ets", "Shape.ets", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "Polyline.ets", "Stepper.ets", "gridPage.ets", "enumsImage.ets", "enable.ets", "PieceCode.ets", "polygon.ets", "badge.ets", "lineProps.test.js", "qrcodeProps.test.js", "textStyle.ets", "imageEffects.ets", "ohosRouterB.ets", "ColumnSplit.ets", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "videoProps.test.js", "enumsItemAlign.ets", "list.ets", "colorGradient.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "dragEvent.ets", "QrcodeJsunit.test.ets", "Video.ets", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "selectProps.test.js", "grid.ets", "Button.ets", "Polygon.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "mouseEvent.ets", "canvas.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "bindContextMenu.ets", "CircleJsunit.test.ets", "Rect.ets", "divProps.test.js", "divider.ets", "ScrollBar.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "appear.ets", "Constants.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "Path.ets", "enumsFlexAlign.ets", "fillMode.ets", "line.ets", "curves.ets", "priorityGesture.ets", "DataPanel.ets", "ellipseProps.test.js", "FormComponentPage.ets", "Grid.ets", "touchAble.ets", "pageTransition.ets", "visibility.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "polygonProps.test.js", "sliderProps.test.js", "RowJsunit.test.ets", "inputProps.test.js", "index.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "parallelGesture.ets", "timeStamp.ets", "Toggle.ets", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "enumsHorizontalAlign.ets", "panel.ets", "rectProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ButtonStyle", "api_method_name": "height", "api_method_all": "height?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1455, "since": 8, "api_used": "\u662f", "lines": [" if (eventData.data.height != null) {\n        ", "     .width('100%').height('40%').backgroundCo", "    }.width('100%').height('100%')\n  }\n}", "\"img_height=\" + img.height);\n  }\n}", "\n    .width('100%').height('100%').margin({ to", "width(200)\n        .height(200)\n    }.width('1", ".gridSpan)\n        .height(\"100%\")\n        .ba", "        })\n        .height(\"100%\")\n        .ba", "th(`${this.width}`).height(`${this.height}`).k", "   let height = img.height;\n    this.context.i", ":100').width('34%').height(100)\n          .bac", " img.width;\n    let height = img.height;\n    t", "dth('90%')\n        .height(40)\n        .fontSi", "   console.log(\"img_height=\" + img.height);\n  ", "sole.log(\"imageData_height=\" + imageData.heigh", "     }.width('90%').height(120).padding(10).ba", "ull) {\n        this.height = eventData.data.he", "h('50%')\n          .height(100)\n          .lin", "dth('90%')\n        .height(40)\n        .shadow", "eight=\" + imageData.height);\n  }\n\n  testImage(", "s('100')\n          .height(100)\n          .lin", "dth('90%')\n        .height(40)\n        .graysc", "h('33%')\n          .height(80)\n          .line", "le.log(\"imagebitmap_height=\" + height);\n  }\n\n ", "h('60%')\n          .height(100)\n          .lin", "= \"200px\";\n  @State height: string = \"200px\";\n", "h}`).height(`${this.height}`).key('ellipse')\n ", " Text('no alignSelf,height:80').width('33%').h", "xGrow(1)\n          .height(100)\n          .lin", "ht = eventData.data.height;\n      }\n    }\n  }\n", "gebitmap_height=\" + height);\n  }\n\n  testOffscr", "xGrow(2)\n          .height(100)\n          .lin", "lumn().width('50%').height(30).backgroundColor", "h('40%')\n          .height(100)\n          .lin", "Size({ width: 1200, height: 160 })\n        .ke", "    })\n            .height(50)\n            .ba", "width('90%')\n      .height(120)\n      .padding", "   })\n\n            .height(50)\n            .ba", "ridOffset)\n        .height(\"100%\")\n        .ba", "an')\n      }\n      .height(200)\n    }\n    .bac", " Text('no alignSelf,height:100').width('34%').", "t:80').width('33%').height(80)\n          .back", "    }.width('100%').height('100%')\n  }\n\n  test"], "files": ["pageTransition2.ets", "ohosPrompt.ets", "systemRouterA.ets", "dividerProps.test.js", "video.ets", "Navigator.ets", "longPressGesture.ets", "canvas2.ets", "placement.ets", "playMode.ets", "Qrcode.ets", "Row.ets", "Navigation.ets", "imageFit.ets", "PathJsunit.test.ets", "Span.ets", "Progress.ets", "column.ets", "Panel.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "toolbarItemProps.test.js", "marquee.ets", "Rating.ets", "enumsLineCapStyle.ets", "mediaquery.test.js", "Swiper.ets", "Divider.ets", "border.ets", "ResponseRegion.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "transition.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "polyline.ets", "focus.ets", "touch.ets", "ListItem.ets", "background.ets", "Slider.ets", "Text.ets", "Counter.ets", "gauge.ets", "enumsVerticalAlign.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "TextJsunit.test.ets", "sideBar.ets", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "canvasProps.test.js", "positionSetting.ets", "TextArea.ets", "animatorOption.ets", "tapGesture.ets", "shapeClipping.ets", "flexDirection.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "PanGesture.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "image.ets", "row.ets", "FlexDirectionJsunit.test.ets", "Marquee.ets", "stepperProps.test.js", "ratingProps.test.js", "flex.ets", "sharedTransition2.ets", "Shape.ets", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enumsImage.ets", "PieceCode.ets", "polygon.ets", "badge.ets", "qrcodeProps.test.js", "imageEffects.ets", "ohosRouterB.ets", "ColumnSplit.ets", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "videoProps.test.js", "enumsItemAlign.ets", "list.ets", "colorGradient.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "QrcodeJsunit.test.ets", "Video.ets", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "selectProps.test.js", "grid.ets", "Button.ets", "Polygon.ets", "fontWeight.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "canvas.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "bindContextMenu.ets", "CircleJsunit.test.ets", "Rect.ets", "divProps.test.js", "divider.ets", "ScrollBar.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "Constants.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "Path.ets", "enumsFlexAlign.ets", "fillMode.ets", "line.ets", "curves.ets", "priorityGesture.ets", "DataPanel.ets", "FormComponentPage.ets", "Grid.ets", "touchAble.ets", "pageTransition.ets", "visibility.ets", "AlertDialog.ets", "sliderProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "inputProps.test.js", "index.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "parallelGesture.ets", "timeStamp.ets", "Toggle.ets", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "Calendar.ets", "panelProps.test.js", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "enumsHorizontalAlign.ets", "panel.ets", "rectProps.test.js", "overlay.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ButtonStyle", "api_method_name": "shown", "api_method_all": "shown: string | PixelMap | Resource", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["onsValue: object= { shown: string=10, hidden:", "ssage: 'The text is shown', duration: 2000 })"], "files": ["sideBar.ets", "appear.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ButtonStyle", "api_method_name": "hidden", "api_method_all": "hidden: string | PixelMap | Resource", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 8, "api_used": "\u662f", "lines": ["  events_emitter.on(hiddenChangeEvent, this.hi", "\n    console.info(\"[hiddenChangCallBack] state", "ck);\n  }\n\n  private hiddenChangCallBack = (eve", "{ shown: string=10, hidden: string=10, switchi", "ack)\n  }\n\n  private hiddenChangCallBack = (eve", "     console.info(\"[hiddenChangCallBack] state", "ageShow() {\n    let hiddenChangeEvent = {\n    ", "ssage: 'The text is hidden', duration: 2000 })", "enChangeEvent, this.hiddenChangCallBack)\n\n    "], "files": ["sideBar.ets", "appear.ets", "visibility.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ButtonStyle", "api_method_name": "switching", "api_method_all": "switching?: string | PixelMap | Resource", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [" hidden: string=10, switching:string=10 };\n\n  pri"], "files": ["sideBar.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerInterface", "api_method_all": "interface SideBarContainerInterface {\r\n  \r\n  (type?: SideBarContainerType): SideBarContainerAttribute;\r\n}", "api_method_name": "SideBarContainerInterface", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerInterface", "api_method_name": "type", "api_method_all": "(type?: SideBarContainerType): SideBarContainerAttribute", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 5337, "since": 8, "api_used": "\u662f", "lines": ["ata: {\n            \"type\": \"PanelType.Miniba", "er0100] expect(obj.$type) is: \" + (obj.$type", "is: \" + (obj.$attrs.type));\n      done();\n  ", "log0100] obj.$attrs.type is: \" + (obj.$attrs", ";\n      expect(obj.$type).assertEqual('Stepp", "    y: downY,\n      type: TouchType.Down,\n  ", "og0100] expect(obj.$type) is: \" + (obj.$type", "eck\n\nconst TYPE = '$type'\nconst ID = '$ID'\nc", "pe = eventData.data.type;\n      }\n    }\n  }\n", "        expect(obj.$type).assertEqual('Flex'", "      y: upY,\n      type: TouchType.Up,\n    ", ";\n      expect(obj.$type).assertEqual('TextA", "bj.$attrs.transform.type)\n        .assertEqu", ";\n      expect(obj.$type).assertEqual('GridC", "  expect(obj.$attrs.type).assertEqual(\"Panel", ";\n      expect(obj.$type).assertEqual('Swipe", "      .decoration({ type: this.decoration, c", "ean = true\n  @State type: PanelType = PanelT", " if (eventData.data.type != null) {\n        ", "type) is: \" + (obj.$type));\n      console.in", "pe = eventData.data.type;\n      }\n      if (", "extInput')\n        .type(this.inputType)\n   ", "          if (event.type === TouchType.Down)", ";\n      expect(obj.$type).assertEqual('Image", "          if (event.type === TouchType.Move)", ";\n      expect(obj.$type).assertEqual('Flex'", "  if(eventData.data.type != null) {\n        ", "eTest_0200 obj.obj.$type is: \" + obj.$type);", ".$type is: \" + obj.$type);\n      var res = o", "ata: {\n            \"type\": 'InputType.Email'", ";\n      expect(obj.$type).assertEqual('Gauge", "ull) {\n        this.type = eventData.data.ty", "          if (event.type === TouchType.Up) {", ";\n      expect(obj.$type).assertEqual('Text'", "   }\n      }\n      .type(this.type).mode(thi", " }\n      .type(this.type).mode(this.mode)\n  ", ";\n      expect(obj.$type).assertEqual('Row')", "yStep * i),\n        type: TouchType.Move\n   "], "files": ["pageTransition2.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "listItemGroupProps.test.js", "pathProps.test.js", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "Navigator.ets", "textProps.test.js", "ParallelGestureJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "Row.ets", "TextPickerJsunit.test.ets", "Span.ets", "polylineProps.test.js", "Panel.ets", "sourceType.ets", "searchProps.test.js", "spanProps.test.js", "toolbarItemProps.test.js", "TapGesture.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "transition.ets", "textInput.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "GridJsnuit.test.ets", "button.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "touch.ets", "circleProps.test.js", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "Text.ets", "SpanJsunit.test.ets", "stackProps.test.js", "PanelJsunit.test.ets", "StepperJsunit.test.ets", "PanGestureJsunit.test.ets", "ButtonJsunit.test.ets", "TextJsunit.test.ets", "toggle.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "text.ets", "TransitionJsunit.test.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "BlankJsunit.test.ets", "ResponseRegionJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "PanGesture.ets", "svgProps.test.js", "labelProps.test.js", "image.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "MotionPathJsunit.test.ets", "Utils.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "popupProps.test.js", "ToggleJsunit.test.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "Button.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "gridColProps.test.js", "span.ets", "NavigatorCode.ets", "buttonProps.test.js", "animateProps.test.js", "AnimationStatusJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "BadgeJsunit.test.ets", "pickerViewProps.test.js", "divProps.test.js", "switchProps.test.js", "TextInput.ets", "Constants.ets", "ellipseProps.test.js", "TransFormJsunit.test.ets", "DataPanel.ets", "Grid.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SharedTransitionJsunit.test.ets", "pageTransition.ets", "datePicker.ets", "sliderProps.test.js", "swiperProps.test.js", "WebPage.ets", "TextTimerJsunit.test.ets", "polygonProps.test.js", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "Link.ets", "GridItem.ets", "tspanProps.test.js", "imageProps.test.js", "Toggle.ets", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "panelProps.test.js", "sharedTransition.ets", "panel.ets", "menuProps.test.js", "rectProps.test.js", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerAttribute", "api_method_all": "declare class SideBarContainerAttribute extends CommonMethod<SideBarContainerAttribute> {\r\n  \r\n  showSideBar(value: boolean): SideBarContainerAttribute;\r\n  \r\n  controlButton(value: ButtonStyle): SideBarContainerAttribute;\r\n  \r\n  showControlButton(value: boolean): SideBarContainerAttribute;\r\n  \r\n  onChange(callback: (value: boolean) => void): SideBarContainerAttribute;\r\n  \r\n  sideBarWidth(value: number): SideBarContainerAttribute;\r\n  \r\n  minSideBarWidth(value: number): SideBarContainerAttribute;\r\n  \r\n  maxSideBarWidth(value: number): SideBarContainerAttribute;\r\n}", "api_method_name": "SideBarContainerAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerAttribute", "api_method_name": "showSideBar", "api_method_all": "showSideBar(value: boolean): SideBarContainerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["Container({\n        showSideBarContainer: true,\n   ", " SideBarContainer({ showSideBarContainer: true, sty"], "files": ["Sidebar.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerAttribute", "api_method_name": "controlButton", "api_method_all": "controlButton(value: ButtonStyle): SideBarContainerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["on = eventData.data.controlButton;\n      }\n    }\n  }\n", " if (eventData.data.controlButton != null) {\n        ", "s.heightValue)\n    .controlButton(this.controlButton)", ".controlButton(this.controlButton)\n    .sideBarWidth(", "umber = 10\n  @State controlButton: ButtonStyle = Butt", "ull) {\n        this.controlButton = eventData.data.co"], "files": ["sideBar.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerAttribute", "api_method_name": "showControlButton", "api_method_all": "showControlButton(value: boolean): SideBarContainerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["   }\n      }\n      .showControlButton(true)\n      .sideBa"], "files": ["Sidebar.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerAttribute", "api_method_name": "onChangecallback", "api_method_all": "onChange(callback: (value: boolean) => void): SideBarContainerAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerAttribute", "api_method_name": "onChangecallback", "api_method_all": "onChange(callback: (value: boolean) => void): SideBarContainerAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerAttribute", "api_method_name": "sideBarWidth", "api_method_all": "sideBarWidth(value: number): SideBarContainerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["Button(true)\n      .sideBarWidth(240)\n      .minSide", "controlButton)\n    .sideBarWidth(240)\n    .minSideBa"], "files": ["sideBar.ets", "Sidebar.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerAttribute", "api_method_name": "minSideBarWidth", "api_method_all": "minSideBarWidth(value: number): SideBarContainerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["eBarWidth(240)\n    .minSideBarWidth(210)\n    .maxSideBa", "arWidth(240)\n      .minSideBarWidth(210)\n      .maxSide"], "files": ["sideBar.ets", "Sidebar.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SideBarContainerAttribute", "api_method_name": "maxSideBarWidth", "api_method_all": "maxSideBarWidth(value: number): SideBarContainerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 0, "api_used": "\u662f", "lines": ["eBarWidth(210)\n    .maxSideBarWidth(260)\n    .onChange(", "arWidth(210)\n      .maxSideBarWidth(260)\n      .key('si"], "files": ["sideBar.ets", "Sidebar.ets"], "is_white": " ", "desc": " "}]}