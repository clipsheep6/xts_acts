{"subsystem_ch": "\u5168\u5c40\u8d44\u6e90\u8c03\u5ea6\u7ba1\u63a7\u5b50\u7cfb\u7edf", "subsystem_en": "resourceschedule", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.workScheduler", "api": [{"api_class_name": "workScheduler", "api_method_all": "declare namespace workScheduler {\n    \n    export interface WorkInfo {\n        \n        workId: number;\n        \n        bundleName: string;\n        \n        abilityName: string;\n        \n        isPersisted?: boolean;\n        \n        networkType?: NetworkType;\n        \n        isCharging?: boolean;\n        \n        chargerType?: ChargingType;\n        \n        batteryLevel?: number;\n        \n        batteryStatus?: BatteryStatus;\n        \n        storageRequest?: StorageRequest;\n        \n        repeatCycleTime?: number;\n        \n        isRepeat?: boolean;\n        \n        repeatCount?: number;\n        \n        isDeepIdle?: boolean;\n        \n        idleWaitTime?: number;\n    }\n\n    \n    function startWork(work: WorkInfo): boolean;\n\n    \n    function stopWork(work: WorkInfo, needCancel?: boolean): boolean;\n\n    \n    function getWorkStatus(workId: number, callback: AsyncCallback<WorkInfo>): void;\n    function getWorkStatus(workId: number): Promise<WorkInfo>;\n\n    \n    function obtainAllWorks(callback: AsyncCallback<void>): Array<WorkInfo>;\n    function obtainAllWorks(): Promise<Array<WorkInfo>>;\n\n    \n    function stopAndClearWorks(): boolean;\n\n    \n    function isLastWorkTimeOut(workId: number, callback: AsyncCallback<void>): boolean;\n    function isLastWorkTimeOut(workId: number): Promise<boolean>;\n\n    \n    export enum NetworkType {\n        \n        NETWORK_TYPE_ANY = 0,\n        \n        NETWORK_TYPE_MOBILE,\n        \n        NETWORK_TYPE_WIFI,\n        \n        NETWORK_TYPE_BLUETOOTH,\n        \n        NETWORK_TYPE_WIFI_P2P,\n        \n        NETWORK_TYPE_ETHERNET\n    }\n\n    \n    export enum ChargingType {\n        \n        CHARGING_PLUGGED_ANY = 0,\n        \n        CHARGING_PLUGGED_AC,\n        \n        CHARGING_PLUGGED_USB,\n        \n        CHARGING_PLUGGED_WIRELESS\n    }\n\n    \n    export enum BatteryStatus {\n        \n        BATTERY_STATUS_LOW = 0,\n        \n        BATTERY_STATUS_OKAY,\n        \n        BATTERY_STATUS_LOW_OR_OKAY\n    }\n\n    \n    export enum StorageRequest {\n        \n        STORAGE_LEVEL_LOW = 0,\n        \n        STORAGE_LEVEL_OKAY,\n        \n        STORAGE_LEVEL_LOW_OR_OKAY\n    }\n}", "api_method_name": "workScheduler", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 89, "since": 0, "api_used": "\u662f", "lines": ["", "}\n        let res = workScheduler.startWork(workInfo)", "heduler from '@ohos.workScheduler'\nimport workSchedul", "rkScheduler'\nimport workSchedulerCallback from '@ohos", "\n        }\n\n        workScheduler.obtainAllWorks().th", ");\n    let value1 = workScheduler.ChargingType.CHARGI", "       let value1 = workScheduler.ChargingType.CHARGI", "    storageRequest: workScheduler.StorageRequest.STOR", "       let value1 = workScheduler.BatteryStatus.BATTE", "      let stopRes = workScheduler.stopWork(workInfo, ", "--------');\n        workScheduler.isLastWorkTimeOut(1", ";\n        }\n        workScheduler.getWorkStatus(9, (e", "allback from '@ohos.workSchedulerExtensionAbility'\n\ni", "      let stopRes = workScheduler.stopAndClearWorks()", "\n        }\n\n        workScheduler.getWorkStatus(10).t", "       let value1 = workScheduler.NetworkType.NETWORK", "\n        }\n\n        workScheduler.obtainAllWorks((err"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "workScheduler", "api_method_name": "startWork", "api_method_all": "function startWork(work: WorkInfo): boolean;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 32, "since": 9, "api_used": "\u662f", "lines": ["res = workScheduler.startWork(workInfo);\n        "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "workScheduler", "api_method_name": "stopWork", "api_method_all": "function stopWork(work: WorkInfo, needCancel?: boolean): boolean;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 2, "since": 9, "api_used": "\u662f", "lines": ["Res = workScheduler.stopWork(workInfo, false);\n "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "workScheduler", "api_method_name": "getWorkStatus", "api_method_all": "function getWorkStatus(workId: number, callback: AsyncCallback<WorkInfo>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 3, "since": 9, "api_used": "\u662f", "lines": ["nfo('WORK_SCHEDULER getWorkStatuscallback success,' + item + ' is:' + res", "      workScheduler.getWorkStatus(9, (err, res) => {\n            if (err)"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "workScheduler", "api_method_name": "getWorkStatus", "api_method_all": "function getWorkStatus(workId: number): Promise<WorkInfo>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 9, "api_used": "\u662f", "lines": ["      workScheduler.getWorkStatus(10).then((res) => {\n            for (le"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "workScheduler", "api_method_name": "obtainAllWorks", "api_method_all": "function obtainAllWorks(callback: AsyncCallback<void>): Array<WorkInfo>;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 9, "api_used": "\u662f", "lines": ["nfo('WORK_SCHEDULER obtainAllWorks callback success, data is:' + JSON.stri", "   * @tc.desc: test obtainAllWorks promise.\n     * @tc.type: FUNC\n     * @", "nfo('WORK_SCHEDULER obtainAllWorks promise success, data is:' + JSON.strin", "o('workschedulerLog obtainAllWorks promise failed, because:' + err.data);\n", "      workScheduler.obtainAllWorks((err, res) =>{\n            if (err) {\n "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "workScheduler", "api_method_name": "obtainAllWorks", "api_method_all": "function obtainAllWorks(): Promise<Array<WorkInfo>>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 1, "since": 9, "api_used": "\u662f", "lines": ["      workScheduler.obtainAllWorks().then((res) => {\n            console.i"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "workScheduler", "api_method_name": "stopAndClearWorks", "api_method_all": "function stopAndClearWorks(): boolean;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 2, "since": 9, "api_used": "\u662f", "lines": ["Res = workScheduler.stopAndClearWorks();\n            expe", "   * @tc.desc: test stopAndClearWorks.\n     * @tc.type: F"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "workScheduler", "api_method_name": "isLastWorkTimeOut", "api_method_all": "function isLastWorkTimeOut(workId: number, callback: AsyncCallback<void>): boolean;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 5, "since": 9, "api_used": "\u662f", "lines": ["   * @tc.desc: test isLastWorkTimeOut callback.\n     * @tc.type: FUNC\n     * ", "nfo('WORK_SCHEDULER isLastWorkTimeOut promise success, data is:' + res);\n    ", "nfo('WORK_SCHEDULER isLastWorkTimeOut callback success, data is:' + res);\n   ", "      workScheduler.isLastWorkTimeOut(14, (err, res) =>{\n            if (err)", "   * @tc.desc: test isLastWorkTimeOut promise.\n     * @tc.type: FUNC\n     * @"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "workScheduler", "api_method_name": "isLastWorkTimeOut", "api_method_all": "function isLastWorkTimeOut(workId: number): Promise<boolean>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 9, "api_used": "\u662f", "lines": ["      workScheduler.isLastWorkTimeOut(15)\n            .then(res => {\n        "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_all": "export interface WorkInfo {\n        \n        workId: number;\n        \n        bundleName: string;\n        \n        abilityName: string;\n        \n        isPersisted?: boolean;\n        \n        networkType?: NetworkType;\n        \n        isCharging?: boolean;\n        \n        chargerType?: ChargingType;\n        \n        batteryLevel?: number;\n        \n        batteryStatus?: BatteryStatus;\n        \n        storageRequest?: StorageRequest;\n        \n        repeatCycleTime?: number;\n        \n        isRepeat?: boolean;\n        \n        repeatCount?: number;\n        \n        isDeepIdle?: boolean;\n        \n        idleWaitTime?: number;\n    }", "api_method_name": "WorkInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "workId", "api_method_all": "workId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 34, "since": 9, "api_used": "\u662f", "lines": ["nfo = {\n            workId: 9,\n            bun", "nfo = {\n            workId: 10,\n            bu", "nfo = {\n            workId: -1,\n            bu", "nfo = {\n            workId: 7,\n            bun", "nfo = {\n            workId: 11,\n            bu", "nfo = {\n            workId: 8,\n            bun", "nfo = {\n            workId: 0,\n            bun", "nfo = {\n            workId: 12,\n            bu", "nfo = {\n            workId: 2,\n            bun", "nfo = {\n            workId: 5,\n            bun", "nfo = {\n            workId: 13,\n            bu", "nfo = {\n            workId: 3,\n            abi", "nfo = {\n            workId: 4,\n            bun", "nfo = {\n            workId: 6,\n            bun"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "bundleName", "api_method_all": "bundleName: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 60, "since": 0, "api_used": "\u662f", "lines": ["Id: 13,\n            bundleName: \"ohos.acts.resourc", "t BundleActiveState bundleName.\n     * @tc.type: F", "t BundleActiveState bundleName :' + res[0].bundleN", "est BundleStateInfo bundleName.\n     * @tc.type: F", "kId: 8,\n            bundleName: \"ohos.acts.resourc", "eStateInfo2 = {\n\t\t\t\tbundleName: 'www.baidu.com',\n\t", "kId: 9,\n            bundleName: \"ohos.acts.resourc", "----');\n        let bundleName = 'com.explace.devi", "eStateInfo1 = {\n\t\t\t\tbundleName: 'www.explace.com',", "kId: 0,\n            bundleName: \"ohos.acts.resourc", "kId: 7,\n            bundleName: \"ohos.acts.resourc", "StateInfo = {\n\t\t\t\t\t\tbundleName: 'www.explace.com',", "                    bundleName: \"com.continuoustas", "kId: 6,\n            bundleName: \"ohos.acts.resourc", "leState.isIdleState(bundleName, (err, res) => {\n  ", "dleName :' + res[0].bundleName)\n            } else", "kId: 5,\n            bundleName: \"ohos.acts.resourc", "Id: 12,\n            bundleName: \"ohos.acts.resourc", "Id: -1,\n            bundleName: \"ohos.acts.resourc", "kId: 4,\n            bundleName: \"ohos.acts.resourc", "leState.isIdleState(bundleName).then((res) => {\n  ", "Id: 10,\n            bundleName: \"ohos.acts.resourc", "Id: 11,\n            bundleName: \"ohos.acts.resourc", "ned) {\n\t\t\t\t\tres = [{bundleName: 'www.baidu.com'}];", "\t\t\t\t\tres = [{\n\t\t\t\t\t\tbundleName: 'www.explace.com',", "ned) {\n\t\t\t\t\tres = [{bundleName: 'www.explace.com'}", "est BundleStateInfo bundleName :' + res[0].bundleN"], "files": ["WorkScheduler.test.js", "ContinuousTaskJsunit.test.js", "DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "abilityName", "api_method_all": "abilityName: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 77, "since": 0, "api_used": "\u662f", "lines": ["tyName: \"com.mytest.abilityName\",\n\t\t\tisPersisted: t", "                    abilityName: \"com.continuoustas", "tyName: \"com.mytest.abilityName\",\n\t\t\tisPersisted: f", "tyName: \"com.mytest.abilityName\",\n\t\t\tisCharging: tr", "kId: 3,\n            abilityName: \"com.mytest.abilit", "ction\",\n            abilityName: \"com.mytest.abilit", "tyName: \"com.mytest.abilityName\",\n\t\t\tisCharging: fa", "tyName: \"com.mytest.abilityName\"\n        }\n        ", "tyName: \"com.mytest.abilityName\",\n\t\t\tisRepeat: fals", "tyName: \"com.mytest.abilityName\",\n\t\t\tisDeepIdle: tr", "tyName: \"com.mytest.abilityName\",\n\t\t\tisDeepIdle: fa", "tyName: \"com.mytest.abilityName\",\n            stora", "tyName: \"com.mytest.abilityName\",\n\t\t\tisRepeat: true", "tyName: \"com.mytest.abilityName\",\n\t\t\tbatteryLevel: "], "files": ["WorkScheduler.test.js", "ContinuousTaskJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "isPersisted", "api_method_all": "isPersisted?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["st.abilityName\",\n\t\t\tisPersisted: true\n        }\n   ", "st.abilityName\",\n\t\t\tisPersisted: false\n        }\n  "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "networkType", "api_method_all": "networkType?: NetworkType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["hedulerLog workInfo networkType :\" + workInfo.netwo", "kScheduler workInfo networkType\n     * @tc.type: FU", "st.abilityName\",\n\t\t\tnetworkType: workScheduler.Netw", "kType :\" + workInfo.networkType);\n        done();\n "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "isCharging", "api_method_all": "isCharging?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["st.abilityName\",\n\t\t\tisCharging: true\n        }\n   ", "st.abilityName\",\n\t\t\tisCharging: false\n        }\n  "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "chargerType", "api_method_all": "chargerType?: ChargingType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["st.abilityName\",\n\t\t\tchargerType: workScheduler.Char"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "batteryLevel", "api_method_all": "batteryLevel?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 5, "since": 0, "api_used": "\u662f", "lines": ["st.abilityName\",\n\t\t\tbatteryLevel: 80\n        }\n     ", "L_OKAY,\n            batteryLevel: 15\n        }\n     ", "st.abilityName\",\n\t\t\tbatteryLevel: 50\n        }\n     ", "st.abilityName\",\n\t\t\tbatteryLevel: 20\n        }\n     "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "batteryStatus", "api_method_all": "batteryStatus?: BatteryStatus", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["st.abilityName\",\n\t\t\tbatteryStatus: workScheduler.Batt"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "storageRequest", "api_method_all": "storageRequest?: StorageRequest", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 11, "since": 0, "api_used": "\u662f", "lines": ["yName\",\n            storageRequest: workScheduler.Stor", "ction\",\n            storageRequest: workScheduler.Stor"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "repeatCycleTime", "api_method_all": "repeatCycleTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["\tisRepeat: true,\n\t\t\trepeatCycleTime: 1800000,\n\t\t\trepeat", "isRepeat: false,\n\t\t\trepeatCycleTime: 2400000,\n\t\t\trepeat"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "isRepeat", "api_method_all": "isRepeat?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["st.abilityName\",\n\t\t\tisRepeat: true\n        }\n   ", "st.abilityName\",\n\t\t\tisRepeat: false,\n\t\t\trepeatCy", "st.abilityName\",\n\t\t\tisRepeat: false\n        }\n  ", "st.abilityName\",\n\t\t\tisRepeat: true,\n\t\t\trepeatCyc"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "repeatCount", "api_method_all": "repeatCount?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["leTime: 2400000,\n\t\t\trepeatCount: 3\n        }\n      ", "leTime: 1800000,\n\t\t\trepeatCount: 2\n        }\n      "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "isDeepIdle", "api_method_all": "isDeepIdle?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["st.abilityName\",\n\t\t\tisDeepIdle: true\n        }\n   ", "st.abilityName\",\n\t\t\tisDeepIdle: false\n        }\n  "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WorkInfo", "api_method_name": "idleWaitTime", "api_method_all": "idleWaitTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["st.abilityName\",\n\t\t\tidleWaitTime: 3000,\n        }\n  "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NetworkType", "api_method_all": "export enum NetworkType {\n        \n        NETWORK_TYPE_ANY = 0,\n        \n        NETWORK_TYPE_MOBILE,\n        \n        NETWORK_TYPE_WIFI,\n        \n        NETWORK_TYPE_BLUETOOTH,\n        \n        NETWORK_TYPE_WIFI_P2P,\n        \n        NETWORK_TYPE_ETHERNET\n    }", "api_method_name": "NetworkType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 7, "since": 9, "api_used": "\u662f", "lines": ["ue1 = workScheduler.NetworkType.NETWORK_TYPE_WIFI;\n", "ue1 = workScheduler.NetworkType.NETWORK_TYPE_WIFI_P", "ue1 = workScheduler.NetworkType.NETWORK_TYPE_ETHERN", "ue1 = workScheduler.NetworkType.NETWORK_TYPE_ANY;\n ", "ue1 = workScheduler.NetworkType.NETWORK_TYPE_BLUETO", "ue1 = workScheduler.NetworkType.NETWORK_TYPE_MOBILE", "Type: workScheduler.NetworkType.NETWORK_TYPE_ANY\n  "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NetworkType", "api_method_name": "NETWORK_TYPE_ANY", "api_method_all": "NETWORK_TYPE_ANY = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["heduler.NetworkType.NETWORK_TYPE_ANY\n        }\n        l", "heduler.NetworkType.NETWORK_TYPE_ANY;\n        expect(val"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NetworkType", "api_method_name": "NETWORK_TYPE_MOBILE", "api_method_all": "NETWORK_TYPE_MOBILE,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["heduler.NetworkType.NETWORK_TYPE_MOBILE;\n        expect(val"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NetworkType", "api_method_name": "NETWORK_TYPE_WIFI", "api_method_all": "NETWORK_TYPE_WIFI,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["heduler.NetworkType.NETWORK_TYPE_WIFI_P2P;\n        expect", "heduler.NetworkType.NETWORK_TYPE_WIFI;\n        expect(val"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NetworkType", "api_method_name": "NETWORK_TYPE_BLUETOOTH", "api_method_all": "NETWORK_TYPE_BLUETOOTH,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["heduler.NetworkType.NETWORK_TYPE_BLUETOOTH;\n        expect(val"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NetworkType", "api_method_name": "NETWORK_TYPE_WIFI_P2P", "api_method_all": "NETWORK_TYPE_WIFI_P2P,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["heduler.NetworkType.NETWORK_TYPE_WIFI_P2P;\n        expect(val"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ChargingType", "api_method_all": "export enum ChargingType {\n        \n        CHARGING_PLUGGED_ANY = 0,\n        \n        CHARGING_PLUGGED_AC,\n        \n        CHARGING_PLUGGED_USB,\n        \n        CHARGING_PLUGGED_WIRELESS\n    }", "api_method_name": "ChargingType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 8, "since": 9, "api_used": "\u662f", "lines": ["ue1 = workScheduler.ChargingType.CHARGING_PLUGGED_US", "kScheduler workInfo ChargingType\n     * @tc.type: FU", "ue1 = workScheduler.ChargingType.CHARGING_PLUGGED_WI", "Type: workScheduler.ChargingType.CHARGING_PLUGGED_AC", " :\" + workScheduler.ChargingType.CHARGING_PLUGGED_AC", "ue1 = workScheduler.ChargingType.CHARGING_PLUGGED_AC", "ue1 = workScheduler.ChargingType.CHARGING_PLUGGED_AN", "hedulerLog workInfo ChargingType :\" + workScheduler."], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ChargingType", "api_method_name": "CHARGING_PLUGGED_ANY", "api_method_all": "CHARGING_PLUGGED_ANY = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["eduler.ChargingType.CHARGING_PLUGGED_ANY;\n    expect(value1)"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ChargingType", "api_method_name": "CHARGING_PLUGGED_AC", "api_method_all": "CHARGING_PLUGGED_AC,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 3, "since": 0, "api_used": "\u662f", "lines": ["eduler.ChargingType.CHARGING_PLUGGED_AC;\n        expect(val", "eduler.ChargingType.CHARGING_PLUGGED_AC\n        }\n        l", "eduler.ChargingType.CHARGING_PLUGGED_AC);\n        done();\n "], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ChargingType", "api_method_name": "CHARGING_PLUGGED_USB", "api_method_all": "CHARGING_PLUGGED_USB,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["eduler.ChargingType.CHARGING_PLUGGED_USB;\n        expect(val"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BatteryStatus", "api_method_all": "export enum BatteryStatus {\n        \n        BATTERY_STATUS_LOW = 0,\n        \n        BATTERY_STATUS_OKAY,\n        \n        BATTERY_STATUS_LOW_OR_OKAY\n    }", "api_method_name": "BatteryStatus", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 7, "since": 9, "api_used": "\u662f", "lines": ["ue1 = workScheduler.BatteryStatus.BATTERY_STATUS_LOW;", "kScheduler workInfo BatteryStatus\n     * @tc.type: FU", " :\" + workScheduler.BatteryStatus.BATTERY_STATUS_LOW)", "ue1 = workScheduler.BatteryStatus.BATTERY_STATUS_LOW_", "atus: workScheduler.BatteryStatus.BATTERY_STATUS_LOW\n", "ue1 = workScheduler.BatteryStatus.BATTERY_STATUS_OKAY", "hedulerLog workInfo BatteryStatus :\" + workScheduler."], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BatteryStatus", "api_method_name": "BATTERY_STATUS_LOW", "api_method_all": "BATTERY_STATUS_LOW = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["duler.BatteryStatus.BATTERY_STATUS_LOW);\n        done();\n ", "duler.BatteryStatus.BATTERY_STATUS_LOW_OR_OKAY;\n        ex", "duler.BatteryStatus.BATTERY_STATUS_LOW;\n        expect(val", "duler.BatteryStatus.BATTERY_STATUS_LOW\n        }\n        l"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BatteryStatus", "api_method_name": "BATTERY_STATUS_OKAY", "api_method_all": "BATTERY_STATUS_OKAY,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["duler.BatteryStatus.BATTERY_STATUS_OKAY;\n        expect(val"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "StorageRequest", "api_method_all": "export enum StorageRequest {\n        \n        STORAGE_LEVEL_LOW = 0,\n        \n        STORAGE_LEVEL_OKAY,\n        \n        STORAGE_LEVEL_LOW_OR_OKAY\n    }", "api_method_name": "StorageRequest", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 14, "since": 9, "api_used": "\u662f", "lines": ["ue1 = workScheduler.StorageRequest.STORAGE_LEVEL_OKAY;", "ue1 = workScheduler.StorageRequest.STORAGE_LEVEL_LOW_O", "uest: workScheduler.StorageRequest.STORAGE_LEVEL_OKAY\n", "uest: workScheduler.StorageRequest.STORAGE_LEVEL_OKAY,", "ue1 = workScheduler.StorageRequest.STORAGE_LEVEL_LOW;\n"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "StorageRequest", "api_method_name": "STORAGE_LEVEL_LOW", "api_method_all": "STORAGE_LEVEL_LOW = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["uler.StorageRequest.STORAGE_LEVEL_LOW;\n        expect(val", "uler.StorageRequest.STORAGE_LEVEL_LOW_OR_OKAY;\n        ex"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "StorageRequest", "api_method_name": "STORAGE_LEVEL_OKAY", "api_method_all": "STORAGE_LEVEL_OKAY,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 12, "since": 0, "api_used": "\u662f", "lines": ["uler.StorageRequest.STORAGE_LEVEL_OKAY\n        }\n        l", "uler.StorageRequest.STORAGE_LEVEL_OKAY,\n            batter", "uler.StorageRequest.STORAGE_LEVEL_OKAY;\n        expect(val"], "files": ["WorkScheduler.test.js"], "is_white": " ", "desc": " "}]}