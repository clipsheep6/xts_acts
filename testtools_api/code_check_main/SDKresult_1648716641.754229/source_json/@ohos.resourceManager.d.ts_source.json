{"subsystem_ch": "\u5168\u7403\u5316\u5b50\u7cfb\u7edf", "subsystem_en": "global", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.resourceManager", "api": [{"api_class_name": "resourceManager", "api_method_all": "declare namespace resourceManager {\r\n\r\nexport enum Direction {\r\n    \r\n    DIRECTION_VERTICAL = 0,\r\n\r\n    \r\n    DIRECTION_HORIZONTAL = 1\r\n}\r\n\r\n\r\nexport enum DeviceType {\r\n    \r\n    DEVICE_TYPE_PHONE = 0x00,\r\n\r\n    \r\n    DEVICE_TYPE_TABLET = 0x01,\r\n\r\n    \r\n    DEVICE_TYPE_CAR = 0x02,\r\n\r\n    \r\n    DEVICE_TYPE_PC = 0x03,\r\n\r\n    \r\n    DEVICE_TYPE_TV = 0x04,\r\n\r\n    \r\n    DEVICE_TYPE_WEARABLE = 0x06\r\n}\r\n\r\n\r\nexport enum ScreenDensity {\r\n    \r\n    SCREEN_SDPI = 120,\r\n\r\n    \r\n    SCREEN_MDPI = 160,\r\n\r\n    \r\n    SCREEN_LDPI = 240,\r\n\r\n    \r\n    SCREEN_XLDPI = 320,\r\n\r\n    \r\n    SCREEN_XXLDPI = 480,\r\n\r\n    \r\n    SCREEN_XXXLDPI = 640\r\n}\r\n\r\n\r\nexport class Configuration {\r\n    \r\n    direction: Direction\r\n\r\n    \r\n    locale: string\r\n}\r\n\r\n\r\nexport class DeviceCapability {\r\n    \r\n    screenDensity: ScreenDensity\r\n\r\n    \r\n    deviceType: DeviceType\r\n}\r\n\r\n\r\nexport interface AsyncCallback<T> {\r\n    (err: Error, data: T): void;\r\n}\r\n\r\n\r\nexport function getResourceManager(callback: AsyncCallback<ResourceManager>): void;\r\n\r\n\r\nexport function getResourceManager(bundleName: string, callback: AsyncCallback<ResourceManager>): void;\r\n\r\n\r\nexport function getResourceManager(): Promise<ResourceManager>;\r\n\r\n\r\nexport function getResourceManager(bundleName: string): Promise<ResourceManager>;\r\n\r\n\r\nexport interface ResourceManager {\r\n    \r\n    getString(resId: number, callback: AsyncCallback<string>): void;\r\n\r\n    \r\n    getString(resId: number): Promise<string>;\r\n\r\n    \r\n    getStringArray(resId: number, callback: AsyncCallback<Array<string>>): void;\r\n\r\n    \r\n   getStringArray(resId: number): Promise<Array<string>>;\r\n\r\n    \r\n    getMedia(resId: number, callback: AsyncCallback<Uint8Array>): void;\r\n\r\n    \r\n    getMedia(resId: number): Promise<Uint8Array>;\r\n\r\n    \r\n   getMediaBase64(resId: number, callback: AsyncCallback<string>): void;\r\n\r\n    \r\n    getMediaBase64(resId: number): Promise<string>;\r\n\r\n    \r\n    getDeviceCapability(callback: AsyncCallback<DeviceCapability>): void;\r\n\r\n    \r\n    getDeviceCapability(): Promise<DeviceCapability>;\r\n\r\n    \r\n    getConfiguration(callback: AsyncCallback<Configuration>): void;\r\n\r\n    \r\n    getConfiguration(): Promise<Configuration>;\r\n\r\n    \r\n    getPluralString(resId: number, num: number, callback: AsyncCallback<string>): void;\r\n\r\n    \r\n    getPluralString(resId: number, num: number): Promise<string>;\r\n\r\n    \r\n    getRawFile(path: string, callback: AsyncCallback<Uint8Array>): void;\r\n\r\n    \r\n    getRawFile(path: string): Promise<Uint8Array>;\r\n\r\n    \r\n    getRawFileDescriptor(path: string, callback: AsyncCallback<RawFileDescriptor>): void;\r\n\r\n     \r\n    getRawFileDescriptor(path: string): Promise<RawFileDescriptor>;\r\n\r\n    \r\n    closeRawFileDescriptor(path: string, callback: AsyncCallback<void>): void;\r\n\r\n    \r\n     closeRawFileDescriptor(path: string): Promise<void>;\r\n\r\n    \r\n    release();\r\n}\r\n}", "api_method_name": "resourceManager", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": [" resmgr from '@ohos.resourceManager'\nimport {describe, "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Direction", "api_method_all": "export enum Direction {\r\n    \r\n    DIRECTION_VERTICAL = 0,\r\n\r\n    \r\n    DIRECTION_HORIZONTAL = 1\r\n}", "api_method_name": "Direction", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 2, "since": 6, "api_used": "\u662f", "lines": ["    cfg.direction = Direction.DIRECTION_VERTICAL;", "    cfg.direction = Direction.DIRECTION_HORIZONTA"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Direction", "api_method_name": "DIRECTION_VERTICAL", "api_method_all": "DIRECTION_VERTICAL = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["rection = Direction.DIRECTION_VERTICAL;\n                cf"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Direction", "api_method_name": "DIRECTION_HORIZONTAL", "api_method_all": "DIRECTION_HORIZONTAL = 1", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["rection = Direction.DIRECTION_HORIZONTAL;\n            })\n   "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceType", "api_method_all": "export enum DeviceType {\r\n    \r\n    DEVICE_TYPE_PHONE = 0x00,\r\n\r\n    \r\n    DEVICE_TYPE_TABLET = 0x01,\r\n\r\n    \r\n    DEVICE_TYPE_CAR = 0x02,\r\n\r\n    \r\n    DEVICE_TYPE_PC = 0x03,\r\n\r\n    \r\n    DEVICE_TYPE_TV = 0x04,\r\n\r\n    \r\n    DEVICE_TYPE_WEARABLE = 0x06\r\n}", "api_method_name": "DeviceType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 6, "since": 6, "api_used": "\u662f", "lines": ["    dc.deviceType = DeviceType.DEVICE_TYPE_TV;\n   ", "    dc.deviceType = DeviceType.DEVICE_TYPE_TABLET;", "    dc.deviceType = DeviceType.DEVICE_TYPE_PHONE;\n", "    dc.deviceType = DeviceType.DEVICE_TYPE_WEARABL", "    dc.deviceType = DeviceType.DEVICE_TYPE_PC;\n   ", "    dc.deviceType = DeviceType.DEVICE_TYPE_CAR;\n  "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceType", "api_method_name": "DEVICE_TYPE_PHONE", "api_method_all": "DEVICE_TYPE_PHONE = 0x00,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ceType = DeviceType.DEVICE_TYPE_PHONE;\n                dc"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceType", "api_method_name": "DEVICE_TYPE_TABLET", "api_method_all": "DEVICE_TYPE_TABLET = 0x01,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ceType = DeviceType.DEVICE_TYPE_TABLET;\n                dc"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceType", "api_method_name": "DEVICE_TYPE_CAR", "api_method_all": "DEVICE_TYPE_CAR = 0x02,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ceType = DeviceType.DEVICE_TYPE_CAR;\n                dc"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceType", "api_method_name": "DEVICE_TYPE_PC", "api_method_all": "DEVICE_TYPE_PC = 0x03,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ceType = DeviceType.DEVICE_TYPE_PC;\n                ex"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceType", "api_method_name": "DEVICE_TYPE_TV", "api_method_all": "DEVICE_TYPE_TV = 0x04,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ceType = DeviceType.DEVICE_TYPE_TV;\n                ex"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceType", "api_method_name": "DEVICE_TYPE_WEARABLE", "api_method_all": "DEVICE_TYPE_WEARABLE = 0x06", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ceType = DeviceType.DEVICE_TYPE_WEARABLE;\n                dc"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScreenDensity", "api_method_all": "export enum ScreenDensity {\r\n    \r\n    SCREEN_SDPI = 120,\r\n\r\n    \r\n    SCREEN_MDPI = 160,\r\n\r\n    \r\n    SCREEN_LDPI = 240,\r\n\r\n    \r\n    SCREEN_XLDPI = 320,\r\n\r\n    \r\n    SCREEN_XXLDPI = 480,\r\n\r\n    \r\n    SCREEN_XXXLDPI = 640\r\n}", "api_method_name": "ScreenDensity", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 6, "since": 6, "api_used": "\u662f", "lines": [" dc.screenDensity = ScreenDensity.SCREEN_LDPI;\n      ", " dc.screenDensity = ScreenDensity.SCREEN_XXXLDPI;\n   ", " dc.screenDensity = ScreenDensity.SCREEN_XXLDPI;\n    ", " dc.screenDensity = ScreenDensity.SCREEN_SDPI;\n      ", " dc.screenDensity = ScreenDensity.SCREEN_XLDPI;\n     ", " dc.screenDensity = ScreenDensity.SCREEN_MDPI;\n      "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScreenDensity", "api_method_name": "SCREEN_SDPI", "api_method_all": "SCREEN_SDPI = 120,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ity = ScreenDensity.SCREEN_SDPI;\n                dc"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScreenDensity", "api_method_name": "SCREEN_MDPI", "api_method_all": "SCREEN_MDPI = 160,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ity = ScreenDensity.SCREEN_MDPI;\n                dc"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScreenDensity", "api_method_name": "SCREEN_LDPI", "api_method_all": "SCREEN_LDPI = 240,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ity = ScreenDensity.SCREEN_LDPI;\n                dc"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScreenDensity", "api_method_name": "SCREEN_XLDPI", "api_method_all": "SCREEN_XLDPI = 320,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ity = ScreenDensity.SCREEN_XLDPI;\n                dc"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScreenDensity", "api_method_name": "SCREEN_XXLDPI", "api_method_all": "SCREEN_XXLDPI = 480,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ity = ScreenDensity.SCREEN_XXLDPI;\n                dc"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScreenDensity", "api_method_name": "SCREEN_XXXLDPI", "api_method_all": "SCREEN_XXXLDPI = 640", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ity = ScreenDensity.SCREEN_XXXLDPI;\n                dc"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Configuration", "api_method_all": "export class Configuration {\r\n    \r\n    direction: Direction\r\n\r\n    \r\n    locale: string\r\n}", "api_method_name": "Configuration", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 4, "since": 6, "api_used": "\u662f", "lines": ["})\n\n    \n    it('getConfiguration_test_001', 0, async", "})\n\n    \n    it('getConfiguration_test_002', 0, async", "\n            mgr.getConfiguration((error, cfg) => {\n ", "\n            mgr.getConfiguration().then(cfg => {\n   "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceCapability", "api_method_all": "export class DeviceCapability {\r\n    \r\n    screenDensity: ScreenDensity\r\n\r\n    \r\n    deviceType: DeviceType\r\n}", "api_method_name": "DeviceCapability", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 6, "since": 6, "api_used": "\u662f", "lines": ["})\n\n    \n    it('getDeviceCapability_test_001', 0, async", " * @tc.name test getDeviceCapability method in promise m", "\n            mgr.getDeviceCapability((error, dc) => {\n  ", "    console.log('getDeviceCapability_test_002 ' + dc);\n ", "\n            mgr.getDeviceCapability().then(dc => {\n    ", "e\n    */\n    it('getDeviceCapability_test_002', 0, async"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AsyncCallback", "api_method_all": "export interface AsyncCallback<T> {\r\n    (err: Error, data: T): void;\r\n}", "api_method_name": "AsyncCallback", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AsyncCallback", "api_method_name": "err", "api_method_all": "(err: Error, data: T): void", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 266, "since": 6, "api_used": "\u662f", "lines": [".log('i18n_test_preferredlanguage_restoreLa", "t initLen = initPreferredLang.length;\n    l", "value = I18n.addPreferredLanguage('zh');\n  ", " list = I18n.getPreferredLanguageList();\n  ", ".log('i18n_test_preferredlanguage_0100 ' + ", "ang ' + I18n.getPreferredLanguageList());\n ", "ction getCurrentPreferredLang(){\n        le", ".log('i18n_test_preferredlanguage_clearLang", "  it('i18n_test_preferredlanguage_0220', 0,", "redLanguage(initPreferredLang[j], j);\n     ", "value = I18n.addPreferredLanguage(initPrefe", ".log('i18n_test_preferredlanguage_beforeEac", ".log('i18n_test_preferredlanguage_0300 ' + ", "value = I18n.getPreferredLanguageList();\n  ", "  it('i18n_test_preferredlanguage_0200', 0,", ");\n\n    let initPreferredLang = I18n.getPre", "ame test the addPreferredLanguage interface", ".log('i18n_test_preferredlanguage_0220 ' + ", ".log('i18n_test_preferredlanguage_0200 ' + ", "the value of addPreferredLanguage method\n  ", "dLang = I18n.getPreferredLanguageList();\n  ", "em = I18n.removePreferredLanguage(currLen -", "h ' + getCurrentPreferredLang());\n    })\n\n ", "ang = getCurrentPreferredLang();\n        co", "  it('i18n_test_preferredlanguage_0300', 0,", "ue = I18n.removePreferredLanguage(par);\n   ", "Len = getCurrentPreferredLang().length;\n   ", "  it('i18n_test_preferredlanguage_0100', 0,", ".log('i18n_test_preferredlanguage_afterEach", "ng: ' + I18n.getPreferredLanguageList()\n   ", "value = I18n.addPreferredLanguage('abc');\n "], "files": ["I18n.test.js", "Resmgr.test.js", "Lang.test.js", "Perf.test.js", "Intl.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_all": "export interface ResourceManager {\r\n    \r\n    getString(resId: number, callback: AsyncCallback<string>): void;\r\n\r\n    \r\n    getString(resId: number): Promise<string>;\r\n\r\n    \r\n    getStringArray(resId: number, callback: AsyncCallback<Array<string>>): void;\r\n\r\n    \r\n   getStringArray(resId: number): Promise<Array<string>>;\r\n\r\n    \r\n    getMedia(resId: number, callback: AsyncCallback<Uint8Array>): void;\r\n\r\n    \r\n    getMedia(resId: number): Promise<Uint8Array>;\r\n\r\n    \r\n   getMediaBase64(resId: number, callback: AsyncCallback<string>): void;\r\n\r\n    \r\n    getMediaBase64(resId: number): Promise<string>;\r\n\r\n    \r\n    getDeviceCapability(callback: AsyncCallback<DeviceCapability>): void;\r\n\r\n    \r\n    getDeviceCapability(): Promise<DeviceCapability>;\r\n\r\n    \r\n    getConfiguration(callback: AsyncCallback<Configuration>): void;\r\n\r\n    \r\n    getConfiguration(): Promise<Configuration>;\r\n\r\n    \r\n    getPluralString(resId: number, num: number, callback: AsyncCallback<string>): void;\r\n\r\n    \r\n    getPluralString(resId: number, num: number): Promise<string>;\r\n\r\n    \r\n    getRawFile(path: string, callback: AsyncCallback<Uint8Array>): void;\r\n\r\n    \r\n    getRawFile(path: string): Promise<Uint8Array>;\r\n\r\n    \r\n    getRawFileDescriptor(path: string, callback: AsyncCallback<RawFileDescriptor>): void;\r\n\r\n     \r\n    getRawFileDescriptor(path: string): Promise<RawFileDescriptor>;\r\n\r\n    \r\n    closeRawFileDescriptor(path: string, callback: AsyncCallback<void>): void;\r\n\r\n    \r\n     closeRawFileDescriptor(path: string): Promise<void>;\r\n\r\n    \r\n    release();\r\n}", "api_method_name": "ResourceManager", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 30, "since": 6, "api_used": "\u662f", "lines": ["{\n        resmgr.getResourceManager('com.ohos.settings'", "})\n\n    \n    it('getResourceManager_test_004', 0, async", "{\n        resmgr.getResourceManager().then(mgr => {\n   ", "{\n        resmgr.getResourceManager((error, mgr) => {\n ", ");\n\n    \n    it('getResourceManager_test_001', 0, async", "})\n\n    \n    it('getResourceManager_test_002', 0, async", "})\n\n    \n    it('getResourceManager_test_003', 0, async"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getString", "api_method_all": "getString(resId: number, callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 11, "since": 6, "api_used": "\u662f", "lines": ["   })\n\n    \n    it('getStringArray_test_001', 0, async function (done", "> {\n            mgr.getStringArray(0x1000002, (err, value) => {\n     ", "    * @tc.name test getString method in callback mode\n    * @tc.desc ", "   })\n\n    \n    it('getString_test_002', 0, async function (done) {\n ", "       console.log('getString_test_003 ' + value);\n                ex", "> {\n            mgr.getString(0x1000000, (err, value) => {\n          ", "mode\n    */\n    it('getString_test_003', 0, async function (done) {\n ", "   })\n\n    \n    it('getString_test_001', 0, async function (done) {\n ", "   })\n\n    \n    it('getStringArray_test_002', 0, async function (done", "> {\n            mgr.getString(0x7000000, (err, value) => {\n          "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getString", "api_method_all": "getString(resId: number): Promise<string>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 2, "since": 6, "api_used": "\u662f", "lines": ["> {\n            mgr.getStringArray(0x1000002).then(value => {\n       ", "> {\n            mgr.getString(0x1000000).then(value => {\n            "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getStringArray", "api_method_all": "getStringArray(resId: number, callback: AsyncCallback<Array<string>>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 3, "since": 6, "api_used": "\u662f", "lines": ["   })\n\n    \n    it('getStringArray_test_002', 0, async function (done) {\n ", "   })\n\n    \n    it('getStringArray_test_001', 0, async function (done) {\n ", "> {\n            mgr.getStringArray(0x1000002, (err, value) => {\n          "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getStringArray", "api_method_all": "getStringArray(resId: number): Promise<Array<string>>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["> {\n            mgr.getStringArray(0x1000002).then(value => {\n            "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getMedia", "api_method_all": "getMedia(resId: number, callback: AsyncCallback<Uint8Array>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 6, "since": 6, "api_used": "\u662f", "lines": ["   })\n\n    \n    it('getMedia_test_001', 0, async function (done) {\n ", "   })\n\n    \n    it('getMedia_test_002', 0, async function (done) {\n ", "> {\n            mgr.getMediaBase64(0x1000004, (err, value) => {\n    ", "   })\n\n    \n    it('getMediaBase64_test_002', 0, async function (don", "> {\n            mgr.getMedia(0x1000004, (err, value) => {\n          ", "   })\n\n    \n    it('getMediaBase64_test_001', 0, async function (don"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getMedia", "api_method_all": "getMedia(resId: number): Promise<Uint8Array>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 2, "since": 6, "api_used": "\u662f", "lines": ["> {\n            mgr.getMedia(0x1000004).then(value => {\n            ", "> {\n            mgr.getMediaBase64(0x1000004).then(value => {\n      "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getMediaBase64", "api_method_all": "getMediaBase64(resId: number, callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 3, "since": 6, "api_used": "\u662f", "lines": ["   })\n\n    \n    it('getMediaBase64_test_001', 0, async function (done) {\n ", "   })\n\n    \n    it('getMediaBase64_test_002', 0, async function (done) {\n ", "> {\n            mgr.getMediaBase64(0x1000004, (err, value) => {\n          "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getMediaBase64", "api_method_all": "getMediaBase64(resId: number): Promise<string>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["> {\n            mgr.getMediaBase64(0x1000004).then(value => {\n            "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getDeviceCapability", "api_method_all": "getDeviceCapability(callback: AsyncCallback<DeviceCapability>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 5, "since": 6, "api_used": "\u662f", "lines": ["> {\n            mgr.getDeviceCapability((error, dc) => {\n                dc.scr", "       console.log('getDeviceCapability_test_002 ' + dc);\n            })\n      ", "mode\n    */\n    it('getDeviceCapability_test_002', 0, async function (done) {\n ", "    * @tc.name test getDeviceCapability method in promise mode\n    * @tc.desc g", "   })\n\n    \n    it('getDeviceCapability_test_001', 0, async function (done) {\n "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getDeviceCapability", "api_method_all": "getDeviceCapability(): Promise<DeviceCapability>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["> {\n            mgr.getDeviceCapability().then(dc => {\n                dc.scree"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getConfiguration", "api_method_all": "getConfiguration(callback: AsyncCallback<Configuration>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 3, "since": 6, "api_used": "\u662f", "lines": ["   })\n\n    \n    it('getConfiguration_test_001', 0, async function (done) {\n ", "   })\n\n    \n    it('getConfiguration_test_002', 0, async function (done) {\n ", "> {\n            mgr.getConfiguration((error, cfg) => {\n                cfg.d"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getConfiguration", "api_method_all": "getConfiguration(): Promise<Configuration>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["> {\n            mgr.getConfiguration().then(cfg => {\n                expect("], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getPluralString", "api_method_all": "getPluralString(resId: number, num: number, callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 7, "since": 6, "api_used": "\u662f", "lines": ["    * @tc.name test getPluralString method in callback mode\n    * @tc.desc ", "       console.log('getPluralString_test_002 ' + value);\n            })\n   ", "       console.log('getPluralString_test_001 ' + value);\n            })\n   ", "> {\n            mgr.getPluralString(0x1000003, 1, (error, value) => {\n     ", "mode\n    */\n    it('getPluralString_test_002', 0, async function (done) {\n ", "mode\n    */\n    it('getPluralString_test_001', 0, async function (done) {\n ", "    * @tc.name test getPluralString method in promise mode\n    * @tc.desc g"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getPluralString", "api_method_all": "getPluralString(resId: number, num: number): Promise<string>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["> {\n            mgr.getPluralString(0x1000003, 1).then(value => {\n         "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getRawFile", "api_method_all": "getRawFile(path: string, callback: AsyncCallback<Uint8Array>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 17, "since": 8, "api_used": "\u662f", "lines": ["mode\n    */\n    it('getRawFile_test_002', 0, async function (done) {\n ", " * @tc.desc get the getRawFile in promise mode\n    */\n    it('getRawFi", "       console.log('getRawFile_test_002 ' + value);\n            })\n   ", "       console.log('getRawFileDescriptor_test_002--'\n                +", "       console.log('getRawFile_test_001 ' + value);\n            })\n   ", "    * @tc.name test getRawFileDescriptor method in callback mode\n    *", "    * @tc.name test getRawFile method in callback mode\n    * @tc.desc ", "    * @tc.name test getRawFileDescriptor method in promise mode\n    * ", "mode\n    */\n    it('getRawFileDescriptor_test_002', 0, async function ", " * @tc.desc get the getRawFile in callback mode\n    */\n    it('getRawF", "    * @tc.name test getRawFile method in promise mode\n    * @tc.desc g", "mode\n    */\n    it('getRawFile_test_001', 0, async function (done) {\n ", "> {\n            mgr.getRawFile('rawfile/rawfiletest.xml', (error, valu", "> {\n            mgr.getRawFileDescriptor('rawfiletest.xml', (error, ra", "       console.log('getRawFileDescriptor_test_002--' + rawfile);\n     ", "       console.log('getRawFileDescriptor_test_001--'\n                 ", "mode\n    */\n    it('getRawFileDescriptor_test_001', 0, async function "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getRawFile", "api_method_all": "getRawFile(path: string): Promise<Uint8Array>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["> {\n            mgr.getRawFile('rawfile/rawfiletest.xml').then(value =", "> {\n            mgr.getRawFileDescriptor('rawfiletest.xml').then(rawfi"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getRawFileDescriptor", "api_method_all": "getRawFileDescriptor(path: string, callback: AsyncCallback<RawFileDescriptor>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["       console.log('getRawFileDescriptor_test_002--'\n                +'fd:' + ra", "mode\n    */\n    it('getRawFileDescriptor_test_002', 0, async function (done) {\n ", "       console.log('getRawFileDescriptor_test_002--' + rawfile);\n               ", "       console.log('getRawFileDescriptor_test_001--'\n                           ", "    * @tc.name test getRawFileDescriptor method in callback mode\n    * @tc.desc ", "mode\n    */\n    it('getRawFileDescriptor_test_001', 0, async function (done) {\n ", "    * @tc.name test getRawFileDescriptor method in promise mode\n    * @tc.desc g", "> {\n            mgr.getRawFileDescriptor('rawfiletest.xml', (error, rawfile) => "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "getRawFileDescriptor", "api_method_all": "getRawFileDescriptor(path: string): Promise<RawFileDescriptor>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["> {\n            mgr.getRawFileDescriptor('rawfiletest.xml').then(rawfile => {\n  "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "closeRawFileDescriptor", "api_method_all": "closeRawFileDescriptor(path: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 9, "since": 8, "api_used": "\u662f", "lines": ["       console.log('closeRawFileDescriptor_test_002--' + value);\n            })\n  ", "> {\n            mgr.closeRawFileDescriptor('rawfiletest.xml', (error, value) => {\n", " * @tc.desc get the closeRawFileDescriptor in promise mode\n    */\n    it('closeRaw", "    * @tc.name test closeRawFileDescriptor method in promise mode\n    * @tc.desc g", "mode\n    */\n    it('closeRawFileDescriptor_test_002', 0, async function (done) {\n ", "    * @tc.name test closeRawFileDescriptor method in callback mode\n    * @tc.desc ", "mode\n    */\n    it('closeRawFileDescriptor_test_001', 0, async function (done) {\n ", " * @tc.desc get the closeRawFileDescriptor in callback mode\n    */\n    it('closeRa", "       console.log('closeRawFileDescriptor_test_001--' + error);\n            })\n  "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "closeRawFileDescriptor", "api_method_all": "closeRawFileDescriptor(path: string): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["> {\n            mgr.closeRawFileDescriptor('rawfiletest.xml').then(value => {\n    "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResourceManager", "api_method_name": "release", "api_method_all": "release();", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": [" * @tc.desc get the release function\n    */\n   ", "tion\n    */\n    it('release_test_001', 0, async", "    * @tc.name test release method\n    * @tc.de", " })\n            mgr.release();\n        })\n     "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}]}