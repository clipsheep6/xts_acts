{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\application\\AbilityContext", "api": [{"api_class_name": "AbilityContext", "api_method_all": "export default class AbilityContext extends Context {\n    \n    abilityInfo: AbilityInfo;\n\n    \n    currentHapModuleInfo: HapModuleInfo;\n\n    \n    config: Configuration;\n\n    \n    startAbility(want: Want, callback: AsyncCallback<void>): void;\n    startAbility(want: Want, options: StartOptions, callback: AsyncCallback<void>): void;\n    startAbility(want: Want, options?: StartOptions): Promise<void>;\n\n    \n    startAbilityByCall(want: Want): Promise<Caller>;\n\n    \n    startAbilityWithAccount(want: Want, accountId: number, callback: AsyncCallback<void>): void;\n    startAbilityWithAccount(want: Want, accountId: number, options: StartOptions, callback: AsyncCallback<void>): void;\n    startAbilityWithAccount(want: Want, accountId: number, options?: StartOptions): Promise<void>;\n\n    \n    startAbilityForResult(want: Want, callback: AsyncCallback<AbilityResult>): void;\n    startAbilityForResult(want: Want, options: StartOptions, callback: AsyncCallback<AbilityResult>): void;\n    startAbilityForResult(want: Want, options?: StartOptions): Promise<AbilityResult>;\n\n    \n    startAbilityForResultWithAccount(want: Want, accountId: number, callback: AsyncCallback<AbilityResult>): void;\n    startAbilityForResultWithAccount(want: Want, accountId: number, options: StartOptions, callback: AsyncCallback<void>): void;\n    startAbilityForResultWithAccount(want: Want, accountId: number, options?: StartOptions): Promise<AbilityResult>;\n\n    \n    terminateSelf(callback: AsyncCallback<void>): void;\n    terminateSelf(): Promise<void>;\n\n    \n    terminateSelfWithResult(parameter: AbilityResult, callback: AsyncCallback<void>): void;\n    terminateSelfWithResult(parameter: AbilityResult): Promise<void>;\n\n    \n    connectAbility(want: Want, options: ConnectOptions): number;\n\n    \n    connectAbilityWithAccount(want: Want, accountId: number, options: ConnectOptions): number;\n\n    \n    disconnectAbility(connection: number, callback:AsyncCallback<void>): void;\n    disconnectAbility(connection: number): Promise<void>;\n\n    \n     setMissionLabel(label: string, callback:AsyncCallback<void>): void;\n     setMissionLabel(label: string): Promise<void>;\n\n     \n    requestPermissionsFromUser(permissions: Array<string>, requestCallback: AsyncCallback<PermissionRequestResult>) : void;\n    requestPermissionsFromUser(permissions: Array<string>) : Promise<PermissionRequestResult>;\n\n    \n    restoreWindowStage(contentStorage: ContentStorage) : void;\n\n}", "api_method_name": "AbilityContext", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbility", "api_method_all": "startAbility(want: Want, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 171, "since": 9, "api_used": "\u662f", "lines": ["ctAbility_test_0600 startAbility succeeded: ' + JSON.stringify(data));\n}", "wait featureAbility.startAbility({\n            want:\n            {\n     ", "ta = featureAbility.startAbility(str);\n  console.info('particleAbility_c", "\n    async function startAbility2() {\n      var str = {\n        \"want\": ", "ctAbility_test_0300 startAbility succeeded: ' + JSON.stringify(data));\n}", "ctAbility_test_0400 startAbility succeeded: ' + JSON.stringify(data));\n}", "ctAbility_test_0100 startAbility succeeded: ' + JSON.stringify(data));\n}", "ctAbility_test_0500 startAbility succeeded: ' + JSON.stringify(data));\n}", "     featureAbility.startAbility(\n            {\n                want:\n  ", "ccountFA_0700 start startAbility====>\");\n\n        var getinfo = await ap", "ARTability');\n      startAbility2();\n      done();\n    });\n\n    \n    it(", "ccountFA_0400 start startAbility====>\");\n\n        var getinfo = await ap", "     featureAbility.startAbility(StartAbilityParameter,(err,data)=>{\n   ", "ctAbility_test_0200 startAbility succeeded: ' + JSON.stringify(data));\n}", "ccountFA_0300 start startAbility====>\");\n\n        var getinfo = await ap", "wait featureAbility.startAbility(\n            {\n                want:\n  ", "ccountFA_0800 start startAbility====>\");\n\n        var getinfo = await ap", "ccountFA_0100 start startAbility====>\");\n\n        var procrssinfo = awai", "     featureAbility.startAbility(\n            {\n            bundleName: ", "le.debug(\"ACTS_====>startAbility err:\" + JSON.stringify(err));\n        }", "ccountFA_0500 start startAbility====>\");\n\n        var procrssinfo = awai"], "files": ["MissionManager.test.js", "index.js", "MangerAbilityJsunit.test.js", "LockNew.js", "ActsStServiceAbilityClientCaseTest.test.js", "FeatureAbilityJsunit.test.js", "taskSwitchJsunit.test.js", "ActsKillProcessTest.test.js", "ActsProcessManageJsTest.test.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "lanuageConfigapi7.test.js", "ActsGetWantAllTest.js", "AbilityDisableTest.js", "ActsAbilityLifecycleStateNewTest.test.js", "amsMissionSnapshotTest.test.js", "index.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbility", "api_method_all": "startAbility(want: Want, options: StartOptions, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 171, "since": 9, "api_used": "\u662f", "lines": ["ctAbility_test_0600 startAbility succeeded: ' + JSON.stringify(data));\n}", "wait featureAbility.startAbility({\n            want:\n            {\n     ", "ta = featureAbility.startAbility(str);\n  console.info('particleAbility_c", "\n    async function startAbility2() {\n      var str = {\n        \"want\": ", "ctAbility_test_0300 startAbility succeeded: ' + JSON.stringify(data));\n}", "ctAbility_test_0400 startAbility succeeded: ' + JSON.stringify(data));\n}", "ctAbility_test_0100 startAbility succeeded: ' + JSON.stringify(data));\n}", "ctAbility_test_0500 startAbility succeeded: ' + JSON.stringify(data));\n}", "     featureAbility.startAbility(\n            {\n                want:\n  ", "ccountFA_0700 start startAbility====>\");\n\n        var getinfo = await ap", "ARTability');\n      startAbility2();\n      done();\n    });\n\n    \n    it(", "ccountFA_0400 start startAbility====>\");\n\n        var getinfo = await ap", "     featureAbility.startAbility(StartAbilityParameter,(err,data)=>{\n   ", "ctAbility_test_0200 startAbility succeeded: ' + JSON.stringify(data));\n}", "ccountFA_0300 start startAbility====>\");\n\n        var getinfo = await ap", "wait featureAbility.startAbility(\n            {\n                want:\n  ", "ccountFA_0800 start startAbility====>\");\n\n        var getinfo = await ap", "ccountFA_0100 start startAbility====>\");\n\n        var procrssinfo = awai", "     featureAbility.startAbility(\n            {\n            bundleName: ", "le.debug(\"ACTS_====>startAbility err:\" + JSON.stringify(err));\n        }", "ccountFA_0500 start startAbility====>\");\n\n        var procrssinfo = awai"], "files": ["MissionManager.test.js", "index.js", "MangerAbilityJsunit.test.js", "LockNew.js", "ActsStServiceAbilityClientCaseTest.test.js", "FeatureAbilityJsunit.test.js", "taskSwitchJsunit.test.js", "ActsKillProcessTest.test.js", "ActsProcessManageJsTest.test.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "lanuageConfigapi7.test.js", "ActsGetWantAllTest.js", "AbilityDisableTest.js", "ActsAbilityLifecycleStateNewTest.test.js", "amsMissionSnapshotTest.test.js", "index.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbility", "api_method_all": "startAbility(want: Want, options?: StartOptions): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 3, "since": 9, "api_used": "\u662f", "lines": ["lity_featureAbility.startAbility(str).then((data) => {\n        console.i", "wait featureAbility.startAbility({ want }).then().catch();\n        await"], "files": ["getAbilityInfoJsunit.test.ets", "startFULL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbilityByCall", "api_method_all": "startAbilityByCall(want: Want): Promise<Caller>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbilityWithAccount", "api_method_all": "startAbilityWithAccount(want: Want, accountId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbilityWithAccount", "api_method_all": "startAbilityWithAccount(want: Want, accountId: number, options: StartOptions, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 4, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbilityWithAccount", "api_method_all": "startAbilityWithAccount(want: Want, accountId: number, options?: StartOptions): Promise<void>;", "api_type": "Promise", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbilityForResult", "api_method_all": "startAbilityForResult(want: Want, callback: AsyncCallback<AbilityResult>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 19, "since": 9, "api_used": "\u662f", "lines": ["     featureAbility.startAbilityForResult({\n            want: {\n                d", "     featureAbility.startAbilityForResult({\n            want:\n            {\n     ", "wait featureAbility.startAbilityForResult(\n            {\n                want:\n  ", "     featureAbility.startAbilityForResult({\n                want:\n               "], "files": ["FeatureAbilityJsunit.test.js", "ActsGetWantAllTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbilityForResult", "api_method_all": "startAbilityForResult(want: Want, options: StartOptions, callback: AsyncCallback<AbilityResult>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 19, "since": 9, "api_used": "\u662f", "lines": ["     featureAbility.startAbilityForResult({\n            want: {\n                d", "     featureAbility.startAbilityForResult({\n            want:\n            {\n     ", "wait featureAbility.startAbilityForResult(\n            {\n                want:\n  ", "     featureAbility.startAbilityForResult({\n                want:\n               "], "files": ["FeatureAbilityJsunit.test.js", "ActsGetWantAllTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbilityForResult", "api_method_all": "startAbilityForResult(want: Want, options?: StartOptions): Promise<AbilityResult>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbilityForResultWithAccount", "api_method_all": "startAbilityForResultWithAccount(want: Want, accountId: number, callback: AsyncCallback<AbilityResult>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbilityForResultWithAccount", "api_method_all": "startAbilityForResultWithAccount(want: Want, accountId: number, options: StartOptions, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 4, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "startAbilityForResultWithAccount", "api_method_all": "startAbilityForResultWithAccount(want: Want, accountId: number, options?: StartOptions): Promise<AbilityResult>;", "api_type": "Promise", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "terminateSelf", "api_method_all": "terminateSelf(callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 40, "since": 9, "api_used": "\u662f", "lines": [".log(\"EntryAbility2 terminateSelf windowStage error: \" + JSON.stringify(e", ".log(\"EntryAbility3 terminateSelf windowStage data: \" + JSON.stringify(da", "     featureAbility.terminateSelf((err, data)=>{\n            console.debu", "icationMainAbility2 terminateSelf\");\n            featureAbility.terminate", ";\n//            var terminateSelf =\n            for (var i = 0;i < data.l", ".log(\"EntryAbility4 terminateSelf windowStage error: \" + JSON.stringify(e", "icationMainAbility2 terminateSelf data\uff1a\" + JSON.stringify(data) )\n       ", "wait featureAbility.terminateSelf();\n    },\n    onReady() {\n        conso", "     featureAbility.terminateSelfWithResult(\n                            ", ".log(\"EntryAbility3 terminateSelf windowStage error: \" + JSON.stringify(e", "     featureAbility.terminateSelf();\n        done();\n    }, gSetTimeout);", "wait featureAbility.terminateSelfWithResult(\n            {\n              ", "le.log(\"Application terminateSelf data\uff1a\" + JSON.stringify(error) )\n      ", "     featureAbility.terminateSelf();\n            done();\n        }, gSetT", ".log(\"EntryAbility4 terminateSelf windowStage data: \" + JSON.stringify(da", ".log(\"EntryAbility2 terminateSelf windowStage data: \" + JSON.stringify(da", "     featureAbility.terminateSelf(\n            async (err, data)=>{\n     ", "icationMainAbility2 terminateSelf error\uff1a\" + JSON.stringify(error) )\n     ", "le.log(\"Application terminateSelf data\uff1a\" + JSON.stringify(data) )\n       ", "     featureAbility.terminateSelf(\n            (err, data)=>{\n           "], "files": ["ActsStServiceAbilityClientCaseTest.test.js", "ActsDataAbilityJsTest.test.js", "ActsAbilityDelegatorCaseTest.test.js", "app.js", "index.js", "AbilityDisableTest.js", "ActsAbilityLifecycleStateNewTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "terminateSelf", "api_method_all": "terminateSelf(): Promise<void>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 13, "since": 9, "api_used": "\u662f", "lines": ["ilityFeatureAbility.terminateSelf().then((data)=>{\n                consol", "     featureAbility.terminateSelf().then((data)=>{\n                consol", "       this.content.terminateSelf().then((data)=>{\n                consol", "     featureAbility.terminateSelf().then((data) => {\n        console.log(", "     featureAbility.terminateSelf().then(() => {\n                console."], "files": ["app.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "terminateSelfWithResult", "api_method_all": "terminateSelfWithResult(parameter: AbilityResult, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 6, "since": 9, "api_used": "\u662f", "lines": ["wait featureAbility.terminateSelfWithResult(\n            {\n                resultCo", "     featureAbility.terminateSelfWithResult(\n                                {\n    ", "     featureAbility.terminateSelfWithResult(\n                            {\n        "], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "terminateSelfWithResult", "api_method_all": "terminateSelfWithResult(parameter: AbilityResult): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "connectAbility", "api_method_all": "connectAbility(want: Want, options: ConnectOptions): number;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 14, "since": 9, "api_used": "\u662f", "lines": ["d)\n      Button('disconnectAbility_promise')\n        .", ");\n      Button('disconnectAbility_callback')\n        ", "fo('particleAbility_connectAbility_test_0300 startAbil", "  featureAbility.disconnectAbility(mConnIdJsAsyncCallb", "fo('particleAbility_connectAbility_test_0200 startAbil", "fo('particleAbility_connectAbility_test_0100 startAbil", "ck = featureAbility.connectAbility(\n                {\n", "viceAbility_1400 disconnectAbility err====>\"\n         ", "viceAbility_0600 disconnectAbility err====>\"\n         ", "fo('particleAbility_connectAbility_test_0600 startAbil", "fo('particleAbility_connectAbility_test_0400 startAbil", "fo('particleAbility_connectAbility_test_0500 startAbil"], "files": ["ActsStServiceAbilityClientCaseTest.test.js", "index.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "connectAbilityWithAccount", "api_method_all": "connectAbilityWithAccount(want: Want, accountId: number, options: ConnectOptions): number;", "api_type": "", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "disconnectAbility", "api_method_all": "disconnectAbility(connection: number, callback:AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 6, "since": 9, "api_used": "\u662f", "lines": ["ServiceAbility_0600 disconnectAbility err====>\"\n                             ", "Bold)\n      Button('disconnectAbility_promise')\n        .fontSize(40)\n       ", "     featureAbility.disconnectAbility(mConnIdJsAsyncCallback, (err) => {\n    ", "ServiceAbility_1400 disconnectAbility err====>\"\n                             ", "  });\n      Button('disconnectAbility_callback')\n        .fontSize(40)\n      "], "files": ["ActsStServiceAbilityClientCaseTest.test.js", "index.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "disconnectAbility", "api_method_all": "disconnectAbility(connection: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "setMissionLabel", "api_method_all": "setMissionLabel(label: string, callback:AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "setMissionLabel", "api_method_all": "setMissionLabel(label: string): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "requestPermissionsFromUser", "api_method_all": "requestPermissionsFromUser(permissions: Array<string>, requestCallback: AsyncCallback<PermissionRequestResult>) : void;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 2, "since": 9, "api_used": "\u662f", "lines": [");\n\n        context.requestPermissionsFromUser([], 1,\n            ", "0\n    //  @tc.name: requestPermissionsFromUser : Requests certain "], "files": ["ContextJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "requestPermissionsFromUser", "api_method_all": "requestPermissionsFromUser(permissions: Array<string>) : Promise<PermissionRequestResult>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "restoreWindowStage", "api_method_all": "restoreWindowStage(contentStorage: ContentStorage) : void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "abilityInfo", "api_method_all": "abilityInfo: AbilityInfo", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 11, "since": 9, "api_used": "\u662f", "lines": ["s length : \" + data.abilityInfos.length);\n        c", "bilityInfo(msg,data.abilityInfos[0]);\n\n          ex", "(Array.isArray(data.abilityInfos)).assertEqual(true", "s length : \" + data.abilityInfos.length);\n         ", "s length : \" + data.abilityInfos.length);\n      con", "\"checkHapModuleInfo abilityInfos length : \" + data.", "bilityInfo(msg,data.abilityInfos[0]);\n      expect("], "files": ["getHapModuleInfoJsunit_app1.test.ets", "FeatureAbilityJsunit.test.js", "getHapModuleInfoJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "currentHapModuleInfo", "api_method_all": "currentHapModuleInfo: HapModuleInfo", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityContext", "api_method_name": "config", "api_method_all": "config: Configuration", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 358, "since": 9, "api_used": "\u662f", "lines": [".getDefaultService('config')\n        configSer", ".getDefaultService('config')\n            confi", "end);\n        const configService = core.getDe", ".getDefaultService('config');\n        console.", " \n            const configService = core.getDe", "onfig')\n            configService.setConfig(th", "it()\n\n        const configService = core.getDe", "rameters));\n        configService.setConfig(Wa", "\n\n            const configService = core.getDe", "nit()\n        const configService = core.getDe", "e('config')\n        configService.setConfig(th"], "files": ["FormFuzzArray.test.js", "FormFuzzFunction.test.js", "FormFuzzString.test.js", "FormFuzzNum.test.js", "FeatureAbilityJsunit.test.js", "FormsOneAndTwoJsunit.test.js", "FormFuzzUndefined.test.js", "FormFuzzObject.test.js", "FormFuzzBool.test.js", "FormFuzzNull.test.js", "index.js", "lanuageConfigapi7.test.js", "index.ets"], "is_white": " ", "desc": " "}]}