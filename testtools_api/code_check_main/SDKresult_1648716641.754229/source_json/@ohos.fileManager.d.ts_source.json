{"subsystem_ch": "\u6587\u4ef6\u5b58\u50a8\u5b50\u7cfb\u7edf", "subsystem_en": "storage", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.fileManager", "api": [{"api_class_name": "filemanager", "api_method_all": "declare namespace filemanager {\n    export { listFile };\n    export { getRoot };\n    export { createFile };\n    export { FileInfo };\n    export { DevInfo };\n}", "api_method_name": "filemanager", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 101, "since": 0, "api_used": "\u662f", "lines": ["", "      }\n      await filemanager.getRoot(options);\n ", "    let uri = await filemanager.createFile(path, na", ") {\n    try {\n      filemanager.getRoot(function(er", "t fileInfos = await filemanager.listFile(path, \"fil", "1);\n  });\n\n  \n  it(\"filemanager_test_get_root_async", "manager from '@ohos.filemanager';\nimport {describe,", "\n      console.log(\"filemanager_test_get_root_async", "t fileInfos = await filemanager.getRoot();\n      ex", "    }\n      }\n      filemanager.getRoot(options,fun", " }\n  });\n\n  \n   it(\"filemanager_test_get_root_async", "  }\n  });\n\n  \n  it(\"filemanager_test_createfile_asy", "  }\n  });\n\n  \n  it(\"filemanager_test_list_file_asyn", "  }\n  });\n\n  \n  it(\"filemanager_test_get_root_async", "D = null;\ndescribe(\"filemanager_test\", function () ", "fset:2\n    };\n      filemanager.listFile(path, \"fil", "('ohos.acts.storage.filemanager onCreate');\n  },\n  ", "\n      console.log(\"filemanager_test_list_file_asyn", "('ohos.acts.storage.filemanager onDestroy');\n  }\n};", "t fileInfos = await filemanager.listFile(path, \"ima", "  try {\n      await filemanager.listFile();\n    } c", " }\n  });\n\n  \n   it(\"filemanager_test_list_file_asyn", "E_ROOT;\n      await filemanager.listFile(path, \" \")", "('ohos.acts.storage.filemanager', 0, 100);\n    toke", "nt:2\n      };\n      filemanager.listFile(path, \"fil"], "files": ["filemanager.test.js", "app.js", "List.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "FileInfo", "api_method_all": "declare interface FileInfo {\n    \n    name: string;\n    \n    path: string;\n    \n    type: string;\n    \n    size: number;\n    \n    addedTime: number;\n    \n    modifiedTime: number;\n}", "api_method_name": "FileInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FileInfo", "api_method_name": "name", "api_method_all": "name: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 756, "since": 9, "api_used": "\u662f", "lines": ["nSync_1600\n   * @tc.name fileio_test_open_01", "nSync_2500\n   * @tc.name fileio_test_open_02", "nSync_3600\n   * @tc.name fileio_test_open_03", "nSync_1500\n   * @tc.name fileio_test_open_01", "nSync_0800\n   * @tc.name fileio_test_open_sy", "f API, openSync(filename too long).\n   */\n  ", "nSync_1900\n   * @tc.name fileio_test_open_01", "nSync_0400\n   * @tc.name fileio_test_open_sy", "nSync_3800\n   * @tc.name fileio_test_open_03", "nSync_1400\n   * @tc.name fileio_test_open_01", "nSync_0180\n   * @tc.name FileIo_test_error_0", "nSync_0220\n   * @tc.name FileIo_test_error_0", "nSync_0160\n   * @tc.name FileIo_test_error_0", "nSync_2700\n   * @tc.name fileio_test_open_02", "nSync_0600\n   * @tc.name fileio_test_open_sy", "nSync_2600\n   * @tc.name fileio_test_open_02", "nSync_3700\n   * @tc.name fileio_test_open_03", "nSync_1000\n   * @tc.name fileio_test_open_sy", "nSync_3000\n   * @tc.name fileio_test_open_03", "nSync_1700\n   * @tc.name fileio_test_open_01", "nSync_0210\n   * @tc.name FileIo_test_error_0", "nSync_0700\n   * @tc.name fileio_test_open_sy", "nSync_3500\n   * @tc.name fileio_test_open_03", "nSync_0300\n   * @tc.name fileio_test_open_sy", "eSync_0000\n   * @tc.name fileio_test_close_s", "nSync_0200\n   * @tc.name FileIo_test_error_0", "p_openSync\n   * @tc.name fileioPerformance_p", "nSync_0200\n   * @tc.name fileio_test_open_sy", "nSync_3200\n   * @tc.name fileio_test_open_03", "nSync_0900\n   * @tc.name fileio_test_open_sy", "nSync_2800\n   * @tc.name fileio_test_open_02", "nSync_3300\n   * @tc.name fileio_test_open_03", "nSync_0190\n   * @tc.name FileIo_test_error_0", "nSync_1800\n   * @tc.name fileio_test_open_01", "nSync_0150\n   * @tc.name FileIo_test_error_0", "nSync_2400\n   * @tc.name fileio_test_open_02", "nSync_2200\n   * @tc.name fileio_test_open_02", "p_copyFile\n   * @tc.name fileioPerformance_p", "sSync_0000\n   * @tc.name fileio_test_access_", "nSync_3400\n   * @tc.name fileio_test_open_03", "nSync_2300\n   * @tc.name fileio_test_open_02", "nSync_0170\n   * @tc.name FileIo_test_error_0", "_List_1500\n   * @tc.name File_List_015\n   * ", "nSync_0500\n   * @tc.name fileio_test_open_sy", "eSync_0100\n   * @tc.name fileio_test_close_s", "f API, openSync(filename has special charact", "nSync_2100\n   * @tc.name fileio_test_open_02", "nSync_2900\n   * @tc.name fileio_test_open_02", "nSync_0100\n   * @tc.name fileio_test_open_sy", "nSync_3100\n   * @tc.name fileio_test_open_03"], "files": ["List.test.js", "FileIODirent.test.js", "securitylabel.test.js", "FileIOStat.test.js", "createWatcher.test.js", "FileIO.test.js", "FileVirtualPath.test.js", "lstat.test.js", "FileIOStream.test.js", "fstat.test.js", "FileIOError.test.js", "File.test.js", "StorageStatistics.test.js", "write.test.js", "all.test.js", "VolumeManager.test.js", "filemanager.test.js", "read.test.js", "stat.test.js", "rename.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "FileInfo", "api_method_name": "path", "api_method_all": "path: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4065, "since": 9, "api_used": "\u662f", "lines": ["on fileToWriteOnly(fpath) {\n  try {\n    let ", "n prepareEmptyFile(fpath) {\n  try {\n    let ", " = fileio.openSync(fpath, 0o2)\n    fileio.fc", "ction prepareFile1(fpath, content) {\n  try {", "ction () {\n    let dpath = nextFileName('fil", "ction () {\n    let dpath = fileName('fileio_", "fileToReadAndWrite(fpath) {\n  try {\n    let ", "';\n    let fpath = dpath + '/file_test_error", " = fileio.openSync(fpath, 0o1)\n    fileio.fc", "ion fileToReadOnly(fpath) {\n  try {\n    let ", "opyFileSync(fpath, fpathTarget) !== null).as", "(fileio.accessSync(fpath) !== null).assertTr", "n (done) {\n    let dpath = fileName('file_te", "n (done) {\n    let fpath = fileName('file_te", "0') + 'd';\n    let fpath = dpath + '/file_te", "t(fileio.mkdirSync(dpath) !== null).assertTr", " = fileio.openSync(fpath, 0o102, 0o777)\n    ", "sole.log('file:' + fpath)\n    console.log('f", "expect(prepareFile(fpath, FILE_CONTENT)).ass", "o.createStreamSync(fpath, 'r+');\n      expec", "9') + 'd';\n    let fpath = dpath + '/file_te", "m.createStreamSync(fpath, 'r+')\n    expect(s", "ileio.copyFileSync(fpath, fpathTarget) !== n", " = fileio.openSync(fpath, 0o102, 0o666)\n    ", "t_error');\n    let fpathTarget = appName('fi", "ion getFileTextLen(fpath) {\n  let ss\n  try {", "sole.log('file:' + fpath)\n    console.log('s", " = fileio.openSync(fpath, 0o102, 0o777);\n   ", "ction () {\n    let fpath = nextFileName('fil", "nction prepareFile(fpath, content) {\n  try {", " = fileio.openSync(fpath);\n      expect(fd !", "nction isFileExist(fpath) {\n  try {\n    expe"], "files": ["symlink.test.js", "FileIODirent.test.js", "mkdir_rmdir.test.js", "open_close.test.js", "fsync.test.js", "securitylabel.test.js", "FileIOStat.test.js", "createWatcher.test.js", "Common.js", "FileIO.test.js", "hash.test.js", "createStream.test.js", "FileVirtualPath.test.js", "FileIODir.test.js", "fchmod.test.js", "lstat.test.js", "open.test.js", "FileIOStream.test.js", "fstat.test.js", "ftruncate.test.js", "posix_fallocate.test.js", "unlink.test.js", "FileIOError.test.js", "access.test.js", "copyFile.test.js", "lseek.test.js", "mkdtemp.test.js", "write.test.js", "all.test.js", "fdopenStream.test.js", "opendir_close.test.js", "chown.test.js", "fchown.test.js", "File.test.js", "chmod.test.js", "fdatasync.test.js", "VolumeManager.test.js", "rmdir.test.js", "lchown.test.js", "filemanager.test.js", "truncate.test.js", "read.test.js", "stat.test.js", "close.test.js", "FileError.test.js", "rename.test.js", "flush.test.js", "readtext.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "FileInfo", "api_method_name": "type", "api_method_all": "type: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 273, "since": 9, "api_used": "\u662f", "lines": ["         let bool = typeof(dd.readSync());\n ", "path);\n      expect(typeof(stat.ino) == 'num", "path);\n      expect(typeof(stat.size) == 'nu", " try {\n      expect(typeof(fileio.mkdirSync(", "path);\n      expect(typeof(stat.isDirectory(", "path);\n      expect(typeof(stat.isSymbolicLi", "path);\n      expect(typeof(stat.isFile()) ==", "path);\n      expect(typeof(stat.mtime) == 'n", "path);\n      expect(typeof(stat.isFIFO()) ==", "path);\n      expect(typeof(stat.mode) == 'nu", "path);\n      expect(typeof(stat.ctime) == 'n", "path);\n      expect(typeof(stat.dev) == 'num", "path);\n      expect(typeof(stat.nlink) == 'n", "   });\n      expect(typeof(res) == 'number')", "path);\n      expect(typeof(stat.isSocket()) ", "Num(val) {\n  return typeof val === 'number' ", "path);\n      expect(typeof(stat.atime) == 'n", "path);\n      expect(typeof(stat.isCharacterD", "ef = Object.getPrototypeOf(global) || global", "path);\n      expect(typeof(stat.blksize) == ", "ean(val) {\n  return typeof val == 'boolean';", "path);\n      expect(typeof(stat.gid) == 'num", "ize MEDIUM\n   * @tc.type Function\n   * @tc.l", "path);\n      expect(typeof(stat.isBlockDevic", "ing(str) {\n  return typeof str == \"string\" &", "TENT);\n      expect(typeof(res) == 'number')", "MEDIUM(\u4e2d\u578b)\n   * @tc.type Function\n   * @tc.l", "ng(str) {\n  return (typeof str == 'string') ", "path);\n      expect(typeof(stat.rdev) == 'nu", "path);\n      expect(typeof(stat.blocks) == '", "path);\n      expect(typeof(stat.uid) == 'num"], "files": ["filemanager.test.js", "File.test.js", "write.test.js", "all.test.js", "FileIODir.test.js", "read.test.js", "stat.test.js", "lstat.test.js", "securitylabel.test.js", "FileIOStat.test.js", "fstat.test.js", "index.js", "VolumeManager.test.js", "Common.js", "FileIO.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "FileInfo", "api_method_name": "size", "api_method_all": "size: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 257, "since": 0, "api_used": "\u662f", "lines": ["pect(typeof(stat.blksize) == 'number').asser", "fileio_test_stat_blksize_000 has failed for ", "e('fileio_test_stat_size_000');\n    expect(p", "directory.\n   * @tc.size MEDIUM\n   * @tc.typ", "interface.\n   * @tc.size MEDIUM\n   * @tc.typ", " interface\n   * @tc.size MEDIUM(\u4e2d\u578b)\n   * @tc", "olic link.\n   * @tc.size MEDIUM\n   * @tc.typ", "xpect(isIntNum(stat.size)).assertTrue();\n   ", " expect(typeof(stat.size) == 'number').asser", "g('fileio_test_stat_size_000 has failed for ", "t('fileio_test_stat_size_000', 0, async func", " variable.\n   * @tc.size MEDIUM\n   * @tc.typ", "e.log('fileio_fstat_size_000 has failed for ", " a socket.\n   * @tc.size MEDIUM\n   * @tc.typ", "al device.\n   * @tc.size MEDIUM\n   * @tc.typ", "eio.statSync(fpath).size == 10).assertTrue()", "fileio_test_stat_blksize_000', 0, async func", "ass Lstat.\n   * @tc.size MEDIUM\n   * @tc.typ", "fileio_test_stat_blksize_000');\n    expect(p", "eName('fileio_fstat_size_000');\n    expect(p", "rmal file.\n   * @tc.size MEDIUM\n   * @tc.typ", " fileio_fstat_async_size_000\n   * @tc.desc T", "ew ArrayBuffer(stat.size));\n      expect(len", "ync model.\n   * @tc.size MEDIUM\n   * @tc.typ", "as a FIFO.\n   * @tc.size MEDIUM\n   * @tc.typ", "\n  it('fileio_fstat_size_000', 0, async func"], "files": ["filemanager.test.js", "File.test.js", "StorageStatistics.test.js", "write.test.js", "all.test.js", "truncate.test.js", "read.test.js", "stat.test.js", "lstat.test.js", "securitylabel.test.js", "fstat.test.js", "FileIOStat.test.js", "VolumeManager.test.js", "FileIO.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "FileInfo", "api_method_name": "addedTime", "api_method_all": "addedTime: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FileInfo", "api_method_name": "modifiedTime", "api_method_all": "modifiedTime: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DevInfo", "api_method_all": "declare interface DevInfo {\n    \n     name: string;\n }", "api_method_name": "DevInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DevInfo", "api_method_name": "name", "api_method_all": "name: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 756, "since": 9, "api_used": "\u662f", "lines": ["nSync_1600\n   * @tc.name fileio_test_open_01", "nSync_2500\n   * @tc.name fileio_test_open_02", "nSync_3600\n   * @tc.name fileio_test_open_03", "nSync_1500\n   * @tc.name fileio_test_open_01", "nSync_0800\n   * @tc.name fileio_test_open_sy", "f API, openSync(filename too long).\n   */\n  ", "nSync_1900\n   * @tc.name fileio_test_open_01", "nSync_0400\n   * @tc.name fileio_test_open_sy", "nSync_3800\n   * @tc.name fileio_test_open_03", "nSync_1400\n   * @tc.name fileio_test_open_01", "nSync_0180\n   * @tc.name FileIo_test_error_0", "nSync_0220\n   * @tc.name FileIo_test_error_0", "nSync_0160\n   * @tc.name FileIo_test_error_0", "nSync_2700\n   * @tc.name fileio_test_open_02", "nSync_0600\n   * @tc.name fileio_test_open_sy", "nSync_2600\n   * @tc.name fileio_test_open_02", "nSync_3700\n   * @tc.name fileio_test_open_03", "nSync_1000\n   * @tc.name fileio_test_open_sy", "nSync_3000\n   * @tc.name fileio_test_open_03", "nSync_1700\n   * @tc.name fileio_test_open_01", "nSync_0210\n   * @tc.name FileIo_test_error_0", "nSync_0700\n   * @tc.name fileio_test_open_sy", "nSync_3500\n   * @tc.name fileio_test_open_03", "nSync_0300\n   * @tc.name fileio_test_open_sy", "eSync_0000\n   * @tc.name fileio_test_close_s", "nSync_0200\n   * @tc.name FileIo_test_error_0", "p_openSync\n   * @tc.name fileioPerformance_p", "nSync_0200\n   * @tc.name fileio_test_open_sy", "nSync_3200\n   * @tc.name fileio_test_open_03", "nSync_0900\n   * @tc.name fileio_test_open_sy", "nSync_2800\n   * @tc.name fileio_test_open_02", "nSync_3300\n   * @tc.name fileio_test_open_03", "nSync_0190\n   * @tc.name FileIo_test_error_0", "nSync_1800\n   * @tc.name fileio_test_open_01", "nSync_0150\n   * @tc.name FileIo_test_error_0", "nSync_2400\n   * @tc.name fileio_test_open_02", "nSync_2200\n   * @tc.name fileio_test_open_02", "p_copyFile\n   * @tc.name fileioPerformance_p", "sSync_0000\n   * @tc.name fileio_test_access_", "nSync_3400\n   * @tc.name fileio_test_open_03", "nSync_2300\n   * @tc.name fileio_test_open_02", "nSync_0170\n   * @tc.name FileIo_test_error_0", "_List_1500\n   * @tc.name File_List_015\n   * ", "nSync_0500\n   * @tc.name fileio_test_open_sy", "eSync_0100\n   * @tc.name fileio_test_close_s", "f API, openSync(filename has special charact", "nSync_2100\n   * @tc.name fileio_test_open_02", "nSync_2900\n   * @tc.name fileio_test_open_02", "nSync_0100\n   * @tc.name fileio_test_open_sy", "nSync_3100\n   * @tc.name fileio_test_open_03"], "files": ["List.test.js", "FileIODirent.test.js", "securitylabel.test.js", "FileIOStat.test.js", "createWatcher.test.js", "FileIO.test.js", "FileVirtualPath.test.js", "lstat.test.js", "FileIOStream.test.js", "fstat.test.js", "FileIOError.test.js", "File.test.js", "StorageStatistics.test.js", "write.test.js", "all.test.js", "VolumeManager.test.js", "filemanager.test.js", "read.test.js", "stat.test.js", "rename.test.js"], "is_white": " ", "desc": " "}]}