{"subsystem_ch": "\u8d26\u53f7\u5b50\u7cfb\u7edf", "subsystem_en": "account", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.account.osAccount", "api": [{"api_class_name": "osAccount", "api_method_all": "declare namespace osAccount {\n    \n    function getAccountManager(): AccountManager;\n\n    \n    interface AccountManager {\n        \n        activateOsAccount(localId: number, callback: AsyncCallback<void>): void;\n        activateOsAccount(localId: number): Promise<void>;\n\n        \n        isMultiOsAccountEnable(callback: AsyncCallback<boolean>): void;\n        isMultiOsAccountEnable(): Promise<boolean>;\n\n        \n        isOsAccountActived(localId: number, callback: AsyncCallback<boolean>): void;\n        isOsAccountActived(localId: number): Promise<boolean>;\n\n        \n        isOsAccountConstraintEnable(localId: number, constraint: string, callback: AsyncCallback<boolean>): void;\n        isOsAccountConstraintEnable(localId: number, constraint: string): Promise<boolean>;\n\n        \n        isTestOsAccount(callback: AsyncCallback<boolean>): void;\n        isTestOsAccount(): Promise<boolean>;\n\n        \n        isOsAccountVerified(callback: AsyncCallback<boolean>): void;\n\n        \n        isOsAccountVerified(localId: number, callback: AsyncCallback<boolean>): void;\n        isOsAccountVerified(localId?: number): Promise<boolean>;\n\n        \n        removeOsAccount(localId: number, callback: AsyncCallback<void>): void;\n        removeOsAccount(localId: number): Promise<void>;\n\n        \n        setOsAccountConstraints(localId: number, constraints: Array<string>, enable: boolean,\n                                callback: AsyncCallback<void>): void;\n        setOsAccountConstraints(localId: number, constraints: Array<string>, enable: boolean): Promise<void>;\n\n        \n        setOsAccountName(localId: number, localName: string, callback: AsyncCallback<void>): void;\n        setOsAccountName(localId: number, localName: string): Promise<void>;\n\n        \n        getCreatedOsAccountsCount(callback: AsyncCallback<number>): void;\n        getCreatedOsAccountsCount(): Promise<number>;\n\n        \n        getOsAccountLocalIdFromProcess(callback: AsyncCallback<number>): void;\n        getOsAccountLocalIdFromProcess(): Promise<number>;\n\n        \n        getOsAccountLocalIdFromUid(uid: number, callback: AsyncCallback<number>): void;\n        getOsAccountLocalIdFromUid(uid: number): Promise<number>;\n\n        \n        getOsAccountLocalIdFromDomain(domainInfo: DomainAccountInfo, callback: AsyncCallback<number>): void;\n        getOsAccountLocalIdFromDomain(domainInfo: DomainAccountInfo): Promise<number>;\n\n        \n        queryMaxOsAccountNumber(callback: AsyncCallback<number>): void;\n        queryMaxOsAccountNumber(): Promise<number>;\n\n        \n        getOsAccountAllConstraints(localId: number, callback: AsyncCallback<Array<string>>): void;\n        getOsAccountAllConstraints(localId: number): Promise<Array<string>>;\n\n        \n        queryAllCreatedOsAccounts(callback: AsyncCallback<Array<OsAccountInfo>>): void;\n        queryAllCreatedOsAccounts(): Promise<Array<OsAccountInfo>>;\n\n        \n        queryActivatedOsAccountIds(callback: AsyncCallback<Array<number>>): void;\n        queryActivatedOsAccountIds(): Promise<Array<number>>;\n\n        \n        createOsAccount(localName: string, type: OsAccountType, callback: AsyncCallback<OsAccountInfo>): void;\n        createOsAccount(localName: string, type: OsAccountType): Promise<OsAccountInfo>;\n\n        \n        createOsAccountForDomain(type: OsAccountType, domainInfo: DomainAccountInfo, callback: AsyncCallback<OsAccountInfo>): void;\n        createOsAccountForDomain(type: OsAccountType, domainInfo: DomainAccountInfo): Promise<OsAccountInfo>;\n\n        \n        queryCurrentOsAccount(callback: AsyncCallback<OsAccountInfo>): void;\n        queryCurrentOsAccount(): Promise<OsAccountInfo>;\n\n        \n        queryOsAccountById(localId: number, callback: AsyncCallback<OsAccountInfo>): void;\n        queryOsAccountById(localId: number): Promise<OsAccountInfo>;\n\n        \n        getOsAccountTypeFromProcess(callback: AsyncCallback<OsAccountType>): void;\n        getOsAccountTypeFromProcess(): Promise<OsAccountType>;\n\n        \n        getDistributedVirtualDeviceId(callback: AsyncCallback<string>): void;\n        getDistributedVirtualDeviceId(): Promise<string>;\n\n        \n        getOsAccountProfilePhoto(localId: number, callback: AsyncCallback<string>): void;\n        getOsAccountProfilePhoto(localId: number): Promise<string>;\n\n        \n        setOsAccountProfilePhoto(localId: number, photo: string, callback: AsyncCallback<void>): void;\n        setOsAccountProfilePhoto(localId: number, photo: string): Promise<void>;\n\n        \n        getOsAccountLocalIdBySerialNumber(serialNumber: number, callback: AsyncCallback<number>): void;\n        getOsAccountLocalIdBySerialNumber(serialNumber: number): Promise<number>;\n\n        \n        getSerialNumberByOsAccountLocalId(localId: number, callback: AsyncCallback<number>): void;\n        getSerialNumberByOsAccountLocalId(localId: number): Promise<number>;\n\n        \n        on(type: 'activate' | 'activating', name: string, callback: Callback<number>): void;\n\n        \n        off(type: 'activate' | 'activating', name: string, callback?: Callback<number>): void;\n    }\n\n    \n    interface OsAccountInfo {\n        \n        localId: number;\n\n        \n        localName: string;\n\n        \n        type: OsAccountType;\n\n        \n        constraints: Array<string>;\n\n        \n        isVerified: boolean;\n\n        \n        photo: string;\n\n        \n        createTime: number;\n\n        \n        lastLoginTime: number;\n\n        \n        serialNumber: number;\n\n        \n        isActived: boolean;\n\n        \n        isCreateCompleted: boolean;\n\n        \n        distributedInfo: distributedAccount.DistributedInfo;\n\n         \n         domainInfo: DomainAccountInfo;\n    }\n\n    interface DomainAccountInfo {\n        \n        domain: string;\n\n        \n        accountName: string;\n    }\n\n    \n    enum OsAccountType {\n        \n        ADMIN = 0,\n\n        \n        NORMAL,\n\n        \n        GUEST\n    }\n\n    \n    class UserAuth {\n        \n        constructor();\n\n        \n        getVersion(): number;\n\n        \n        getAvailableStatus(authType: AuthType, authTrustLevel: AuthTrustLevel): number;\n\n        \n        getProperty(request: GetPropertyRequest, callback: AsyncCallback<ExecutorProperty>): void;\n        getProperty(request: GetPropertyRequest): Promise<ExecutorProperty>;\n\n        \n        setProperty(request: SetPropertyRequest, callback: AsyncCallback<number>): void;\n        setProperty(request: SetPropertyRequest): Promise<number>;\n\n        \n        auth(challenge: Uint8Array, authType: AuthType, authTrustLevel: AuthTrustLevel, callback: IUserAuthCallback): Uint8Array;\n\n        \n        authUser(userId: number, challenge: Uint8Array, authType: AuthType, authTrustLevel: AuthTrustLevel, callback: IUserAuthCallback): Uint8Array;\n\n        \n        cancelAuth(contextID: Uint8Array): number;\n    }\n\n    \n    class PINAuth {\n        \n        constructor();\n\n        \n        registerInputer(inputer: IInputer): boolean;\n\n        \n        unregisterInputer(): void;\n    }\n\n    \n    class UserIdentityManager {\n        \n        constructor();\n\n        \n        openSession(callback: AsyncCallback<Uint8Array>): void;\n        openSession(): Promise<Uint8Array>;\n\n        \n        addCredential(credentialInfo: CredentialInfo, callback: IIdmCallback): void;\n\n        \n        updateCredential(credentialInfo: CredentialInfo, callback: IIdmCallback): void;\n\n        \n        closeSession(): void;\n\n        \n        cancel(challenge: Uint8Array): number;\n\n        \n        delUser(token: Uint8Array, callback: IIdmCallback): void;\n\n        \n        delCred(credentialId: Uint8Array, token: Uint8Array, callback: IIdmCallback): void;\n\n        \n        getAuthInfo(callback: AsyncCallback<Array<EnrolledCredInfo>>, authType?: AuthType): void;\n        getAuthInfo(authType?: AuthType): Promise<Array<EnrolledCredInfo>>;\n    }\n\n    \n    interface IInputData {\n        \n        onSetData: (pinSubType: AuthSubType, data: Uint8Array) => void;\n    }\n    \n    \n    interface IInputer {\n        \n        onGetData: (callback: IInputData) => void;\n    }\n\n    \n    interface IUserAuthCallback {\n        \n        onResult: (result: number, extraInfo: AuthResult) => void;\n\n        \n        onAcquireInfo?: (module: number, acquire: number, extraInfo: any) => void;\n    }\n\n    \n    interface IIdmCallback {\n        \n        onResult: (result: number, extraInfo: RequestResult) => void;\n\n        \n        onAcquireInfo?: (module: number, acquire: number, extraInfo: any) => void;\n    }\n\n    \n    interface GetPropertyRequest {\n        \n        authType: AuthType;\n\n        \n        keys: Array<GetPropertyType>;\n    }\n\n    \n    interface SetPropertyRequest {\n        \n        authType: AuthType;\n\n        \n        key: SetPropertyType;\n\n        \n        setInfo: Uint8Array;\n    }\n\n    \n    interface ExecutorProperty {\n        \n        result: number;\n\n        \n        authSubType: AuthSubType;\n\n        \n        remainTimes?: number;\n\n        \n        freezingTime?: number;\n    }\n \n    \n    interface AuthResult {\n        \n        token?: Uint8Array;\n\n        \n        remainTimes?: number;\n\n        \n        freezingTime?: number;\n    }\n\n    \n    interface CredentialInfo {\n        \n        credType: AuthType;\n\n        \n        credSubType: AuthSubType;\n\n        \n        token: Uint8Array;\n    }\n\n    \n    interface RequestResult {\n        \n        credentialId?: Uint8Array;\n    }\n\n    \n    interface EnrolledCredInfo {\n        \n        credentialId: Uint8Array;\n\n        \n        authType: AuthType;\n\n        \n        authSubType: AuthSubType;\n\n        \n        templateId: Uint8Array;\n    }\n\n    \n    enum GetPropertyType {\n        \n        AUTH_SUB_TYPE = 1,\n\n        \n        REMAIN_TIMES = 2,\n\n        \n        FREEZING_TIME = 3\n    }\n\n    \n    enum SetPropertyType {\n        \n        INIT_ALGORITHM = 1,\n    }\n\n    \n    enum AuthType {\n        \n        PIN = 1,\n\n        \n        FACE = 2\n    }\n\n    \n    enum AuthSubType {\n        \n        PIN_SIX = 10000,\n\n        \n        PIN_NUMBER = 10001,\n\n        \n        PIN_MIXED = 10002,\n    \n        \n        FACE_2D = 20000,\n\n        \n        FACE_3D = 20001\n    }\n\n    \n    enum AuthTrustLevel {\n        \n        ATL1 = 10000,\n\n        \n        ATL2 = 20000,\n\n        \n        ATL3 = 30000,\n\n        \n        ATL4 = 40000\n    }\n\n    \n    enum Module {\n        \n        FACE_AUTH = 1\n    }\n\n    \n    enum ResultCode {\n        \n        SUCCESS = 0,\n\n        \n        FAIL = 1,\n\n        \n        GENERAL_ERROR = 2,\n\n        \n        CANCELED = 3,\n\n        \n        TIMEOUT = 4,\n\n        \n        TYPE_NOT_SUPPORT = 5,\n\n        \n        TRUST_LEVEL_NOT_SUPPORT = 6,\n\n        \n        BUSY = 7,\n\n        \n        INVALID_PARAMETERS = 8,\n\n        \n        LOCKED = 9,\n\n        \n        NOT_ENROLLED = 10\n    }\n\n    \n    enum FaceTipsCode {\n        \n        FACE_AUTH_TIP_TOO_BRIGHT = 1,\n\n        \n        FACE_AUTH_TIP_TOO_DARK = 2,\n\n        \n        FACE_AUTH_TIP_TOO_CLOSE = 3,\n\n        \n        FACE_AUTH_TIP_TOO_FAR = 4,\n\n        \n        FACE_AUTH_TIP_TOO_HIGH = 5,\n\n        \n        FACE_AUTH_TIP_TOO_LOW = 6,\n\n        \n        FACE_AUTH_TIP_TOO_RIGHT = 7,\n\n        \n        FACE_AUTH_TIP_TOO_LEFT = 8,\n\n        \n        FACE_AUTH_TIP_TOO_MUCH_MOTION = 9,\n\n        \n        FACE_AUTH_TIP_POOR_GAZE = 10,\n\n        \n        FACE_AUTH_TIP_NOT_DETECTED = 11,\n    }\n\n    \n    enum FingerprintTips {\n        \n        FINGERPRINT_TIP_GOOD = 0,\n\n        \n        FINGERPRINT_TIP_IMAGER_DIRTY = 1,\n\n        \n        FINGERPRINT_TIP_INSUFFICIENT = 2,\n\n        \n        FINGERPRINT_TIP_PARTIAL = 3,\n\n        \n        FINGERPRINT_TIP_TOO_FAST = 4,\n\n        \n        FINGERPRINT_TIP_TOO_SLOW = 5\n    }\n}", "api_method_name": "osAccount", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 1084, "since": 0, "api_used": "\u662f", "lines": ["", " var Number = await osAccountManager.getOsAccount", "o\" + JSON.stringify(osAccountInfo));\n\t expect(osA", "al(0);\n\t     expect(osAccountInfo.localName).asse", "ar AccountManager = osAccount.getAccountManager()", "ateOsAccount(\"aaa\", osAccount.OsAccountType.NORMA", "o\" + JSON.stringify(osAccountInfo));\n\t     expect", "e.debug(\"====>createosAccountFormDomain end====\")", "e.debug(\"====>createosAccountFromDomain end====\")", "abcdef\",\n\t }, (err, osAccountInfo)=>{\n\t     conso", "Domain end====\");\n\t osAccountManager.removeOsAcco", "e.debug(\"====>createosAccountFormDomain repeat st", "from '@ohos.account.osAccount'\nimport {describe, ", "AccountInfo = await osAccountManager.createOsAcco", "====\");\n        var osAccountManager = account.ge", "\t     var localId = osAccountInfo.localId;\n\t     ", "untInfo));\n\t expect(osAccountInfo.localName).asse", " start====\");\n\t var osAccountInfo = await osAccou", "====\");\n        var osAccountInfo = await Account", " start====\");\n\t     osAccountManager.createOsAcco", "e.debug(\"====>createosAccountFormDomain repeat en", "});\n\t var localId = osAccountInfo.localId;\n\t cons", "e.debug(\"====>createosAccountFormDomain start====", "main start====\");\n\t osAccountManager.createOsAcco", "at end====\");\t\t\n\t\t  osAccountManager.removeOsAcco", "from '@ohos.account.osAccount'\n\nconst ERR_OSACCOU"], "files": ["OnOff.test.js", "Constraint.test.js", "Create.test.js", "index.js", "Photo.test.js", "Permission.test.js", "Constraints.test.js", "Query.test.js", "Limit.test.js", "Activate.test.js", "Set.test.js", "Interact.test.js", "Manage.test.js", "DomainInfo.test.js", "OsAccountIs.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "osAccount", "api_method_name": "getAccountManager", "api_method_all": "function getAccountManager(): AccountManager;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 272, "since": 7, "api_used": "\u662f", "lines": ["Manager = osAccount.getAccountManager();\n        var phot", "ntManager = account.getAccountManager();\n        console.", "Manager = osAccount.getAccountManager();\n        console."], "files": ["OnOff.test.js", "Constraint.test.js", "Create.test.js", "index.js", "Photo.test.js", "Permission.test.js", "Constraints.test.js", "Query.test.js", "Limit.test.js", "Activate.test.js", "Set.test.js", "Interact.test.js", "Manage.test.js", "DomainInfo.test.js", "OsAccountIs.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_all": "interface AccountManager {\n        \n        activateOsAccount(localId: number, callback: AsyncCallback<void>): void;\n        activateOsAccount(localId: number): Promise<void>;\n\n        \n        isMultiOsAccountEnable(callback: AsyncCallback<boolean>): void;\n        isMultiOsAccountEnable(): Promise<boolean>;\n\n        \n        isOsAccountActived(localId: number, callback: AsyncCallback<boolean>): void;\n        isOsAccountActived(localId: number): Promise<boolean>;\n\n        \n        isOsAccountConstraintEnable(localId: number, constraint: string, callback: AsyncCallback<boolean>): void;\n        isOsAccountConstraintEnable(localId: number, constraint: string): Promise<boolean>;\n\n        \n        isTestOsAccount(callback: AsyncCallback<boolean>): void;\n        isTestOsAccount(): Promise<boolean>;\n\n        \n        isOsAccountVerified(callback: AsyncCallback<boolean>): void;\n\n        \n        isOsAccountVerified(localId: number, callback: AsyncCallback<boolean>): void;\n        isOsAccountVerified(localId?: number): Promise<boolean>;\n\n        \n        removeOsAccount(localId: number, callback: AsyncCallback<void>): void;\n        removeOsAccount(localId: number): Promise<void>;\n\n        \n        setOsAccountConstraints(localId: number, constraints: Array<string>, enable: boolean,\n                                callback: AsyncCallback<void>): void;\n        setOsAccountConstraints(localId: number, constraints: Array<string>, enable: boolean): Promise<void>;\n\n        \n        setOsAccountName(localId: number, localName: string, callback: AsyncCallback<void>): void;\n        setOsAccountName(localId: number, localName: string): Promise<void>;\n\n        \n        getCreatedOsAccountsCount(callback: AsyncCallback<number>): void;\n        getCreatedOsAccountsCount(): Promise<number>;\n\n        \n        getOsAccountLocalIdFromProcess(callback: AsyncCallback<number>): void;\n        getOsAccountLocalIdFromProcess(): Promise<number>;\n\n        \n        getOsAccountLocalIdFromUid(uid: number, callback: AsyncCallback<number>): void;\n        getOsAccountLocalIdFromUid(uid: number): Promise<number>;\n\n        \n        getOsAccountLocalIdFromDomain(domainInfo: DomainAccountInfo, callback: AsyncCallback<number>): void;\n        getOsAccountLocalIdFromDomain(domainInfo: DomainAccountInfo): Promise<number>;\n\n        \n        queryMaxOsAccountNumber(callback: AsyncCallback<number>): void;\n        queryMaxOsAccountNumber(): Promise<number>;\n\n        \n        getOsAccountAllConstraints(localId: number, callback: AsyncCallback<Array<string>>): void;\n        getOsAccountAllConstraints(localId: number): Promise<Array<string>>;\n\n        \n        queryAllCreatedOsAccounts(callback: AsyncCallback<Array<OsAccountInfo>>): void;\n        queryAllCreatedOsAccounts(): Promise<Array<OsAccountInfo>>;\n\n        \n        queryActivatedOsAccountIds(callback: AsyncCallback<Array<number>>): void;\n        queryActivatedOsAccountIds(): Promise<Array<number>>;\n\n        \n        createOsAccount(localName: string, type: OsAccountType, callback: AsyncCallback<OsAccountInfo>): void;\n        createOsAccount(localName: string, type: OsAccountType): Promise<OsAccountInfo>;\n\n        \n        createOsAccountForDomain(type: OsAccountType, domainInfo: DomainAccountInfo, callback: AsyncCallback<OsAccountInfo>): void;\n        createOsAccountForDomain(type: OsAccountType, domainInfo: DomainAccountInfo): Promise<OsAccountInfo>;\n\n        \n        queryCurrentOsAccount(callback: AsyncCallback<OsAccountInfo>): void;\n        queryCurrentOsAccount(): Promise<OsAccountInfo>;\n\n        \n        queryOsAccountById(localId: number, callback: AsyncCallback<OsAccountInfo>): void;\n        queryOsAccountById(localId: number): Promise<OsAccountInfo>;\n\n        \n        getOsAccountTypeFromProcess(callback: AsyncCallback<OsAccountType>): void;\n        getOsAccountTypeFromProcess(): Promise<OsAccountType>;\n\n        \n        getDistributedVirtualDeviceId(callback: AsyncCallback<string>): void;\n        getDistributedVirtualDeviceId(): Promise<string>;\n\n        \n        getOsAccountProfilePhoto(localId: number, callback: AsyncCallback<string>): void;\n        getOsAccountProfilePhoto(localId: number): Promise<string>;\n\n        \n        setOsAccountProfilePhoto(localId: number, photo: string, callback: AsyncCallback<void>): void;\n        setOsAccountProfilePhoto(localId: number, photo: string): Promise<void>;\n\n        \n        getOsAccountLocalIdBySerialNumber(serialNumber: number, callback: AsyncCallback<number>): void;\n        getOsAccountLocalIdBySerialNumber(serialNumber: number): Promise<number>;\n\n        \n        getSerialNumberByOsAccountLocalId(localId: number, callback: AsyncCallback<number>): void;\n        getSerialNumberByOsAccountLocalId(localId: number): Promise<number>;\n\n        \n        on(type: 'activate' | 'activating', name: string, callback: Callback<number>): void;\n\n        \n        off(type: 'activate' | 'activating', name: string, callback?: Callback<number>): void;\n    }", "api_method_name": "AccountManager", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 3231, "since": 7, "api_used": "\u662f", "lines": ["nager();\n        appAccountManager.addAccount(limitAcc", " = account.createAppAccountManager();\n        console.", "           await appAccountManager.addAccount(\"account", "(0);\n            appAccountManager.addAccount(\"account", ");\n        await appAccountManager.deleteAccount(\"acco", ");\n        await appAccountManager.addAccount(\"account", " = account.createAppAccountManager();\n        try{\n   ", "           await appAccountManager.deleteAccount(\"acco", "=\");\n        var appAccountManager = account.createApp", "   }\n        var appAccountManager = account.createApp", " = account.createAppAccountManager();\n        appAccou", "           await appAccountManager.addAccount(\"\", \"acc", "nager();\n        appAccountManager.addAccount(\"account", "h====\");\n        appAccountManager.addAccount(\"account", "(0);\n            appAccountManager.deleteAccount(\"acco", "           await appAccountManager.addAccount(limitAcc", "\n                appAccountManager.deleteAccount(\"acco", "nager();\n        appAccountManager.addAccount(\"\", \"acc"], "files": ["Permission.test.js", "Constraints.test.js", "Query.test.js", "Set.test.js", "Interact.test.js", "AppAccess.test.js", "NoPermission.test.js", "OAuthToken.test.js", "Credential.test.js", "OnOff.js", "ExtraInfo.test.js", "Getallaccessible.test.js", "Constraint.test.js", "Getallaccounts.test.js", "Photo.test.js", "Manage.test.js", "index.js", "OsAccountIs.test.js", "OnOff.test.js", "Create.test.js", "Getmultiple.test.js", "DeleteAccount.test.js", "AddAccount.test.js", "Limit.test.js", "Syncenable.test.js", "Activate.test.js", "DomainInfo.test.js", "CreatManager.test.js", "AssociatedData.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "activateOsAccount", "api_method_all": "activateOsAccount(localId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 90, "since": 7, "api_used": "\u662f", "lines": ["   osAccountManager.activateOsAccount(localId, (err)=>{\n                conso", "it osAccountManager.activateOsAccount(undefined);\n        expect(activateResu", "it osAccountManager.activateOsAccount(100);\n            }catch(err){\n        ", "   osAccountManager.activateOsAccount(nonExistentLocalId, (err)=>{\n          ", "console.debug(\"====>activateOsAccount to nonexist user err:\" + JSON.stringify", "it osAccountManager.activateOsAccount(100);\n            try{\n                ", "console.debug(\"====>activateOsAccount localId: 100 err:\" + JSON.stringify(err", "   osAccountManager.activateOsAccount(osLocalId, (err)=>{\n                   ", "it osAccountManager.activateOsAccount(osLocalId);\n        var isActivedTwice ", "console.debug(\"====>activateOsAccount second err:\" + JSON.stringify(err));\n  ", "it osAccountManager.activateOsAccount(-1);\n        }catch(err){\n            c", "    * @tc.name    : activateOsAccount callback\n     * @tc.desc    : activate ", "    * @tc.name    : activateOsAccount promise\n     * @tc.desc    : activate s", "debug(\"====>receive activateOsAccount err: \" + JSON.stringify(err));\n        ", "   osAccountManager.activateOsAccount(0, (err)=>{\n            console.debug(\"", "console.debug(\"====>activateOsAccount err:\" + JSON.stringify(err));\n         ", "   osAccountManager.activateOsAccount(undefined, funcActivateCallback);\n     ", "   osAccountManager.activateOsAccount(localIdStr, funcActivateCallback);\n    ", "   osAccountManager.activateOsAccount(localId, (err)=>{\n                    c", "it osAccountManager.activateOsAccount(0);\n        }catch(err){\n            co", "   osAccountManager.activateOsAccount(100, (err)=>{\n                         ", "console.debug(\"====>activateOsAccount to -1 user err:\" + JSON.stringify(err))", "console.debug(\"====>activateOsAccount localId: \" + osLocalId + \" err:\" + JSON", "it osAccountManager.activateOsAccount(localIdStr);\n        expect(activateRes", "wait AccountManager.activateOsAccount(receiveLocalId);\n            }\n        ", "console.debug(\"====>activateOsAccount localId: \" + localId + \" err:\" + JSON.s", "it osAccountManager.activateOsAccount(localId);\n        var isActivedTwice = ", "     AccountManager.activateOsAccount(receiveLocalId, (err)=>{\n              ", "   osAccountManager.activateOsAccount(100, (err)=>{\n                        c", "   osAccountManager.activateOsAccount(100, (err)=>{\n                    conso", "it osAccountManager.activateOsAccount(nonExistentLocalId);\n        }catch(err", "wait AccountManager.activateOsAccount(localId);\n        }\n        catch(err){", "   osAccountManager.activateOsAccount(-1, (err)=>{\n            console.debug(", "console.debug(\"====>activateOsAccount first err:\" + JSON.stringify(err));\n   ", "e.debug(\"====>catch activateOsAccount 0200 err:\" + JSON.stringify(err));\n    ", "     AccountManager.activateOsAccount(localId, (err)=>{\n                    c", "console.debug(\"====>activateOsAccount to 0 user err:\" + JSON.stringify(err));"], "files": ["OnOff.test.js", "Constraint.test.js", "Permission.test.js", "Query.test.js", "Limit.test.js", "Activate.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "activateOsAccount", "api_method_all": "activateOsAccount(localId: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["    * @tc.name    : activateOsAccount promise\n     * @tc.desc    : Authentica"], "files": ["Activate.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "isMultiOsAccountEnable", "api_method_all": "isMultiOsAccountEnable(callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["console.debug(\"====>isMultiOsAccountEnable data:\" + data);\n            expect(err.", "e.debug(\"====>catch isMultiOsAccountEnable err:\" + JSON.stringify(err));\n         ", "    * @tc.name    : isMultiOsAccountEnable promise\n     * @tc.desc    : whether to", "console.debug(\"====>isMultiOsAccountEnable data:\" + JSON.stringify(data));\n       ", "console.debug(\"====>isMultiOsAccountEnable err:\" + JSON.stringify(err));\n         ", "wait AccountManager.isMultiOsAccountEnable();\n        }\n        catch(err){\n      ", "    * @tc.name    : isMultiOsAccountEnable callback\n     * @tc.desc    : whether t", "     AccountManager.isMultiOsAccountEnable((err, data)=>{\n            console.debu"], "files": ["Permission.test.js", "OsAccountIs.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "isMultiOsAccountEnable", "api_method_all": "isMultiOsAccountEnable(): Promise<boolean>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "isOsAccountActived", "api_method_all": "isOsAccountActived(localId: number, callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 77, "since": 7, "api_used": "\u662f", "lines": ["    * @tc.name    : isOsAccountActived promise\n     * @tc.desc    : the applic", "   osAccountManager.isOsAccountActived(100, (err, data)=>{\n                   ", "Id: \" + localId + \" isOsAccountActived err:\" + JSON.stringify(err));\n         ", "   osAccountManager.isOsAccountActived(osLocalId, (err, data)=>{\n             ", "(\"====>localId: 100 isOsAccountActived data:\" + data);\n                       ", "     AccountManager.isOsAccountActived(receiveLocalId, (err)=>{\n              ", "Id: \" + localId + \" isOsAccountActived data:\" + data);\n                expect(", "Id: \" + localId + \" isOsAccountActived data:\" + data);\n                       ", "console.debug(\"====>isOsAccountActived err:\" + JSON.stringify(err));\n         ", "console.debug(\"====>isOsAccountActived isActived:\" + isActived);\n        expec", "    * @tc.name    : isOsAccountActived callback\n     * @tc.desc    : the appli", "     AccountManager.isOsAccountActived(100, (err, isActived)=>{\n            co", "console.debug(\"====>isOsAccountActived isActived:\" + isActived);\n            e", ": \" + osLocalId + \" isOsAccountActived data:\" + data);\n                       ", ": \" + osLocalId + \" isOsAccountActived data:\" + data);\n                expect(", "console.debug(\"====>isOsAccountActived err:\" + JSON.stringify(isActived));\n   ", ": \" + osLocalId + \" isOsAccountActived:\" + isActivedTwice);\n        expect(isA", "it osAccountManager.isOsAccountActived(osLocalId);           \n        console.", "wait AccountManager.isOsAccountActived(100);\n        }\n        catch(err){\n   ", "wait AccountManager.isOsAccountActived(receiveLocalId);\n            }\n        ", ": \" + osLocalId + \" isOsAccountActived:\" + isActived);\n        expect(isActive", "it osAccountManager.isOsAccountActived(100);\n        console.debug(\"====>isOsA", "console.debug(\"====>isOsAccountActived data:\" + isActived);\n            expect", "(\"====>localId: 100 isOsAccountActived:\" + isActiveHandred);\n        expect(is", "(\"====>localId: 100 isOsAccountActived err:\" + JSON.stringify(err));\n         ", ": \" + osLocalId + \" isOsAccountActived err:\" + JSON.stringify(err));\n         ", "it osAccountManager.isOsAccountActived(osLocalId);    \n        console.debug(\"", "   osAccountManager.isOsAccountActived(localId, (err, data)=>{\n               ", "it osAccountManager.isOsAccountActived(100);\n        console.debug(\"====>local", "   osAccountManager.isOsAccountActived(100, (err, isActived)=>{\n            co"], "files": ["Permission.test.js", "Activate.test.js", "Interact.test.js", "Manage.test.js", "OsAccountIs.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "isOsAccountActived", "api_method_all": "isOsAccountActived(localId: number): Promise<boolean>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "isOsAccountConstraintEnable", "api_method_all": "isOsAccountConstraintEnable(localId: number, constraint: string, callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 59, "since": 7, "api_used": "\u662f", "lines": ["wait AccountManager.isOsAccountConstraintEnable(100, \"constraint.bluetooth\");\n        }", "e.debug(\"====>twice isOsAccountConstraintEnable err:\" + JSON.stringify(err));\n         ", "e.debug(\"====>twice isOsAccountConstraintEnable constraint:\" + constraint);\n           ", "console.debug(\"====>isOsAccountConstraintEnable err:\" + JSON.stringify(err));\n         ", "wait AccountManager.isOsAccountConstraintEnable(100, \"\");\n        console.debug(\"====>i", "console.debug(\"====>isOsAccountConstraintEnable constraint:\" + constraint);\n           ", "     AccountManager.isOsAccountConstraintEnable(localId, \"constraint.network.reset\", (e", "     AccountManager.isOsAccountConstraintEnable(100, \"\", (err, constraint)=>{\n         ", "     AccountManager.isOsAccountConstraintEnable(localId, \"constraint.location.set\", (er", "     AccountManager.isOsAccountConstraintEnable(localId, \"constraint.device.unmute\", (e", "console.debug(\"====>isOsAccountConstraintEnable constraints:\" + constraint);\n        ex", "wait AccountManager.isOsAccountConstraintEnable(localId, \"constraint.location.set\");\n  ", "console.debug(\"====>isOsAccountConstraintEnable constraints:\" + constraintTwice);\n     ", "     AccountManager.isOsAccountConstraintEnable(localId, \"constraint.bluetooth.set\", (e", "wait AccountManager.isOsAccountConstraintEnable(100, \"constraint.undefined\");\n        c", "     AccountManager.isOsAccountConstraintEnable(100, \"constraint.undefined\", (err, cons", "wait AccountManager.isOsAccountConstraintEnable(localId, \"constraint.bluetooth.set\");\n ", "     AccountManager.isOsAccountConstraintEnable(100, \"constraint.bluetooth\", (err)=>{\n ", "wait AccountManager.isOsAccountConstraintEnable(localId, \"constraint.network.reset\");\n "], "files": ["Permission.test.js", "Constraints.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "isOsAccountConstraintEnable", "api_method_all": "isOsAccountConstraintEnable(localId: number, constraint: string): Promise<boolean>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "isTestOsAccount", "api_method_all": "isTestOsAccount(callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 12, "since": 7, "api_used": "\u662f", "lines": ["    * @tc.name    : isTestOsAccount callback\n     * @tc.desc    : check whe", "     AccountManager.isTestOsAccount((err, data)=>{\n            console.debu", "console.debug(\"====>isTestOsAccount err:\" + JSON.stringify(err));\n         ", "wait AccountManager.isTestOsAccount();\n        expect(isTest).assertFalse()", "    * @tc.name    : isTestOsAccount promise\n     * @tc.desc    : check whet", "console.debug(\"====>isTestOsAccount data:\" + JSON.stringify(data));\n       "], "files": ["Permission.test.js", "OsAccountIs.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "isTestOsAccount", "api_method_all": "isTestOsAccount(): Promise<boolean>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "isOsAccountVerified", "api_method_all": "isOsAccountVerified(callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 62, "since": 7, "api_used": "\u662f", "lines": ["     AccountManager.isOsAccountVerified(localIdStr, funcIsVerified);\n        se", "console.debug(\"====>isOsAccountVerified isVerified:\" + isVerified);\n           ", "wait AccountManager.isOsAccountVerified();\n        console.debug(\"====>isOsAcco", "console.debug(\"====>isOsAccountVerified data:\" + isVerified);\n        expect(is", "     AccountManager.isOsAccountVerified(receiveLocalId, (err)=>{\n              ", "debug(\"====>receive isOsAccountVerified data: \" + JSON.stringify(data));\n      ", "wait AccountManager.isOsAccountVerified(receiveLocalId);\n            }\n        ", "console.debug(\"====>isOsAccountVerified_0100 start====\");\n        var AccountMa", "wait AccountManager.isOsAccountVerified(0);\n        expect(isVerified).assertFa", "console.debug(\"====>isOsAccountVerified_0200 start====\");\n        var AccountMa", "    * @tc.name    : isOsAccountVerified callback\n     * @tc.desc    : create a ", "console.debug(\"====>isOsAccountVerified data:\" + JSON.stringify(data));\n       ", "console.debug(\"====>isOsAccountVerified isVerified:\" + isVerified);\n        exp", "wait AccountManager.isOsAccountVerified(osAccountLocalId);\n        }\n        ca", "    * @tc.name    : isOsAccountVerified promise\n     * @tc.desc    : the applic", "     AccountManager.isOsAccountVerified(0, (err, data)=>{\n            console.d", "wait AccountManager.isOsAccountVerified(100);\n        }\n        catch(err){\n   ", "debug(\"====>receive isOsAccountVerified err: \" + JSON.stringify(err));\n        ", "console.debug(\"====>isOsAccountVerified err:\" + JSON.stringify(err));\n         ", "    * @tc.name    : isOsAccountVerified callback\n     * @tc.desc    : Verify qu", "    * @tc.name    : isOsAccountVerified promise\n     * @tc.desc    : create a o", "console.debug(\"====>isOsAccountVerified data:\" + data);\n        expect(data).as", "     AccountManager.isOsAccountVerified((err, data)=>{\n            console.debu", "     AccountManager.isOsAccountVerified(osLocalId, (err, data)=>{\n             ", "     AccountManager.isOsAccountVerified(100, (err, isVerified)=>{\n            c", "    * @tc.name    : isOsAccountVerified callback\n     * @tc.desc    : the appli", "console.debug(\"====>isOsAccountVerified data:\" + data);\n            expect(err.", "    * @tc.name    : isOsAccountVerified promise\n     * @tc.desc    : Verify tha", "wait AccountManager.isOsAccountVerified(localIdStr);\n        console.debug(\"===", "    * @tc.name    : isOsAccountVerified promise\n     * @tc.desc    : Verify que"], "files": ["Permission.test.js", "Query.test.js", "Interact.test.js", "Manage.test.js", "OsAccountIs.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "isOsAccountVerified", "api_method_all": "isOsAccountVerified(localId: number, callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 62, "since": 7, "api_used": "\u662f", "lines": ["     AccountManager.isOsAccountVerified(localIdStr, funcIsVerified);\n        se", "console.debug(\"====>isOsAccountVerified isVerified:\" + isVerified);\n           ", "wait AccountManager.isOsAccountVerified();\n        console.debug(\"====>isOsAcco", "console.debug(\"====>isOsAccountVerified data:\" + isVerified);\n        expect(is", "     AccountManager.isOsAccountVerified(receiveLocalId, (err)=>{\n              ", "debug(\"====>receive isOsAccountVerified data: \" + JSON.stringify(data));\n      ", "wait AccountManager.isOsAccountVerified(receiveLocalId);\n            }\n        ", "console.debug(\"====>isOsAccountVerified_0100 start====\");\n        var AccountMa", "wait AccountManager.isOsAccountVerified(0);\n        expect(isVerified).assertFa", "console.debug(\"====>isOsAccountVerified_0200 start====\");\n        var AccountMa", "    * @tc.name    : isOsAccountVerified callback\n     * @tc.desc    : create a ", "console.debug(\"====>isOsAccountVerified data:\" + JSON.stringify(data));\n       ", "console.debug(\"====>isOsAccountVerified isVerified:\" + isVerified);\n        exp", "wait AccountManager.isOsAccountVerified(osAccountLocalId);\n        }\n        ca", "    * @tc.name    : isOsAccountVerified promise\n     * @tc.desc    : the applic", "     AccountManager.isOsAccountVerified(0, (err, data)=>{\n            console.d", "wait AccountManager.isOsAccountVerified(100);\n        }\n        catch(err){\n   ", "debug(\"====>receive isOsAccountVerified err: \" + JSON.stringify(err));\n        ", "console.debug(\"====>isOsAccountVerified err:\" + JSON.stringify(err));\n         ", "    * @tc.name    : isOsAccountVerified callback\n     * @tc.desc    : Verify qu", "    * @tc.name    : isOsAccountVerified promise\n     * @tc.desc    : create a o", "console.debug(\"====>isOsAccountVerified data:\" + data);\n        expect(data).as", "     AccountManager.isOsAccountVerified((err, data)=>{\n            console.debu", "     AccountManager.isOsAccountVerified(osLocalId, (err, data)=>{\n             ", "     AccountManager.isOsAccountVerified(100, (err, isVerified)=>{\n            c", "    * @tc.name    : isOsAccountVerified callback\n     * @tc.desc    : the appli", "console.debug(\"====>isOsAccountVerified data:\" + data);\n            expect(err.", "    * @tc.name    : isOsAccountVerified promise\n     * @tc.desc    : Verify tha", "wait AccountManager.isOsAccountVerified(localIdStr);\n        console.debug(\"===", "    * @tc.name    : isOsAccountVerified promise\n     * @tc.desc    : Verify que"], "files": ["Permission.test.js", "Query.test.js", "Interact.test.js", "Manage.test.js", "OsAccountIs.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "isOsAccountVerified", "api_method_all": "isOsAccountVerified(localId?: number): Promise<boolean>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "removeOsAccount", "api_method_all": "removeOsAccount(localId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 143, "since": 7, "api_used": "\u662f", "lines": ["it osAccountManager.removeOsAccount(localId);\n        var isActiveHandred =", "     AccountManager.removeOsAccount(localId, (err)=>{\n                    c", "    * @tc.name    : removeOsAccount promise\n     * @tc.desc    : remove spe", "     AccountManager.removeOsAccount(localId, (err)=>{\n                     ", "console.debug(\"====>removeOsAccount err:\" + JSON.stringify(err));\n\t\t      e", "wait AccountManager.removeOsAccount(receiveLocalId);\n            }\n        ", "it osAccountManager.removeOsAccount(osLocalId);\n        console.debug(\"====", "   osAccountManager.removeOsAccount(osLocalId, (err)=>{\n                   ", "   osAccountManager.removeOsAccount(localId, (err)=>{\n                     ", "wait AccountManager.removeOsAccount(localId);\n            console.debug(\"==", "     AccountManager.removeOsAccount(receiveLocalId, (err)=>{\n              ", "console.debug(\"====>removeOsAccount err:\" + JSON.stringify(err));\n         ", "wait AccountManager.removeOsAccount(localId);\n        }\n        catch(err){", "\t  osAccountManager.removeOsAccount(localId, (err)=>{\n\t\t      console.debug", "wait AccountManager.removeOsAccount(localId);\n        console.debug(\"====>A", "    * @tc.name    : removeOsAccount callback\n     * @tc.desc    : remove sp", "\n\t osAccountManager.removeOsAccount(localId);\n        console.debug(\"====>A"], "files": ["OnOff.test.js", "Constraint.test.js", "Create.test.js", "index.js", "Photo.test.js", "Permission.test.js", "Constraints.test.js", "Query.test.js", "Limit.test.js", "Activate.test.js", "Set.test.js", "DomainInfo.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "removeOsAccount", "api_method_all": "removeOsAccount(localId: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "setOsAccountConstraints", "api_method_all": "setOsAccountConstraints(localId: number, constraints: Array<string>, enable: boolean,\n                                callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 4, "api_level": 21, "api_used_count": 64, "since": 7, "api_used": "\u662f", "lines": ["     AccountManager.setOsAccountConstraints(100, [\"constraint.os.account.set.icon\"]", "wait AccountManager.setOsAccountConstraints(localId, [\"constraint.network.reset\"], ", "     AccountManager.setOsAccountConstraints(100, [\"constraint.undefined\"], false, (", "console.debug(\"====>setOsAccountConstraints err:\" + JSON.stringify(err));\n         ", "     AccountManager.setOsAccountConstraints(100, [\"constraint.undefined\"], true, (e", "wait AccountManager.setOsAccountConstraints(100, [\"constraint.os.account.remove\"], ", "     AccountManager.setOsAccountConstraints(100, [\"\"], true, (err)=>{\n             ", "wait AccountManager.setOsAccountConstraints(100, [\"constraint.os.account.start\"], t", "wait AccountManager.setOsAccountConstraints(100, [\"constraint.os.account.set.icon\"]", "wait AccountManager.setOsAccountConstraints(100, [\"constraint.os.account.create\"], ", "wait AccountManager.setOsAccountConstraints(localId, [\"constraint.location.set\"], t", "wait AccountManager.setOsAccountConstraints(100, [\"\"], true);\n        }\n        cat", "     AccountManager.setOsAccountConstraints(localId, [\"constraint.network.reset\"], ", "wait AccountManager.setOsAccountConstraints(100, [\"constraint.os.account.start\"], f", "     AccountManager.setOsAccountConstraints(100, [\"constraint.os.account.remove\"], ", "     AccountManager.setOsAccountConstraints(100, [\"constraint.os.account.create\"], ", "e.debug(\"====>twice setOsAccountConstraints err:\" + JSON.stringify(err));\n         ", "wait AccountManager.setOsAccountConstraints(100, [\"constraint.undefined\"], false);\n", "     AccountManager.setOsAccountConstraints(100, [\"constraint.os.account.start\"], f", "     AccountManager.setOsAccountConstraints(100, [\"constraint.os.account.start\"], t", "     AccountManager.setOsAccountConstraints(localId, [\"constraint.location.set\"], t", "wait AccountManager.setOsAccountConstraints(100, [\"constraint.undefined\"], true);\n ", "wait AccountManager.setOsAccountConstraints(100, [\"constraint.cell.broadcasts.set\"]", "     AccountManager.setOsAccountConstraints(100, [\"constraint.cell.broadcasts.set\"]", "wait AccountManager.setOsAccountConstraints(localId, [\"constraint.bluetooth.set\"], ", "     AccountManager.setOsAccountConstraints(localId, [\"constraint.bluetooth.set\"], "], "files": ["Permission.test.js", "Constraint.test.js", "Constraints.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "setOsAccountConstraints", "api_method_all": "setOsAccountConstraints(localId: number, constraints: Array<string>, enable: boolean): Promise<void>;", "api_type": "Promise", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "setOsAccountName", "api_method_all": "setOsAccountName(localId: number, localName: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 55, "since": 7, "api_used": "\u662f", "lines": ["console.debug(\"====>setOsAccountName err:\" +JSON.stringify(err));\n          ", "it osAccountManager.setOsAccountName(localId, \"localName_promise\");\n        ", "it osAccountManager.setOsAccountName(\"100\", \"Abc\");\n        console.debug(\"=", "   osAccountManager.setOsAccountName(0, \"Abc\", (err)=>{\n            console.", "it osAccountManager.setOsAccountName(localId, nameLimit);\n        }\n        ", "g(\"====>catch twice setOsAccountName err:\" + JSON.stringify(err));\n         ", "console.debug(\"====>setOsAccountName err:\" + JSON.stringify(err));\n         ", "   osAccountManager.setOsAccountName(\"100\", \"Abc\", funcSetNameCallback);\n   ", "it osAccountManager.setOsAccountName(0, \"Abc\");\n        }\n        catch(err)", "    * @tc.name    : setOsAccountName promise\n     * @tc.desc    : create and", "it osAccountManager.setOsAccountName(localId, \"Abc\");\n        var getInfo = ", "   osAccountManager.setOsAccountName(localId, \"Abc\", (err)=>{\n              ", "    * @tc.name    : setOsAccountName callback\n     * @tc.desc    : set 0 loc", "   osAccountManager.setOsAccountName(localId, nameLimit, (err)=>{\n          ", "    * @tc.name    : setOsAccountName promise\n     * @tc.desc    : set 0 loca", "console.debug(\"====>setOsAccountName finish====\");\n        }\n        catch(e", "it osAccountManager.setOsAccountName(-1, \"Abc\");\n        }\n        catch(err", "   osAccountManager.setOsAccountName(localId, \"localName_callback\", (err)=>{", "e.debug(\"====>twice setOsAccountName err:\" + JSON.stringify(err));\n         ", "   osAccountManager.setOsAccountName(localId, \"localName_callbackTwice\", (er", "   osAccountManager.setOsAccountName(undefined, \"Abc\", funcSetNameCallback);", "it osAccountManager.setOsAccountName(localId, nameLimit);\n            consol", "   osAccountManager.setOsAccountName(-1, \"Abc\", (err)=>{\n            console", "it osAccountManager.setOsAccountName(undefined, \"Abc\");\n        console.debu", "it osAccountManager.setOsAccountName(localId, \"localName_promiseTwice\");\n   ", "e.debug(\"====>catch setOsAccountName err:\" + JSON.stringify(result));\n      ", "    * @tc.name    : setOsAccountName callback\n     * @tc.desc    : create an", "e.debug(\"====>catch setOsAccountName err:\" + JSON.stringify(err));\n         "], "files": ["Set.test.js", "Limit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "setOsAccountName", "api_method_all": "setOsAccountName(localId: number, localName: string): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getCreatedOsAccountsCount", "api_method_all": "getCreatedOsAccountsCount(callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["   osAccountManager.getCreatedOsAccountsCount((err, count)=>{\n                       ", "wait AccountManager.getCreatedOsAccountsCount();\n        }\n        catch(err){\n      ", "it osAccountManager.getCreatedOsAccountsCount();\n        console.debug(\"====>obtains ", "it osAccountManager.getCreatedOsAccountsCount();            \n        console.debug(\"=", "    * @tc.name    : getCreatedOsAccountsCount promise\n     * @tc.desc    : Verify to ", "     AccountManager.getCreatedOsAccountsCount((err)=>{\n            console.debug(\"===", "    * @tc.name    : getCreatedOsAccountsCount callback\n     * @tc.desc    : Verify to", "   osAccountManager.getCreatedOsAccountsCount((err, data)=>{\n            console.debu", "    * @tc.name    : getCreatedOsAccountsCount callback\n     * @tc.desc    : the appli", "   osAccountManager.getCreatedOsAccountsCount((err, data)=>{\n                        ", "    * @tc.name    : getCreatedOsAccountsCount promise\n     * @tc.desc    : the applic", "console.debug(\"====>getCreatedOsAccountsCount err:\" + JSON.stringify(err));\n         "], "files": ["Permission.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getCreatedOsAccountsCount", "api_method_all": "getCreatedOsAccountsCount(): Promise<number>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountLocalIdFromProcess", "api_method_all": "getOsAccountLocalIdFromProcess(callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["    * @tc.name    : getOsAccountLocalIdFromProcess callback\n     * @tc.desc    : Verify th", "    * @tc.name    : getOsAccountLocalIdFromProcess promise\n     * @tc.desc    : Verify tha", "it osAccountManager.getOsAccountLocalIdFromProcess();\n        console.debug(\"====>localId ", "   osAccountManager.getOsAccountLocalIdFromProcess((err, localId)=>{\n            console.d"], "files": ["Permission.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountLocalIdFromProcess", "api_method_all": "getOsAccountLocalIdFromProcess(): Promise<number>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountLocalIdFromUid", "api_method_all": "getOsAccountLocalIdFromUid(uid: number, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["   osAccountManager.getOsAccountLocalIdFromUid(incorrectUid, (err, localId)=>{\n       ", "it osAccountManager.getOsAccountLocalIdFromUid(incorrectUid);\n        }catch(err){\n   ", "   osAccountManager.getOsAccountLocalIdFromUid(uid, (err, localId)=>{\n            cons", "it osAccountManager.getOsAccountLocalIdFromUid(uid);\n        console.debug(\"====>local", "    * @tc.name    : getOsAccountLocalIdFromUid promise\n     * @tc.desc    : Verify tha", "    * @tc.name    : getOsAccountLocalIdFromUid callback\n     * @tc.desc    : Verify th"], "files": ["Permission.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountLocalIdFromUid", "api_method_all": "getOsAccountLocalIdFromUid(uid: number): Promise<number>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountLocalIdFromDomain", "api_method_all": "getOsAccountLocalIdFromDomain(domainInfo: DomainAccountInfo, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["console.debug(\"====>getOsAccountLocalIdFromDomain end====\");\n\t osAccountManager.removeOsA", "console.debug(\"====>getOsAccountLocalIdFromDomain start====\");\n\t var Number = await osAcc", "it osAccountManager.getOsAccountLocalIdFromDomain({\n\t     domain: \"abc\",\n\t     accountNam"], "files": ["DomainInfo.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountLocalIdFromDomain", "api_method_all": "getOsAccountLocalIdFromDomain(domainInfo: DomainAccountInfo): Promise<number>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "queryMaxOsAccountNumber", "api_method_all": "queryMaxOsAccountNumber(callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 13, "since": 7, "api_used": "\u662f", "lines": ["    * @tc.name    : queryMaxOsAccountNumber promise\n     * @tc.desc    : Query the ", "it osAccountManager.queryMaxOsAccountNumber();\n        console.debug(\"====>queryMax", "    * @tc.name    : queryMaxOsAccountNumber callback\n     * @tc.desc    : Query the", "console.debug(\"====>queryMaxOsAccountNumber data:\" + data);\n            expect(err.", "   osAccountManager.queryMaxOsAccountNumber((err, data)=>{\n            console.debu", "console.debug(\"====>queryMaxOsAccountNumber:\" + maxOsAccount);\n        expect(maxOs", "console.debug(\"====>queryMaxOsAccountNumber err:\" + JSON.stringify(err));\n         "], "files": ["Permission.test.js", "Query.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "queryMaxOsAccountNumber", "api_method_all": "queryMaxOsAccountNumber(): Promise<number>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountAllConstraints", "api_method_all": "getOsAccountAllConstraints(localId: number, callback: AsyncCallback<Array<string>>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 57, "since": 7, "api_used": "\u662f", "lines": ["    * @tc.name    : getOsAccountAllConstraints promise\n     * @tc.desc    : the applic", "    * @tc.name    : getOsAccountAllConstraints callback\n     * @tc.desc    : the appli", "wait AccountManager.getOsAccountAllConstraints(0);\n        console.debug(\"====>getAcco", "e.debug(\"====>twice getOsAccountAllConstraints :\" + JSON.stringify(constraints));\n    ", "console.debug(\"====>getOsAccountAllConstraints:\" + JSON.stringify(allConstraints));\n  ", "     AccountManager.getOsAccountAllConstraints(100, (err)=>{\n            console.debug", "     AccountManager.getOsAccountAllConstraints(localId, (err, constraints)=>{\n        ", "e.debug(\"====>twice getOsAccountAllConstraints err:\" + JSON.stringify(err));\n         ", "e.debug(\"====>twice getOsAccountAllConstraints:\" + JSON.stringify(constraints));\n     ", "wait AccountManager.getOsAccountAllConstraints(nonExistentLocalId);\n        }\n        ", "     AccountManager.getOsAccountAllConstraints(nonExistentLocalId, (err)=>{\n          ", "     AccountManager.getOsAccountAllConstraints(0, (err, constraints)=>{\n            co", "console.debug(\"====>getOsAccountAllConstraints:\" + JSON.stringify(constraints));\n     ", "wait AccountManager.getOsAccountAllConstraints(localId);\n        console.debug(\"====>t", "console.debug(\"====>getOsAccountAllConstraints err:\" + JSON.stringify(err));\n         ", "wait AccountManager.getOsAccountAllConstraints(100);\n        }\n        catch(err){\n   ", "console.debug(\"====>getOsAccountAllConstraints :\" + JSON.stringify(constraints));\n    ", "wait AccountManager.getOsAccountAllConstraints(localId);\n        console.debug(\"====>g", "     AccountManager.getOsAccountAllConstraints(localId, (err, allConstraints)=>{\n     ", "console.debug(\"====>getOsAccountAllConstraints:\" + JSON.stringify(err));\n            e"], "files": ["Permission.test.js", "Constraints.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountAllConstraints", "api_method_all": "getOsAccountAllConstraints(localId: number): Promise<Array<string>>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "queryAllCreatedOsAccounts", "api_method_all": "queryAllCreatedOsAccounts(callback: AsyncCallback<Array<OsAccountInfo>>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 34, "since": 7, "api_used": "\u662f", "lines": ["console.debug(\"====>queryAllCreatedOsAccounts data:\" + JSON.stringify(data));\n       ", "console.debug(\"====>queryAllCreatedOsAccounts err:\" + JSON.stringify(err));\n         ", "   osAccountManager.queryAllCreatedOsAccounts((err, data)=>{\n                console.", "console.debug(\"====>queryAllCreatedOsAccounts:\" + JSON.stringify(osAccountCreated));\n", "   osAccountManager.queryAllCreatedOsAccounts((err, data)=>{\n            console.debu", "   osAccountManager.queryAllCreatedOsAccounts((err, data)=>{\n                    cons", "it osAccountManager.queryAllCreatedOsAccounts();\n        console.debug(\"====>queryAll"], "files": ["OnOff.test.js", "Create.test.js", "Query.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "queryAllCreatedOsAccounts", "api_method_all": "queryAllCreatedOsAccounts(): Promise<Array<OsAccountInfo>>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "queryActivatedOsAccountIds", "api_method_all": "queryActivatedOsAccountIds(callback: AsyncCallback<Array<number>>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "queryActivatedOsAccountIds", "api_method_all": "queryActivatedOsAccountIds(): Promise<Array<number>>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "createOsAccount", "api_method_all": "createOsAccount(localName: string, type: OsAccountType, callback: AsyncCallback<OsAccountInfo>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 257, "since": 7, "api_used": "\u662f", "lines": ["console.debug(\"====>createOsAccount data:\" + JSON.stringify(data));\n       ", "   osAccountManager.createOsAccount(\"osAccountNameTestDelete\", 1, (err, osA", "console.debug(\"====>createOsAccountFormDomain repeat err : \" + JSON.stringi", "\n\t osAccountManager.createOsAccountForDomain(0,{\n\t     domain: \"def\",\n\t    ", "   osAccountManager.createOsAccountForDomain(0,{\n\t         domain: \"def\",\n\t", "it osAccountManager.createOsAccountForDomain(0,{\n\t     domain: \"abc\",\n\t    ", "     AccountManager.createOsAccount(\"aaa\", osAccount.OsAccountType.NORMAL, ", "wait AccountManager.createOsAccount(\"aaa\", osAccount.OsAccountType.NORMAL);", "   osAccountManager.createOsAccount(\"osAccountNameTestActivate\", 1, (err, o", "console.debug(\"====>createOsAccount osAccountInfo:\" + JSON.stringify(osAcco", "     AccountManager.createOsAccount(\"osAccountNameCreate\", osAccount.OsAcco", "console.debug(\"====>createOsAccount:\" + JSON.stringify(osAccountInfo));\n   ", "console.debug(\"====>createOsAccount err:\" + JSON.stringify(err));\n         ", "     AccountManager.createOsAccount('NameConstraintsC', osAccount.OsAccount", "console.debug(\"====>createOsAccount info:\" + JSON.stringify(info));\n       ", "it osAccountManager.createOsAccount(\"osAccountNameTestActivate\", 1);\n      ", "wait AccountManager.createOsAccount(\"osAccountNameCreate\", osAccount.OsAcco", "wait AccountManager.createOsAccount(\"NameConstraintsP\", osAccount.OsAccount"], "files": ["OnOff.test.js", "Constraint.test.js", "Create.test.js", "index.js", "Photo.test.js", "Permission.test.js", "Constraints.test.js", "Query.test.js", "Limit.test.js", "Activate.test.js", "Set.test.js", "DomainInfo.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "createOsAccount", "api_method_all": "createOsAccount(localName: string, type: OsAccountType): Promise<OsAccountInfo>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["    * @tc.name    : createOsAccount callback\n     * @tc.desc    : Authentic", "    * @tc.name    : createOsAccount promise\n     * @tc.desc    : Authentica"], "files": ["Create.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "createOsAccountForDomain", "api_method_all": "createOsAccountForDomain(type: OsAccountType, domainInfo: DomainAccountInfo, callback: AsyncCallback<OsAccountInfo>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["it osAccountManager.createOsAccountForDomain(0,{\n\t     domain: \"abc\",\n\t     accountN", "\n\t osAccountManager.createOsAccountForDomain(0,{\n\t     domain: \"def\",\n\t     accountN", "   osAccountManager.createOsAccountForDomain(0,{\n\t         domain: \"def\",\n\t\t  accoun"], "files": ["DomainInfo.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "createOsAccountForDomain", "api_method_all": "createOsAccountForDomain(type: OsAccountType, domainInfo: DomainAccountInfo): Promise<OsAccountInfo>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "queryCurrentOsAccount", "api_method_all": "queryCurrentOsAccount(callback: AsyncCallback<OsAccountInfo>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 20, "since": 7, "api_used": "\u662f", "lines": ["    * @tc.name    : queryCurrentOsAccount callback\n     * @tc.desc    : Get the o", "    * @tc.name    : queryCurrentOsAccount promise\n     * @tc.desc    : Get the os", "     AccountManager.queryCurrentOsAccount((err, data)=>{\n            console.debu", "wait AccountManager.queryCurrentOsAccount();\n        console.debug(\"====>queryCur", "     AccountManager.queryCurrentOsAccount((err, currentOsInfo)=>{\n               ", "console.debug(\"====>queryCurrentOsAccount:\" + JSON.stringify(currentOsInfo));\n   ", "console.debug(\"====>queryCurrentOsAccount data:\" + JSON.stringify(currentOsInfo))", "    * @tc.name    : queryCurrentOsAccount callback\n     * @tc.desc    : the appli", "console.debug(\"====>queryCurrentOsAccount data:\" + JSON.stringify(data));\n       ", "     AccountManager.queryCurrentOsAccount((err)=>{\n            console.debug(\"===", "    * @tc.name    : queryCurrentOsAccount promise\n     * @tc.desc    : the applic", "    * @tc.name    : queryCurrentOsAccount promise\n     * @tc.desc    : Get the lo", "wait AccountManager.queryCurrentOsAccount();\n        }\n        catch(err){\n      ", "console.debug(\"====>queryCurrentOsAccount err:\" + JSON.stringify(err));\n         ", "    * @tc.name    : queryCurrentOsAccount callback\n     * @tc.desc    : Get the l"], "files": ["Permission.test.js", "Query.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "queryCurrentOsAccount", "api_method_all": "queryCurrentOsAccount(): Promise<OsAccountInfo>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "queryOsAccountById", "api_method_all": "queryOsAccountById(localId: number, callback: AsyncCallback<OsAccountInfo>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 66, "since": 7, "api_used": "\u662f", "lines": ["debug(\"====>receive queryOsAccountById data: \" + JSON.stringify(data));\n      ", "     AccountManager.queryOsAccountById(100, (err)=>{\n            console.debug", "console.debug(\"====>queryOsAccountById info:\" + JSON.stringify(getInfo));\n    ", "wait AccountManager.queryOsAccountById(100);\n        console.debug(\"====>query", "it osAccountManager.queryOsAccountById(localIdStr);\n        console.debug(\"===", "it osAccountManager.queryOsAccountById(-1);\n        }catch(err){\n            c", "console.debug(\"====>queryOsAccountById data:\" + JSON.stringify(data));\n       ", "   osAccountManager.queryOsAccountById(undefined, funcQueryById);\n        setT", "it osAccountManager.queryOsAccountById(0);\n        console.debug(\"====>queryOs", "it osAccountManager.queryOsAccountById(localId);\n        console.debug(\"====>q", "it osAccountManager.queryOsAccountById(undefined);\n        console.debug(\"====", "it osAccountManager.queryOsAccountById(100);\n        console.debug(\"====>query", "console.debug(\"====>queryOsAccountById info:\" + JSON.stringify(info));\n       ", "console.debug(\"====>queryOsAccountById err:\" + JSON.stringify(err));\n         ", "   osAccountManager.queryOsAccountById(localIdStr, funcQueryById);\n        set", "console.debug(\"====>queryOsAccountById data:\" +JSON.stringify(info));\n        ", "   osAccountManager.queryOsAccountById(localId, (err, info)=>{\n               ", "e.debug(\"====>catch queryOsAccountById err:\" + JSON.stringify(err));\n         ", "wait AccountManager.queryOsAccountById(100);\n        }\n        catch(err){\n   ", "   osAccountManager.queryOsAccountById(-1, (err)=>{\n            console.debug(", "it osAccountManager.queryOsAccountById(localId);\n        }\n        catch(err){", "   osAccountManager.queryOsAccountById(localId, (err,info)=>{\n                ", "   osAccountManager.queryOsAccountById(100, (err, data)=>{\n            console", "     AccountManager.queryOsAccountById(100, (err, data)=>{\n            console", "debug(\"====>receive queryOsAccountById err: \" + JSON.stringify(err));\n        ", "console.debug(\"====>queryOsAccountById osAccountInfo:\" + JSON.stringify(osAcco", "   osAccountManager.queryOsAccountById(0, (err, data)=>{\n            console.d"], "files": ["Permission.test.js", "Query.test.js", "Set.test.js", "Interact.test.js", "Manage.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "queryOsAccountById", "api_method_all": "queryOsAccountById(localId: number): Promise<OsAccountInfo>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountTypeFromProcess", "api_method_all": "getOsAccountTypeFromProcess(callback: AsyncCallback<OsAccountType>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["   osAccountManager.getOsAccountTypeFromProcess((err, accountType)=>{\n            conso", "    * @tc.name    : getOsAccountTypeFromProcess callback\n     * @tc.desc    : Verify th", "    * @tc.name    : getOsAccountTypeFromProcess promise\n     * @tc.desc    : Verify tha", "it osAccountManager.getOsAccountTypeFromProcess();\n        console.debug(\"====>type obt"], "files": ["Permission.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountTypeFromProcess", "api_method_all": "getOsAccountTypeFromProcess(): Promise<OsAccountType>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getDistributedVirtualDeviceId", "api_method_all": "getDistributedVirtualDeviceId(callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["wait AccountManager.getDistributedVirtualDeviceId();\n            console.debug(\"====>getD", "console.debug(\"====>getDistributedVirtualDeviceId:\" + id);\n            expect(id).assertE", "console.debug(\"====>getDistributedVirtualDeviceId deviceId:\" + id);\n                expec", "console.debug(\"====>getDistributedVirtualDeviceId err:\" + JSON.stringify(err));\n         ", "     AccountManager.getDistributedVirtualDeviceId((err, id)=>{\n                console.de", "console.debug(\"====>getDistributedVirtualDeviceId start====\");\n            var id = await"], "files": ["OsAccountIs.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getDistributedVirtualDeviceId", "api_method_all": "getDistributedVirtualDeviceId(): Promise<string>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountProfilePhoto", "api_method_all": "getOsAccountProfilePhoto(localId: number, callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 25, "since": 7, "api_used": "\u662f", "lines": ["it osAccountManager.getOsAccountProfilePhoto(localIdStr);\n        expect(data).asser", "    * @tc.name    : getOsAccountProfilePhoto promise\n     * @tc.desc    : get curren", "it osAccountManager.getOsAccountProfilePhoto(nonExistentId);\n        }catch(err){\n  ", "console.debug(\"====>getOsAccountProfilePhoto photo:\" + photo);\n            expect(er", "   osAccountManager.getOsAccountProfilePhoto(nonExistentId, (err)=>{\n            con", "    * @tc.name    : getOsAccountProfilePhoto callback\n     * @tc.desc    : get curre", "wait AccountManager.getOsAccountProfilePhoto(100);\n        }\n        catch(err){\n   ", "   osAccountManager.getOsAccountProfilePhoto(localIdStr, gerPhotoCallback);\n        ", "     AccountManager.getOsAccountProfilePhoto(receiveLocalId, (err)=>{\n              ", "   osAccountManager.getOsAccountProfilePhoto(localId, (err, photo)=>{\n              ", "   osAccountManager.getOsAccountProfilePhoto(undefinedId,gerPhotoCallback);\n        ", "console.debug(\"====>getOsAccountProfilePhoto photo:\" + photo);\n        expect(photo)", "     AccountManager.getOsAccountProfilePhoto(100, (err, photo)=>{\n            consol", "it osAccountManager.getOsAccountProfilePhoto(localId);\n        console.debug(\"====>g", "console.debug(\"====>getOsAccountProfilePhoto err:\" + JSON.stringify(err));\n         ", "wait AccountManager.getOsAccountProfilePhoto(receiveLocalId);\n            }\n        ", "it osAccountManager.getOsAccountProfilePhoto(undefinedId);\n        expect(data).asse"], "files": ["Permission.test.js", "Photo.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountProfilePhoto", "api_method_all": "getOsAccountProfilePhoto(localId: number): Promise<string>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "setOsAccountProfilePhoto", "api_method_all": "setOsAccountProfilePhoto(localId: number, photo: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 40, "since": 7, "api_used": "\u662f", "lines": ["it osAccountManager.setOsAccountProfilePhoto(100, \"bbb\");\n        }\n        catch(er", "   osAccountManager.setOsAccountProfilePhoto(100, \"\", (err)=>{\n            console.d", "it osAccountManager.setOsAccountProfilePhoto(0, photo);\n        }\n        catch(err)", "wait AccountManager.setOsAccountProfilePhoto(100, photo);\n        }\n        catch(er", "console.debug(\"====>setOsAccountProfilePhoto err:\" + JSON.stringify(err));\n         ", "   osAccountManager.setOsAccountProfilePhoto(localId, photo, (err)=>{\n              ", "console.debug(\"====>setOsAccountProfilePhoto err:\" +JSON.stringify(err));\n          ", "     AccountManager.setOsAccountProfilePhoto(localId, photo, (err)=>{\n              ", "     AccountManager.setOsAccountProfilePhoto(100, photo, (err)=>{\n            consol", "it osAccountManager.setOsAccountProfilePhoto(localId, photo);\n        }\n        catc", "e.debug(\"====>catch setOsAccountProfilePhoto err:\" + JSON.stringify(err));\n         ", "   osAccountManager.setOsAccountProfilePhoto(0, photo, (err)=>{\n            console.", "it osAccountManager.setOsAccountProfilePhoto(100, \"\");\n        }\n        catch(err){", "   osAccountManager.setOsAccountProfilePhoto(100, \"bbb\", (err)=>{\n            consol", "wait AccountManager.setOsAccountProfilePhoto(localId, photo);\n        }\n        catc"], "files": ["Permission.test.js", "Constraint.test.js", "Set.test.js", "Limit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "setOsAccountProfilePhoto", "api_method_all": "setOsAccountProfilePhoto(localId: number, photo: string): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountLocalIdBySerialNumber", "api_method_all": "getOsAccountLocalIdBySerialNumber(serialNumber: number, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 9, "since": 8, "api_used": "\u662f", "lines": ["   osAccountManager.getOsAccountLocalIdBySerialNumber(serialNumber, (err, getlocalId)=>{\n    ", "   osAccountManager.getOsAccountLocalIdBySerialNumber(serialNumber, (err, localId)=>{\n       ", "    * @tc.name    : getOsAccountLocalIdBySerialNumber promise\n     * @tc.desc    : Verify the", "it osAccountManager.getOsAccountLocalIdBySerialNumber(serialNumber);\n        console.debug(\"="], "files": ["Permission.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getOsAccountLocalIdBySerialNumber", "api_method_all": "getOsAccountLocalIdBySerialNumber(serialNumber: number): Promise<number>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getSerialNumberByOsAccountLocalId", "api_method_all": "getSerialNumberByOsAccountLocalId(localId: number, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 10, "since": 8, "api_used": "\u662f", "lines": ["it osAccountManager.getSerialNumberByOsAccountLocalId(localId);\n        console.debug(\"====>g", "it osAccountManager.getSerialNumberByOsAccountLocalId(100);\n        console.debug(\"====>get s", "   osAccountManager.getSerialNumberByOsAccountLocalId(100, (err, serialNumber)=>{\n           ", "it osAccountManager.getSerialNumberByOsAccountLocalId(0);\n        console.debug(\"====>get ser", "    * @tc.name    : getSerialNumberByOsAccountLocalId promise\n     * @tc.desc    : Verify que", "   osAccountManager.getSerialNumberByOsAccountLocalId(localId, (err, serialNumber)=>{\n       ", "    * @tc.name    : getSerialNumberByOsAccountLocalId callback\n     * @tc.desc    : Verify qu", "   osAccountManager.getSerialNumberByOsAccountLocalId(0, (err, serialNumber)=>{\n            c"], "files": ["Permission.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "getSerialNumberByOsAccountLocalId", "api_method_all": "getSerialNumberByOsAccountLocalId(localId: number): Promise<number>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "on", "api_method_all": "on(type: 'activate' | 'activating', name: string, callback: Callback<number>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 8941, "since": 7, "api_used": "\u662f", "lines": ["s.title = \"Application account js test\";\n    },\n    onShow() {", "0, async function (done) {\n        console.debug(\"====>ActsAcc", "reate');\n    },\n    onDestroy() {\n        console.info('AceApp", "('config')\n        configService.setConfig(this)\n\n        requ", "deccjsunit/index'\n\nconst injectRef = Object.getPrototypeOf(glo", ");\n                done();\n            });\n        });\n    });", "e.info('AceApplication onDestroy');\n    }\n};\n", "end====\");\n        done();   \n    });\n\n    \n    it('ActsAccoun", "Instance()\n        const expectExtend = new ExpectExtend({\n   ", "      console.info('onShow finish')\n        const core = Core.", "n (done) {\n        console.debug(\"====>ActsAccountAddAccount_0", "xport default {\n    onInit() {\n        this.title = \"Applicati", "(err){\n            console.error(\"====>add account fail err:\" ", ">{\n                console.debug(\"====>delete Account ActsAcco", "t NAMELIMIT = 512;\nconst LENGTHLIMIT = 1024;\ndescribe('ActsAcc", "xecute()\n    },\n    onReady() {\n    },\n}", "  configService.setConfig(this)\n\n        require('../../../tes", "Manager();\n        console.debug(\"====>creat finish====\");\n   ", "w finish')\n        const core = Core.getInstance()\n        con", "nfo('AceApplication onCreate');\n    },\n    onDestroy() {\n     ", "tAddAccount', function () {\n\n    \n    it('ActsAccountAddAccoun", "nfo('AceApplication onDestroy');\n    }\n};\n", "nt_name_callback_second\", \"account_extraInfo_callback_second\",", "xport default {\n    onCreate() {\n        console.info('AceAppl", "e_first\");\n        console.debug(\"====>ActsAccountAddAccount_0", "00', 0, async function (done) {\n        console.debug(\"====>Ac", "deccjsunit/index'\n\nconst NAMELIMIT = 512;\nconst LENGTHLIMIT = ", "getDefaultService('config')\n        configService.setConfig(th", "onShow() {\n        console.info('onShow finish')\n        const", "traInfo_callback_second\", (err)=>{\n            console.debug(\"", "Create() {\n        console.info('AceApplication onCreate');\n  ", "estroy() {\n        console.info('AceApplication onDestroy');\n ", "ail();\n            done();\n        }\n        console.debug(\"==", "\n        }\n        console.debug(\"====>delete account start===", "ish====\");\n        console.debug(\"====>add account start====\")", "rr)=>{\n            console.debug(\"====>add account ActsAccount", "s test\";\n    },\n    onShow() {\n        console.info('onShow fi", "e.info('AceApplication onCreate');\n    },\n    onDestroy() {\n  ", "t()\n\n        const configService = core.getDefaultService('con", ");\n                console.debug(\"====>ActsAccountAddAccount_0", "re.init()\n\n        const configService = core.getDefaultServic"], "files": ["List.test.js", "Permission.test.js", "OsAccount.test.js", "Constraints.test.js", "Query.test.js", "Set.test.js", "Interact.test.js", "AppAccess.test.js", "NoPermission.test.js", "OAuthToken.test.js", "Credential.test.js", "OnOff.js", "app.js", "ExtraInfo.test.js", "Getallaccessible.test.js", "Constraint.test.js", "Getallaccounts.test.js", "Photo.test.js", "Manage.test.js", "index.js", "OsAccountIs.test.js", "OnOff.test.js", "Create.test.js", "Getmultiple.test.js", "DeleteAccount.test.js", "AddAccount.test.js", "Limit.test.js", "Syncenable.test.js", "Activate.test.js", "DomainInfo.test.js", "CreatManager.test.js", "AssociatedData.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AccountManager", "api_method_name": "off", "api_method_all": "off(type: 'activate' | 'activating', name: string, callback?: Callback<number>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 202, "since": 7, "api_used": "\u662f", "lines": ["e.actsaccountsceneonoff\", disCallback);\n        }\n        funct", "ccountCredential(\"onoff_credential\", \"credentialType\", \"credent", "addAccount(\"changeonoff_extra\");\n        console.debug(\"====>en", "nager.addAccount(\"onoff_enableFir\");\n        console.debug(\"===", ".enableAppAccess(\"onoff_associatedata\", \"com.example.actsaccoun", ".enableAppAccess(\"onoff_deleteFir\", \"com.example.actsaccountsce", "er.deleteAccount(\"onoff_deleteSec\");\n                }\n        ", "nager.addAccount(\"onoff_enableSec\");\n        console.debug(\"===", "e.actsaccountsceneonoff.MainAbility\",\n                    actio", "e.actsaccountsceneonoff\");\n                }\n                ca", "er.deleteAccount(\"onoff_enableSec\", (err)=>{\n                co", "er.deleteAccount(\"onoff_disable\", deleteAccountCallback);\n     ", "eteAccount(\"changeonoff_extra\", deleteAccountCallback);\n       ", "nager.addAccount(\"onoff_deleteFir\");\n        console.debug(\"===", "nager.addAccount(\"onoff_delete\");\n        console.debug(\"====>e", "er.deleteAccount(\"onoff_credential\", deleteAccountCallback);\n  ", "eAppAccess(\"changeonoff_extra\", \"com.example.actsaccountsceneon", "e.actsaccountsceneonoff\");\n        console.debug(\"====>enableAp", "e.actsaccountsceneonoff\",\n                    abilityName: \"com", "etAssociatedData(\"onoff_associatedata\", \"change_key\", \"change_v", "er.deleteAccount(\"onoff_delete\");\n                }\n           ", "pect(dataMap.has(\"onoff_self\")).assertTrue();\n            if (d", "nager.addAccount(\"onoff_deleteSec\");\n        console.debug(\"===", "e.actsaccountsceneonoff\");\n        function unSubscriberCallbac", ".enableAppAccess(\"onoff_deleteSec\", \"com.example.actsaccountsce", " if (dataMap.has(\"onoff_self\")) {\n                let data = da", "nager.addAccount(\"onoff_disable\");\n        console.debug(\"====>", ".enableAppAccess(\"onoff_delete\", \"com.example.actsaccountsceneo", "disableAppAccess(\"onoff_disable\", \"com.example.actsaccountscene", ".enableAppAccess(\"onoff_credential\", \"com.example.actsaccountsc", "er.deleteAccount(\"onoff_associatedata\", deleteAccountCallback);", ".enableAppAccess(\"onoff_enableFir\", \"com.example.actsaccountsce", ".enableAppAccess(\"onoff_enableSec\", \"com.example.actsaccountsce", "er.deleteAccount(\"onoff_deleteFir\", deleteAccountCallback);\n   ", "tExtraInfo(\"changeonoff_extra\", \"change_extra\");\n              ", ".enableAppAccess(\"onoff_disable\", \"com.example.actsaccountscene", "nager.addAccount(\"onoff_associatedata\");\n        console.debug(", "disableAppAccess(\"onoff_enableSec\", \"com.example.actsaccountsce", "er.deleteAccount(\"onoff_enableFir\", deleteAccountCallback);\n   ", "nager.addAccount(\"onoff_credential\");\n        console.debug(\"==", "nager.addAccount(\"onoff_self\");\n        console.debug(\"====>on "], "files": ["OnOff.test.js", "index.js", "Limit.test.js", "OnOff.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_all": "interface OsAccountInfo {\n        \n        localId: number;\n\n        \n        localName: string;\n\n        \n        type: OsAccountType;\n\n        \n        constraints: Array<string>;\n\n        \n        isVerified: boolean;\n\n        \n        photo: string;\n\n        \n        createTime: number;\n\n        \n        lastLoginTime: number;\n\n        \n        serialNumber: number;\n\n        \n        isActived: boolean;\n\n        \n        isCreateCompleted: boolean;\n\n        \n        distributedInfo: distributedAccount.DistributedInfo;\n\n         \n         domainInfo: DomainAccountInfo;\n    }", "api_method_name": "OsAccountInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 56, "since": 7, "api_used": "\u662f", "lines": [">lastLoginTime: \" + OsAccountInfo.lastLoginTime);\n   ", "\n            expect(OsAccountInfo.localName).assertEq", "def\",\n\t     }, (err,OsAccountInfo)=>{\n\t         conso", "ond createOsAccount OsAccountInfo:\" + JSON.stringify(", " \" + JSON.stringify(OsAccountInfo));\n                ", "             expect(OsAccountInfo.isActived).assertFa", "             expect(OsAccountInfo.localName).assertEq", " \" + JSON.stringify(OsAccountInfo));\n            expe", "ber;\n        expect(OsAccountInfo.localName).assertEq", "===>domainInfo: \" + OsAccountInfo.domainInfo);\n      ", "                let OsAccountInfo = dataMap.get(creat", "\n            expect(OsAccountInfo.type.NORMAL).assert", "\n            expect(OsAccountInfo.type.ADMIN).assertE", "=>create os account OsAccountInfo: \" + JSON.stringify", "             expect(OsAccountInfo.type.GUEST).assertE", "\n            expect(OsAccountInfo.isActived).assertFa", ":\" + JSON.stringify(OsAccountInfo));\n        console.", "   var localIdFir = OsAccountInfo.localId;\n        va", "             expect(OsAccountInfo.type.NORMAL).assert", " var serialNumFir = OsAccountInfo.serialNumber;\n     ", "=>serialNumber: \" + OsAccountInfo.serialNumber);\n    ", "ocalId;\n        var OsAccountInfo = await osAccountMa", "             expect(OsAccountInfo.type.ADMIN).assertE", "rst createOsAccount OsAccountInfo:\" + JSON.stringify(", "===>createTime: \" + OsAccountInfo.createTime);\n      ", "\n            expect(OsAccountInfo.type.GUEST).assertE", "console.debug(\"====>OsAccountInfo\" + JSON.stringify(o", " \" + JSON.stringify(OsAccountInfo));\n        expect(O", ") {\n            let OsAccountInfo = dataMap.get(creat", "====\");\n        var OsAccountInfo = await osAccountMa"], "files": ["Create.test.js", "OsAccountGet.test.js", "Photo.test.js", "DomainInfo.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "localId", "api_method_all": "localId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 798, "since": 7, "api_used": "\u662f", "lines": ["r.activateOsAccount(localId, (err)=>{\n         ", "xpect(osAccountInfo.localId).assertEqual(100);\n", "ole.debug(\"====>get localId err: \" + JSON.strin", "====\");\n        var localId = await osAccountMa", "====\");\n        var localId;\n        AccountMan", "ger.removeOsAccount(localId);\n        console.d", "ual(\"aaa\");\n        localId = info.localId;\n   ", "AccountProfilePhoto(localId, photo);\n        }\n", "     localId = info.localId;\n        await Acco", "abcdef\");\n\t     var localId = osAccountInfo.loc", "IdFromProcess((err, localId)=>{\n            con", "ger.removeOsAccount(localId, (err)=>{\n\t\t      c", "r.activateOsAccount(localId);\n        }\n       ", "lId = osAccountInfo.localId;\n\t     console.debu", "     localId = info.localId;\n            Accoun", "====\");\n        var localId;\n        var info =", "Number).assertEqual(localId);\n\t console.debug(\"", "erify that the user localId obtained from the c", "\n            expect(localId).assertEqual(100);\n", "bcdef\",\n\t });\n\t var localId = osAccountInfo.loc", "ger.removeOsAccount(localId);\n            conso", "ger.removeOsAccount(localId);\n        }\n       ", "console.debug(\"====>localId obtained by process", "ger.removeOsAccount(localId, (err)=>{\n         ", "ined by process:\" + localId);\n            expec", "        expect(data.localId).assertEqual(100);\n", "\"aaa\");\n            localId = info.localId;\n   ", "AccountProfilePhoto(localId, photo, (err)=>{\n  ", "====\");\n        var localId;\n        var photo ", "lId = osAccountInfo.localId;\n\t console.debug(\"="], "files": ["OnOff.test.js", "Constraint.test.js", "Create.test.js", "index.js", "Photo.test.js", "Permission.test.js", "Constraints.test.js", "Query.test.js", "Limit.test.js", "Activate.test.js", "Set.test.js", "Interact.test.js", "Manage.test.js", "DomainInfo.test.js", "OsAccountIs.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "localName", "api_method_all": "localName: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 132, "since": 7, "api_used": "\u662f", "lines": ["   expect(osAccount.localName).assertEqual(\"osAcc", "xpect(osAccountInfo.localName).assertEqual(\"osAcc", "xpect(osAccountInfo.localName).assertEqual(\"def/a", "xpect(OsAccountInfo.localName).assertEqual(\"nameC", "xpect(OsAccountInfo.localName).assertEqual(\"osAcc", "xpect(osAccountInfo.localName).assertEqual(\"abc/a", "        expect(info.localName).assertEqual(\"aaa\")", "        expect(info.localName).assertEqual(\"NameC", "        expect(data.localName).assertEqual(\"NameC"], "files": ["OnOff.test.js", "Create.test.js", "Constraint.test.js", "Photo.test.js", "Constraints.test.js", "Query.test.js", "Limit.test.js", "Set.test.js", "DomainInfo.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "type", "api_method_all": "type: OsAccountType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 60, "since": 7, "api_used": "\u662f", "lines": ["        expect(data.type.ADMIN).assertEqual(", "user with parameter type mismatch\n     */\n  ", "ribe with parameter type as other string\n   ", "erify that the user type obtained from the c", "ate a local user of type normal and get all ", "tion with parameter type as undefined\n     *", "ate a local user of type guest and get all c", "ceAbility want: \" + typeof(want));\n         ", "xpect(OsAccountInfo.type.GUEST).assertEqual(", "tCredential setting type when the incoming p", "console.debug(\"====>type obtained by process", "ribe with parameter type as empty string\n   ", "ef = Object.getPrototypeOf(global) || global", "  : create a normal type local user,add all ", "xpect(OsAccountInfo.type.ADMIN).assertEqual(", "xpect(osAccountInfo.type.ADMIN).assertEqual(", "xpect(OsAccountInfo.type.NORMAL).assertEqual", "user with parameter type not matching\n     *", "ole.debug(\"====>get type err: \" + JSON.strin", "ribe with parameter type as undefined\n     *"], "files": ["OnOff.test.js", "Create.test.js", "Permission.test.js", "Constraints.test.js", "Query.test.js", "Credential.test.js", "Interact.test.js", "Manage.test.js", "index.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "constraints", "api_method_all": "constraints: Array<string>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 99, "since": 7, "api_used": "\u662f", "lines": ["       let result = constraints.includes(\"constrain", "    if(numberTwo == constraints.length-1){\n        ", ":\" + JSON.stringify(constraints));\n        let resu", "ocalId;\n        var constraints = await AccountMana", "      let result1 = constraints.includes(\"constrain", "=>getAccountManager constraints:\" + JSON.stringify(", "=>getAccountManager constraints:\" +JSON.stringify(c", "Constraints.indexOf(constraints[j]) == -1){\n       ", "====\");\n        var constraints = await AccountMana", "onstraints(0, (err, constraints)=>{\n            con", "   for(var i=0; i < constraints.length; i++){\n     ", "\"====>the number of constraints obtained:\" + succee", ":\" + JSON.stringify(constraints));\n        expect(c", "ints(localId, (err, constraints)=>{\n               ", "untConstraintEnable constraints:\" + constraintTwice", "bug(\"====>number of constraints not fetched:\" + fai", "s));\n        expect(constraints.length).assertEqual", "   for(var j = 0; j<constraints.length; j++){\n     ", "\n            expect(constraints.length).assertEqual", "             expect(constraints.length).assertEqual", ":\" + JSON.stringify(constraints));\n            expe", "untConstraintEnable constraints:\" + constraint);\n  ", "                 if(constraints[i] != \"constraint.n", ":\" + JSON.stringify(constraints));\n                ", "       if(number == constraints.length-1){\n        ", " true);\n        var constraints = await AccountMana", "s:\" +JSON.stringify(constraints));\n        expect(c"], "files": ["Constraints.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "isVerified", "api_method_all": "isVerified: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 35, "since": 8, "api_used": "\u662f", "lines": ["efined;\n        var isVerified = await AccountMana", "ed);\n        expect(isVerified).assertEqual(false)", "fied isVerified:\" + isVerified);\n            expec", " \"100\";\n        var isVerified = await AccountMana", "isOsAccountVerified isVerified:\" + isVerified);\n  ", "\n            expect(isVerified).assertEqual(false)", "====\");\n        var isVerified = await AccountMana", "fied status is: \" + isVerified);\n        expect(is", "Verified(100, (err, isVerified)=>{\n            con", "(0);\n        expect(isVerified).assertFalse();\n   ", "ry{\n            var isVerified = await AccountMana", "ed);\n        expect(isVerified).assertEqual(null);", "fied isVerified:\" + isVerified);\n        expect(is", "ntVerified data:\" + isVerified);\n        expect(is"], "files": ["Permission.test.js", "OsAccountIs.test.js", "Interact.test.js", "Manage.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "photo", "api_method_all": "photo: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 69, "since": 7, "api_used": "\u662f", "lines": ["ofilePhoto(localId, photo);\n        }\n       ", "\n            expect(photo).assertEqual(\"\");\n ", "filePhoto photo:\" + photo);\n            expec", "filePhoto photo:\" + photo);\n        expect(ph", "        expect(info.photo).assertEqual(photo)", "hoto(localId, (err, photo)=>{\n               ", "Id);\n        expect(photo).assertEqual(\"\");\n ", "ocalId;\n        var photo = await osAccountMa", "ilePhoto(100, (err, photo)=>{\n            con", "ntProfilePhoto(100, photo);\n        }\n       ", ".photo).assertEqual(photo);\n                 ", "ate and set profile photo the base64 image co", "ntProfilePhoto(100, photo, (err)=>{\n         ", "\"====>get photo:\" + photo + \" by localId: \" +", "ocalId;\n        var photo = \"data:image/png;b", "to);\n        expect(photo).assertEqual(\"\");\n ", " : get current user photo does not meet the p", "====\");\n        var photo = \"data:image/png;b", "ole.debug(\"====>get photo:\" + photo + \" by lo", "====\");\n        var photo = \"data:image/jpeg;", "ry{\n            var photo = await AccountMana", "ager();\n        var photo = \"data:image/jpeg;", "ocalId;\n        var photo = \"data:image/jpeg;", "ofilePhoto(localId, photo, (err)=>{\n         ", ".photo).assertEqual(photo);\n        await osA", "             expect(photo).assertEqual(\"\");\n ", "AccountProfilePhoto photo:\" + photo);\n       "], "files": ["Constraint.test.js", "Photo.test.js", "Permission.test.js", "Limit.test.js", "Set.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "createTime", "api_method_all": "createTime: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": [": \" + OsAccountInfo.createTime);\n        console.d", "console.debug(\"====>createTime: \" + OsAccountInfo."], "files": ["Create.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "lastLoginTime", "api_method_all": "lastLoginTime: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": [": \" + OsAccountInfo.lastLoginTime);\n        console.d", "console.debug(\"====>lastLoginTime: \" + OsAccountInfo."], "files": ["Create.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "serialNumber", "api_method_all": "serialNumber: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 112, "since": 8, "api_used": "\u662f", "lines": ["calIdBySerialNumber(serialNumber, (err, localId)=>{\n", "Str = osAccountInfo.serialNumber.toString();\n       ", "y serialNumber: \" + serialNumber);\n                e", "100\" );\n        var serialNumberStr = serialNumber.t", "Fir = OsAccountInfo.serialNumber;\n        expect(OsA", "et serialNumber:\" + serialNumber + \" by localId: 100", "d query 100 user by serialNumber does not meet the\n ", "calIdBySerialNumber(serialNumber);\n        console.d", "tLocalId(100, (err, serialNumber)=>{\n            con", "y serialNumber: \" + serialNumber);\n        expect(lo", "r serialIntercept = serialNumberStr.substring(8);\n  ", "ole.debug(\"====>ger serialNumber err:\" + JSON.string", "(\"====>first create serialNumber: \" + serialNumFir +", "r serialNumberStr = serialNumber.toString();\n       ", "alNumFir + \" second serialNumber: \" + serialNumSec);", "console.debug(\"====>serialNumber: \" + OsAccountInfo.", ":\" + localId + \" by serialNumber: \" + serialNumber);", ": \" + OsAccountInfo.serialNumber);\n        console.d", "0);\n            var serialNumberStr = data.serialNum", "0);\n            var serialNumberStr = serialNumber.t", "c    : Verify query serialNumber by 100 user and que", "ialNumberStr = data.serialNumber.toString();\n       ", "====\");\n        var serialNumber = await osAccountMa", "ec = accountInfoSec.serialNumber;\n        await osAc", "reused and the user serialNumber is not\n     */\n    ", "ole.debug(\"====>get serialNumber:\" + serialNumber + ", "ual(0);\n        var serialNumberStr = osAccountInfo."], "files": ["Create.test.js", "Permission.test.js", "Query.test.js", "Interact.test.js", "Manage.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "isActived", "api_method_all": "isActived: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 63, "since": 8, "api_used": "\u662f", "lines": ["tActived(100, (err, isActived)=>{\n            con", "tived isActived:\" + isActived);\n        expect(is", "untActived data:\" + isActived);\n            expec", "(0);\n            if(isActived){\n                o", "ed);\n        expect(isActived).assertFalse();\n   ", "ed);\n        expect(isActived).assertEqual(true);", "calId);\n        var isActivedTwice = await osAcco", "tived isActived:\" + isActived);\n            expec", ":\" + JSON.stringify(isActived));\n        if(isAct", "ocalId;\n        var isActived = await osAccountMa", "tived));\n        if(isActived){\n            try{\n", "xpect(OsAccountInfo.isActived).assertFalse();\n   ", "sAccountActived:\" + isActivedTwice);\n        expe", "         if(data[i].isActived == true){\n         ", "\n            expect(isActived).assertEqual(true);", "ce);\n        expect(isActivedTwice).assertTrue();", ">isOsAccountActived isActived:\" + isActived);\n   ", "sAccountActived:\" + isActived);\n        expect(is", "====\");\n        var isActived = await osAccountMa", "ry{\n            var isActived = await AccountMana"], "files": ["OnOff.test.js", "Create.test.js", "Permission.test.js", "Activate.test.js", "Interact.test.js", "Manage.test.js", "OsAccountIs.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "isCreateCompleted", "api_method_all": "isCreateCompleted: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 8, "api_used": "\u662f", "lines": ["xpect(osAccountInfo.isCreateCompleted).assertTrue();\n    ", "        expect(data.isCreateCompleted).assertTrue();\n    "], "files": ["Query.test.js", "Interact.test.js", "Manage.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "distributedInfo", "api_method_all": "distributedInfo: distributedAccount.DistributedInfo", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 9, "since": 7, "api_used": "\u662f", "lines": ["             expect(distributedInfo.name).assertEqual('", "stributedInfo((err, distributedInfo)=>{\n               ", "console.log(\"update distributedInfo err:\" + JSON.string", ".debug(\"====>update distributedInfo err:\" + JSON.string", "             expect(distributedInfo.id).assertEqual(dis", " console.log(\"query distributedInfo err:\" + JSON.string", " console.log(\"query distributedInfo:\" + JSON.stringify(", ":\" + JSON.stringify(distributedInfo));\n                "], "files": ["OsAccountIs.test.js", "OsAccount.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountInfo", "api_method_name": "domainInfo", "api_method_all": "domainInfo: DomainAccountInfo", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": [": \" + OsAccountInfo.domainInfo);\n        var local", "console.debug(\"====>domainInfo: \" + OsAccountInfo."], "files": ["Create.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DomainAccountInfo", "api_method_all": "interface DomainAccountInfo {\n        \n        domain: string;\n\n        \n        accountName: string;\n    }", "api_method_name": "DomainAccountInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DomainAccountInfo", "api_method_name": "domain", "api_method_all": "domain: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["dFromDomain({\n\t     domain: \"abc\",\n\t     accou", "ForDomain(0,{\n\t     domain: \"def\",\n\t     accou", "ForDomain(0,{\n\t     domain: \"abc\",\n\t     accou", ": \" + OsAccountInfo.domainInfo);\n        var l", "omain(0,{\n\t         domain: \"def\",\n\t\t  account", "console.debug(\"====>domainInfo: \" + OsAccountI"], "files": ["Create.test.js", "DomainInfo.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DomainAccountInfo", "api_method_name": "accountName", "api_method_all": "accountName: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["AppAccess parameter accountName does not exist\n    ", "omain: \"def\",\n\t     accountName: \"abcdef\",\n\t }, (er", " domain: \"def\",\n\t\t  accountName: \"abcdef\",\n\t     },", "omain: \"abc\",\n\t     accountName: \"abcdef\",\n\t });\n\t "], "files": ["AppAccess.test.js", "DomainInfo.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountType", "api_method_all": "enum OsAccountType {\n        \n        ADMIN = 0,\n\n        \n        NORMAL,\n\n        \n        GUEST\n    }", "api_method_name": "OsAccountType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 80, "since": 7, "api_used": "\u662f", "lines": ["nt(\"aaa\", osaccount.OsAccountType.NORMAL, (err,info)=", "nt(\"aaa\", osAccount.OsAccountType.NORMAL);\n        }\n", "CreateB\", osaccount.OsAccountType.NORMAL);\n        co", "raintsC', osAccount.OsAccountType.NORMAL, (err, data)", "CreateG\", osaccount.OsAccountType.NORMAL, (err, osAcc", "nt(\"aaa\", osAccount.OsAccountType.NORMAL, (err, info)", "CreateH\", osaccount.OsAccountType.NORMAL);\n        co", "CreateC\", osaccount.OsAccountType.GUEST, (err, osAcco", "raintsP\", osAccount.OsAccountType.NORMAL);\n        co", " * @tc.name    : getOsAccountTypeFromProcess callback", "osAccountManager.getOsAccountTypeFromProcess((err, ac", "nt(\"aaa\", osAccount.OsAccountType.NORMAL, (err,info)=", "CreateE\", osaccount.OsAccountType.ADMIN, (err, osAcco", "raintsC', osAccount.OsAccountType.GUEST, (err, data)=", "count(\"\", osaccount.OsAccountType.ADMIN, (err, data)=", "count(\"\", osaccount.OsAccountType.ADMIN);\n        }ca", "CreateF\", osaccount.OsAccountType.ADMIN);\n        con", "osAccountManager.getOsAccountTypeFromProcess();\n     ", "nt(\"aaa\", osAccount.OsAccountType.NORMAL);\n        co", "CreateI\", osaccount.OsAccountType.NORMAL, (err, osAcc", "CreateA\", osaccount.OsAccountType.NORMAL);\n        co", "eSerial\", osaccount.OsAccountType.NORMAL);\n        co", "raintsP\", osAccount.OsAccountType.GUEST);\n        con", "CreateA\", osaccount.OsAccountType.NORMAL, (err, osAcc", "eCreate\", osAccount.OsAccountType.ADMIN);\n        con", "CreateD\", osaccount.OsAccountType.GUEST);\n        con", " * @tc.name    : getOsAccountTypeFromProcess promise\n", "eCreate\", osAccount.OsAccountType.ADMIN, (err, osAcco"], "files": ["Constraint.test.js", "Create.test.js", "Photo.test.js", "Permission.test.js", "Constraints.test.js", "Limit.test.js", "Set.test.js", "index.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountType", "api_method_name": "ADMIN", "api_method_all": "ADMIN = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 22, "since": 0, "api_used": "\u662f", "lines": ["   expect(data.type.ADMIN).assertEqual(0);\n  ", "count.OsAccountType.ADMIN);\n        }catch(er", " expect(accountType.ADMIN).assertEqual(0);\n  ", "count.OsAccountType.ADMIN);\n        console.d", "count.OsAccountType.ADMIN, (err, osAccountInf", "(OsAccountInfo.type.ADMIN).assertEqual(0);\n  ", "(osAccountInfo.type.ADMIN).assertEqual(0);\n  ", "count.OsAccountType.ADMIN, (err, data)=>{\n   "], "files": ["Create.test.js", "Permission.test.js", "Constraints.test.js", "Query.test.js", "Interact.test.js", "Manage.test.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OsAccountType", "api_method_name": "NORMAL", "api_method_all": "NORMAL,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 66, "since": 7, "api_used": "\u662f", "lines": ["count.OsAccountType.NORMAL, (err, info)=>{\n   ", "count.OsAccountType.NORMAL, (err, osAccountInf", "(OsAccountInfo.type.NORMAL).assertEqual(1);\n  ", "count.OsAccountType.NORMAL, (err, data)=>{\n   ", "count.OsAccountType.NORMAL, (err,info)=>{\n    ", "count.OsAccountType.NORMAL);\n        console.d", "count.OsAccountType.NORMAL);\n        }\n       "], "files": ["Constraint.test.js", "Create.test.js", "Photo.test.js", "Permission.test.js", "Constraints.test.js", "Limit.test.js", "Set.test.js", "index.js", "OsAccountGet.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "UserAuth", "api_method_all": "class UserAuth {\n        \n        constructor();\n\n        \n        getVersion(): number;\n\n        \n        getAvailableStatus(authType: AuthType, authTrustLevel: AuthTrustLevel): number;\n\n        \n        getProperty(request: GetPropertyRequest, callback: AsyncCallback<ExecutorProperty>): void;\n        getProperty(request: GetPropertyRequest): Promise<ExecutorProperty>;\n\n        \n        setProperty(request: SetPropertyRequest, callback: AsyncCallback<number>): void;\n        setProperty(request: SetPropertyRequest): Promise<number>;\n\n        \n        auth(challenge: Uint8Array, authType: AuthType, authTrustLevel: AuthTrustLevel, callback: IUserAuthCallback): Uint8Array;\n\n        \n        authUser(userId: number, challenge: Uint8Array, authType: AuthType, authTrustLevel: AuthTrustLevel, callback: IUserAuthCallback): Uint8Array;\n\n        \n        cancelAuth(contextID: Uint8Array): number;\n    }", "api_method_name": "UserAuth", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserAuth", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserAuth", "api_method_name": "getVersion", "api_method_all": "getVersion(): number;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserAuth", "api_method_name": "getAvailableStatus", "api_method_all": "getAvailableStatus(authType: AuthType, authTrustLevel: AuthTrustLevel): number;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserAuth", "api_method_name": "getProperty", "api_method_all": "getProperty(request: GetPropertyRequest, callback: AsyncCallback<ExecutorProperty>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserAuth", "api_method_name": "getProperty", "api_method_all": "getProperty(request: GetPropertyRequest): Promise<ExecutorProperty>;", "api_type": "Promise", "api_args_count": 1, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserAuth", "api_method_name": "setProperty", "api_method_all": "setProperty(request: SetPropertyRequest, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserAuth", "api_method_name": "setProperty", "api_method_all": "setProperty(request: SetPropertyRequest): Promise<number>;", "api_type": "Promise", "api_args_count": 1, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserAuth", "api_method_name": "auth", "api_method_all": "auth(challenge: Uint8Array, authType: AuthType, authTrustLevel: AuthTrustLevel, callback: IUserAuthCallback): Uint8Array;", "api_type": "callback", "api_args_count": 4, "api_level": 11, "api_used_count": 355, "since": 8, "api_used": "\u662f", "lines": ["expect(ArrayData[0].authType).assertEqual(\"authType\");\n         ", "hType).assertEqual(\"authType\");\n                                ", "nt_tokenTest_name\",\"authType\",\"other_app_bundleName\",true,(err)=", "nt_tokenTest_name\",\"authType1\",\"test_token1\",(err)=>{\n          ", "nt_tokenTest_name\",\"authType\",(err,dataArray)=>{\n               ", "n(\"account_callback_authType_limit\",OWNERSELF,limitAuthType,\"cal", "nt_tokenTest_name\",\"authType\",\"test_token\",(err)=>{\n            ", "n(\"account_callback_authType_limit\",\"authType\",\"callback_authTyp", "expect(ArrayData[0].authType).assertEqual(\"authType1\");\n        ", "nt_tokenTest_name\",\"authType\",OWNERSELF,(err,stateBack)=>{\n     ", "st_name\",OWNERSELF,\"authType1\",\"test_token2\",(err)=>{\n          ", "hType).assertEqual(\"authType1\");\n                            exp", "hType).assertEqual(\"authType2\");\n                            exp", "st_name\",OWNERSELF,\"authType\",(err,data)=>{\n                    ", "nt_tokenTest_name\",\"authType2\",\"test_token2\",(err)=>{\n          ", "ounts that have not authorized other applications\n     */\n    it", "nt_tokenTest_name\",\"authType\",OWNERSELF,false,(err)=>{\n         ", "t(\"account_callback_authType_limit\",(err)=>{\n            console", "en(\"account_promise_authType_limit\",OWNERSELF,limitAuthType,\"pro", "nt_tokenTest_name\",\"authType1\",\"test_token2\",(err)=>{\n          ", "n(\"account_callback_authType_limit\",limitAuthType,\"callback_auth", "itAuthType,\"promise_authType_limit_token\");\n        }\n        ca", "st_name\",OWNERSELF,\"authType\",\"test_token\",(err)=>{\n            ", "nt_tokenTest_name\",\"authType1\",\"other_app_bundleName\",true,(err)", "nt(\"account_promise_authType_limit\");\n        console.debug(\"===", "hType).assertEqual(\"authType2\");\n                               ", "nt(\"account_promise_authType_limit\");\n            console.debug(", ".desc      : Cancel authorization Accounts that have not authori", "t(\"account_callback_authType_limit\",(err)=>{\n                   ", "ck_authType_limit\",\"authType\",\"callback_authType_limit_token\",(e", "authType\",\"callback_authType_limit_token\",(err)=>{\n             ", "expect(ArrayData[0].authType).assertEqual(\"authType2\");\n        ", "tAuthType,\"callback_authType_limit_token\",(err)=>{\n             ", "expect(ArrayData[1].authType).assertEqual(\"authType2\");\n        "], "files": ["index.js", "AppAccess.test.js", "OAuthToken.test.js", "OnOff.js"], "is_white": " ", "desc": " "}, {"api_class_name": "UserAuth", "api_method_name": "authUser", "api_method_all": "authUser(userId: number, challenge: Uint8Array, authType: AuthType, authTrustLevel: AuthTrustLevel, callback: IUserAuthCallback): Uint8Array;", "api_type": "callback", "api_args_count": 5, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserAuth", "api_method_name": "cancelAuth", "api_method_all": "cancelAuth(contextID: Uint8Array): number;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PINAuth", "api_method_all": "class PINAuth {\n        \n        constructor();\n\n        \n        registerInputer(inputer: IInputer): boolean;\n\n        \n        unregisterInputer(): void;\n    }", "api_method_name": "PINAuth", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PINAuth", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PINAuth", "api_method_name": "registerInputer", "api_method_all": "registerInputer(inputer: IInputer): boolean;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PINAuth", "api_method_name": "unregisterInputer", "api_method_all": "unregisterInputer(): void;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserIdentityManager", "api_method_all": "class UserIdentityManager {\n        \n        constructor();\n\n        \n        openSession(callback: AsyncCallback<Uint8Array>): void;\n        openSession(): Promise<Uint8Array>;\n\n        \n        addCredential(credentialInfo: CredentialInfo, callback: IIdmCallback): void;\n\n        \n        updateCredential(credentialInfo: CredentialInfo, callback: IIdmCallback): void;\n\n        \n        closeSession(): void;\n\n        \n        cancel(challenge: Uint8Array): number;\n\n        \n        delUser(token: Uint8Array, callback: IIdmCallback): void;\n\n        \n        delCred(credentialId: Uint8Array, token: Uint8Array, callback: IIdmCallback): void;\n\n        \n        getAuthInfo(callback: AsyncCallback<Array<EnrolledCredInfo>>, authType?: AuthType): void;\n        getAuthInfo(authType?: AuthType): Promise<Array<EnrolledCredInfo>>;\n    }", "api_method_name": "UserIdentityManager", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserIdentityManager", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserIdentityManager", "api_method_name": "openSession", "api_method_all": "openSession(callback: AsyncCallback<Uint8Array>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserIdentityManager", "api_method_name": "openSession", "api_method_all": "openSession(): Promise<Uint8Array>;", "api_type": "Promise", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserIdentityManager", "api_method_name": "addCredential", "api_method_all": "addCredential(credentialInfo: CredentialInfo, callback: IIdmCallback): void;", "api_type": "callback", "api_args_count": 2, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserIdentityManager", "api_method_name": "updateCredential", "api_method_all": "updateCredential(credentialInfo: CredentialInfo, callback: IIdmCallback): void;", "api_type": "callback", "api_args_count": 2, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserIdentityManager", "api_method_name": "closeSession", "api_method_all": "closeSession(): void;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserIdentityManager", "api_method_name": "cancel", "api_method_all": "cancel(challenge: Uint8Array): number;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserIdentityManager", "api_method_name": "delUser", "api_method_all": "delUser(token: Uint8Array, callback: IIdmCallback): void;", "api_type": "callback", "api_args_count": 2, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserIdentityManager", "api_method_name": "delCred", "api_method_all": "delCred(credentialId: Uint8Array, token: Uint8Array, callback: IIdmCallback): void;", "api_type": "callback", "api_args_count": 3, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserIdentityManager", "api_method_name": "getAuthInfo", "api_method_all": "getAuthInfo(callback: AsyncCallback<Array<EnrolledCredInfo>>, authType?: AuthType): void;", "api_type": "callback", "api_args_count": 2, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UserIdentityManager", "api_method_name": "getAuthInfo", "api_method_all": "getAuthInfo(authType?: AuthType): Promise<Array<EnrolledCredInfo>>;", "api_type": "Promise", "api_args_count": 1, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "IInputData", "api_method_all": "interface IInputData {\n        \n        onSetData: (pinSubType: AuthSubType, data: Uint8Array) => void;\n    }", "api_method_name": "IInputData", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "IInputData", "api_method_name": "onSetData", "api_method_all": "onSetData: (pinSubType: AuthSubType, data: Uint8Array) => void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "IInputer", "api_method_all": "interface IInputer {\n        \n        onGetData: (callback: IInputData) => void;\n    }", "api_method_name": "IInputer", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "IInputer", "api_method_name": "onGetData", "api_method_all": "onGetData: (callback: IInputData) => void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "IUserAuthCallback", "api_method_all": "interface IUserAuthCallback {\n        \n        onResult: (result: number, extraInfo: AuthResult) => void;\n\n        \n        onAcquireInfo?: (module: number, acquire: number, extraInfo: any) => void;\n    }", "api_method_name": "IUserAuthCallback", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "IUserAuthCallback", "api_method_name": "onResult", "api_method_all": "onResult: (result: number, extraInfo: AuthResult) => void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": [");\n        callback.onResult(0, {\"name\":name,\"au", "},{\n                onResult: (resultCode, resul"], "files": ["OAuthToken.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "IUserAuthCallback", "api_method_name": "onAcquireInfo", "api_method_all": "onAcquireInfo?: (module: number, acquire: number, extraInfo: any) => void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "IIdmCallback", "api_method_all": "interface IIdmCallback {\n        \n        onResult: (result: number, extraInfo: RequestResult) => void;\n\n        \n        onAcquireInfo?: (module: number, acquire: number, extraInfo: any) => void;\n    }", "api_method_name": "IIdmCallback", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "IIdmCallback", "api_method_name": "onResult", "api_method_all": "onResult: (result: number, extraInfo: RequestResult) => void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": [");\n        callback.onResult(0, {\"name\":name,\"au", "},{\n                onResult: (resultCode, resul"], "files": ["OAuthToken.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "IIdmCallback", "api_method_name": "onAcquireInfo", "api_method_all": "onAcquireInfo?: (module: number, acquire: number, extraInfo: any) => void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "GetPropertyRequest", "api_method_all": "interface GetPropertyRequest {\n        \n        authType: AuthType;\n\n        \n        keys: Array<GetPropertyType>;\n    }", "api_method_name": "GetPropertyRequest", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "GetPropertyRequest", "api_method_name": "authType", "api_method_all": "authType: AuthType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 349, "since": 8, "api_used": "\u662f", "lines": ["st_name\",OWNERSELF,\"authType\",(err,data)=>{\n    ", "tAuthType,\"callback_authType_limit_token\",(err)=", "nt_tokenTest_name\",\"authType\",(err,dataArray)=>{", "authType\",\"callback_authType_limit_token\",(err)=", "hType).assertEqual(\"authType\");\n                ", "en(\"account_promise_authType_limit\",OWNERSELF,li", "n(\"account_callback_authType_limit\",\"authType\",\"", "st_name\",OWNERSELF,\"authType\",\"test_token\",(err)", "itAuthType,\"promise_authType_limit_token\");\n    ", "expect(ArrayData[0].authType).assertEqual(\"authT", "nt(\"account_promise_authType_limit\");\n        co", "nt_tokenTest_name\",\"authType\",\"test_token\",(err)", "nt_tokenTest_name\",\"authType2\",\"test_token2\",(er", "hType).assertEqual(\"authType2\");\n               ", "nt_tokenTest_name\",\"authType\",OWNERSELF,false,(e", "nt_tokenTest_name\",\"authType1\",\"other_app_bundle", "n(\"account_callback_authType_limit\",OWNERSELF,li", "nt_tokenTest_name\",\"authType\",OWNERSELF,(err,sta", "expect(ArrayData[1].authType).assertEqual(\"authT", "st_name\",OWNERSELF,\"authType1\",\"test_token2\",(er", "nt_tokenTest_name\",\"authType1\",\"test_token1\",(er", "hType).assertEqual(\"authType1\");\n               ", "nt_tokenTest_name\",\"authType\",\"other_app_bundleN", "nt_tokenTest_name\",\"authType1\",\"test_token2\",(er", "nt(\"account_promise_authType_limit\");\n          ", "n(\"account_callback_authType_limit\",limitAuthTyp", "t(\"account_callback_authType_limit\",(err)=>{\n   ", "ck_authType_limit\",\"authType\",\"callback_authType"], "files": ["OAuthToken.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "GetPropertyRequest", "api_method_name": "keys", "api_method_all": "keys: Array<GetPropertyType>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SetPropertyRequest", "api_method_all": "interface SetPropertyRequest {\n        \n        authType: AuthType;\n\n        \n        key: SetPropertyType;\n\n        \n        setInfo: Uint8Array;\n    }", "api_method_name": "SetPropertyRequest", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SetPropertyRequest", "api_method_name": "authType", "api_method_all": "authType: AuthType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 349, "since": 8, "api_used": "\u662f", "lines": ["st_name\",OWNERSELF,\"authType\",(err,data)=>{\n    ", "tAuthType,\"callback_authType_limit_token\",(err)=", "nt_tokenTest_name\",\"authType\",(err,dataArray)=>{", "authType\",\"callback_authType_limit_token\",(err)=", "hType).assertEqual(\"authType\");\n                ", "en(\"account_promise_authType_limit\",OWNERSELF,li", "n(\"account_callback_authType_limit\",\"authType\",\"", "st_name\",OWNERSELF,\"authType\",\"test_token\",(err)", "itAuthType,\"promise_authType_limit_token\");\n    ", "expect(ArrayData[0].authType).assertEqual(\"authT", "nt(\"account_promise_authType_limit\");\n        co", "nt_tokenTest_name\",\"authType\",\"test_token\",(err)", "nt_tokenTest_name\",\"authType2\",\"test_token2\",(er", "hType).assertEqual(\"authType2\");\n               ", "nt_tokenTest_name\",\"authType\",OWNERSELF,false,(e", "nt_tokenTest_name\",\"authType1\",\"other_app_bundle", "n(\"account_callback_authType_limit\",OWNERSELF,li", "nt_tokenTest_name\",\"authType\",OWNERSELF,(err,sta", "expect(ArrayData[1].authType).assertEqual(\"authT", "st_name\",OWNERSELF,\"authType1\",\"test_token2\",(er", "nt_tokenTest_name\",\"authType1\",\"test_token1\",(er", "hType).assertEqual(\"authType1\");\n               ", "nt_tokenTest_name\",\"authType\",\"other_app_bundleN", "nt_tokenTest_name\",\"authType1\",\"test_token2\",(er", "nt(\"account_promise_authType_limit\");\n          ", "n(\"account_callback_authType_limit\",limitAuthTyp", "t(\"account_callback_authType_limit\",(err)=>{\n   ", "ck_authType_limit\",\"authType\",\"callback_authType"], "files": ["OAuthToken.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SetPropertyRequest", "api_method_name": "key", "api_method_all": "key: SetPropertyType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 70, "since": 8, "api_used": "\u662f", "lines": ["ccount_name_1200\", \"key12_second\", \"value12", "ccount_name_0100\", \"key1\", \"value1\", (err)=", "ccount_name_0100\", \"key1\", (err, data)=>{\n ", "ccount_name_0700\", \"key7\", (err, data)=>{\n ", "ccount_name_0700\", \"key7\", \"value7\", (err)=", "=>getAssociatedData key11_second 1100 data:", "account_name_1600\", keyOverSize, \"value16\")", "ccount_name_0400\", \"key4\");\n            con", "ccount_name_0300\", \"key3\", (err, data)=>{\n ", "ccount_name_1200\", \"key12_first\");\n        ", " < 256;i++)\n        keyOverSize = keyOverSi", "\n            expect(keyOverSize.length).ass", "ociatedData setting key when the incoming p", "a when the incoming key is a space(promise)", "ccount_name_0600\", \"keyerr\");\n        }\n   ", "ccount_name_0800\", \"key8\");\n        }\n     ", "ccount_name_0200\", \"key2\");\n        }\n     ", "ccount_name_1000\", \"key10\");\n        }\n    ", "=>getAssociatedData key11_first 1100 data:\"", "ccount_name_1000\", \"key10\", \"value10\");\n   ", "=>getAssociatedData key11_second 1100 err:\"", "ccount_name_1200\", \"key12_first\", \"value12_", "ccount_name_0600\", \"key6\", \"value6\");\n     ", "ccount_name_0500\", \"keyerr\", (err, data)=>{", "account_name_1500\", keyOverSize, \"value15\",", "a when the incoming key is a space(callback", "ccount_name_1100\", \"key11_first\", (err,data", "le.debug(\"====>1500 keyOverSize.length:\" + ", ";i<256;i++)\n        keyOverSize = keyOverSi", "ccount_name_0500\", \"key5\", \"value5\", (err)=", "ccount_name_0900\", \"key9\", \"value9\", (err)=", "ccount_name_1100\", \"key11_first\", \"value11_", "ccount_name_0700\", \"key7\", \"newvalue7\", (er", "====\");\n        var keyOverSize = \"K\"\n     ", "=\");\n        expect(keyOverSize.length).ass", "ccount_name_1100\", \"key11_second\", \"value11", "=>getAssociatedData key11_first 1100 err:\" ", "      keyOverSize = keyOverSize + \"K!@#\";\n ", "ccount_name_0900\", \"key9\", (err, data)=>{\n ", "ccount_name_1200\", \"key12_second\");\n       ", "account_name_0800\",\"key8\",\"newvalue8\");\n   ", "ccount_name_0200\", \"key2\", \"value2\");\n     ", "ociatedData setting key is called when the ", ":\" + JSON.stringify(keyOverSize.length));\n ", "account_name_0800\",\"key8\",\"value8\");\n      ", "ccount_name_1100\", \"key11_second\", (err,dat"], "files": ["AssociatedData.test.js", "OnOff.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SetPropertyRequest", "api_method_name": "setInfo", "api_method_all": "setInfo: Uint8Array", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ExecutorProperty", "api_method_all": "interface ExecutorProperty {\n        \n        result: number;\n\n        \n        authSubType: AuthSubType;\n\n        \n        remainTimes?: number;\n\n        \n        freezingTime?: number;\n    }", "api_method_name": "ExecutorProperty", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ExecutorProperty", "api_method_name": "result", "api_method_all": "result: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 54, "since": 8, "api_used": "\u662f", "lines": ["esult: (resultCode, resultData) =>{\n          ", "             expect(resultData.token).assertEq", ":\" + JSON.stringify(resultCode));\n            ", "t));\n        expect(result).assertEqual(null);", "_13300 authenticate resultCode:\" + JSON.string", "obj).then(function (result) {\n                ", "obj).then(function (result) {\n            expe", ":\" + JSON.stringify(result));\n        expect(r", "         onResult: (resultCode, resultData)=>{", "ints));\n        let result = constraints.inclu", "th the verification result to the test applica", "ager();\n        var result = await atManager.g", "StartSetting, (err, result)=>{\n               ", "enID + \" result:\" + result);\n        sleep(TIM", "t\");\n        expect(result1).assertTrue();\n   ", "====\");\n        var result = await osAccountMa", "             expect(resultCode.code).assertEqu", "es the verification result to the test applica", ":\" + JSON.stringify(resultData));\n            ", "         onResult: (resultCode, resultData) =>", "enId\" + tokenID + \" result:\" + result);\n      ", "             expect(resultData.authType).asser", "ints));\n        let result1 = constraints.incl", "             expect(result).assertTrue()\n     ", "_13300 authenticate resultData:\" + JSON.string", "             expect(result).assertTrue();\n    ", "             expect(resultData.name).assertEqu", "Info(obj, function (result) {\n            expe", "esult: (resultCode, resultData)=>{\n           ", "\n            expect(result).assertTrue()\n     ", "t\");\n        expect(result).assertTrue();\n    ", "_13400 authenticate resultData:\" + JSON.string", "_13400 authenticate resultCode:\" + JSON.string", "                let result = constraints.inclu"], "files": ["OsAccount.test.js", "Constraints.test.js", "OAuthToken.test.js", "Syncenable.test.js", "Set.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ExecutorProperty", "api_method_name": "authSubType", "api_method_all": "authSubType: AuthSubType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ExecutorProperty", "api_method_name": "remainTimes", "api_method_all": "remainTimes?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ExecutorProperty", "api_method_name": "freezingTime", "api_method_all": "freezingTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthResult", "api_method_all": "interface AuthResult {\n        \n        token?: Uint8Array;\n\n        \n        remainTimes?: number;\n\n        \n        freezingTime?: number;\n    }", "api_method_name": "AuthResult", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthResult", "api_method_name": "token", "api_method_all": "token?: Uint8Array", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 237, "since": 8, "api_used": "\u662f", "lines": ["OAuthToken(\"account_tokenTest_name\",\"authType", "expect(ArrayData[1].token).assertEqual(\"test_", "\",\"authType2\",\"test_token2\",(err)=>{\n        ", "OAuthToken(\"account_tokenTest_name\",OWNERSELF", "Visibility(\"account_tokenTest_name\",\"authType", "tOAuthList(\"account_tokenTest_name\",\"authType", "F,\"authType1\",\"test_token2\",(err)=>{\n        ", "AuthTokens(\"account_tokenTest_name\", OWNERSEL", "eteAccount(\"account_tokenTest_name\",(err)=>{\n", ").assertEqual(\"test_token2\");\n               ", "addAccount(\"account_tokenTest_name\",(err,)=>{", "expect(ArrayData[0].token).assertEqual(\"\");\n ", "expect(ArrayData[0].token).assertEqual(\"test_", "\",\"authType1\",\"test_token1\",(err)=>{\n        ", "\",\"authType1\",\"test_token2\",(err)=>{\n        ", ").assertEqual(\"test_token\");\n                ", "LF,\"authType\",\"test_token\",(err)=>{\n         ", "addAccount(\"account_tokenTest_name\",(err)=>{\n", "e\",\"authType\",\"test_token\",(err)=>{\n         "], "files": ["Syncenable.test.js", "OAuthToken.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AuthResult", "api_method_name": "remainTimes", "api_method_all": "remainTimes?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthResult", "api_method_name": "freezingTime", "api_method_all": "freezingTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "CredentialInfo", "api_method_all": "interface CredentialInfo {\n        \n        credType: AuthType;\n\n        \n        credSubType: AuthSubType;\n\n        \n        token: Uint8Array;\n    }", "api_method_name": "CredentialInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "CredentialInfo", "api_method_name": "credType", "api_method_all": "credType: AuthType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "CredentialInfo", "api_method_name": "credSubType", "api_method_all": "credSubType: AuthSubType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "CredentialInfo", "api_method_name": "token", "api_method_all": "token: Uint8Array", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 237, "since": 8, "api_used": "\u662f", "lines": ["OAuthToken(\"account_tokenTest_name\",\"authType", "expect(ArrayData[1].token).assertEqual(\"test_", "\",\"authType2\",\"test_token2\",(err)=>{\n        ", "OAuthToken(\"account_tokenTest_name\",OWNERSELF", "Visibility(\"account_tokenTest_name\",\"authType", "tOAuthList(\"account_tokenTest_name\",\"authType", "F,\"authType1\",\"test_token2\",(err)=>{\n        ", "AuthTokens(\"account_tokenTest_name\", OWNERSEL", "eteAccount(\"account_tokenTest_name\",(err)=>{\n", ").assertEqual(\"test_token2\");\n               ", "addAccount(\"account_tokenTest_name\",(err,)=>{", "expect(ArrayData[0].token).assertEqual(\"\");\n ", "expect(ArrayData[0].token).assertEqual(\"test_", "\",\"authType1\",\"test_token1\",(err)=>{\n        ", "\",\"authType1\",\"test_token2\",(err)=>{\n        ", ").assertEqual(\"test_token\");\n                ", "LF,\"authType\",\"test_token\",(err)=>{\n         ", "addAccount(\"account_tokenTest_name\",(err)=>{\n", "e\",\"authType\",\"test_token\",(err)=>{\n         "], "files": ["Syncenable.test.js", "OAuthToken.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "RequestResult", "api_method_all": "interface RequestResult {\n        \n        credentialId?: Uint8Array;\n    }", "api_method_name": "RequestResult", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "RequestResult", "api_method_name": "credentialId", "api_method_all": "credentialId?: Uint8Array", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "EnrolledCredInfo", "api_method_all": "interface EnrolledCredInfo {\n        \n        credentialId: Uint8Array;\n\n        \n        authType: AuthType;\n\n        \n        authSubType: AuthSubType;\n\n        \n        templateId: Uint8Array;\n    }", "api_method_name": "EnrolledCredInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "EnrolledCredInfo", "api_method_name": "credentialId", "api_method_all": "credentialId: Uint8Array", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "EnrolledCredInfo", "api_method_name": "authType", "api_method_all": "authType: AuthType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 349, "since": 8, "api_used": "\u662f", "lines": ["st_name\",OWNERSELF,\"authType\",(err,data)=>{\n    ", "tAuthType,\"callback_authType_limit_token\",(err)=", "nt_tokenTest_name\",\"authType\",(err,dataArray)=>{", "authType\",\"callback_authType_limit_token\",(err)=", "hType).assertEqual(\"authType\");\n                ", "en(\"account_promise_authType_limit\",OWNERSELF,li", "n(\"account_callback_authType_limit\",\"authType\",\"", "st_name\",OWNERSELF,\"authType\",\"test_token\",(err)", "itAuthType,\"promise_authType_limit_token\");\n    ", "expect(ArrayData[0].authType).assertEqual(\"authT", "nt(\"account_promise_authType_limit\");\n        co", "nt_tokenTest_name\",\"authType\",\"test_token\",(err)", "nt_tokenTest_name\",\"authType2\",\"test_token2\",(er", "hType).assertEqual(\"authType2\");\n               ", "nt_tokenTest_name\",\"authType\",OWNERSELF,false,(e", "nt_tokenTest_name\",\"authType1\",\"other_app_bundle", "n(\"account_callback_authType_limit\",OWNERSELF,li", "nt_tokenTest_name\",\"authType\",OWNERSELF,(err,sta", "expect(ArrayData[1].authType).assertEqual(\"authT", "st_name\",OWNERSELF,\"authType1\",\"test_token2\",(er", "nt_tokenTest_name\",\"authType1\",\"test_token1\",(er", "hType).assertEqual(\"authType1\");\n               ", "nt_tokenTest_name\",\"authType\",\"other_app_bundleN", "nt_tokenTest_name\",\"authType1\",\"test_token2\",(er", "nt(\"account_promise_authType_limit\");\n          ", "n(\"account_callback_authType_limit\",limitAuthTyp", "t(\"account_callback_authType_limit\",(err)=>{\n   ", "ck_authType_limit\",\"authType\",\"callback_authType"], "files": ["OAuthToken.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "EnrolledCredInfo", "api_method_name": "authSubType", "api_method_all": "authSubType: AuthSubType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "EnrolledCredInfo", "api_method_name": "templateId", "api_method_all": "templateId: Uint8Array", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "GetPropertyType", "api_method_all": "enum GetPropertyType {\n        \n        AUTH_SUB_TYPE = 1,\n\n        \n        REMAIN_TIMES = 2,\n\n        \n        FREEZING_TIME = 3\n    }", "api_method_name": "GetPropertyType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "GetPropertyType", "api_method_name": "AUTH_SUB_TYPE", "api_method_all": "AUTH_SUB_TYPE = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "GetPropertyType", "api_method_name": "REMAIN_TIMES", "api_method_all": "REMAIN_TIMES = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "GetPropertyType", "api_method_name": "FREEZING_TIME", "api_method_all": "FREEZING_TIME = 3", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SetPropertyType", "api_method_all": "enum SetPropertyType {\n        \n        INIT_ALGORITHM = 1,\n    }", "api_method_name": "SetPropertyType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SetPropertyType", "api_method_name": "INIT_ALGORITHM", "api_method_all": "INIT_ALGORITHM = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthType", "api_method_all": "enum AuthType {\n        \n        PIN = 1,\n\n        \n        FACE = 2\n    }", "api_method_name": "AuthType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 104, "since": 8, "api_used": "\u662f", "lines": ["ount_promise_setSameAuthType\",OWNERSELF,\"authTyp", "unt_callback_setSameAuthType\",(err)=>{\n         ", "e\",\"callback_setSameAuthType_DiffToken\",(err)=>{", "){\n            limitAuthType += 'c';\n        }\n ", "ual(\"promise_setSameAuthType_token\");\n        co", "               limitAuthType += 't';\n           ", "uthType_limit\",limitAuthType,\"promise_authType_l", "pe\",\"promise_setSameAuthType_token\");\n        co", "e\",\"callback_setSameAuthType_token\",(err)=>{\n   ", "e\",\"callback_setSameAuthType_token2\",(err)=>{\n  ", "unt_callback_setSameAuthType\",\"authType\",\"callba", "al(\"callback_setSameAuthType_DiffToken\");\n      ", "ount_promise_setSameAuthType\");\n        console.", " {\n        var limitAuthType = '';\n        for(v", "uthType_limit\",limitAuthType,\"callback_authType_", "e\",\"callback_setSameAuthType_token1\",(err)=>{\n  ", "al(\"callback_setSameAuthType_token2\");\n         ", "ual(\"promise_setSameAuthType_DiffToken\");\n      ", "mit\",OWNERSELF,limitAuthType,\"callback_authType_", "unt_callback_setSameAuthType\",OWNERSELF,\"authTyp", "e\",\"callback_setSameAuthType_token1\",(err,data)=", "mit\",OWNERSELF,limitAuthType,\"promise_authType_l", "ount_promise_setSameAuthType\",\"authType\",\"promis", " {\n        var limitAuthType = '';\n            f", "pe\",\"promise_setSameAuthType_token\");\n        va", "pe\",\"promise_setSameAuthType_DiffToken\");\n      ", "al(\"callback_setSameAuthType_token\");\n          "], "files": ["OAuthToken.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AuthType", "api_method_name": "PIN", "api_method_all": "PIN = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthType", "api_method_name": "FACE", "api_method_all": "FACE = 2", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthSubType", "api_method_all": "enum AuthSubType {\n        \n        PIN_SIX = 10000,\n\n        \n        PIN_NUMBER = 10001,\n\n        \n        PIN_MIXED = 10002,\n    \n        \n        FACE_2D = 20000,\n\n        \n        FACE_3D = 20001\n    }", "api_method_name": "AuthSubType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthSubType", "api_method_name": "PIN_SIX", "api_method_all": "PIN_SIX = 10000,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthSubType", "api_method_name": "PIN_NUMBER", "api_method_all": "PIN_NUMBER = 10001,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthSubType", "api_method_name": "PIN_MIXED", "api_method_all": "PIN_MIXED = 10002,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthSubType", "api_method_name": "FACE_2D", "api_method_all": "FACE_2D = 20000,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthSubType", "api_method_name": "FACE_3D", "api_method_all": "FACE_3D = 20001", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthTrustLevel", "api_method_all": "enum AuthTrustLevel {\n        \n        ATL1 = 10000,\n\n        \n        ATL2 = 20000,\n\n        \n        ATL3 = 30000,\n\n        \n        ATL4 = 40000\n    }", "api_method_name": "AuthTrustLevel", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthTrustLevel", "api_method_name": "ATL1", "api_method_all": "ATL1 = 10000,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthTrustLevel", "api_method_name": "ATL2", "api_method_all": "ATL2 = 20000,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthTrustLevel", "api_method_name": "ATL3", "api_method_all": "ATL3 = 30000,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AuthTrustLevel", "api_method_name": "ATL4", "api_method_all": "ATL4 = 40000", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Module", "api_method_all": "enum Module {\n        \n        FACE_AUTH = 1\n    }", "api_method_name": "Module", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Module", "api_method_name": "FACE_AUTH", "api_method_all": "FACE_AUTH = 1", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ResultCode", "api_method_all": "enum ResultCode {\n        \n        SUCCESS = 0,\n\n        \n        FAIL = 1,\n\n        \n        GENERAL_ERROR = 2,\n\n        \n        CANCELED = 3,\n\n        \n        TIMEOUT = 4,\n\n        \n        TYPE_NOT_SUPPORT = 5,\n\n        \n        TRUST_LEVEL_NOT_SUPPORT = 6,\n\n        \n        BUSY = 7,\n\n        \n        INVALID_PARAMETERS = 8,\n\n        \n        LOCKED = 9,\n\n        \n        NOT_ENROLLED = 10\n    }", "api_method_name": "ResultCode", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ResultCode", "api_method_name": "SUCCESS", "api_method_all": "SUCCESS = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 15, "since": 0, "api_used": "\u662f", "lines": ["             data: \"SUCCESS\"\n            }\n    ", "             data: \"SUCCESS\"\n                  ", ".data).assertEqual(\"SUCCESS\");\n            comm"], "files": ["index.js", "OnOff.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResultCode", "api_method_name": "FAIL", "api_method_all": "FAIL = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 14, "since": 0, "api_used": "\u662f", "lines": ["             data: \"FAIL\"\n                }\n", "             data: \"FAIL\"\n                  "], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResultCode", "api_method_name": "GENERAL_ERROR", "api_method_all": "GENERAL_ERROR = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ResultCode", "api_method_name": "CANCELED", "api_method_all": "CANCELED = 3,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ResultCode", "api_method_name": "TIMEOUT", "api_method_all": "TIMEOUT = 4,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 112, "since": 0, "api_used": "\u662f", "lines": ["   );\n        sleep(TIMEOUT);\n        done();\n ", " done();\n        }, TIMEOUT);\n    });\n\n     \n  ", "sunit/index'\n\nconst TIMEOUT = 5000;\nconst STRCO", " done();\n        }, TIMEOUT);\n    });\n\n    \n   ", "   );\n        sleep(TIMEOUTSTART);\n        done", "sunit/index'\n\nconst TIMEOUT = 5000;\ndescribe('A", "T = 5000;\nconst EACHTIMEOUT = 500;\ndescribe('Ac", "ELIMIT = 512;\nconst TIMEOUT = 5000;\ndescribe('A", "LIMIT = 1024;\nconst TIMEOUT = 1000;\nconst EACHT", ";\n        sleep(EACHTIMEOUT);\n        done();\n ", "MEOUT = 2000;\nconst TIMEOUTSTART = 20000;\nconst", "  });\n        sleep(TIMEOUT);\n        console.d", "ack);\n        sleep(TIMEOUT);\n        console.d", "t/index'\n\nconst EACHTIMEOUT = 2000;\nconst ERR_O", "sunit/index'\n\nconst TIMEOUT = 5000;\nconst EACHT", " setTimeout(done(), TIMEOUT);\n    });\n\n    \n   ", "sunit/index'\n\nconst TIMEOUT = 1000;\nconst ERR_O", "==\");\n        sleep(TIMEOUT);\n        console.d", "sunit/index'\n\nconst TIMEOUT = 2000;\ndescribe('A", "LocalId = -1;\nconst TIMEOUT = 2000;\nconst TIMEO", "ult);\n        sleep(TIMEOUT);\n        console.d", "sunit/index'\n\nconst TIMEOUT = 2000;\nconst PERMI", " done();\n        }, TIMEOUT); \n    });\n\n    \n  ", "T = 1000;\nconst EACHTIMEOUT = 500;\nconst LENGTH", "sunit/index'\n\nconst TIMEOUT = 5000;\nconst ERR_A", "sunit/index'\n\nconst TIMEOUT = 2000;\nconst LENGT", "lback); \n        }, TIMEOUT); \n    });\n\n    \n  ", "T = 1025;\nconst EACHTIMEOUT = 500;\ndescribe('Ac", "unit/index'\n\n\nconst TIMEOUT = 1000;\nconst EACHT", " done();\n        }, TIMEOUT);\n    });\n})"], "files": ["Permission.test.js", "Query.test.js", "Set.test.js", "AppAccess.test.js", "NoPermission.test.js", "OAuthToken.test.js", "Credential.test.js", "OnOff.js", "ExtraInfo.test.js", "Getallaccessible.test.js", "Constraint.test.js", "Getallaccounts.test.js", "Photo.test.js", "OsAccountIs.test.js", "OnOff.test.js", "Getmultiple.test.js", "DeleteAccount.test.js", "Limit.test.js", "Syncenable.test.js", "Activate.test.js", "CreatManager.test.js", "AssociatedData.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ResultCode", "api_method_name": "TYPE_NOT_SUPPORT", "api_method_all": "TYPE_NOT_SUPPORT = 5,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ResultCode", "api_method_name": "TRUST_LEVEL_NOT_SUPPORT", "api_method_all": "TRUST_LEVEL_NOT_SUPPORT = 6,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ResultCode", "api_method_name": "BUSY", "api_method_all": "BUSY = 7,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ResultCode", "api_method_name": "INVALID_PARAMETERS", "api_method_all": "INVALID_PARAMETERS = 8,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ResultCode", "api_method_name": "LOCKED", "api_method_all": "LOCKED = 9,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ResultCode", "api_method_name": "NOT_ENROLLED", "api_method_all": "NOT_ENROLLED = 10", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FaceTipsCode", "api_method_all": "enum FaceTipsCode {\n        \n        FACE_AUTH_TIP_TOO_BRIGHT = 1,\n\n        \n        FACE_AUTH_TIP_TOO_DARK = 2,\n\n        \n        FACE_AUTH_TIP_TOO_CLOSE = 3,\n\n        \n        FACE_AUTH_TIP_TOO_FAR = 4,\n\n        \n        FACE_AUTH_TIP_TOO_HIGH = 5,\n\n        \n        FACE_AUTH_TIP_TOO_LOW = 6,\n\n        \n        FACE_AUTH_TIP_TOO_RIGHT = 7,\n\n        \n        FACE_AUTH_TIP_TOO_LEFT = 8,\n\n        \n        FACE_AUTH_TIP_TOO_MUCH_MOTION = 9,\n\n        \n        FACE_AUTH_TIP_POOR_GAZE = 10,\n\n        \n        FACE_AUTH_TIP_NOT_DETECTED = 11,\n    }", "api_method_name": "FaceTipsCode", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FaceTipsCode", "api_method_name": "FACE_AUTH_TIP_TOO_BRIGHT", "api_method_all": "FACE_AUTH_TIP_TOO_BRIGHT = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FaceTipsCode", "api_method_name": "FACE_AUTH_TIP_TOO_DARK", "api_method_all": "FACE_AUTH_TIP_TOO_DARK = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FaceTipsCode", "api_method_name": "FACE_AUTH_TIP_TOO_CLOSE", "api_method_all": "FACE_AUTH_TIP_TOO_CLOSE = 3,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FaceTipsCode", "api_method_name": "FACE_AUTH_TIP_TOO_FAR", "api_method_all": "FACE_AUTH_TIP_TOO_FAR = 4,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FaceTipsCode", "api_method_name": "FACE_AUTH_TIP_TOO_HIGH", "api_method_all": "FACE_AUTH_TIP_TOO_HIGH = 5,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FaceTipsCode", "api_method_name": "FACE_AUTH_TIP_TOO_LOW", "api_method_all": "FACE_AUTH_TIP_TOO_LOW = 6,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FaceTipsCode", "api_method_name": "FACE_AUTH_TIP_TOO_RIGHT", "api_method_all": "FACE_AUTH_TIP_TOO_RIGHT = 7,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FaceTipsCode", "api_method_name": "FACE_AUTH_TIP_TOO_LEFT", "api_method_all": "FACE_AUTH_TIP_TOO_LEFT = 8,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FaceTipsCode", "api_method_name": "FACE_AUTH_TIP_TOO_MUCH_MOTION", "api_method_all": "FACE_AUTH_TIP_TOO_MUCH_MOTION = 9,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FaceTipsCode", "api_method_name": "FACE_AUTH_TIP_POOR_GAZE", "api_method_all": "FACE_AUTH_TIP_POOR_GAZE = 10,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FaceTipsCode", "api_method_name": "FACE_AUTH_TIP_NOT_DETECTED", "api_method_all": "FACE_AUTH_TIP_NOT_DETECTED = 11,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FingerprintTips", "api_method_all": "enum FingerprintTips {\n        \n        FINGERPRINT_TIP_GOOD = 0,\n\n        \n        FINGERPRINT_TIP_IMAGER_DIRTY = 1,\n\n        \n        FINGERPRINT_TIP_INSUFFICIENT = 2,\n\n        \n        FINGERPRINT_TIP_PARTIAL = 3,\n\n        \n        FINGERPRINT_TIP_TOO_FAST = 4,\n\n        \n        FINGERPRINT_TIP_TOO_SLOW = 5\n    }", "api_method_name": "FingerprintTips", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FingerprintTips", "api_method_name": "FINGERPRINT_TIP_GOOD", "api_method_all": "FINGERPRINT_TIP_GOOD = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FingerprintTips", "api_method_name": "FINGERPRINT_TIP_IMAGER_DIRTY", "api_method_all": "FINGERPRINT_TIP_IMAGER_DIRTY = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FingerprintTips", "api_method_name": "FINGERPRINT_TIP_INSUFFICIENT", "api_method_all": "FINGERPRINT_TIP_INSUFFICIENT = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FingerprintTips", "api_method_name": "FINGERPRINT_TIP_PARTIAL", "api_method_all": "FINGERPRINT_TIP_PARTIAL = 3,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FingerprintTips", "api_method_name": "FINGERPRINT_TIP_TOO_FAST", "api_method_all": "FINGERPRINT_TIP_TOO_FAST = 4,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FingerprintTips", "api_method_name": "FINGERPRINT_TIP_TOO_SLOW", "api_method_all": "FINGERPRINT_TIP_TOO_SLOW = 5", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}