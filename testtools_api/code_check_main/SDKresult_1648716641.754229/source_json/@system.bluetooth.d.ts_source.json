{"subsystem_ch": "\u77ed\u8ddd\u901a\u4fe1\u5b50\u7cfb\u7edf", "subsystem_en": "communication", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@system.bluetooth", "api": [{"api_class_name": "StartBLEScanOptions", "api_method_all": "export interface StartBLEScanOptions {\n  interval: number;\n  success: () => void;\n  fail: (data: string, code: number) => void;\n  complete: () => void;\n}", "api_method_name": "StartBLEScanOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "StartBLEScanOptions", "api_method_name": "success", "api_method_all": "success: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 381, "since": 6, "api_used": "\u662f", "lines": ["l_3800: sendRequest success, result is \" + resu", "l_3700: sendRequest success, result is \" + resu", "4300: create object successfully.\");\n          ", "l_4100: sendRequest success, result is \" + resu", "l_4400: sendRequest success, result is \" + resu", "un readByteArray is success, result is \"\n      ", "3900: create object successfully.\");\n          ", "l_3600: sendRequest success, result is \" + resu", "luetooth_js] enable success');\n        }\n    }\n", "run writeShortArray success, result is \"\n      ", "l_4600: sendRequest success, result is \" + resu", "4600: create object successfully.\");\n          ", "4400: create object successfully.\");\n          ", "n readFloatArray is success, floatArryDataReply", "l_3900: sendRequest success, result is \" + resu", "3700: create object successfully.\");\n          ", "l_4500: sendRequest success, result is \" + resu", "l_4200: sendRequest success, result is \" + resu", "4000: create object successfully.\");\n          ", "4200: create object successfully.\");\n          ", "4700: create object successfully.\");\n          ", "4500: create object successfully.\");\n          ", ": readFloatArray is success, floatArryDataReply", "run readIntArray is success, intArryDataReply i", "3600: create object successfully.\");\n          ", "l_4000: sendRequest success, result is \" + resu", "oth_js] getServices successfully:'+JSON.stringi", "3800: create object successfully.\");\n          ", "l_4300: sendRequest success, result is \" + resu", "4100: create object successfully.\");\n          ", "run writeFloatArray success, result is \"\n      "], "files": ["RpcJsunit.test.js", "BluetoothOn.test.js", "BluetoothBle.test.js", "WifiSta.test.js", "RpcClientJsunit.test.js", "Bluetooth.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "StartBLEScanOptions", "api_method_name": "fail", "api_method_all": "fail: (data: string, code: number) => void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 11, "since": 6, "api_used": "\u662f", "lines": [" wifi getLinkedInfo failed \" + err);\n       ", "     console.error('failed to getP2pLinkedIn", "     console.error('failed to getP2pPeerDevi", "i_test]add callback failed : \" + JSON.string", "] wifi getScanInfos failed \" + err);\n       ", "t]add OPEN callback failed : \" + JSON.string", "00: run rewindWrite failed, result is \" + re", ".error('wifi_test / failed to get getCurrent"], "files": ["WifiP2P.test.js", "RpcJsunit.test.js", "WifiSta.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "StartBLEScanOptions", "api_method_name": "complete", "api_method_all": "complete: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "StartBLEScanOptions", "api_method_name": "interval", "api_method_all": "interval: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["g({\n                interval:150,\n              "], "files": ["BluetoothBle.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "StopBLEScanOptions", "api_method_all": "export interface StopBLEScanOptions {\n  success: () => void;\n  fail: (data: string, code: number) => void;\n  complete: () => void;\n}", "api_method_name": "StopBLEScanOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "StopBLEScanOptions", "api_method_name": "success", "api_method_all": "success: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 381, "since": 6, "api_used": "\u662f", "lines": ["l_3800: sendRequest success, result is \" + resu", "l_3700: sendRequest success, result is \" + resu", "4300: create object successfully.\");\n          ", "l_4100: sendRequest success, result is \" + resu", "l_4400: sendRequest success, result is \" + resu", "un readByteArray is success, result is \"\n      ", "3900: create object successfully.\");\n          ", "l_3600: sendRequest success, result is \" + resu", "luetooth_js] enable success');\n        }\n    }\n", "run writeShortArray success, result is \"\n      ", "l_4600: sendRequest success, result is \" + resu", "4600: create object successfully.\");\n          ", "4400: create object successfully.\");\n          ", "n readFloatArray is success, floatArryDataReply", "l_3900: sendRequest success, result is \" + resu", "3700: create object successfully.\");\n          ", "l_4500: sendRequest success, result is \" + resu", "l_4200: sendRequest success, result is \" + resu", "4000: create object successfully.\");\n          ", "4200: create object successfully.\");\n          ", "4700: create object successfully.\");\n          ", "4500: create object successfully.\");\n          ", ": readFloatArray is success, floatArryDataReply", "run readIntArray is success, intArryDataReply i", "3600: create object successfully.\");\n          ", "l_4000: sendRequest success, result is \" + resu", "oth_js] getServices successfully:'+JSON.stringi", "3800: create object successfully.\");\n          ", "l_4300: sendRequest success, result is \" + resu", "4100: create object successfully.\");\n          ", "run writeFloatArray success, result is \"\n      "], "files": ["RpcJsunit.test.js", "BluetoothOn.test.js", "BluetoothBle.test.js", "WifiSta.test.js", "RpcClientJsunit.test.js", "Bluetooth.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "StopBLEScanOptions", "api_method_name": "fail", "api_method_all": "fail: (data: string, code: number) => void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 11, "since": 6, "api_used": "\u662f", "lines": [" wifi getLinkedInfo failed \" + err);\n       ", "     console.error('failed to getP2pLinkedIn", "     console.error('failed to getP2pPeerDevi", "i_test]add callback failed : \" + JSON.string", "] wifi getScanInfos failed \" + err);\n       ", "t]add OPEN callback failed : \" + JSON.string", "00: run rewindWrite failed, result is \" + re", ".error('wifi_test / failed to get getCurrent"], "files": ["WifiP2P.test.js", "RpcJsunit.test.js", "WifiSta.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "StopBLEScanOptions", "api_method_name": "complete", "api_method_all": "complete: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "BluetoothDevice", "api_method_all": "export interface BluetoothDevice {\n  addrType: \"public\" | \"random\";\n  addr: string;\n  rssi: number;\n  txpower: string;\n  data: string;\n}", "api_method_name": "BluetoothDevice", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "BluetoothDevice", "api_method_name": "addrType", "api_method_all": "addrType: \"public\" | \"random\"", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "BluetoothDevice", "api_method_name": "addr", "api_method_all": "addr: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "BluetoothDevice", "api_method_name": "rssi", "api_method_all": "rssi: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 12, "since": 6, "api_used": "\u662f", "lines": ["             expect(rssiLength).assertEqual(", "                let rssiLength = Object.keys", "rssi: \" + result[j].rssi + \"band: \" + result", " + result.chload + \"rssi \" + result.rssi + \"", "                   \"rssi: \" + result[j].rssi", "uetooth_js] BLE get rssi start');\n        aw", "nfo('[bluetooth_js] rssi err:' + JSON.string", "etooth_js] BLE read rssi ' + JSON.stringify(", " + \"rssi \" + result.rssi + \"netWorkId: \" + r", "_test] check the 5G rssi assgined to level t", "est] check the 2.4G rssi assgined to level t", "uetooth_js] BLE get rssi1 start');\n        a"], "files": ["BluetoothBle.test.js", "WifiSta.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BluetoothDevice", "api_method_name": "txpower", "api_method_all": "txpower: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "BluetoothDevice", "api_method_name": "data", "api_method_all": "data: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 800, "since": 6, "api_used": "\u662f", "lines": ["h_js] BLEDescriptor data:' + JSON.stringify(", ":\" + JSON.stringify(data));\n                ", "h_js] charaRead off data:\" + JSON.stringify(", "= '+ JSON.stringify(data));\n                ", "t(true).assertEqual(data ==null);\n          ", "ticRead', function (data) {\n                ", "         \"transId\": data.transId,\n          ", "             expect(data).assertNull();\n    ", "tDeviceName().then((data) => {\n             ", "teChange state:' +  data.state);\n           ", "edReq deviceId: ' + data.deviceId +\n        ", "ansId + 'offset:' + data.offset + 'charUuid:", "t.getServices((err, data)=> {\n              ", "      'charUuid:' + data.characteristicUuid ", ":' + JSON.stringify(data));\n                ", "ue:'+JSON.stringify(data));\n                ", " ' + JSON.stringify(data));\n                ", "ansId + 'offset:' + data.offset + 'isPrep:' ", "          \"offset\": data.offset,\n           ", "ength = Object.keys(data).length;\n          ", "' +\n                data.characteristicUuid ", "etRssiValue().then((data) => {\n             ", "                if (data != null) {\n        ", ") {\n            if (data == bluetooth.Blueto", "js] readCharacValue data:' + JSON.stringify(", " + 'serviceUuid:' + data.serviceUuid);\n     ", "e' + JSON.stringify(data)+ 'length' + data.l", "Change deviceId:' + data.deviceId + 'bondSta", "ffset + 'isPrep:' + data.isPrep +\n          ", "e' + JSON.stringify(data))\n                e", "       'transId:' + data.transId + 'offset:'", "tic read response\", data.offset),\n          ", "        \"deviceId\": data.deviceId,\n         ", "1' + JSON.stringify(data));\n                ", "icWrite', function (data) {\n\n               ", "         'value:' + data.value + 'needRsp' +", ".getRssiValue((err, data)=> {\n              ", " + 'serviceUuid:' + data.serviceUuid +\n     ", "tion onReceiveEvent(data) {\n            cons", "tion onReceiveEvent(data) {\n                ", "riReq deviceId: ' + data.deviceId +\n        ", "xport default {\n    data: {\n        title: \"", "tion onReceiveEvent(data) {\n            if (", "y(data)+ 'length' + data.length)\n           ", "             expect(data.length).assertLarge", "\n            expect(data.length).assertLarge"], "files": ["RpcJsunit.test.js", "BluetoothOn.test.js", "BluetoothBle.test.js", "WifiP2P.test.js", "WifiSoftAP.test.js", "index.js", "RpcClientJsunit.test.js", "Bluetooth.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BLEFoundResponse", "api_method_all": "export interface BLEFoundResponse {\n  devices: Array<BluetoothDevice>;\n}", "api_method_name": "BLEFoundResponse", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "BLEFoundResponse", "api_method_name": "devices", "api_method_all": "devices: Array<BluetoothDevice>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 6, "api_used": "\u662f", "lines": [":' + JSON.stringify(devices) +'length:' + devic", "vices) +'length:' + devices.length);\n        ex", "ooth_js] get paired devices:' + JSON.stringify(", "leBt();\n        let devices = bluetooth.getPair", "th);\n        expect(devices.length).assertEqual", "ooth_js] get paired devices start');\n        aw"], "files": ["Bluetooth.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SubscribeBLEFoundOptions", "api_method_all": "export interface SubscribeBLEFoundOptions {\n    success: (data: BLEFoundResponse) => void;\n    fail: (data: string, code: number) => void;\n}", "api_method_name": "SubscribeBLEFoundOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SubscribeBLEFoundOptions", "api_method_name": "success", "api_method_all": "success: (data: BLEFoundResponse) => void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 381, "since": 6, "api_used": "\u662f", "lines": ["l_3800: sendRequest success, result is \" + resu", "l_3700: sendRequest success, result is \" + resu", "4300: create object successfully.\");\n          ", "l_4100: sendRequest success, result is \" + resu", "l_4400: sendRequest success, result is \" + resu", "un readByteArray is success, result is \"\n      ", "3900: create object successfully.\");\n          ", "l_3600: sendRequest success, result is \" + resu", "luetooth_js] enable success');\n        }\n    }\n", "run writeShortArray success, result is \"\n      ", "l_4600: sendRequest success, result is \" + resu", "4600: create object successfully.\");\n          ", "4400: create object successfully.\");\n          ", "n readFloatArray is success, floatArryDataReply", "l_3900: sendRequest success, result is \" + resu", "3700: create object successfully.\");\n          ", "l_4500: sendRequest success, result is \" + resu", "l_4200: sendRequest success, result is \" + resu", "4000: create object successfully.\");\n          ", "4200: create object successfully.\");\n          ", "4700: create object successfully.\");\n          ", "4500: create object successfully.\");\n          ", ": readFloatArray is success, floatArryDataReply", "run readIntArray is success, intArryDataReply i", "3600: create object successfully.\");\n          ", "l_4000: sendRequest success, result is \" + resu", "oth_js] getServices successfully:'+JSON.stringi", "3800: create object successfully.\");\n          ", "l_4300: sendRequest success, result is \" + resu", "4100: create object successfully.\");\n          ", "run writeFloatArray success, result is \"\n      "], "files": ["RpcJsunit.test.js", "BluetoothOn.test.js", "BluetoothBle.test.js", "WifiSta.test.js", "RpcClientJsunit.test.js", "Bluetooth.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SubscribeBLEFoundOptions", "api_method_name": "fail", "api_method_all": "fail: (data: string, code: number) => void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 11, "since": 6, "api_used": "\u662f", "lines": [" wifi getLinkedInfo failed \" + err);\n       ", "     console.error('failed to getP2pLinkedIn", "     console.error('failed to getP2pPeerDevi", "i_test]add callback failed : \" + JSON.string", "] wifi getScanInfos failed \" + err);\n       ", "t]add OPEN callback failed : \" + JSON.string", "00: run rewindWrite failed, result is \" + re", ".error('wifi_test / failed to get getCurrent"], "files": ["WifiP2P.test.js", "RpcJsunit.test.js", "WifiSta.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Bluetooth", "api_method_all": "export default class Bluetooth {\n  \n  static startBLEScan(options: StartBLEScanOptions): void;\n\n  \n  static stopBLEScan(options: StopBLEScanOptions): void;\n\n  \n  static subscribeBLEFound(options: SubscribeBLEFoundOptions): void;\n\n  \n  static unsubscribeBLEFound(): void;\n}", "api_method_name": "Bluetooth", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 26, "since": 6, "api_used": "\u662f", "lines": ["sertEqual(bluetooth.BluetoothState.STATE_ON);\n   ", "sult = bluetooth.setBluetoothScanMode(1,10000);\n ", "lt = bluetooth.startBluetoothDiscovery();\n       ", "ult = bluetooth.stopBluetoothDiscovery();\n       ", "stringify(bluetooth.BluetoothState.STATE_ON)==sta", "   expect(bluetooth.BluetoothState.STATE_BLE_ON !", "   expect(bluetooth.BluetoothState.STATE_OFF != s", "    bluetooth.enableBluetooth();\n                ", "Mode = bluetooth.getBluetoothScanMode();\n        ", " (data == bluetooth.BluetoothState.STATE_ON) {\n  ", "t.js')\n", " = bluetooth.disableBluetooth();\n        console.", "wait bluetooth.startBluetoothDiscovery();\n       ", "  console.info(\"stopBluetoothDiscovery :\" + JSON.", "   expect(bluetooth.BluetoothState.STATE_BLE_TURN", "   expect(bluetooth.BluetoothState.STATE_TURNING_"], "files": ["List.test.js", "BluetoothBle.test.js", "Bluetooth.test.js", "BluetoothOn.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Bluetooth", "api_method_name": "startBLEScan", "api_method_all": "static startBLEScan(options: StartBLEScanOptions): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["      bluetooth.BLE.startBLEScan([{}]);\n            "], "files": ["BluetoothOn.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Bluetooth", "api_method_name": "stopBLEScan", "api_method_all": "static stopBLEScan(options: StopBLEScanOptions): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["ult = bluetooth.BLE.stopBLEScan();\n            cons"], "files": ["BluetoothOn.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Bluetooth", "api_method_name": "subscribeBLEFound", "api_method_all": "static subscribeBLEFound(options: SubscribeBLEFoundOptions): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Bluetooth", "api_method_name": "unsubscribeBLEFound", "api_method_all": "static unsubscribeBLEFound(): void;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}