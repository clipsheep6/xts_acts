{"subsystem_ch": "\u7a97\u53e3\u5b50\u7cfb\u7edf", "subsystem_en": "graphic", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.window", "api": [{"api_class_name": "window", "api_method_all": "declare namespace window {\n  \n  enum WindowType {\n    \n    TYPE_APP,\n    \n    TYPE_SYSTEM_ALERT\n  }\n\n  \n  enum AvoidAreaType {\n    \n    TYPE_SYSTEM,\n\n    \n    TYPE_CUTOUT\n  }\n  \n  enum WindowMode {\n    UNDEFINED = 1,\n    FULLSCREEN,\n    PRIMARY,\n    SECONDARY,\n    FLOATING\n  }\n\n  \n  interface SystemBarProperties {\n    \n    statusBarColor?: string;\n\n    \n    isStatusBarLightIcon?: boolean;\n\n    \n    statusBarContentColor?: string;\n\n    \n    navigationBarColor?: string;\n\n    \n    isNavigationBarLightIcon?: boolean;\n\n    \n     navigationBarContentColor?: string;\n  }\n\n  \n  interface SystemBarRegionTint {\n    \n    type: WindowType;\n\n    \n    isEnable?: boolean;\n\n    \n    region?: Rect;\n\n    \n    backgroundColor?: string;\n\n    \n    contentColor?: string\n  }\n\n  \n  interface SystemBarTintState {\n    \n    displayId: number;\n    \n    regionTint: Array<SystemBarRegionTint>;\n  }\n\n  \n  interface Rect {\n    left: number;\n\n    top: number;\n\n    width: number;\n\n    height: number;\n  }\n\n  \n  interface AvoidArea {\n    \n    leftRect: Rect;\n\n    \n    topRect: Rect;\n\n    \n    rightRect: Rect;\n\n    \n    bottomRect: Rect;\n  }\n\n  \n  interface Size {\n    \n    width: number;\n\n    \n    height: number;\n  }\n\n  \n  interface WindowProperties {\n    \n    windowRect: Rect;\n\n    \n    type: WindowType;\n\n    \n    isFullScreen: boolean\n\n    \n    isLayoutFullScreen: boolean\n\n    \n    focusable: boolean\n\n    \n    touchable: boolean\n\n    \n    brightness: number\n\n    \n    dimBehindValue: number\n\n    \n    isKeepScreenOn: boolean\n\n    \n    isPrivacyMode: boolean\n\n    \n    isRoundCorner: boolean\n\n    \n    isTransparent: boolean\n  }\n\n  \n  enum ColorSpace {\n    \n    DEFAULT,\n    \n    WIDE_GAMUT,\n  }\n\n  \n  function create(id: string, type: WindowType, callback: AsyncCallback<Window>): void;\n\n  \n  function create(id: string, type: WindowType): Promise<Window>;\n\n  \n  function create(ctx: Context, id: string, type: WindowType): Promise<Window>;\n\n  \n  function create(ctx: Context, id: string, type: WindowType, callback: AsyncCallback<Window>): void;\n\n  \n  function find(id: string, callback: AsyncCallback<Window>): void;\n\n  \n  function find(id: string): Promise<Window>;\n\n  \n  function getTopWindow(callback: AsyncCallback<Window>): void;\n\n  \n  function getTopWindow(): Promise<Window>;\n\n  \n  function getTopWindow(ctx: Context): Promise<Window>;\n\n  \n  function getTopWindow(ctx: Context, callback: AsyncCallback<Window>): void;\n\n  \n  function on(type: 'systemBarTintChange', callback: Callback<SystemBarTintState>): void;\n\n  \n  function off(type: 'systemBarTintChange', callback?: Callback<SystemBarTintState>): void;\n\n  interface Window {\n    \n    hide (callback: AsyncCallback<void>): void;\n\n    \n    hide(): Promise<void>;\n\n    \n    show(callback: AsyncCallback<void>): void;\n\n    \n    show(): Promise<void>;\n\n    \n    destroy(callback: AsyncCallback<void>): void;\n\n    \n    destroy(): Promise<void>;\n\n    \n    moveTo(x: number, y: number): Promise<void>;\n\n    \n    moveTo(x: number, y: number, callback: AsyncCallback<void>): void;\n\n    \n    resetSize(width: number, height: number): Promise<void>;\n\n    \n    resetSize(width: number, height: number, callback: AsyncCallback<void>): void;\n\n    \n    setWindowType(type: WindowType): Promise<void>;\n\n    \n    setWindowType(type: WindowType, callback: AsyncCallback<void>): void;\n\n    \n    getProperties(callback: AsyncCallback<WindowProperties>): void;\n\n     \n    getProperties(): Promise<WindowProperties>;\n\n    \n    getAvoidArea(type: AvoidAreaType, callback: AsyncCallback<AvoidArea>): void;\n\n    \n    getAvoidArea(type: AvoidAreaType): Promise<AvoidArea>;\n\n    \n    setFullScreen(isFullScreen: boolean, callback: AsyncCallback<void>): void;\n\n    \n    setFullScreen(isFullScreen: boolean): Promise<void>;\n\n    \n    setLayoutFullScreen(isLayoutFullScreen: boolean, callback: AsyncCallback<void>): void;\n\n    \n    setLayoutFullScreen(isLayoutFullScreen: boolean): Promise<void>;\n\n    \n    setSystemBarEnable(names: Array<'status'|'navigation'>, callback: AsyncCallback<void>): void;\n\n    \n    setSystemBarEnable(names: Array<'status'|'navigation'>): Promise<void>;\n\n    \n    setSystemBarProperties(systemBarProperties: SystemBarProperties, callback: AsyncCallback<void>): void;\n\n    \n    setSystemBarProperties(systemBarProperties: SystemBarProperties): Promise<void>;\n\n    \n    loadContent(path: string, storage: ContentStorage, callback: AsyncCallback<void>): void;\n\n    \n    loadContent(path: string, storage: ContentStorage): Promise<void>;\n\n    \n    loadContent(path: string, callback: AsyncCallback<void>): void;\n\n      \n       loadContent(path: string): Promise<void>;\n\n    \n    isShowing(callback: AsyncCallback<boolean>): void;\n\n    \n    isShowing(): Promise<boolean>;\n\n    \n    on(type: 'windowSizeChange', callback: Callback<Size>): void;\n\n    \n    off(type: 'windowSizeChange', callback?: Callback<Size>): void;\n\n    \n    on(type: 'systemAvoidAreaChange', callback: Callback<AvoidArea>): void;\n\n    \n    off(type: 'systemAvoidAreaChange', callback?: Callback<AvoidArea>): void;\n\n    \n    on(type: 'keyboardHeightChange', callback: Callback<number>): void;\n\n    \n    off(type: 'keyboardHeightChange', callback?: Callback<number>): void;\n\n    \n    isSupportWideGamut(): Promise<boolean>;\n\n    \n    isSupportWideGamut(callback: AsyncCallback<boolean>): void;\n\n    \n    setColorSpace(colorSpace:ColorSpace): Promise<void>;\n\n    \n    setColorSpace(colorSpace:ColorSpace, callback: AsyncCallback<void>): void;\n\n    \n    getColorSpace(): Promise<ColorSpace>;\n\n    \n    getColorSpace(callback: AsyncCallback<ColorSpace>): void;\n\n    \n    setBackgroundColor(color: string): Promise<void>;\n\n    \n    setBackgroundColor(color: string, callback: AsyncCallback<void>): void;\n\n    \n    setBrightness(brightness: number): Promise<void>;\n\n    \n    setBrightness(brightness: number, callback: AsyncCallback<void>): void;\n\n    \n    setDimBehind(dimBehindValue: number, callback: AsyncCallback<void>): void;\n\n    \n    setDimBehind(dimBehindValue: number): Promise<void>;\n\n    \n    setFocusable(isFocusable: boolean): Promise<void>;\n\n    \n    setFocusable(isFocusable: boolean, callback: AsyncCallback<void>): void;\n\n    \n    setKeepScreenOn(isKeepScreenOn: boolean): Promise<void>;\n\n    \n    setKeepScreenOn(isKeepScreenOn: boolean, callback: AsyncCallback<void>): void;\n\n    \n    setOutsideTouchable(touchable: boolean): Promise<void>;\n\n    \n    setOutsideTouchable(touchable: boolean, callback: AsyncCallback<void>): void;\n\n    \n    setPrivacyMode(isPrivacyMode: boolean): Promise<void>;\n\n    \n    setPrivacyMode(isPrivacyMode: boolean, callback: AsyncCallback<void>): void;\n\n    \n    setTouchable(isTouchable: boolean): Promise<void>;\n\n    \n    setTouchable(isTouchable: boolean, callback: AsyncCallback<void>): void;\n  }\n  \n  enum WindowStageEventType {\n    FOREGROUND = 1,\n    ACTIVE,\n    INACTIVE,\n    BACKGROUND,\n  }\n  \n  interface WindowStage {\n    \n    getMainWindow(): Promise<Window>;\n    \n    getMainWindow(callback: AsyncCallback<Window>): void;\n    \n    createSubWindow(name: string): Promise<Window>;\n    \n    createSubWindow(name: string, callback: AsyncCallback<Window>): void;\n    \n    getSubWindow(): Promise<Array<Window>>;\n    \n    getSubWindow(callback: AsyncCallback<Array<Window>>): void;\n    \n    loadContent(path: string, storage: ContentStorage, callback: AsyncCallback<void>): void;\n    \n    loadContent(path: string, storage?: ContentStorage): Promise<void>;\n    \n    loadContent(path: string, callback: AsyncCallback<void>): void;\n    \n    on(eventType: 'windowStageEvent', callback: Callback<WindowStageEventType>): void;\n    \n    off(eventType: 'windowStageEvent', callback?: Callback<WindowStageEventType>): void;\n  }\n}", "api_method_name": "window", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 468, "since": 0, "api_used": "\u662f", "lines": ["", "ight;\n\n    function windowSizeChangeCallback(d", "sunit/index'\nimport window from '@ohos.window'", "       console.log('windowTest getPropertiesTe", "indowTest beforeAll window.getTopWindow failed", "t getAvoidAreaTest1 window.getTopWindow failed", "ll begin');\n        window.getTopWindow().then", " window from '@ohos.window'\nimport display fro", "   wnd.getAvoidArea(window.AvoidAreaType.TYPE_", "       console.log('windowTest OnOffTest2 call", " GetPropertiesTest2 window.getProperties callb", "t2 begin');\n        window.getTopWindow().then", "        expect(data.windowRect != null).assert", "t1 begin');\n        window.getTopWindow().then", "       console.log('windowTest getAvoidAreaTes", "       console.log('windowTest beforeAll windo", "indowTest beforeAll window.getTopWindow wnd: '", " GetPropertiesTest2 window.getTopWindow wnd: '", "       console.log('windowTest beforeEach wnd.", " window from '@ohos.window'\nimport screen from", " getPropertiesTest1 window.getTopWindow wnd: '", "       console.log('windowTest OnOffTest1 call", "ype = 3;\n\ndescribe('window_test', function () ", "       console.log('windowTest beforeAll begin", " getPropertiesTest1 window.getTopWindow failed", "indowTest beforeAll window.getTopWindow empty'", "       console.log('windowTest GetPropertiesTe", "t getAvoidAreaTest1 window.getTopWindow wnd: '", " getPropertiesTest2 window.getTopWindow failed"], "files": ["display.test.js", "List.test.js", "window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "window", "api_method_name": "create", "api_method_all": "function create(id: string, type: WindowType, callback: AsyncCallback<Window>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 2040, "since": 7, "api_used": "\u662f", "lines": ["nst programObj = gl.createProgram();\n\t\tconsole.log(\"testUseProgram", ") {\n\t\tvar program = createProgramExternal(gl, vshader, fshader);\n\t", "sole.log('unable to create shader');\n\t\t\treturn null;\n\t\t}\n\n\t\tconst ", "sole.log('Failed to create the buffer object');\n\t\t\treturn -1;\n\t\t}\n", "r\n\t * @tc.desc Test createBuffer.\n\t */\n\tit('webgl_test_createBuffe", "1\n\t * @tc.desc Test createBuffer.\n\t */\n\tit('webgl_test_createBuffe", "fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n\t\tgl.shaderS", "ar framebuffer = gl.createFramebuffer();\n\t\tgl.bindFramebuffer(gl.F", "r renderbuffer = gl.createRenderbuffer();\n\n\t\t//\u4e0d bindRenderbuffer,", "@tc.name webgl_test_createBuffer_1\n\t * @tc.desc Test createBuffer.", "\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\t// bind\u524disBuffer\u4e3afalse\n\t\tco", "t\n\t\tvar shader = gl.createShader(type);\n\t\tif (shader == null) {\n\t\t", "\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFF", "r);\n\t\tconsole.info(\"createFramebuffer --> bindFramebuffer --> isFr", "r);\n\t\tconsole.info(\"createRenderbuffer --> isRenderbuffer0: \" + is", "sole.log('Failed to create program');\n\t\t\treturn false;\n\t\t}\n\n\t\tgl.u", "\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFF", "e);\n\t\tconsole.info(\"createTexture --> isTexture: \" + isTexture0);\n", "\n\t\tvar program = gl.createProgram();\n\t\tconsole.log(\"======createPr", "r vertexBuffer = gl.createBuffer();\n\t\tif (!vertexBuffer) {\n\t\t\tcons", " */\n\tit('webgl_test_createBuffer', 0, async function(done) {\n\t\t//i", "nst programObj = gl.createProgram();\n\t\tconsole.info(\"testUseProgra", "r vertexShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.shaderSou", "r);\n\t\tconsole.info(\"createRenderbuffer --> bindRenderbuffer --> is", "\n\n\t\tvar shader = gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.shaderSou", "\n\t\tvar texture = gl.createTexture();\n\n\t\tconst isTexture0 = gl.isTe", "\t\tconst buffer = gl.createBuffer();\n\n\t\tconst isBufferValue = gl.is", "true;\n\t}\n\n\tfunction createProgramExternal(gl, vshader, fshader) {\n", "nfo(\"webgltest into createBuffer\");\n\n\t\tconst buffer = gl.createBuf", "t vertexShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.shaderSou", "e);\n\t\tconsole.info(\"createTexture --> bindTexture --> isTexture: \"", "Obj;\n\t}\n\n\n\tfunction createProgram(gl) {\n\t\t//\u9876\u70b9\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tvar VSHADER_", "ole.info(\"webgltest createBuffer bindBuffer isBuffer: \" + isBuffer", " */\n\tit('webgl_test_createBuffer_1', 0, async function(done) {\n\t\t/", "\tconsole.log(\"======createProgram program: \" + JSON.stringify(prog", "@tc.name webgl_test_createBuffer\n\t * @tc.desc Test createBuffer.\n\t", "ar framebuffer = gl.createFramebuffer();\n\n\t\tconst isFramebuffer1 =", "r);\n\t\tconsole.info(\"createFramebuffer --> isFramebuffer1: \" + isFr", "R);\n\t\tconsole.info(\"createFramebuffer --> bindFramebuffer --> chec", "\t\tconsole.info(\n\t\t\t\"createFramebuffer --> bindFramebuffer --> dele"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "window.test.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "window", "api_method_name": "create", "api_method_all": "function create(id: string, type: WindowType): Promise<Window>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "window", "api_method_name": "create", "api_method_all": "function create(ctx: Context, id: string, type: WindowType): Promise<Window>;", "api_type": "Promise", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "window", "api_method_name": "create", "api_method_all": "function create(ctx: Context, id: string, type: WindowType, callback: AsyncCallback<Window>): void;", "api_type": "callback", "api_args_count": 4, "api_level": null, "api_used_count": 2040, "since": 7, "api_used": "\u662f", "lines": ["nst programObj = gl.createProgram();\n\t\tconsole.log(\"testUseProgram", ") {\n\t\tvar program = createProgramExternal(gl, vshader, fshader);\n\t", "sole.log('unable to create shader');\n\t\t\treturn null;\n\t\t}\n\n\t\tconst ", "sole.log('Failed to create the buffer object');\n\t\t\treturn -1;\n\t\t}\n", "r\n\t * @tc.desc Test createBuffer.\n\t */\n\tit('webgl_test_createBuffe", "1\n\t * @tc.desc Test createBuffer.\n\t */\n\tit('webgl_test_createBuffe", "fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n\t\tgl.shaderS", "ar framebuffer = gl.createFramebuffer();\n\t\tgl.bindFramebuffer(gl.F", "r renderbuffer = gl.createRenderbuffer();\n\n\t\t//\u4e0d bindRenderbuffer,", "@tc.name webgl_test_createBuffer_1\n\t * @tc.desc Test createBuffer.", "\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\t// bind\u524disBuffer\u4e3afalse\n\t\tco", "t\n\t\tvar shader = gl.createShader(type);\n\t\tif (shader == null) {\n\t\t", "\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFF", "r);\n\t\tconsole.info(\"createFramebuffer --> bindFramebuffer --> isFr", "r);\n\t\tconsole.info(\"createRenderbuffer --> isRenderbuffer0: \" + is", "sole.log('Failed to create program');\n\t\t\treturn false;\n\t\t}\n\n\t\tgl.u", "\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFF", "e);\n\t\tconsole.info(\"createTexture --> isTexture: \" + isTexture0);\n", "\n\t\tvar program = gl.createProgram();\n\t\tconsole.log(\"======createPr", "r vertexBuffer = gl.createBuffer();\n\t\tif (!vertexBuffer) {\n\t\t\tcons", " */\n\tit('webgl_test_createBuffer', 0, async function(done) {\n\t\t//i", "nst programObj = gl.createProgram();\n\t\tconsole.info(\"testUseProgra", "r vertexShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.shaderSou", "r);\n\t\tconsole.info(\"createRenderbuffer --> bindRenderbuffer --> is", "\n\n\t\tvar shader = gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.shaderSou", "\n\t\tvar texture = gl.createTexture();\n\n\t\tconst isTexture0 = gl.isTe", "\t\tconst buffer = gl.createBuffer();\n\n\t\tconst isBufferValue = gl.is", "true;\n\t}\n\n\tfunction createProgramExternal(gl, vshader, fshader) {\n", "nfo(\"webgltest into createBuffer\");\n\n\t\tconst buffer = gl.createBuf", "t vertexShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.shaderSou", "e);\n\t\tconsole.info(\"createTexture --> bindTexture --> isTexture: \"", "Obj;\n\t}\n\n\n\tfunction createProgram(gl) {\n\t\t//\u9876\u70b9\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tvar VSHADER_", "ole.info(\"webgltest createBuffer bindBuffer isBuffer: \" + isBuffer", " */\n\tit('webgl_test_createBuffer_1', 0, async function(done) {\n\t\t/", "\tconsole.log(\"======createProgram program: \" + JSON.stringify(prog", "@tc.name webgl_test_createBuffer\n\t * @tc.desc Test createBuffer.\n\t", "ar framebuffer = gl.createFramebuffer();\n\n\t\tconst isFramebuffer1 =", "r);\n\t\tconsole.info(\"createFramebuffer --> isFramebuffer1: \" + isFr", "R);\n\t\tconsole.info(\"createFramebuffer --> bindFramebuffer --> chec", "\t\tconsole.info(\n\t\t\t\"createFramebuffer --> bindFramebuffer --> dele"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "window.test.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "window", "api_method_name": "find", "api_method_all": "function find(id: string, callback: AsyncCallback<Window>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 36, "since": 7, "api_used": "\u662f", "lines": ["wTest findTest2 wnd.find success, window : ' + JSON.stringify(wi", "ole.log('windowTest findTest3 begin');\n        window.find('wind", "ole.log('windowTest findTest3 wnd.find fail');\n                e", "wTest findTest3 wnd.find fail');\n                expect(data != ", "ole.log('windowTest findTest2 wnd.find failed, err : ' + JSON.st", "wTest findTest2 wnd.find failed, err : ' + JSON.stringify(err));", "wTest findTest4 wnd.find success');\n                expect().ass", "indows\n\t */\n    it('find_Test_002', 0, async function (done) {\n ", "ole.log('windowTest findTest2 begin');\n        window.find('wind", "ole.log('windowTest findTest4 wnd.find success');\n              ", "wTest findTest1 wnd.find failed, err : ' + JSON.stringify(err));", "owTest DestroyTest2 find callback fail' + JSON.stringify(err.cod", "ole.log('windowTest findTest3 wnd.find fail, err : ' + JSON.stri", "DestroyTest1 window.find success, window :' + JSON.stringify(dat", "ole.log('windowTest findTest1 wnd.find success, data : ' + JSON.", "ole.log('windowTest findTest1 wnd.find failed, err : ' + JSON.st", " @tc.name      Test find_Test_004\n     * @tc.desc      Query for", "n');\n        window.find('window0', (err, data) => {\n           ", "ole.log('windowTest findTest4 wnd.find fail, err : ' + JSON.stri", " @tc.name      Test find_Test_003\n     * @tc.desc      Query mai", "owTest DestroyTest1 find failed, err :' + JSON.stringify(err));\n", "owTest DestroyTest2 find callback begin' + JSON.stringify(data))", "owTest DestroyTest2 find suceess,err : ' + JSON.stringify(err));", "wTest findTest1 wnd.find success, data : ' + JSON.stringify(data", "wTest findTest3 wnd.find fail, err : ' + JSON.stringify(err));\n ", "ows\n     */\n    it('find_Test_004', 0, async function (done) {\n ", "@tc.name       Test find_Test_001\n\t * @tc.desc       Query main ", "ole.log('windowTest findTest4 begin');\n        window.find('wind", "window\n\t */\n    it('find_Test_001', 0, async function (done) {\n ", "ole.log('windowTest findTest1 begin');\n        window.find('wind", "@tc.name       Test find_Test_002\n\t * @tc.desc       Query for n", "ow.\n     */\n    it('find_Test_003', 0, async function (done) {\n ", "             window.find('subWindow6', (err, data) => {\n        ", "n');\n        window.find('window', (err, data) => {\n            ", "ole.log('windowTest findTest2 wnd.find success, window : ' + JSO", "wTest findTest4 wnd.find fail, err : ' + JSON.stringify(err));\n "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "window", "api_method_name": "find", "api_method_all": "function find(id: string): Promise<Window>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["n');\n        window.find('window').then((window) => {\n          ", "n');\n        window.find('window0').then((data) => {\n           ", "             window.find('subWindow5').then((data) => {\n        "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "window", "api_method_name": "getTopWindow", "api_method_all": "function getTopWindow(callback: AsyncCallback<Window>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 86, "since": 6, "api_used": "\u662f", "lines": ["ystemBarEnableTest1 getTopWindow failed, err :' + JSON.stringify(err));\n", "ColorSpaceTest2 wnd.getTopWindow failed, err :' + JSON.stringify(err));\n", "oidAreaTest5 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "oidAreaTest2 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "oidAreaTest3 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest3 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "n');\n        window.getTopWindow((err, data) => {\n            if (err.co", "oidAreaTest4 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "lScreenTest1 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest2 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "oidAreaTest1 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest6 window.getTopWindow fail : ' + JSON.stringify(err));\n      ", " SetColorSpaceTest3 getTopWindow failed,err: ' + JSON.stringify(err));\n ", "pertiesTest2 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest6 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "oidAreaTest6 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "oidAreaTest6 window.getTopWindow failed, err : ' + JSON.stringify(err));", "oidAreaTest3 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "pertiesTest1 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "st beforeAll window.getTopWindow empty');\n            }\n        }, (err)", "ndowTest OnOffTest1 getTopWindow  fail ' + JSON.stringify(err.code));\n\t\t", "ystemBarEnableTest2 getTopWindow fail' + JSON.stringify(err));\n         ", "oidAreaTest2 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest4 window.getTopWindow fail : ' + JSON.stringify(err));\n      ", "\n            window.getTopWindow((err, data) => {\n\t\t\t\tif (err.code != 0)", " SetColorSpaceTest1 getTopWindow failed, err :' + JSON.stringify(err));\n", "lScreenTest3 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest8 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "lScreenTest1 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "een_Test_008 window.getTopWindow fail : ' + JSON.stringify(err));\n      ", "st beforeAll window.getTopWindow wnd: ' + wnd);\n            if (wnd) {\n ", "ystemBarEnableTest2 getTopWindow fail: ' + JSON.stringify(err));\n       ", "n\"];\n        window.getTopWindow((err, data) => {\n            if (err.co", "oidAreaTest5 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest1 window.getTopWindow fail : ' + JSON.stringify(err));\n      ", "lScreenTest2 window.getTopWindow fail : ' + JSON.stringify(err));\n      ", "pertiesTest2 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "st beforeAll window.getTopWindow failed, err : ' + JSON.stringify(err));", "ndowTest OnOffTest2 getTopWindow callback fail ' + JSON.stringify(err.co", "lScreenTest5 window.getTopWindow failed, err : ' + JSON.stringify(err));", "pertiesTest1 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest4 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "lScreenTest5 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "lScreenTest7 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", " SetColorSpaceTest4 getTopWindow failed,err: ' + JSON.stringify(err));\n ", "oidAreaTest1 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "lScreenTest7 window.getTopWindow failed, err : ' + JSON.stringify(err));"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "window", "api_method_name": "getTopWindow", "api_method_all": "function getTopWindow(): Promise<Window>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 41, "since": 6, "api_used": "\u662f", "lines": ["e) {\n        window.getTopWindow().then(wnd => {\n            console.log", "  };\n        window.getTopWindow().then(wnd => {\n            expect(wnd ", "n');\n        window.getTopWindow().then(wnd => {\n            console.log", "n\"];\n        window.getTopWindow().then(wnd => {\n            expect(wnd "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "window", "api_method_name": "getTopWindow", "api_method_all": "function getTopWindow(ctx: Context): Promise<Window>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 41, "since": 6, "api_used": "\u662f", "lines": ["e) {\n        window.getTopWindow().then(wnd => {\n            console.log", "  };\n        window.getTopWindow().then(wnd => {\n            expect(wnd ", "n');\n        window.getTopWindow().then(wnd => {\n            console.log", "n\"];\n        window.getTopWindow().then(wnd => {\n            expect(wnd "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "window", "api_method_name": "getTopWindow", "api_method_all": "function getTopWindow(ctx: Context, callback: AsyncCallback<Window>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 86, "since": 6, "api_used": "\u662f", "lines": ["ystemBarEnableTest1 getTopWindow failed, err :' + JSON.stringify(err));\n", "ColorSpaceTest2 wnd.getTopWindow failed, err :' + JSON.stringify(err));\n", "oidAreaTest5 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "oidAreaTest2 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "oidAreaTest3 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest3 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "n');\n        window.getTopWindow((err, data) => {\n            if (err.co", "oidAreaTest4 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "lScreenTest1 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest2 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "oidAreaTest1 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest6 window.getTopWindow fail : ' + JSON.stringify(err));\n      ", " SetColorSpaceTest3 getTopWindow failed,err: ' + JSON.stringify(err));\n ", "pertiesTest2 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest6 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "oidAreaTest6 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "oidAreaTest6 window.getTopWindow failed, err : ' + JSON.stringify(err));", "oidAreaTest3 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "pertiesTest1 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "st beforeAll window.getTopWindow empty');\n            }\n        }, (err)", "ndowTest OnOffTest1 getTopWindow  fail ' + JSON.stringify(err.code));\n\t\t", "ystemBarEnableTest2 getTopWindow fail' + JSON.stringify(err));\n         ", "oidAreaTest2 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest4 window.getTopWindow fail : ' + JSON.stringify(err));\n      ", "\n            window.getTopWindow((err, data) => {\n\t\t\t\tif (err.code != 0)", " SetColorSpaceTest1 getTopWindow failed, err :' + JSON.stringify(err));\n", "lScreenTest3 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest8 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "lScreenTest1 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "een_Test_008 window.getTopWindow fail : ' + JSON.stringify(err));\n      ", "st beforeAll window.getTopWindow wnd: ' + wnd);\n            if (wnd) {\n ", "ystemBarEnableTest2 getTopWindow fail: ' + JSON.stringify(err));\n       ", "n\"];\n        window.getTopWindow((err, data) => {\n            if (err.co", "oidAreaTest5 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest1 window.getTopWindow fail : ' + JSON.stringify(err));\n      ", "lScreenTest2 window.getTopWindow fail : ' + JSON.stringify(err));\n      ", "pertiesTest2 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "st beforeAll window.getTopWindow failed, err : ' + JSON.stringify(err));", "ndowTest OnOffTest2 getTopWindow callback fail ' + JSON.stringify(err.co", "lScreenTest5 window.getTopWindow failed, err : ' + JSON.stringify(err));", "pertiesTest1 window.getTopWindow failed, err : ' + JSON.stringify(err));", "lScreenTest4 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "lScreenTest5 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "lScreenTest7 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", " SetColorSpaceTest4 getTopWindow failed,err: ' + JSON.stringify(err));\n ", "oidAreaTest1 window.getTopWindow wnd: ' + wnd);\n            expect(wnd !", "lScreenTest7 window.getTopWindow failed, err : ' + JSON.stringify(err));"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "window", "api_method_name": "on", "api_method_all": "function on(type: 'systemBarTintChange', callback: Callback<SystemBarTintState>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 27158, "since": 7, "api_used": "\u662f", "lines": ["t from '@ohos.napi_context'\n\nimport {\n\tdescribe,\n\tbeforeAll,\n\t", "r(vertexShader);\n\t\tconst fragmentShader = gl.createShader(gl.F", "unction globalFunction() {\n\t\tconst vertexShader = gl.createSha", "obalFunction() {\n\t\tconst vertexShader = gl.createShader(gl.VER", "st', function() {\n\tconsole.info('webgltest start');\n\tvar gl;\n\t", "URRENT_PROGRAM);\n\t\tconsole.info(\"testUseProgram has failed for", "rn true;\n\t}\n\n\tfunction createProgramExternal(gl, vshader, fsha", ";\" +\n\t\t\"}\";\n\n\tfunction globalFunction() {\n\t\tconst vertexShader", "eProgramError1);\n\t\tconst renderBufferValue1 = gl.getParameter(", "'webgl1Test', function() {\n\tconsole.info('webgltest start');\n\t", "e.info('AceApplication onDestroy');\n    }\n};\n", "\t//\u8bbe\u7f6e\u5750\u6807\n\t\t\"gl_Position = a_Position; \" +\n\t\t//    \"gl_PointSize", "_Position = a_Position;\\n' +\n\t\t\t'}\\n';\n\n\t\t// \u7247\u5143\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tvar FSH", "  configService.setConfig(this)\n        require('../../test/Li", "eate');\n\n    },\n    onDestroy() {\n        console.info('AceApp", "Instance()\n        const expectExtend = new ExpectExtend({\n   ", "it()\n        const configService = core.getDefaultService('con", "ribute vec4 a_Position;\\n' +\n\t\t\t'void main() {\\n' +\n\t\t\t'  gl_P", "Create() {\n        console.info('AceApplication onCreate');\n\n ", "getDefaultService('config')\n        this.timeout = 60000\n     ", "system.app'\nimport Context from '@ohos.napi_context'\n\nimport {", "SOURCE =\n\t\t\t'precision mediump float;\\n' +\n\t\t\t'uniform vec4 u_", "nfo('AceApplication onDestroy');\n    }\n};\n", "e.info('AceApplication onCreate');\n\n    },\n    onDestroy() {\n ", "ramObj;\n\t}\n\n\n\tfunction createProgram(gl) {\n\t\t//\u9876\u70b9\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tvar V", "xport default {\n    onCreate() {\n        console.info('AceAppl", " \" + programObj)\n\t\tconst useProgramError1 = gl.getError();\n\t\tc", "world');\n    },\n    onShow(){\n        global.el = this.$refs.c", ";\n        \n        const core = Core.getInstance()\n        con", "if (!program) {\n\t\t\tconsole.log('Failed to create program');\n\t\t", "ribute vec4 a_Position;\" +\n\t\t\"void main() {\" +\n\t\t//\u8bbe\u7f6e\u5750\u6807\n\t\t\"gl_", "= gl.getError();\n\t\tconsole.info(\"useProgramError: \" + useProgr", "URRENT_PROGRAM);\n\t\tconsole.log(\"testUseProgram has failed for ", "estroy() {\n        console.info('AceApplication onDestroy');\n ", "ut = 60000\n        configService.setConfig(this)\n        requi", "HADER, vshader);\n\t\tconsole.log(\"======vertexShader: \" + vertex", "nfo('AceApplication onCreate');\n\n    },\n    onDestroy() {\n    ", "createProgram();\n\t\tconsole.log(\"testUseProgram has failed for ", "createProgram();\n\t\tconsole.info(\"testUseProgram has failed for", "n' +\n\t\t\t'  gl_Position = a_Position;\\n' +\n\t\t\t'}\\n';\n\n\t\t// \u7247\u5143\u7740\u8272", "fragmentShader);\n\t\tconst programObj = gl.createProgram();\n\t\tco", "gramObj;\n\t}\n\n\tfunction initShaders(gl, vshader, fshader) {\n\t\tv", "ore.init()\n        const configService = core.getDefaultServic", "_Position = a_Position; \" +\n\t\t//    \"gl_PointSize = 10.0;\" +\n\t", "itle: \"\"\n    },\n    onInit() {\n        this.title = this.$t('s", "hader, fshader);\n\t\tconsole.log(\"======createProgram program: \""], "files": ["WebGL.test12.js", "WebGL.test09.js", "screenshot.test.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test11.js", "WebGL.test02.js", "WebGL.test13.js", "WebGL.test01.js", "app.js", "WebGL.test05.js", "WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "display.test.js", "index.js", "WebGL.test04.js", "WebGL.test08.js", "WebGL.test03.js", "window.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "window", "api_method_name": "off", "api_method_all": "function off(type: 'systemBarTintChange', callback?: Callback<SystemBarTintState>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["rue();\n\t\t\t\t\t\t\t\tdata.off('windowSizeChange');\n\t\t\t\t\t\t\t\tdata.setLa", "g. clear)\n\t\t// turn off scissor test again\n\t\tgl.disable(gl.SCIS", "ndowTest OnOffTest2 off callback success');\n                   ", "               data.off('systemAvoidAreaChange');\n             "], "files": ["webGL.test.js", "window.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WindowType", "api_method_all": "enum WindowType {\n    \n    TYPE_APP,\n    \n    TYPE_SYSTEM_ALERT\n  }", "api_method_name": "WindowType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["subWindow1', window.WindowType.TYPE_APP).then(wnd ", "subWindow2', window.WindowType.TYPE_APP, (err, dat", "subWindow3', window.WindowType.TYPE_APP).then(wnd ", "subWindow5', window.WindowType.TYPE_APP).then(wnd ", "subWindow4', window.WindowType.TYPE_APP, (err, dat", "subWindow6', window.WindowType.TYPE_APP, (err, dat"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WindowType", "api_method_name": "TYPE_APP", "api_method_all": "TYPE_APP,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 6, "since": 0, "api_used": "\u662f", "lines": [", window.WindowType.TYPE_APP, (err, data) => {\n ", ", window.WindowType.TYPE_APP).then(wnd => {\n    "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AvoidAreaType", "api_method_all": "enum AvoidAreaType {\n    \n    TYPE_SYSTEM,\n\n    \n    TYPE_CUTOUT\n  }", "api_method_name": "AvoidAreaType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["getAvoidArea(window.AvoidAreaType.TYPE_CUTOUT).then((", "getAvoidArea(window.AvoidAreaType.TYPE_CUTOUT, (err, ", "getAvoidArea(window.AvoidAreaType.TYPE_SYSTEM, (err, ", "getAvoidArea(window.AvoidAreaType.TYPE_SYSTEM).then(("], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AvoidAreaType", "api_method_name": "TYPE_SYSTEM", "api_method_all": "TYPE_SYSTEM,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["indow.AvoidAreaType.TYPE_SYSTEM, (err, data) => {\n ", "indow.AvoidAreaType.TYPE_SYSTEM).then((data) => {\n "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WindowMode", "api_method_all": "enum WindowMode {\n    UNDEFINED = 1,\n    FULLSCREEN,\n    PRIMARY,\n    SECONDARY,\n    FLOATING\n  }", "api_method_name": "WindowMode", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowMode", "api_method_name": "UNDEFINED", "api_method_all": "UNDEFINED = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowMode", "api_method_name": "FULLSCREEN", "api_method_all": "FULLSCREEN,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["   SUB_WMS_SETLAYOUTFULLSCREEN_JSAPI_006\n     * @t", "   SUB_WMS_SETLAYOUTFULLSCREEN_JSAPI_008\n     * @t", "   SUB_WMS_SETLAYOUTFULLSCREEN_JSAPI_007\n\t * @tc.n"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WindowMode", "api_method_name": "PRIMARY", "api_method_all": "PRIMARY,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowMode", "api_method_name": "SECONDARY", "api_method_all": "SECONDARY,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarProperties", "api_method_all": "interface SystemBarProperties {\n    \n    statusBarColor?: string;\n\n    \n    isStatusBarLightIcon?: boolean;\n\n    \n    statusBarContentColor?: string;\n\n    \n    navigationBarColor?: string;\n\n    \n    isNavigationBarLightIcon?: boolean;\n\n    \n     navigationBarContentColor?: string;\n  }", "api_method_name": "SystemBarProperties", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 20, "since": 6, "api_used": "\u662f", "lines": [".log('windowTest SetSystemBarPropertiesTest1 setSystemBarPr", ".log('windowTest SetSystemBarPropertiesTest2 begin');\n     ", ".log('windowTest SetSystemBarPropertiesTest2 getTopWindow f", "SystemBarProperties(SystemBarProperties).then(() => {\n     ", "\n     */\n    it('setSystemBarProperties_Test_002', 0, async", "            data.setSystemBarProperties(SystemBarProperties", ".log('windowTest SetSystemBarPropertiesTest1 getTopWindow f", " @tc.name\t\t\tTest setSystemBarProperties_Test_001\n     * @tc", "rPropertiesTest1 setSystemBarProperties success ');\n       ", ".log('windowTest SetSystemBarPropertiesTest2 setSystemBarPr", "rPropertiesTest2 setSystemBarProperties fail' + JSON.string", ".log('windowTest SetSystemBarPropertiesTest1 begin');\n     ", "\n            wnd.setSystemBarProperties(SystemBarProperties", "SystemBarProperties(SystemBarProperties, (err) => {\n       ", "\n     */\n    it('setSystemBarProperties_Test_001', 0, async", "rPropertiesTest1 setSystemBarProperties failed, err :' + JS", "egin');\n        var SystemBarProperties = {\n            sta", "c.name      Test setSystemBarProperties_Test_002\n     * @tc"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarProperties", "api_method_name": "statusBarColor", "api_method_all": "statusBarColor?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 6, "api_used": "\u662f", "lines": ["ies = {\n            statusBarColor: '#ff00ff',\n       "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarProperties", "api_method_name": "isStatusBarLightIcon", "api_method_all": "isStatusBarLightIcon?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["0ff00',\n            isStatusBarLightIcon: true,\n            "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarProperties", "api_method_name": "statusBarContentColor", "api_method_all": "statusBarContentColor?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": [" false,\n            statusBarContentColor: '#ffffff',\n       "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarProperties", "api_method_name": "navigationBarColor", "api_method_all": "navigationBarColor?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 6, "api_used": "\u662f", "lines": ["f00ff',\n            navigationBarColor: '#00ff00',\n       "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarProperties", "api_method_name": "isNavigationBarLightIcon", "api_method_all": "isNavigationBarLightIcon?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [": true,\n            isNavigationBarLightIcon: false,\n           "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarProperties", "api_method_name": "navigationBarContentColor", "api_method_all": "navigationBarContentColor?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["fffff',\n            navigationBarContentColor: '#00ffff'\n        "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarRegionTint", "api_method_all": "interface SystemBarRegionTint {\n    \n    type: WindowType;\n\n    \n    isEnable?: boolean;\n\n    \n    region?: Rect;\n\n    \n    backgroundColor?: string;\n\n    \n    contentColor?: string\n  }", "api_method_name": "SystemBarRegionTint", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarRegionTint", "api_method_name": "type", "api_method_all": "type: WindowType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 277, "since": 7, "api_used": "\u662f", "lines": ["onsValue);\n\t\texpect(typeof(getSupportedExten", "eterValue);\n\t\tconst type = (texParameterValu", "st typeGLsizeiptr = typeof(reurGLsizeiptr);\n", "  const strType = ((typeof str) === \"object\"", " \"object\")\n\t\texpect(type).assertEqual(true);", "o(\"getVertexAttrib: type\" + type);\n\t\texpect(", "errorCode);\n\t\tconst type =\n\t\t\texpect(errorCo", "ufferSize);\n\t\tconst type = (bufferSize === 1", "derArray);\n\t\texpect(type).assertEqual(true);", ");\n\t\tconst type = ((typeof shaderArray) === ", "\" + type);\n\t\texpect(type).assertEqual(true);", "rogramObj);\n\t\tconst type = ((typeof shaderAr", "+ message);\n\t\tconst type = (message === null", "tion loadShader(gl, type, source) {\n\t\tconsol", "izeiptr);\n\t\t\texpect(typeGLsizeiptr).assertIn", "onFormat));\n\t\tconst type = ((typeof shaderPr", "ileStatus);\n\t\tconst type = (compileStatus ==", "=== null);\n\t\texpect(type).assertEqual(true);", "arameter);\n\t\texpect(typeof(clearParameter)).", "onst typeGLintptr = typeof(retuGLintptr);\n\t\t", "1f(0, 2.8);\n\t\tconst type = gl.getVertexAttri", "rs === 1);\n\t\texpect(type).assertEqual(false)", "+ result);\n\t\texpect(typeof(result)).assertEq", " === true)\n\t\texpect(type).assertEqual(false)", "meter)).assertEqual(typeof(float32Array));\n\t", " === 1024)\n\t\texpect(type).assertEqual(true);", "Lintptr);\n\t\t\texpect(typeGLintptr).assertInst", "tesValue);\n\t\texpect(typeof(getContextAttribu", "START, 0);\n\t\t\tconst typeGLintptr = typeof(re", "_SIZE, 0);\n\t\t\tconst typeGLsizeiptr = typeof(", "edShaders);\n\t\tconst type = (attachedShaders ", "rtexAttrib: type\" + type);\n\t\texpect(type).as", "_NEAREST);\n\t\texpect(type).assertEqual(false)", ");\n\t\tconst type = ((typeof shaderPrecisionFo", "r = gl.createShader(type);\n\t\tif (shader == n", "arameter);\n\t\texpect(typeof(samplerParameter)"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "window.test.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarRegionTint", "api_method_name": "isEnable", "api_method_all": "isEnable?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 412, "since": 0, "api_used": "\u662f", "lines": ["NCIL_TEST);\n\t\tconst isEnabledValue1 = gl.isEnabl", "able isEnabled: \" + isEnabled);\n\t\texpect(isEnabl", "sEnabled);\n\t\texpect(isEnabled).assertEqual(true)", "Enabled2);\n\t\texpect(isEnabled2).assertEqual(true", "edValue2);\n\t\texpect(isEnabledValue2).assertEqual", "sEnabledValue1: \" + isEnabledValue1);\n\t\texpect(i", "Enabled2);\n\t\texpect(isEnabled2).assertEqual(fals", "T);\n\t\tconsole.info(\"isEnabledValue2: \" + isEnabl", "sEnabledValue2: \" + isEnabledValue2);\n\t\texpect(i", "sEnabledValue2 = gl.isEnabled(gl.STENCIL_TEST);\n", "o(\"webgltest enable isEnabled: \" + isEnabled);\n\t", "NCIL_TEST);\n\t\tconst isEnabledValue2 = gl.isEnabl", "(\"webgltest disable isEnabled: \" + isEnabled);\n\t", "ble isEnabled2: \" + isEnabled2);\n\t\texpect(isEnab", "nst isEnabled2 = gl.isEnabled(gl.DITHER);\n\t\t// f", "d\n\t * @tc.desc Test isEnabled.\n\t */\n\tit('testIsE", "sEnabled);\n\t\texpect(isEnabled).assertEqual(false", "nsole.info('jsWebGL isEnabled test start ...' + ", "(\"webgltest disable isEnabled2: \" + isEnabled2);", "l.DITHER);\n\n\t\tconst isEnabled = gl.isEnabled(gl.", "r\n\t * @tc.desc Test isEnabled.\n\t */\n\tit('testIsE", "onst isEnabled = gl.isEnabled(gl.DITHER);\n\t\t// t", "sEnabledValue1 = gl.isEnabled(gl.STENCIL_TEST);\n", "nabled()\u65b9\u6cd5\uff1a\n\t\tconst isEnabled = gl.isEnabled(gl.", "nst isEnabled2 = gl.isEnabled(gl.DITHER);\n\t\t// t", "T);\n\t\tconsole.info(\"isEnabledValue1: \" + isEnabl", "onst isEnabled = gl.isEnabled(gl.DITHER);\n\t\t// f", "edValue1);\n\t\texpect(isEnabledValue1).assertEqual", "bGLRenderingContext.isEnabled()\u65b9\u6cd5\uff1a\n\t\tconst isEna", "nabled()\u65b9\u6cd5\uff1a\n\t\tconst isEnabled2 = gl.isEnabled(gl", "gl.DITHER);\n\t\tconst isEnabled2 = gl.isEnabled(gl"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarRegionTint", "api_method_name": "region", "api_method_all": "region?: Rect", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarRegionTint", "api_method_name": "backgroundColor", "api_method_all": "backgroundColor?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarTintState", "api_method_all": "interface SystemBarTintState {\n    \n    displayId: number;\n    \n    regionTint: Array<SystemBarRegionTint>;\n  }", "api_method_name": "SystemBarTintState", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarTintState", "api_method_name": "displayId", "api_method_all": "displayId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 11, "since": 0, "api_used": "\u662f", "lines": ["eight: 300\n\t\t\t},\n\t\t\tdisplayId: 1000\n\t\t};\n\t\tscreen", "eight: 300\n\t\t\t},\n\t\t\tdisplayId: null\n\t\t};\n\t\tscreen", "ht: -300\n\t\t\t\t},\n\t\t\t\tdisplayId: dsp.id\n\t\t\t};\n\t\t\tsc", "ht: 3000\n\t\t\t\t},\n\t\t\t\tdisplayId: dsp.id\n\t\t\t};\n\t\t\tsc", "eight: 0\n\t\t\t\t},\n\t\t\t\tdisplayId: dsp.id\n\t\t\t};\n\t\t\tsc", "p.height\n\t\t\t\t},\n\t\t\t\tdisplayId: dsp.id\n\t\t\t};\n\t\t\tsc", "ght: 300\n\t\t\t\t},\n\t\t\t\tdisplayId: dsp.id\n\t\t\t};\n\t\t\tsc"], "files": ["screenshot.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SystemBarTintState", "api_method_name": "regionTint", "api_method_all": "regionTint: Array<SystemBarRegionTint>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Rect", "api_method_all": "interface Rect {\n    left: number;\n\n    top: number;\n\n    width: number;\n\n    height: number;\n  }", "api_method_name": "Rect", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 38, "since": 7, "api_used": "\u662f", "lines": ["tions = {\n\t\t\t\tscreenRect: {\n\t\t\t\t\tleft: -50,\n", "  expect(data.bottomRect != null).assertTrue", "     expect(data.topRect != null).assertTrue", "tions = {\n\t\t\t\tscreenRect: {\n\t\t\t\t\tleft: 0,\n\t\t", "height = data.bottomRect.height;\n    }\n\n    ", "   expect(data.rightRect != null).assertTrue", "  expect(data.windowRect != null).assertTrue", "    expect(data.leftRect != null).assertTrue", "ptions = {\n\t\t\tscreenRect: {\n\t\t\t\tleft: 0,\n\t\t\t"], "files": ["window.test.js", "screenshot.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Rect", "api_method_name": "left", "api_method_all": "left: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 17, "since": 7, "api_used": "\u662f", "lines": ["        expect(data.leftRect != null).assert", "\tscreenRect: {\n\t\t\t\t\tleft: -50,\n\t\t\t\t\ttop: -50", "\t\tscreenRect: {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t", "\tscreenRect: {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0,\n\t\t"], "files": ["window.test.js", "screenshot.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Rect", "api_method_name": "top", "api_method_all": "top: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\twidth: 0,\n", "   var wnd;\n    var topWindow;\n    const DE", "');\n                topWindow.getProperties", "done) {\n        if (topWindow) {\n          ", "ndow) {\n            topWindow.show().then((", "\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\twidth: dsp", "        expect(data.topRect != null).assert", "scene that gets the top window\n    */\n    i", " {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\twidth: 100,", "\t\t\t\tleft: -50,\n\t\t\t\t\ttop: -50,\n\t\t\t\t\twidth: -", ") {\n                topWindow = wnd;\n      ", "                    topWindow.setFullScreen", "\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\twidth: 100"], "files": ["window.test.js", "screenshot.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Rect", "api_method_name": "width", "api_method_all": "width: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 68, "since": 7, "api_used": "\u662f", "lines": [" + width);\n\t\texpect(width).assertEqual(256);\n", "ER_WIDTH);\n\t\texpect(width).assertEqual(256);\n", "\t\timageSize: {\n\t\t\t\t\twidth: 3000,\n\t\t\t\t\theight:", "\t\t\t\t\ttop: -50,\n\t\t\t\t\twidth: -100,\n\t\t\t\t\theight:", "     expect(data[0].width != null).assertTrue", "\t\timageSize: {\n\t\t\t\t\twidth: 300,\n\t\t\t\t\theight: ", "arameter width: \" + width);\n\t\texpect(width).a", ",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\twidth: 10000,\n\t\t\t\t\theight", " 256, 256);\n\t\tconst width = gl.getRenderbuffe", "      expect(dsp[0].width != null).assertTrue", ",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\twidth: 100,\n\t\t\t\t\theight: ", "nderbufferParameter width: \" + width);\n\t\texpe", "         expect(dsp.width != null).assertTrue", "L_FORMAT);\n\t\texpect(width).assertEqual(gl.RGB", "L_FORMAT);\n\t\texpect(width).assertEqual(gl.STE", "L_FORMAT);\n\t\texpect(width).assertEqual(gl.DEP", "256, 256);\n\n\t\tconst width = gl.getRenderbuffe", "        expect(data.width != null).assertTrue"], "files": ["display.test.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test13.js", "screenshot.test.js", "window.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Rect", "api_method_name": "height", "api_method_all": "height: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 47, "since": 7, "api_used": "\u662f", "lines": ["));\n\t\theight = data.height;\n    }\n\t\n\tfunction ", "xpect(dsp.height == height).assertTrue();\n\t\t\t\t", "h,\n\t\t\t\t\theight: dsp.height\n\t\t\t\t},\n\t\t\t\tdisplayI", "h,\n\t\t\t\t\theight: dsp.height\n\t\t\t\t},\n\t\t\t\timageSiz", "\twidth: 10000,\n\t\t\t\t\theight: 10000,\n\t\t\t\t},\n\t\t\t\t", "stringify(data));\n\t\theight = data.bottomRect.h", "\n\t\t\t\t\t\t\t\texpect(dsp.height == height).assertTr", "256, 256);\n\n\t\tconst height = gl.getRenderbuffe", "th: dsp.width,\n\t\t\t\t\theight: dsp.height\n\t\t\t\t},\n", "t = data.bottomRect.height;\n    }\n\n    beforeA", " = 100;\n        var height = 100;\n        cons", "stringify(data));\n\t\theight = data.height;\n    ", "\t\twidth: 3000,\n\t\t\t\t\theight: 3000\n\t\t\t\t},\n\t\t\t\tdi", "         expect(dsp.height != null).assertTrue", " i;\n                height = height * i;\n     ", "           height = height * i;\n              ", "      expect(dsp[0].height != null).assertTrue", "     expect(data[0].height != null).assertTrue", "             expect(height == 0).assertTrue();", "R_HEIGHT);\n\t\texpect(height).assertEqual(256);\n", "\t\t\twidth: 300,\n\t\t\t\t\theight: 300\n\t\t\t\t},\n\t\t\t\tdis", "\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0,\n\t\t\t\t},\n\t\t\t\timag", "\t\t\t\twidth: 100,\n\t\t\t\theight: 100,\n\t\t\t},\n\t\t\timag", "\t\t\t\twidth: 300,\n\t\t\t\theight: 300\n\t\t\t},\n\t\t\tdispl", "\t\t\twidth: 100,\n\t\t\t\t\theight: 100,\n\t\t\t\t},\n\t\t\t\tim", "        expect(data.height != null).assertTrue", "\t\t\t\t\t\t\t\t\texpect(dsp.height == height).assertTr", "nd.resetSize(width, height).then(() => {\n     ", "IME = 3000;\n    var height;\n\n    function wind", "\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0\n\t\t\t\t},\n\t\t\t\tdispl", "\t\twidth: -100,\n\t\t\t\t\theight: -100,\n\t\t\t\t},\n\t\t\t\ti", "\t\twidth: -300,\n\t\t\t\t\theight: -300\n\t\t\t\t},\n\t\t\t\tdi"], "files": ["display.test.js", "webGL.test.js", "screenshot.test.js", "window.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AvoidArea", "api_method_all": "interface AvoidArea {\n    \n    leftRect: Rect;\n\n    \n    topRect: Rect;\n\n    \n    rightRect: Rect;\n\n    \n    bottomRect: Rect;\n  }", "api_method_name": "AvoidArea", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 57, "since": 7, "api_used": "\u662f", "lines": [".log('windowTest getAvoidAreaTest5 wnd.getAvoidAr", "oidAreaTest3 wnd.getAvoidArea success, data :' + ", ".log('windowTest getAvoidAreaTest6 begin');\n     ", ".log('windowTest getAvoidAreaTest3 window.getTopW", ".log('windowTest getAvoidAreaTest4 window.getTopW", "oidAreaTest2 wnd.getAvoidArea success, data :' + ", "\n            wnd.getAvoidArea(avoidAreaType).then", ".log('windowTest getAvoidAreaTest3 begin');\n     ", "})\n\n    \n    it('getAvoidArea_Test_003', 0, async", ".log('windowTest getAvoidAreaTest2 window.getTopW", "getAvoidArea(window.AvoidAreaType.TYPE_CUTOUT, (e", "})\n\n    \n    it('getAvoidArea_Test_004', 0, async", ".log('windowTest getAvoidAreaTest4 wnd.getAvoidAr", ".log('windowTest getAvoidAreaTest5 begin');\n     ", "oidAreaTest1 wnd.getAvoidArea failed, err : ' + J", ".log('windowTest getAvoidAreaTest2 wnd.getAvoidAr", "oidAreaTest5 wnd.getAvoidArea callback fail' + JS", ".log('windowTest getAvoidAreaTest6 window.getTopW", ".log('windowTest getAvoidAreaTest5 window.getTopW", "oidAreaTest3 wnd.getAvoidArea failed, err : ' + J", "})\n\n    \n    it('getAvoidArea_Test_001', 0, async", ".log('windowTest getAvoidAreaTest3 wnd.getAvoidAr", "oidAreaTest5 wnd.getAvoidArea callback end');\n   ", "oidAreaTest2 wnd.getAvoidArea failed, err : ' + J", ".log('windowTest getAvoidAreaTest4 begin');\n     ", "\n            wnd.getAvoidArea(window.AvoidAreaTyp", "})\n\n    \n    it('getAvoidArea_Test_005', 0, async", ".log('windowTest getAvoidAreaTest1 wnd.getAvoidAr", "})\n\n    \n    it('getAvoidArea_Test_002', 0, async", "getAvoidArea(window.AvoidAreaType.TYPE_CUTOUT).th", "}\n\t\n\tfunction systemAvoidAreaChangeCallback(data)", ".log('windowTest getAvoidAreaTest1 window.getTopW", "})\n\n    \n    it('getAvoidArea_Test_006', 0, async", "oidAreaTest4 wnd.getAvoidArea callback fail' + JS", "getAvoidArea(window.AvoidAreaType.TYPE_SYSTEM).th", "oidAreaTest1 wnd.getAvoidArea success, data :' + ", "getAvoidArea(window.AvoidAreaType.TYPE_SYSTEM, (e", ".log('windowTest getAvoidAreaTest1 begin');\n     ", ".log('windowTest getAvoidAreaTest2 begin');\n     "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AvoidArea", "api_method_name": "leftRect", "api_method_all": "leftRect: Rect", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 0, "api_used": "\u662f", "lines": ["        expect(data.leftRect != null).assertTrue"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AvoidArea", "api_method_name": "topRect", "api_method_all": "topRect: Rect", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 0, "api_used": "\u662f", "lines": ["        expect(data.topRect != null).assertTrue"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AvoidArea", "api_method_name": "rightRect", "api_method_all": "rightRect: Rect", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 0, "api_used": "\u662f", "lines": ["        expect(data.rightRect != null).assertTrue"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AvoidArea", "api_method_name": "bottomRect", "api_method_all": "bottomRect: Rect", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 7, "since": 0, "api_used": "\u662f", "lines": ["        expect(data.bottomRect != null).assertTrue", "));\n\t\theight = data.bottomRect.height;\n    }\n\n    "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Size", "api_method_all": "interface Size {\n    \n    width: number;\n\n    \n    height: number;\n  }", "api_method_name": "Size", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 197, "since": 7, "api_used": "\u662f", "lines": ["r blockSize\" + blockSize);\n\t\texpect(blockSiz", "GetVertexAttrib_EnumSize\n\t * @tc.desc Test g", "6];\n\t\t\tconst uniformSize = gl2.getActiveUnif", "BlockParameter blockSize\" + blockSize);\n\t\tex", "console.info('bufferSize' + bufferSize);\n\t\te", "x, 1);\n\t\tconst blockSize = gl2.getActiveUnif", "r blockSize\" + blockSize);\n\t\tconst errorCode", "IZE);\n\t\texpect(greenSize).assertEqual(4);\n\t\t", " +\n\t\t//    \"gl_PointSize = 10.0;\" +\n\t\t\"} \";\n", " 256);\n\t\tconst greenSize = gl.getRenderbuffe", "RAW);\n\t\tconst bufferSize = gl.getBufferParam", "ze);\n\t\texpect(bufferSize).assertEqual(8);\n\t\t", "bufferSize' + bufferSize);\n\t\texpect(bufferSi", "const type = (bufferSize === 1024)\n\t\texpect(", "GetVertexAttrib_EnumSize', 0, async function", "BlockParameter blockSize\" + blockSize);\n\t\tco", "ze);\n\t\texpect(bufferSize).assertEqual(1024);", "console.info('bufferSize' + bufferSize);\n\t\tc", "];\n\t\t\texpect(uniformSize.toString() != gluin", "ize);\n\t\texpect(blockSize).assertEqual(undefi", "ER);\n\t\texpect(bufferSize).assertEqual(undefi", "bufferSize' + bufferSize);\n\t\tconst type = (b", "IZE);\n\t\texpect(greenSize).assertEqual(0);\n\t\t"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "screenshot.test.js", "WebGL.test05.js", "window.test.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Size", "api_method_name": "width", "api_method_all": "width: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 68, "since": 7, "api_used": "\u662f", "lines": [" + width);\n\t\texpect(width).assertEqual(256);\n", "ER_WIDTH);\n\t\texpect(width).assertEqual(256);\n", "\t\timageSize: {\n\t\t\t\t\twidth: 3000,\n\t\t\t\t\theight:", "\t\t\t\t\ttop: -50,\n\t\t\t\t\twidth: -100,\n\t\t\t\t\theight:", "     expect(data[0].width != null).assertTrue", "\t\timageSize: {\n\t\t\t\t\twidth: 300,\n\t\t\t\t\theight: ", "arameter width: \" + width);\n\t\texpect(width).a", ",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\twidth: 10000,\n\t\t\t\t\theight", " 256, 256);\n\t\tconst width = gl.getRenderbuffe", "      expect(dsp[0].width != null).assertTrue", ",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\twidth: 100,\n\t\t\t\t\theight: ", "nderbufferParameter width: \" + width);\n\t\texpe", "         expect(dsp.width != null).assertTrue", "L_FORMAT);\n\t\texpect(width).assertEqual(gl.RGB", "L_FORMAT);\n\t\texpect(width).assertEqual(gl.STE", "L_FORMAT);\n\t\texpect(width).assertEqual(gl.DEP", "256, 256);\n\n\t\tconst width = gl.getRenderbuffe", "        expect(data.width != null).assertTrue"], "files": ["display.test.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test13.js", "screenshot.test.js", "window.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Size", "api_method_name": "height", "api_method_all": "height: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 47, "since": 7, "api_used": "\u662f", "lines": ["));\n\t\theight = data.height;\n    }\n\t\n\tfunction ", "xpect(dsp.height == height).assertTrue();\n\t\t\t\t", "h,\n\t\t\t\t\theight: dsp.height\n\t\t\t\t},\n\t\t\t\tdisplayI", "h,\n\t\t\t\t\theight: dsp.height\n\t\t\t\t},\n\t\t\t\timageSiz", "\twidth: 10000,\n\t\t\t\t\theight: 10000,\n\t\t\t\t},\n\t\t\t\t", "stringify(data));\n\t\theight = data.bottomRect.h", "\n\t\t\t\t\t\t\t\texpect(dsp.height == height).assertTr", "256, 256);\n\n\t\tconst height = gl.getRenderbuffe", "th: dsp.width,\n\t\t\t\t\theight: dsp.height\n\t\t\t\t},\n", "t = data.bottomRect.height;\n    }\n\n    beforeA", " = 100;\n        var height = 100;\n        cons", "stringify(data));\n\t\theight = data.height;\n    ", "\t\twidth: 3000,\n\t\t\t\t\theight: 3000\n\t\t\t\t},\n\t\t\t\tdi", "         expect(dsp.height != null).assertTrue", " i;\n                height = height * i;\n     ", "           height = height * i;\n              ", "      expect(dsp[0].height != null).assertTrue", "     expect(data[0].height != null).assertTrue", "             expect(height == 0).assertTrue();", "R_HEIGHT);\n\t\texpect(height).assertEqual(256);\n", "\t\t\twidth: 300,\n\t\t\t\t\theight: 300\n\t\t\t\t},\n\t\t\t\tdis", "\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0,\n\t\t\t\t},\n\t\t\t\timag", "\t\t\t\twidth: 100,\n\t\t\t\theight: 100,\n\t\t\t},\n\t\t\timag", "\t\t\t\twidth: 300,\n\t\t\t\theight: 300\n\t\t\t},\n\t\t\tdispl", "\t\t\twidth: 100,\n\t\t\t\t\theight: 100,\n\t\t\t\t},\n\t\t\t\tim", "        expect(data.height != null).assertTrue", "\t\t\t\t\t\t\t\t\texpect(dsp.height == height).assertTr", "nd.resetSize(width, height).then(() => {\n     ", "IME = 3000;\n    var height;\n\n    function wind", "\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0\n\t\t\t\t},\n\t\t\t\tdispl", "\t\twidth: -100,\n\t\t\t\t\theight: -100,\n\t\t\t\t},\n\t\t\t\ti", "\t\twidth: -300,\n\t\t\t\t\theight: -300\n\t\t\t\t},\n\t\t\t\tdi"], "files": ["display.test.js", "webGL.test.js", "screenshot.test.js", "window.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WindowProperties", "api_method_all": "interface WindowProperties {\n    \n    windowRect: Rect;\n\n    \n    type: WindowType;\n\n    \n    isFullScreen: boolean\n\n    \n    isLayoutFullScreen: boolean\n\n    \n    focusable: boolean\n\n    \n    touchable: boolean\n\n    \n    brightness: number\n\n    \n    dimBehindValue: number\n\n    \n    isKeepScreenOn: boolean\n\n    \n    isPrivacyMode: boolean\n\n    \n    isRoundCorner: boolean\n\n    \n    isTransparent: boolean\n  }", "api_method_name": "WindowProperties", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowProperties", "api_method_name": "windowRect", "api_method_all": "windowRect: Rect", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["        expect(data.windowRect != null).assertTrue"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WindowProperties", "api_method_name": "type", "api_method_all": "type: WindowType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 277, "since": 7, "api_used": "\u662f", "lines": ["onsValue);\n\t\texpect(typeof(getSupportedExten", "eterValue);\n\t\tconst type = (texParameterValu", "st typeGLsizeiptr = typeof(reurGLsizeiptr);\n", "  const strType = ((typeof str) === \"object\"", " \"object\")\n\t\texpect(type).assertEqual(true);", "o(\"getVertexAttrib: type\" + type);\n\t\texpect(", "errorCode);\n\t\tconst type =\n\t\t\texpect(errorCo", "ufferSize);\n\t\tconst type = (bufferSize === 1", "derArray);\n\t\texpect(type).assertEqual(true);", ");\n\t\tconst type = ((typeof shaderArray) === ", "\" + type);\n\t\texpect(type).assertEqual(true);", "rogramObj);\n\t\tconst type = ((typeof shaderAr", "+ message);\n\t\tconst type = (message === null", "tion loadShader(gl, type, source) {\n\t\tconsol", "izeiptr);\n\t\t\texpect(typeGLsizeiptr).assertIn", "onFormat));\n\t\tconst type = ((typeof shaderPr", "ileStatus);\n\t\tconst type = (compileStatus ==", "=== null);\n\t\texpect(type).assertEqual(true);", "arameter);\n\t\texpect(typeof(clearParameter)).", "onst typeGLintptr = typeof(retuGLintptr);\n\t\t", "1f(0, 2.8);\n\t\tconst type = gl.getVertexAttri", "rs === 1);\n\t\texpect(type).assertEqual(false)", "+ result);\n\t\texpect(typeof(result)).assertEq", " === true)\n\t\texpect(type).assertEqual(false)", "meter)).assertEqual(typeof(float32Array));\n\t", " === 1024)\n\t\texpect(type).assertEqual(true);", "Lintptr);\n\t\t\texpect(typeGLintptr).assertInst", "tesValue);\n\t\texpect(typeof(getContextAttribu", "START, 0);\n\t\t\tconst typeGLintptr = typeof(re", "_SIZE, 0);\n\t\t\tconst typeGLsizeiptr = typeof(", "edShaders);\n\t\tconst type = (attachedShaders ", "rtexAttrib: type\" + type);\n\t\texpect(type).as", "_NEAREST);\n\t\texpect(type).assertEqual(false)", ");\n\t\tconst type = ((typeof shaderPrecisionFo", "r = gl.createShader(type);\n\t\tif (shader == n", "arameter);\n\t\texpect(typeof(samplerParameter)"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "window.test.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ColorSpace", "api_method_all": "enum ColorSpace {\n    \n    DEFAULT,\n    \n    WIDE_GAMUT,\n  }", "api_method_name": "ColorSpace", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 53, "since": 8, "api_used": "\u662f", "lines": [".log('windowTest SetColorSpaceTest1 wnd.getColorSp", ".log('windowTest SetColorSpaceTest2 setColorSpace ", "\n     */\n    it('setColorSpace_Test_003', 0, async", "tColorSpaceTest3 getColorSpace callback fail' + JS", "tColorSpaceTest4 setColorSpace callback begin' + J", ".log('windowTest SetColorSpaceTest1 begin');\n     ", "etColorSpace(window.ColorSpace.WIDE_GAMUT).then(()", "orSpaceTest1 wnd.setColorSpace failed, err :' + JS", "orSpaceTest2 wnd.setColorSpace failed, err :' + JS", "\n            wnd.setColorSpace(window.ColorSpace.W", "\n     */\n    it('setColorSpace_Test_002', 0, async", "             wnd.getColorSpace().then(res => {\n   ", ".log('windowTest SetColorSpaceTest4 begin');\n     ", ".log('windowTest SetColorSpaceTest2 begin');\n     ", ".log('windowTest SetColorSpaceTest3 wnd: ' + wnd);", ".log('windowTest SetColorSpaceTest1 getTopWindow f", ".log('windowTest SetColorSpaceTest3 begin');\n     ", "tColorSpaceTest3 setColorSpace  fail' + JSON.strin", "c.name      Test setColorSpace_Test_003\n     * @tc", ".log('windowTest SetColorSpaceTest4 wnd: ' + wnd);", "c.name      Test setColorSpace_Test_004\n     * @tc", ".log('windowTest SetColorSpaceTest3 getTopWindow f", ".log('windowTest SetColorSpaceTest1 wnd: ' + wnd);", "xpect(res == window.ColorSpace.WIDE_GAMUT).assertT", ".log('windowTest SetColorSpaceTest3 setColorSpace ", "name        Test setColorSpace_Test_002\n     * @tc", ".log('windowTest SetColorSpaceTest2 wnd.getTopWind", "\n            wnd.setColorSpace(-5, (err) => {\n    ", "tColorSpaceTest2 setColorSpace -5');\n             ", "\n            wnd.setColorSpace(-5).then(() => {\n  ", "name        Test setColorSpace_Test_001\n     * @tc", "\n     */\n    it('setColorSpace_Test_004', 0, async", ".log('windowTest SetColorSpaceTest2 wnd.setColorSp", "\n     */\n    it('setColorSpace_Test_001', 0, async", "tColorSpaceTest3 getColorSpace  fail ' + JSON.stri", "tColorSpaceTest1 setColorSpace WIDE_GAMUT');\n     ", "             wnd.getColorSpace((err, data) => {\n  ", ".log('windowTest SetColorSpaceTest2 wnd: ' + wnd);", "etColorSpace(window.ColorSpace.WIDE_GAMUT, (err) =", ".log('windowTest SetColorSpaceTest1 setColorSpace ", "pect(data == window.ColorSpace.WIDE_GAMUT).assertT", ".log('windowTest SetColorSpaceTest1 wnd.setColorSp", ".log('windowTest SetColorSpaceTest3 getColorSpace ", "orSpaceTest1 wnd.getColorSpace failed, err :' + JS", ".log('windowTest SetColorSpaceTest4 setColorSpace ", "tColorSpaceTest1 setColorSpace WIDE_GAMUT success'", ".log('windowTest SetColorSpaceTest1 wnd.isSupportW"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ColorSpace", "api_method_name": "DEFAULT", "api_method_all": "DEFAULT,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 3, "since": 0, "api_used": "\u662f", "lines": ["\n\t\t\tgl2.FRAMEBUFFER_DEFAULT);\n\t\tconsole.info('F", "arameter(gl.BROWSER_DEFAULT_WEBGL);\n\t\tconsole.i"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ColorSpace", "api_method_name": "WIDE_GAMUT", "api_method_all": "WIDE_GAMUT,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 6, "since": 0, "api_used": "\u662f", "lines": ["Test1 setColorSpace WIDE_GAMUT success');\n        ", "e(window.ColorSpace.WIDE_GAMUT, (err) => {\n       ", "e(window.ColorSpace.WIDE_GAMUT).then(() => {\n     ", "Test1 setColorSpace WIDE_GAMUT');\n                ", "= window.ColorSpace.WIDE_GAMUT).assertTrue();\n    "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_all": "interface Window {\n    \n    hide (callback: AsyncCallback<void>): void;\n\n    \n    hide(): Promise<void>;\n\n    \n    show(callback: AsyncCallback<void>): void;\n\n    \n    show(): Promise<void>;\n\n    \n    destroy(callback: AsyncCallback<void>): void;\n\n    \n    destroy(): Promise<void>;\n\n    \n    moveTo(x: number, y: number): Promise<void>;\n\n    \n    moveTo(x: number, y: number, callback: AsyncCallback<void>): void;\n\n    \n    resetSize(width: number, height: number): Promise<void>;\n\n    \n    resetSize(width: number, height: number, callback: AsyncCallback<void>): void;\n\n    \n    setWindowType(type: WindowType): Promise<void>;\n\n    \n    setWindowType(type: WindowType, callback: AsyncCallback<void>): void;\n\n    \n    getProperties(callback: AsyncCallback<WindowProperties>): void;\n\n     \n    getProperties(): Promise<WindowProperties>;\n\n    \n    getAvoidArea(type: AvoidAreaType, callback: AsyncCallback<AvoidArea>): void;\n\n    \n    getAvoidArea(type: AvoidAreaType): Promise<AvoidArea>;\n\n    \n    setFullScreen(isFullScreen: boolean, callback: AsyncCallback<void>): void;\n\n    \n    setFullScreen(isFullScreen: boolean): Promise<void>;\n\n    \n    setLayoutFullScreen(isLayoutFullScreen: boolean, callback: AsyncCallback<void>): void;\n\n    \n    setLayoutFullScreen(isLayoutFullScreen: boolean): Promise<void>;\n\n    \n    setSystemBarEnable(names: Array<'status'|'navigation'>, callback: AsyncCallback<void>): void;\n\n    \n    setSystemBarEnable(names: Array<'status'|'navigation'>): Promise<void>;\n\n    \n    setSystemBarProperties(systemBarProperties: SystemBarProperties, callback: AsyncCallback<void>): void;\n\n    \n    setSystemBarProperties(systemBarProperties: SystemBarProperties): Promise<void>;\n\n    \n    loadContent(path: string, storage: ContentStorage, callback: AsyncCallback<void>): void;\n\n    \n    loadContent(path: string, storage: ContentStorage): Promise<void>;\n\n    \n    loadContent(path: string, callback: AsyncCallback<void>): void;\n\n      \n       loadContent(path: string): Promise<void>;\n\n    \n    isShowing(callback: AsyncCallback<boolean>): void;\n\n    \n    isShowing(): Promise<boolean>;\n\n    \n    on(type: 'windowSizeChange', callback: Callback<Size>): void;\n\n    \n    off(type: 'windowSizeChange', callback?: Callback<Size>): void;\n\n    \n    on(type: 'systemAvoidAreaChange', callback: Callback<AvoidArea>): void;\n\n    \n    off(type: 'systemAvoidAreaChange', callback?: Callback<AvoidArea>): void;\n\n    \n    on(type: 'keyboardHeightChange', callback: Callback<number>): void;\n\n    \n    off(type: 'keyboardHeightChange', callback?: Callback<number>): void;\n\n    \n    isSupportWideGamut(): Promise<boolean>;\n\n    \n    isSupportWideGamut(callback: AsyncCallback<boolean>): void;\n\n    \n    setColorSpace(colorSpace:ColorSpace): Promise<void>;\n\n    \n    setColorSpace(colorSpace:ColorSpace, callback: AsyncCallback<void>): void;\n\n    \n    getColorSpace(): Promise<ColorSpace>;\n\n    \n    getColorSpace(callback: AsyncCallback<ColorSpace>): void;\n\n    \n    setBackgroundColor(color: string): Promise<void>;\n\n    \n    setBackgroundColor(color: string, callback: AsyncCallback<void>): void;\n\n    \n    setBrightness(brightness: number): Promise<void>;\n\n    \n    setBrightness(brightness: number, callback: AsyncCallback<void>): void;\n\n    \n    setDimBehind(dimBehindValue: number, callback: AsyncCallback<void>): void;\n\n    \n    setDimBehind(dimBehindValue: number): Promise<void>;\n\n    \n    setFocusable(isFocusable: boolean): Promise<void>;\n\n    \n    setFocusable(isFocusable: boolean, callback: AsyncCallback<void>): void;\n\n    \n    setKeepScreenOn(isKeepScreenOn: boolean): Promise<void>;\n\n    \n    setKeepScreenOn(isKeepScreenOn: boolean, callback: AsyncCallback<void>): void;\n\n    \n    setOutsideTouchable(touchable: boolean): Promise<void>;\n\n    \n    setOutsideTouchable(touchable: boolean, callback: AsyncCallback<void>): void;\n\n    \n    setPrivacyMode(isPrivacyMode: boolean): Promise<void>;\n\n    \n    setPrivacyMode(isPrivacyMode: boolean, callback: AsyncCallback<void>): void;\n\n    \n    setTouchable(isTouchable: boolean): Promise<void>;\n\n    \n    setTouchable(isTouchable: boolean, callback: AsyncCallback<void>): void;\n  }", "api_method_name": "Window", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 147, "since": 7, "api_used": "\u662f", "lines": ["aTest1 window.getTopWindow wnd: ' + wnd);\n    ", "var wnd;\n    var topWindow;\n    const DELAY_TI", "sTest1 window.getTopWindow wnd: ' + wnd);\n    ", "nTest1 window.getTopWindow wnd: ' + wnd);\n    ", "w) {\n            topWindow.show().then(() => {", "nTest2 window.getTopWindow wnd: ' + wnd);\n    ", "oreAll window.getTopWindow empty');\n          ", "sTest1 window.getTopWindow failed, err : ' + J", "sTest2 window.getTopWindow wnd: ' + wnd);\n    ", "aTest2 window.getTopWindow failed, err : ' + J", "aTest3 window.getTopWindow failed, err : ' + J", "aTest6 window.getTopWindow wnd: ' + wnd);\n    ", "aTest1 window.getTopWindow failed, err : ' + J", "                 topWindow.setFullScreen(false", "aTest2 window.getTopWindow wnd: ' + wnd);\n    ", "oreAll window.getTopWindow failed, err : ' + J", "sTest2 window.getTopWindow failed, err : ' + J", "aTest4 window.getTopWindow wnd: ' + wnd);\n    ", "nTest2 window.getTopWindow fail : ' + JSON.str", "oreAll window.getTopWindow wnd: ' + wnd);\n    ", "nTest4 window.getTopWindow wnd: ' + wnd);\n    ", "nTest1 window.getTopWindow failed, err : ' + J", "nTest3 window.getTopWindow wnd: ' + wnd);\n    ", "       window.getTopWindow().then(wnd => {\n   ", "aTest5 window.getTopWindow failed, err : ' + J", "\n                topWindow = wnd;\n            ", "nTest1 window.getTopWindow fail : ' + JSON.str", "aTest5 window.getTopWindow wnd: ' + wnd);\n    ", "nTest3 window.getTopWindow failed, err : ' + J", "aTest6 window.getTopWindow failed, err : ' + J", "\n                topWindow.getProperties().the", "aTest3 window.getTopWindow wnd: ' + wnd);\n    ", "e) {\n        if (topWindow) {\n            topW"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "hide", "api_method_all": "hide (callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "hide", "api_method_all": "hide(): Promise<void>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "show", "api_method_all": "show(callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": [" IsShowingTest1 wnd.show failed, err :' + JSON.stringify(err));\n", "               data.show(() => {\n                            if ", "Test beforeEach wnd.show failed, err : ' + JSON.stringify(err));", "IsShowingTest2 data.show fail err ' + JSON.stringify(err));\n    ", "Test beforeEach wnd.show success');\n                topWindow.ge"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "show", "api_method_all": "show(): Promise<void>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["                wnd.show().then(() => {\n                    wnd.", "          topWindow.show().then(() => {\n                console."], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "destroy", "api_method_all": "destroy(callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["  * @tc.name\t\t\tTest destroy_Test_001\n     * @tc.desc\t\t\tVerify that ", " @tc.name      Test destroy_Test_002\n     * @tc.desc      Verify th", "dowTest CreateTest1 destroy failed, err :' + JSON.stringify(err));\n", "ted\n     */\n    it('destroy_Test_002', 0, async function (done) {\n ", "fy that a window is destroyed after being created\n     */\n    it('d", "               data.destroy((err) => {\n                    if (err.", "ted\n     */\n    it('destroy_Test_001', 0, async function (done) {\n "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "destroy", "api_method_all": "destroy(): Promise<void>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["();\n            wnd.destroy().then(() => {\n                window.f"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "moveTo", "api_method_all": "moveTo(x: number, y: number): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["();\n            wnd.moveTo(20000, 20000).then(() => {\n            ", "                wnd.moveTo(100, 100).then(() => {\n                ", "();\n            wnd.moveTo(-200, 200).then(() => {\n               ", "();\n            wnd.moveTo(200, 200).then(() => {\n                ", "                wnd.moveTo(200, -300).then(() => {\n               ", "();\n            wnd.moveTo(100, 100).then(() => {\n                ", "();\n            wnd.moveTo(-200, -200).then(() => {\n              "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "moveTo", "api_method_all": "moveTo(x: number, y: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["wTest moveTest2 wnd.moveTo success');\n                expect(TRUE_", "wTest moveTest5 wnd.moveTo failed, err :' + JSON.stringify(err));\n", "indowTest moveTest1 moveTo callback success');\n                   ", "st moveTestNegative moveTo failed, err :' + JSON.stringify(err));\n", "wTest moveTest6 wnd.moveTo success');\n                expect(TRUE_", "wTest moveTest6 wnd.moveTo failed, err :' + JSON.stringify(err));\n", "       console.log('moveTo(-200,-200) success');\n                e", "wTest moveTest3 wnd.moveTo success');\n                expect(TRUE_", "();\n            wnd.moveTo(200, 200, (err) => {\n                if", "wTest moveTest2 wnd.moveTo failed, err :' + JSON.stringify(err));\n", "indowTest moveTest1 moveTo callback fail' + JSON.stringify(err.cod", "wTest moveTest3 wnd.moveTo failed, err :' + JSON.stringify(err));\n", "wTest moveTest4 wnd.moveTo success');\n                expect(TRUE_", "wTest moveTest4 wnd.moveTo failed, err :' + JSON.stringify(err));\n"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "resetSize", "api_method_all": "resetSize(width: number, height: number): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["();\n            wnd.resetSize(200, 600).then(() => {\n                ", "();\n            wnd.resetSize(0, 0).then(() => {\n                cons", "                wnd.resetSize(width, height).then(() => {\n           ", "                wnd.resetSize(100, 100).then(() => {\n                ", "();\n            wnd.resetSize(-1, -1).then(() => {\n                co", "();\n            wnd.resetSize(20000, 20000).then(() => {\n            "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "resetSize", "api_method_all": "resetSize(width: number, height: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 60, "since": 7, "api_used": "\u662f", "lines": ["ole.log('windowTest resetSizeTest1 begin');\n        window.getTopWind", " resetSizeTest5 wnd.resetSize failed, err :' + JSON.stringify(err));\n", "size\n    */\n    it('resetSize_Test_002', 0, async function (done) {\n ", "ole.log('windowTest resetSizeTest3 wnd.resetSize failed, err :' + JSO", "ole.log('windowTest resetSizeTest2 begin');\n        window.getTopWind", "ole.log('windowTest resetSizeTest2 wnd.resetSize(20000, 20000) succes", "ole.log('windowTest resetSizeTest2 getTopWindow failed, err :' + JSON", " resetSizeTest4 wnd.resetSize failed, err :' + JSON.stringify(err));\n", "ole.log('windowTest resetSizeTest5 getTopWindow failed, err :' + JSON", "ole.log('windowTest resetSizeTest4 getTopWindow wnd: ' + wnd);\n      ", "ole.log('windowTest resetSizeTest5 getTopWindow wnd: ' + wnd);\n      ", "ole.log('windowTest resetSizeTest2 wnd.resetSize failed, err :' + JSO", "ole.log('windowTest resetSizeTest1 wnd.resetSize(200, 600) success');", " resetSizeTest2 wnd.resetSize failed, err :' + JSON.stringify(err));\n", "ize\n     */\n    it('resetSize_Test_006', 0, function () {\n        con", "ole.log('windowTest resetSizeTest5 begin');\n        window.getTopWind", "ole.log('windowTest resetSizeTest3 begin');\n        window.getTopWind", " resetSizeTest4 wnd.resetSize(-1, -1) success');\n                expe", " resetSizeTest1 wnd.resetSize(200, 600) success');\n                ex", " resetSizeTest3 wnd.resetSize failed, err :' + JSON.stringify(err));\n", "@tc.name       Test resetSize_Test_001\n    * @tc.desc       Verify th", "ole.log('windowTest resetSizeTest1 getTopWindow failed, err :' + JSON", "size\n    */\n    it('resetSize_Test_003', 0, async function (done) {\n ", " resetSizeTest1 wnd.resetSize failed, err :' + JSON.stringify(err));\n", "@tc.name       Test resetSize_Test_002\n    * @tc.desc       Verify th", "@tc.name       Test resetSize_Test_005\n    * @tc.desc       Verify th", " resetSizeTest3 wnd.resetSize(0, 0) success');\n                expect", "size\n    */\n    it('resetSize_Test_004', 0, async function (done) {\n ", "size\n    */\n    it('resetSize_Test_001', 0, async function (done) {\n ", "ole.log('windowTest resetSizeTest3 wnd.resetSize(0, 0) success');\n   ", "ole.log('windowTest resetSizeTest5 wnd.resetSize(100, 100) success, c", "ole.log('windowTest resetSizeTest3 getTopWindow failed, err :' + JSON", "ole.log('windowTest resetSizeTest4 wnd.resetSize(-1, -1) success');\n ", " resetSizeTest2 wnd.resetSize(20000, 20000) success');\n              ", "ole.log('windowTest resetSizeTest2 getTopWindow wnd: ' + wnd);\n      ", "ole.log('windowTest resetSizeTest5 wnd.resetSize failed, err :' + JSO", "();\n            wnd.resetSize(200, 200, (err) => {\n                if", "ole.log('windowTest resetSizeTest4 begin');\n        window.getTopWind", "ole.log('windowTest resetSizeTest1 getTopWindow wnd: ' + wnd);\n      ", "ole.log('windowTest resetSizeTest4 getTopWindow failed, err :' + JSON", " resetSizeTest5 wnd.resetSize(100, 100) success, count:\"%d\\n\"', i);\n ", "@tc.name       Test resetSize_Test_004\n    * @tc.desc       Verify th", "ole.log('windowTest resetSizeTest4 wnd.resetSize failed, err :' + JSO", "ole.log('windowTest resetSizeTest1 wnd.resetSize failed, err :' + JSO", "ole.log('windowTest resetSizeTest3 getTopWindow wnd: ' + wnd);\n      ", "@tc.name       Test resetSize_Test_003\n    * @tc.desc       Verify th", "size\n    */\n    it('resetSize_Test_005', 0, async function (done) {\n ", "Test ResetSizeTest6 resetSize callback fail' + JSON.stringify(err.cod", " @tc.name      Test resetSize_Test_006\n     * @tc.desc      Verify th", "ole.log('windowTest resetSizeTest5 end');\n            done();\n       "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setWindowType", "api_method_all": "setWindowType(type: WindowType): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setWindowType", "api_method_all": "setWindowType(type: WindowType, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "getProperties", "api_method_all": "getProperties(callback: AsyncCallback<WindowProperties>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 56, "since": 6, "api_used": "\u662f", "lines": ["   })\n\n    \n    it('getProperties_Test_001', 0, async function (done) {\n ", "ole.log('windowTest getPropertiesTest1 begin');\n        window.getTopWind", "   })\n\n    \n    it('getProperties_Test_002', 0, async function (done) {\n ", "FullScreenTest1 wnd.getProperties failed, err : ' + JSON.stringify(err));", "FullScreenTest3 wnd.getProperties success, data : ' + JSON.stringify(data", "FullScreenTest6 wnd.getProperties fail' + JSON.stringify(err));\n         ", "ole.log('windowTest getPropertiesTest1 window.getTopWindow failed, err : ", "FullScreenTest3 wnd.getProperties failed, err : ' + JSON.stringify(err));", "FullScreenTest2 wnd.getProperties callback fail' + JSON.stringify(err));\n", "ole.log('windowTest getPropertiesTest1 wnd.getProperties failed, err : ' ", "pertiesTest2 window.getProperties callback fail' + JSON.stringify(err));\n", "lScreenTest2 window.getProperties callback end');\n                       ", "                wnd.getProperties((err, data) => {\n                      ", "lScreenTest2 window.getProperties callback fail' + JSON.stringify(err));\n", "FullScreenTest7 wnd.getProperties success, data : ' + JSON.stringify(data", "FullScreenTest2 wnd.getProperties callback end');\n                       ", "ole.log('windowTest getPropertiesTest1 wnd.getProperties success, data : ", "FullScreenTest4 wnd.getProperties callback fail' + JSON.stringify(err));\n", "FullScreenTest5 wnd.getProperties failed, err : ' + JSON.stringify(err));", "Test beforeEach wnd.getProperties failed, err : ' + JSON.stringify(err));", "ole.log('windowTest getPropertiesTest1 window.getTopWindow wnd: ' + wnd);", "();\n            wnd.getProperties((err, data) => {\n                if (er", "ole.log('windowTest getPropertiesTest2 window.getTopWindow failed, err : ", "FullScreenTest1 wnd.getProperties success, data : ' + JSON.stringify(data", "FullScreenTest4 wnd.getProperties callback end');\n                       ", "PropertiesTest1 wnd.getProperties failed, err : ' + JSON.stringify(err));", "FullScreenTest5 wnd.getProperties success, data : ' + JSON.stringify(data", "PropertiesTest1 wnd.getProperties success, data : ' + JSON.stringify(data"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "getProperties", "api_method_all": "getProperties(): Promise<WindowProperties>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 12, "since": 6, "api_used": "\u662f", "lines": ["                wnd.getProperties().then((data) => {\n                    ", "();\n            wnd.getProperties().then((data) => {\n                cons", "          topWindow.getProperties().then(data => {\n                    if"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "getAvoidArea", "api_method_all": "getAvoidArea(type: AvoidAreaType, callback: AsyncCallback<AvoidArea>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 46, "since": 7, "api_used": "\u662f", "lines": ["ole.log('windowTest getAvoidAreaTest5 window.getTopWindow failed, err : ", "ole.log('windowTest getAvoidAreaTest1 window.getTopWindow wnd: ' + wnd);", "   })\n\n    \n    it('getAvoidArea_Test_005', 0, async function (done) {\n ", "ole.log('windowTest getAvoidAreaTest5 window.getTopWindow wnd: ' + wnd);", "   })\n\n    \n    it('getAvoidArea_Test_001', 0, async function (done) {\n ", "   })\n\n    \n    it('getAvoidArea_Test_002', 0, async function (done) {\n ", "ole.log('windowTest getAvoidAreaTest3 window.getTopWindow failed, err : ", "ole.log('windowTest getAvoidAreaTest6 window.getTopWindow wnd: ' + wnd);", "();\n            wnd.getAvoidArea(avoidAreaType, (err, data) => {\n       ", "();\n            wnd.getAvoidArea(window.AvoidAreaType.TYPE_CUTOUT, (err,", "   })\n\n    \n    it('getAvoidArea_Test_003', 0, async function (done) {\n ", "ole.log('windowTest getAvoidAreaTest2 begin');\n        window.getTopWind", "ole.log('windowTest getAvoidAreaTest6 begin');\n        window.getTopWind", "tAvoidAreaTest1 wnd.getAvoidArea failed, err : ' + JSON.stringify(err));", "ole.log('windowTest getAvoidAreaTest2 wnd.getAvoidArea success, data :' ", "ole.log('windowTest getAvoidAreaTest5 begin');\n        window.getTopWind", "ole.log('windowTest getAvoidAreaTest3 wnd.getAvoidArea failed, err : ' +", "tAvoidAreaTest5 wnd.getAvoidArea callback fail' + JSON.stringify(err));\n", "tAvoidAreaTest3 wnd.getAvoidArea failed, err : ' + JSON.stringify(err));", "tAvoidAreaTest6 wnd.getAvoidArea callback fail' + JSON.stringify(err));\n", "   })\n\n    \n    it('getAvoidArea_Test_006', 0, async function (done) {\n ", "ole.log('windowTest getAvoidAreaTest4 window.getTopWindow wnd: ' + wnd);", "ole.log('windowTest getAvoidAreaTest2 window.getTopWindow wnd: ' + wnd);", "ole.log('windowTest getAvoidAreaTest2 wnd.getAvoidArea failed, err : ' +", "tAvoidAreaTest3 wnd.getAvoidArea success, data :' + JSON.stringify(data)", "tAvoidAreaTest2 wnd.getAvoidArea success, data :' + JSON.stringify(data)", "tAvoidAreaTest4 wnd.getAvoidArea callback fail' + JSON.stringify(err));\n", "ole.log('windowTest getAvoidAreaTest5 wnd.getAvoidArea callback end');\n ", "tAvoidAreaTest5 wnd.getAvoidArea callback end');\n                    don", "ole.log('windowTest getAvoidAreaTest6 wnd.getAvoidArea callback fail' + ", "ole.log('windowTest getAvoidAreaTest3 window.getTopWindow wnd: ' + wnd);", "   })\n\n    \n    it('getAvoidArea_Test_004', 0, async function (done) {\n ", "ole.log('windowTest getAvoidAreaTest1 wnd.getAvoidArea failed, err : ' +", "ole.log('windowTest getAvoidAreaTest6 window.getTopWindow failed, err : ", "ole.log('windowTest getAvoidAreaTest1 window.getTopWindow failed, err : ", "tAvoidAreaTest1 wnd.getAvoidArea success, data :' + JSON.stringify(data)", "ole.log('windowTest getAvoidAreaTest3 begin');\n        window.getTopWind", "ole.log('windowTest getAvoidAreaTest5 wnd.getAvoidArea callback fail' + ", "ole.log('windowTest getAvoidAreaTest3 wnd.getAvoidArea success, data :' ", "();\n            wnd.getAvoidArea(window.AvoidAreaType.TYPE_SYSTEM, (err,", "ole.log('windowTest getAvoidAreaTest4 wnd.getAvoidArea callback fail' + ", "ole.log('windowTest getAvoidAreaTest1 wnd.getAvoidArea success, data :' ", "tAvoidAreaTest2 wnd.getAvoidArea failed, err : ' + JSON.stringify(err));", "ole.log('windowTest getAvoidAreaTest4 begin');\n        window.getTopWind", "ole.log('windowTest getAvoidAreaTest2 window.getTopWindow failed, err : ", "ole.log('windowTest getAvoidAreaTest1 begin');\n        window.getTopWind"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "getAvoidArea", "api_method_all": "getAvoidArea(type: AvoidAreaType): Promise<AvoidArea>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["();\n            wnd.getAvoidArea(window.AvoidAreaType.TYPE_CUTOUT).then(", "();\n            wnd.getAvoidArea(avoidAreaType).then((data) => {\n       ", "();\n            wnd.getAvoidArea(window.AvoidAreaType.TYPE_SYSTEM).then("], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setFullScreen", "api_method_all": "setFullScreen(isFullScreen: boolean, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 35, "since": 6, "api_used": "\u662f", "lines": ["ole.log('windowTest setFullScreenTest1 wnd.setFullScreen(true) failed, er", "   })\n\n    \n    it('setFullScreen_Test_001', 0, async function (done) {\n ", "   })\n\n    \n    it('setFullScreen_Test_002', 0, async function (done) {\n ", "               data.setFullScreen(true, (err) => {\n                    if", "();\n            wnd.setFullScreen(true, (err) => {\n                if (er", "lScreenTest2 window.setFullScreen(false) callback fail' + JSON.stringify(", "ole.log('windowTest setFullScreenTest1 window.getTopWindow failed, err : ", "();\n            wnd.setFullScreen(false, (err) => {\n                if (e", "ole.log('windowTest setFullScreenTest1 wnd.getProperties failed, err : ' ", "FullScreenTest3 wnd.setFullScreen(true) failed, err : ' + JSON.stringify(", "               data.setFullScreen(false, (err) => {\n                     ", "                wnd.setFullScreen(true, (err) => {\n                      ", "ole.log('windowTest setFullScreenTest1 wnd.getProperties success, data : ", "FullScreenTest7 wnd.setFullScreen(false) failed, err : ' + JSON.stringify", "FullScreenTest1 wnd.setFullScreen(false) failed, err : ' + JSON.stringify", "lScreenTest8 window.setFullScreen callback fail' + JSON.stringify(err));\n", "ole.log('windowTest setFullScreenTest1 wnd.setFullScreen(false) failed, e", "FullScreenTest6 wnd.setFullScreen fail' + JSON.stringify(err));\n         ", "FullScreenTest2 wnd.setFullScreen(true) callback begin');\n               ", "FullScreenTest2 wnd.setFullScreen callback fail' + JSON.stringify(err));\n", "Test beforeEach wnd.setFullScreen(false) failed, err : ' + JSON.stringify", "FullScreenTest4 wnd.setFullScreen(true) callback fail' + JSON.stringify(e", "Test beforeEach wnd.setFullScreen(false) success');\n                     ", "();\n            wnd.setFullScreen(true, (err) => {\n                consol", "lScreenTest2 window.setFullScreen(true) callback fail' + JSON.stringify(e", "FullScreenTest5 wnd.setFullScreen(false) failed, err : ' + JSON.stringify", "ole.log('windowTest setFullScreenTest1 window.getTopWindow wnd: ' + wnd);", "ole.log('windowTest setFullScreenTest1 begin');\n        window.getTopWind", "ole.log('windowTest setFullScreenTest1 window.getTopWindow fail : ' + JSO", "FullScreenTest1 wnd.setFullScreen(true) failed, err : ' + JSON.stringify("], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setFullScreen", "api_method_all": "setFullScreen(isFullScreen: boolean): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 7, "since": 6, "api_used": "\u662f", "lines": ["();\n            wnd.setFullScreen(true).then(() => {\n                wnd.", "();\n            wnd.setFullScreen(false).then(() => {\n                wnd", "                wnd.setFullScreen(true).then(() => {\n                    ", "          topWindow.setFullScreen(false).then(() => {\n                   "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setLayoutFullScreen", "api_method_all": "setLayoutFullScreen(isLayoutFullScreen: boolean, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 67, "since": 7, "api_used": "\u662f", "lines": ["ole.log('windowTest setLayoutFullScreenTest1 wnd.getProperties success, data : ", "ole.log('windowTest setLayoutFullScreenTest5 window.getTopWindow wnd: ' + wnd);", "ole.log('windowTest setLayoutFullScreenTest3 wnd.getProperties success, data : ", "FullScreenTest4 wnd.setLayoutFullScreen(false) callback fail' + JSON.stringify(", "ole.log('windowTest setLayoutFullScreenTest1 begin');\n        window.getTopWind", "ole.log('windowTest setLayoutFullScreenTest7 wnd.getProperties failed, err : ' ", "ole.log('windowTest setLayoutFullScreenTest5 wnd.setLayoutFullScreen(true) fail", "   })\n\n    \n    it('setLayoutFullScreen_Test_004', 0, async function (done) {\n ", "ole.log('windowTest setLayoutFullScreenTest1 wnd.setLayoutFullScreen(true) fail", "ole.log('windowTest setLayoutFullScreenTest5 begin');\n        window.getTopWind", "FullScreenTest2 wnd.setLayoutFullScreen callback fail' + JSON.stringify(err));\n", "ole.log('windowTest setLayoutFullScreenTest1 wnd.getProperties failed, err : ' ", "                wnd.setLayoutFullScreen(true, (err) => {\n                      ", "ole.log('windowTest setLayoutFullScreenTest1 window.getTopWindow failed, err : ", "   })\n\n    \n    it('setLayoutFullScreen_Test_001', 0, async function (done) {\n ", "ole.log('windowTest setLayoutFullScreenTest3 begin');\n        window.getTopWind", "ole.log('windowTest setLayoutFullScreenTest3 wnd.setLayoutFullScreen(false) fai", "ole.log('windowTest setLayoutFullScreenTest5 wnd.getProperties failed, err : ' ", "   })\n\n    \n    it('setLayoutFullScreen_Test_003', 0, async function (done) {\n ", "ole.log('windowTest setLayoutFullScreenTest3 window.getTopWindow wnd: ' + wnd);", "ole.log('windowTest setLayoutFullScreenTest5 window.getTopWindow failed, err : ", "ole.log('windowTest setLayoutFullScreenTest7 begin');\n        window.getTopWind", "FullScreenTest1 wnd.setLayoutFullScreen(true) failed, err : ' + JSON.stringify(", "ole.log('windowTest setLayoutFullScreenTest1 wnd.setFullScreen(true) failed, er", "ole.log('windowTest setLayoutFullScreenTest3 wnd.setFullScreen(true) failed, er", "                wnd.setLayoutFullScreen(false, (err) => {\n                     ", "screen\n\t */\n    it('setLayoutFullScreen_Test_007', 0, async function (done) {\n ", "ole.log('windowTest setLayoutFullScreenTest3 wnd.getProperties failed, err : ' ", "ole.log('windowTest setLayoutFullScreenTest3 window.getTopWindow failed, err : ", "FullScreenTest3 wnd.setLayoutFullScreen(false) failed, err : ' + JSON.stringify", "ole.log('windowTest setLayoutFullScreenTest5 wnd.setFullScreen(false) failed, e", " @tc.name      Test setLayoutFullScreen_Test_006\n     * @tc.desc      Set the w", "en.\n     */\n    it('setLayoutFullScreen_Test_006', 0, async function (done) {\n ", "ole.log('windowTest setLayoutFullScreenTest1 window.getTopWindow wnd: ' + wnd);", "@tc.name       Test setLayoutFullScreen_Test_007\n\t * @tc.desc       Setting win", "   })\n\n    \n    it('setLayoutFullScreen_Test_002', 0, async function (done) {\n ", "   })\n\n    \n    it('setLayoutFullScreen_Test_005', 0, async function (done) {\n ", "ole.log('windowTest setLayoutFullScreenTest5 wnd.getProperties success, data : ", "ole.log('windowTest setLayoutFullScreenTest7 window.getTopWindow wnd: ' + wnd);", "ole.log('windowTest setLayoutFullScreenTest7 wnd.getProperties success, data : ", "FullScreenTest6 wnd.setLayoutFullScreen fail' + JSON.stringify(err));\n         ", "FullScreenTest5 wnd.setLayoutFullScreen(true) failed, err : ' + JSON.stringify("], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setLayoutFullScreen", "api_method_all": "setLayoutFullScreen(isLayoutFullScreen: boolean): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["                wnd.setLayoutFullScreen(false).then(() => {\n                   ", "();\n            wnd.setLayoutFullScreen(true).then(() => {\n                wnd.", "                wnd.setLayoutFullScreen(true).then(() => {\n                    "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setSystemBarEnable", "api_method_all": "setSystemBarEnable(names: Array<'status'|'navigation'>, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [" @tc.name      Test setSystemBarEnable_Test_002\n     * @tc.desc      To verify", "ystemBarEnableTest2 setSystemBarEnable success');\n                        expe", "  * @tc.name\t\t\tTest setSystemBarEnable_Test_001\n     * @tc.desc\t\t\tTo verify th", "bar\n     */\n    it('setSystemBarEnable_Test_002', 0, async function (done) {\n ", "ystemBarEnableTest1 setSystemBarEnable success');\n                    expect(T", "bar\n     */\n    it('setSystemBarEnable_Test_001', 0, async function (done) {\n ", "               data.setSystemBarEnable(names, (err) => {\n                    i", "ystemBarEnableTest1 setSystemBarEnable failed, err :' + JSON.stringify(err));\n"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setSystemBarEnable", "api_method_all": "setSystemBarEnable(names: Array<'status'|'navigation'>): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["                wnd.setSystemBarEnable(names).then(() => {\n                   "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setSystemBarProperties", "api_method_all": "setSystemBarProperties(systemBarProperties: SystemBarProperties, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 8, "since": 6, "api_used": "\u662f", "lines": ["mBarPropertiesTest1 setSystemBarProperties failed, err :' + JSON.stringify(err));\n", " @tc.name      Test setSystemBarProperties_Test_002\n     * @tc.desc      To verify", "mBarPropertiesTest1 setSystemBarProperties success ');\n                expect(TRUE", "tes\n     */\n    it('setSystemBarProperties_Test_001', 0, async function (done) {\n ", "               data.setSystemBarProperties(SystemBarProperties, (err) => {\n       ", "tes\n     */\n    it('setSystemBarProperties_Test_002', 0, async function (done) {\n ", "mBarPropertiesTest2 setSystemBarProperties fail' + JSON.stringify(err));\n         ", "  * @tc.name\t\t\tTest setSystemBarProperties_Test_001\n     * @tc.desc\t\t\tTo verify th"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setSystemBarProperties", "api_method_all": "setSystemBarProperties(systemBarProperties: SystemBarProperties): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["();\n            wnd.setSystemBarProperties(SystemBarProperties).then(() => {\n     "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "loadContent", "api_method_all": "loadContent(path: string, storage: ContentStorage, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "loadContent", "api_method_all": "loadContent(path: string, storage: ContentStorage): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "loadContent", "api_method_all": "loadContent(path: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "loadContent", "api_method_all": "loadContent(path: string): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "isShowing", "api_method_all": "isShowing(callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": [" IsShowingTest1 wnd.isShowing failed, err :' + JSON.stringify(err));\n", "IsShowingTest2 data.isShowing fail err ' + JSON.stringify(err));\n    ", "ed.\n     */\n    it('isShowing_Test_002', 0, async function (done) {\n ", " IsShowingTest1 wnd.isShowing data:' + res);\n                expect(!", "ed.\n     */\n    it('isShowing_Test_001', 0, async function (done) {\n ", "               data.isShowing((err, res1) => {\n                    if", "tc.name        Test isShowing_Test_001.\n     * @tc.desc        To ver", " @tc.name      Test isShowing_Test_002.\n     * @tc.desc      To verif", "               data.isShowing((err, res2) => {\n                      "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "isShowing", "api_method_all": "isShowing(): Promise<boolean>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["();\n            wnd.isShowing().then(res => {\n                console", "                wnd.isShowing().then(res => {\n                       "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "on", "api_method_all": "on(type: 'windowSizeChange', callback: Callback<Size>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 27158, "since": 7, "api_used": "\u662f", "lines": ["t from '@ohos.napi_context'\n\nimport {\n\tdescribe,\n\tbeforeAll,\n\t", "r(vertexShader);\n\t\tconst fragmentShader = gl.createShader(gl.F", "unction globalFunction() {\n\t\tconst vertexShader = gl.createSha", "obalFunction() {\n\t\tconst vertexShader = gl.createShader(gl.VER", "st', function() {\n\tconsole.info('webgltest start');\n\tvar gl;\n\t", "URRENT_PROGRAM);\n\t\tconsole.info(\"testUseProgram has failed for", "rn true;\n\t}\n\n\tfunction createProgramExternal(gl, vshader, fsha", ";\" +\n\t\t\"}\";\n\n\tfunction globalFunction() {\n\t\tconst vertexShader", "eProgramError1);\n\t\tconst renderBufferValue1 = gl.getParameter(", "'webgl1Test', function() {\n\tconsole.info('webgltest start');\n\t", "e.info('AceApplication onDestroy');\n    }\n};\n", "\t//\u8bbe\u7f6e\u5750\u6807\n\t\t\"gl_Position = a_Position; \" +\n\t\t//    \"gl_PointSize", "_Position = a_Position;\\n' +\n\t\t\t'}\\n';\n\n\t\t// \u7247\u5143\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tvar FSH", "  configService.setConfig(this)\n        require('../../test/Li", "eate');\n\n    },\n    onDestroy() {\n        console.info('AceApp", "Instance()\n        const expectExtend = new ExpectExtend({\n   ", "it()\n        const configService = core.getDefaultService('con", "ribute vec4 a_Position;\\n' +\n\t\t\t'void main() {\\n' +\n\t\t\t'  gl_P", "Create() {\n        console.info('AceApplication onCreate');\n\n ", "getDefaultService('config')\n        this.timeout = 60000\n     ", "system.app'\nimport Context from '@ohos.napi_context'\n\nimport {", "SOURCE =\n\t\t\t'precision mediump float;\\n' +\n\t\t\t'uniform vec4 u_", "nfo('AceApplication onDestroy');\n    }\n};\n", "e.info('AceApplication onCreate');\n\n    },\n    onDestroy() {\n ", "ramObj;\n\t}\n\n\n\tfunction createProgram(gl) {\n\t\t//\u9876\u70b9\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tvar V", "xport default {\n    onCreate() {\n        console.info('AceAppl", " \" + programObj)\n\t\tconst useProgramError1 = gl.getError();\n\t\tc", "world');\n    },\n    onShow(){\n        global.el = this.$refs.c", ";\n        \n        const core = Core.getInstance()\n        con", "if (!program) {\n\t\t\tconsole.log('Failed to create program');\n\t\t", "ribute vec4 a_Position;\" +\n\t\t\"void main() {\" +\n\t\t//\u8bbe\u7f6e\u5750\u6807\n\t\t\"gl_", "= gl.getError();\n\t\tconsole.info(\"useProgramError: \" + useProgr", "URRENT_PROGRAM);\n\t\tconsole.log(\"testUseProgram has failed for ", "estroy() {\n        console.info('AceApplication onDestroy');\n ", "ut = 60000\n        configService.setConfig(this)\n        requi", "HADER, vshader);\n\t\tconsole.log(\"======vertexShader: \" + vertex", "nfo('AceApplication onCreate');\n\n    },\n    onDestroy() {\n    ", "createProgram();\n\t\tconsole.log(\"testUseProgram has failed for ", "createProgram();\n\t\tconsole.info(\"testUseProgram has failed for", "n' +\n\t\t\t'  gl_Position = a_Position;\\n' +\n\t\t\t'}\\n';\n\n\t\t// \u7247\u5143\u7740\u8272", "fragmentShader);\n\t\tconst programObj = gl.createProgram();\n\t\tco", "gramObj;\n\t}\n\n\tfunction initShaders(gl, vshader, fshader) {\n\t\tv", "ore.init()\n        const configService = core.getDefaultServic", "_Position = a_Position; \" +\n\t\t//    \"gl_PointSize = 10.0;\" +\n\t", "itle: \"\"\n    },\n    onInit() {\n        this.title = this.$t('s", "hader, fshader);\n\t\tconsole.log(\"======createProgram program: \""], "files": ["WebGL.test12.js", "WebGL.test09.js", "screenshot.test.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test11.js", "WebGL.test02.js", "WebGL.test13.js", "WebGL.test01.js", "app.js", "WebGL.test05.js", "WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "display.test.js", "index.js", "WebGL.test04.js", "WebGL.test08.js", "WebGL.test03.js", "window.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "off", "api_method_all": "off(type: 'windowSizeChange', callback?: Callback<Size>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["rue();\n\t\t\t\t\t\t\t\tdata.off('windowSizeChange');\n\t\t\t\t\t\t\t\tdata.setLa", "g. clear)\n\t\t// turn off scissor test again\n\t\tgl.disable(gl.SCIS", "ndowTest OnOffTest2 off callback success');\n                   ", "               data.off('systemAvoidAreaChange');\n             "], "files": ["webGL.test.js", "window.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "on", "api_method_all": "on(type: 'systemAvoidAreaChange', callback: Callback<AvoidArea>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 27158, "since": 7, "api_used": "\u662f", "lines": ["t from '@ohos.napi_context'\n\nimport {\n\tdescribe,\n\tbeforeAll,\n\t", "r(vertexShader);\n\t\tconst fragmentShader = gl.createShader(gl.F", "unction globalFunction() {\n\t\tconst vertexShader = gl.createSha", "obalFunction() {\n\t\tconst vertexShader = gl.createShader(gl.VER", "st', function() {\n\tconsole.info('webgltest start');\n\tvar gl;\n\t", "URRENT_PROGRAM);\n\t\tconsole.info(\"testUseProgram has failed for", "rn true;\n\t}\n\n\tfunction createProgramExternal(gl, vshader, fsha", ";\" +\n\t\t\"}\";\n\n\tfunction globalFunction() {\n\t\tconst vertexShader", "eProgramError1);\n\t\tconst renderBufferValue1 = gl.getParameter(", "'webgl1Test', function() {\n\tconsole.info('webgltest start');\n\t", "e.info('AceApplication onDestroy');\n    }\n};\n", "\t//\u8bbe\u7f6e\u5750\u6807\n\t\t\"gl_Position = a_Position; \" +\n\t\t//    \"gl_PointSize", "_Position = a_Position;\\n' +\n\t\t\t'}\\n';\n\n\t\t// \u7247\u5143\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tvar FSH", "  configService.setConfig(this)\n        require('../../test/Li", "eate');\n\n    },\n    onDestroy() {\n        console.info('AceApp", "Instance()\n        const expectExtend = new ExpectExtend({\n   ", "it()\n        const configService = core.getDefaultService('con", "ribute vec4 a_Position;\\n' +\n\t\t\t'void main() {\\n' +\n\t\t\t'  gl_P", "Create() {\n        console.info('AceApplication onCreate');\n\n ", "getDefaultService('config')\n        this.timeout = 60000\n     ", "system.app'\nimport Context from '@ohos.napi_context'\n\nimport {", "SOURCE =\n\t\t\t'precision mediump float;\\n' +\n\t\t\t'uniform vec4 u_", "nfo('AceApplication onDestroy');\n    }\n};\n", "e.info('AceApplication onCreate');\n\n    },\n    onDestroy() {\n ", "ramObj;\n\t}\n\n\n\tfunction createProgram(gl) {\n\t\t//\u9876\u70b9\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tvar V", "xport default {\n    onCreate() {\n        console.info('AceAppl", " \" + programObj)\n\t\tconst useProgramError1 = gl.getError();\n\t\tc", "world');\n    },\n    onShow(){\n        global.el = this.$refs.c", ";\n        \n        const core = Core.getInstance()\n        con", "if (!program) {\n\t\t\tconsole.log('Failed to create program');\n\t\t", "ribute vec4 a_Position;\" +\n\t\t\"void main() {\" +\n\t\t//\u8bbe\u7f6e\u5750\u6807\n\t\t\"gl_", "= gl.getError();\n\t\tconsole.info(\"useProgramError: \" + useProgr", "URRENT_PROGRAM);\n\t\tconsole.log(\"testUseProgram has failed for ", "estroy() {\n        console.info('AceApplication onDestroy');\n ", "ut = 60000\n        configService.setConfig(this)\n        requi", "HADER, vshader);\n\t\tconsole.log(\"======vertexShader: \" + vertex", "nfo('AceApplication onCreate');\n\n    },\n    onDestroy() {\n    ", "createProgram();\n\t\tconsole.log(\"testUseProgram has failed for ", "createProgram();\n\t\tconsole.info(\"testUseProgram has failed for", "n' +\n\t\t\t'  gl_Position = a_Position;\\n' +\n\t\t\t'}\\n';\n\n\t\t// \u7247\u5143\u7740\u8272", "fragmentShader);\n\t\tconst programObj = gl.createProgram();\n\t\tco", "gramObj;\n\t}\n\n\tfunction initShaders(gl, vshader, fshader) {\n\t\tv", "ore.init()\n        const configService = core.getDefaultServic", "_Position = a_Position; \" +\n\t\t//    \"gl_PointSize = 10.0;\" +\n\t", "itle: \"\"\n    },\n    onInit() {\n        this.title = this.$t('s", "hader, fshader);\n\t\tconsole.log(\"======createProgram program: \""], "files": ["WebGL.test12.js", "WebGL.test09.js", "screenshot.test.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test11.js", "WebGL.test02.js", "WebGL.test13.js", "WebGL.test01.js", "app.js", "WebGL.test05.js", "WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "display.test.js", "index.js", "WebGL.test04.js", "WebGL.test08.js", "WebGL.test03.js", "window.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "off", "api_method_all": "off(type: 'systemAvoidAreaChange', callback?: Callback<AvoidArea>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["rue();\n\t\t\t\t\t\t\t\tdata.off('windowSizeChange');\n\t\t\t\t\t\t\t\tdata.setLa", "g. clear)\n\t\t// turn off scissor test again\n\t\tgl.disable(gl.SCIS", "ndowTest OnOffTest2 off callback success');\n                   ", "               data.off('systemAvoidAreaChange');\n             "], "files": ["webGL.test.js", "window.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "on", "api_method_all": "on(type: 'keyboardHeightChange', callback: Callback<number>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 27158, "since": 7, "api_used": "\u662f", "lines": ["t from '@ohos.napi_context'\n\nimport {\n\tdescribe,\n\tbeforeAll,\n\t", "r(vertexShader);\n\t\tconst fragmentShader = gl.createShader(gl.F", "unction globalFunction() {\n\t\tconst vertexShader = gl.createSha", "obalFunction() {\n\t\tconst vertexShader = gl.createShader(gl.VER", "st', function() {\n\tconsole.info('webgltest start');\n\tvar gl;\n\t", "URRENT_PROGRAM);\n\t\tconsole.info(\"testUseProgram has failed for", "rn true;\n\t}\n\n\tfunction createProgramExternal(gl, vshader, fsha", ";\" +\n\t\t\"}\";\n\n\tfunction globalFunction() {\n\t\tconst vertexShader", "eProgramError1);\n\t\tconst renderBufferValue1 = gl.getParameter(", "'webgl1Test', function() {\n\tconsole.info('webgltest start');\n\t", "e.info('AceApplication onDestroy');\n    }\n};\n", "\t//\u8bbe\u7f6e\u5750\u6807\n\t\t\"gl_Position = a_Position; \" +\n\t\t//    \"gl_PointSize", "_Position = a_Position;\\n' +\n\t\t\t'}\\n';\n\n\t\t// \u7247\u5143\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tvar FSH", "  configService.setConfig(this)\n        require('../../test/Li", "eate');\n\n    },\n    onDestroy() {\n        console.info('AceApp", "Instance()\n        const expectExtend = new ExpectExtend({\n   ", "it()\n        const configService = core.getDefaultService('con", "ribute vec4 a_Position;\\n' +\n\t\t\t'void main() {\\n' +\n\t\t\t'  gl_P", "Create() {\n        console.info('AceApplication onCreate');\n\n ", "getDefaultService('config')\n        this.timeout = 60000\n     ", "system.app'\nimport Context from '@ohos.napi_context'\n\nimport {", "SOURCE =\n\t\t\t'precision mediump float;\\n' +\n\t\t\t'uniform vec4 u_", "nfo('AceApplication onDestroy');\n    }\n};\n", "e.info('AceApplication onCreate');\n\n    },\n    onDestroy() {\n ", "ramObj;\n\t}\n\n\n\tfunction createProgram(gl) {\n\t\t//\u9876\u70b9\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tvar V", "xport default {\n    onCreate() {\n        console.info('AceAppl", " \" + programObj)\n\t\tconst useProgramError1 = gl.getError();\n\t\tc", "world');\n    },\n    onShow(){\n        global.el = this.$refs.c", ";\n        \n        const core = Core.getInstance()\n        con", "if (!program) {\n\t\t\tconsole.log('Failed to create program');\n\t\t", "ribute vec4 a_Position;\" +\n\t\t\"void main() {\" +\n\t\t//\u8bbe\u7f6e\u5750\u6807\n\t\t\"gl_", "= gl.getError();\n\t\tconsole.info(\"useProgramError: \" + useProgr", "URRENT_PROGRAM);\n\t\tconsole.log(\"testUseProgram has failed for ", "estroy() {\n        console.info('AceApplication onDestroy');\n ", "ut = 60000\n        configService.setConfig(this)\n        requi", "HADER, vshader);\n\t\tconsole.log(\"======vertexShader: \" + vertex", "nfo('AceApplication onCreate');\n\n    },\n    onDestroy() {\n    ", "createProgram();\n\t\tconsole.log(\"testUseProgram has failed for ", "createProgram();\n\t\tconsole.info(\"testUseProgram has failed for", "n' +\n\t\t\t'  gl_Position = a_Position;\\n' +\n\t\t\t'}\\n';\n\n\t\t// \u7247\u5143\u7740\u8272", "fragmentShader);\n\t\tconst programObj = gl.createProgram();\n\t\tco", "gramObj;\n\t}\n\n\tfunction initShaders(gl, vshader, fshader) {\n\t\tv", "ore.init()\n        const configService = core.getDefaultServic", "_Position = a_Position; \" +\n\t\t//    \"gl_PointSize = 10.0;\" +\n\t", "itle: \"\"\n    },\n    onInit() {\n        this.title = this.$t('s", "hader, fshader);\n\t\tconsole.log(\"======createProgram program: \""], "files": ["WebGL.test12.js", "WebGL.test09.js", "screenshot.test.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test11.js", "WebGL.test02.js", "WebGL.test13.js", "WebGL.test01.js", "app.js", "WebGL.test05.js", "WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "display.test.js", "index.js", "WebGL.test04.js", "WebGL.test08.js", "WebGL.test03.js", "window.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "off", "api_method_all": "off(type: 'keyboardHeightChange', callback?: Callback<number>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["rue();\n\t\t\t\t\t\t\t\tdata.off('windowSizeChange');\n\t\t\t\t\t\t\t\tdata.setLa", "g. clear)\n\t\t// turn off scissor test again\n\t\tgl.disable(gl.SCIS", "ndowTest OnOffTest2 off callback success');\n                   ", "               data.off('systemAvoidAreaChange');\n             "], "files": ["webGL.test.js", "window.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "isSupportWideGamut", "api_method_all": "isSupportWideGamut(): Promise<boolean>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["                wnd.isSupportWideGamut().then(data => {\n                      "], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "isSupportWideGamut", "api_method_all": "isSupportWideGamut(callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["                wnd.isSupportWideGamut((err, data) => {\n                      ", "ColorSpaceTest1 wnd.isSupportWideGamut failed, err :' + JSON.stringify(err));\n"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setColorSpace", "api_method_all": "setColorSpace(colorSpace:ColorSpace): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["();\n            wnd.setColorSpace(-5).then(() => {\n                consol", "();\n            wnd.setColorSpace(window.ColorSpace.WIDE_GAMUT).then(() ="], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setColorSpace", "api_method_all": "setColorSpace(colorSpace:ColorSpace, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 18, "since": 8, "api_used": "\u662f", "lines": [" SetColorSpaceTest3 setColorSpace  fail' + JSON.stringify(err));\n        ", "ace\n     */\n    it('setColorSpace_Test_001', 0, async function (done) {\n ", " @tc.name      Test setColorSpace_Test_004\n     * @tc.desc      To verify", "tc.name        Test setColorSpace_Test_001\n     * @tc.desc        To veri", " SetColorSpaceTest1 setColorSpace WIDE_GAMUT success');\n                 ", "ColorSpaceTest1 wnd.setColorSpace failed, err :' + JSON.stringify(err));\n", "lly\n     */\n    it('setColorSpace_Test_004', 0, async function (done) {\n ", "lly\n     */\n    it('setColorSpace_Test_002', 0, async function (done) {\n ", "ColorSpaceTest2 wnd.setColorSpace failed, err :' + JSON.stringify(err));\n", "tc.name        Test setColorSpace_Test_002\n     * @tc.desc        To veri", " SetColorSpaceTest4 setColorSpace callback fail' + JSON.stringify(err.cod", " SetColorSpaceTest4 setColorSpace callback begin' + JSON.stringify(err));", " @tc.name      Test setColorSpace_Test_003\n     * @tc.desc      To verify", "ace\n     */\n    it('setColorSpace_Test_003', 0, async function (done) {\n ", "();\n            wnd.setColorSpace(window.ColorSpace.WIDE_GAMUT, (err) => ", " SetColorSpaceTest1 setColorSpace WIDE_GAMUT');\n                wnd.getCo", " SetColorSpaceTest2 setColorSpace -5');\n                expect().assertFa", "();\n            wnd.setColorSpace(-5, (err) => {\n                console."], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "getColorSpace", "api_method_all": "getColorSpace(): Promise<ColorSpace>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["                wnd.getColorSpace().then(res => {\n                    exp"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "getColorSpace", "api_method_all": "getColorSpace(callback: AsyncCallback<ColorSpace>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["ColorSpaceTest1 wnd.getColorSpace failed, err :' + JSON.stringify(err));\n", "                wnd.getColorSpace((err, data) => {\n                      ", " SetColorSpaceTest3 getColorSpace  fail ' + JSON.stringify(err));\n       ", " SetColorSpaceTest3 getColorSpace callback fail' + JSON.stringify(err));\n"], "files": ["window.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setBackgroundColor", "api_method_all": "setBackgroundColor(color: string): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setBackgroundColor", "api_method_all": "setBackgroundColor(color: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setBrightness", "api_method_all": "setBrightness(brightness: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setBrightness", "api_method_all": "setBrightness(brightness: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setDimBehind", "api_method_all": "setDimBehind(dimBehindValue: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setDimBehind", "api_method_all": "setDimBehind(dimBehindValue: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setFocusable", "api_method_all": "setFocusable(isFocusable: boolean): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setFocusable", "api_method_all": "setFocusable(isFocusable: boolean, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setKeepScreenOn", "api_method_all": "setKeepScreenOn(isKeepScreenOn: boolean): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setKeepScreenOn", "api_method_all": "setKeepScreenOn(isKeepScreenOn: boolean, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setOutsideTouchable", "api_method_all": "setOutsideTouchable(touchable: boolean): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setOutsideTouchable", "api_method_all": "setOutsideTouchable(touchable: boolean, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setPrivacyMode", "api_method_all": "setPrivacyMode(isPrivacyMode: boolean): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setPrivacyMode", "api_method_all": "setPrivacyMode(isPrivacyMode: boolean, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setTouchable", "api_method_all": "setTouchable(isTouchable: boolean): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Window", "api_method_name": "setTouchable", "api_method_all": "setTouchable(isTouchable: boolean, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStageEventType", "api_method_all": "enum WindowStageEventType {\n    FOREGROUND = 1,\n    ACTIVE,\n    INACTIVE,\n    BACKGROUND,\n  }", "api_method_name": "WindowStageEventType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStageEventType", "api_method_name": "FOREGROUND", "api_method_all": "FOREGROUND = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStageEventType", "api_method_name": "ACTIVE", "api_method_all": "ACTIVE,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 87, "since": 9, "api_used": "\u662f", "lines": [" gl.getParameter(gl.ACTIVE_TEXTURE);\n\t\tconsole", " gl.getParameter(gl.ACTIVE_TEXTURE);\n\t\t// retu", "2\n\t\t\t.UNIFORM_BLOCK_ACTIVE_UNIFORMS);\n\t\tconsol", "ameter(program, gl2.ACTIVE_UNIFORM_BLOCKS);\n\t\t", "\t\tgl2.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES);\n\t", "x11).assertEqual(gl.ACTIVE_ATTRIBUTES);\n\t\tvar ", "rameter(program, gl.ACTIVE_UNIFORMS);\n\t\tconsol", ".TRANSFORM_FEEDBACK_ACTIVE);\n\t\t// returns \"339", "rameter(program, gl.ACTIVE_ATTRIBUTES);\n\t\tcons"], "files": ["WebGL.test12.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "window.test.js", "WebGL.test06.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStageEventType", "api_method_name": "INACTIVE", "api_method_all": "INACTIVE,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStageEventType", "api_method_name": "BACKGROUND", "api_method_all": "BACKGROUND,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStage", "api_method_all": "interface WindowStage {\n    \n    getMainWindow(): Promise<Window>;\n    \n    getMainWindow(callback: AsyncCallback<Window>): void;\n    \n    createSubWindow(name: string): Promise<Window>;\n    \n    createSubWindow(name: string, callback: AsyncCallback<Window>): void;\n    \n    getSubWindow(): Promise<Array<Window>>;\n    \n    getSubWindow(callback: AsyncCallback<Array<Window>>): void;\n    \n    loadContent(path: string, storage: ContentStorage, callback: AsyncCallback<void>): void;\n    \n    loadContent(path: string, storage?: ContentStorage): Promise<void>;\n    \n    loadContent(path: string, callback: AsyncCallback<void>): void;\n    \n    on(eventType: 'windowStageEvent', callback: Callback<WindowStageEventType>): void;\n    \n    off(eventType: 'windowStageEvent', callback?: Callback<WindowStageEventType>): void;\n  }", "api_method_name": "WindowStage", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStage", "api_method_name": "getMainWindow", "api_method_all": "getMainWindow(): Promise<Window>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStage", "api_method_name": "getMainWindow", "api_method_all": "getMainWindow(callback: AsyncCallback<Window>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStage", "api_method_name": "createSubWindow", "api_method_all": "createSubWindow(name: string): Promise<Window>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStage", "api_method_name": "createSubWindow", "api_method_all": "createSubWindow(name: string, callback: AsyncCallback<Window>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStage", "api_method_name": "getSubWindow", "api_method_all": "getSubWindow(): Promise<Array<Window>>;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStage", "api_method_name": "getSubWindow", "api_method_all": "getSubWindow(callback: AsyncCallback<Array<Window>>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStage", "api_method_name": "loadContent", "api_method_all": "loadContent(path: string, storage: ContentStorage, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStage", "api_method_name": "loadContent", "api_method_all": "loadContent(path: string, storage?: ContentStorage): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStage", "api_method_name": "loadContent", "api_method_all": "loadContent(path: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStage", "api_method_name": "on", "api_method_all": "on(eventType: 'windowStageEvent', callback: Callback<WindowStageEventType>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 27158, "since": 7, "api_used": "\u662f", "lines": ["t from '@ohos.napi_context'\n\nimport {\n\tdescribe,\n\tbeforeAll,\n\t", "r(vertexShader);\n\t\tconst fragmentShader = gl.createShader(gl.F", "unction globalFunction() {\n\t\tconst vertexShader = gl.createSha", "obalFunction() {\n\t\tconst vertexShader = gl.createShader(gl.VER", "st', function() {\n\tconsole.info('webgltest start');\n\tvar gl;\n\t", "URRENT_PROGRAM);\n\t\tconsole.info(\"testUseProgram has failed for", "rn true;\n\t}\n\n\tfunction createProgramExternal(gl, vshader, fsha", ";\" +\n\t\t\"}\";\n\n\tfunction globalFunction() {\n\t\tconst vertexShader", "eProgramError1);\n\t\tconst renderBufferValue1 = gl.getParameter(", "'webgl1Test', function() {\n\tconsole.info('webgltest start');\n\t", "e.info('AceApplication onDestroy');\n    }\n};\n", "\t//\u8bbe\u7f6e\u5750\u6807\n\t\t\"gl_Position = a_Position; \" +\n\t\t//    \"gl_PointSize", "_Position = a_Position;\\n' +\n\t\t\t'}\\n';\n\n\t\t// \u7247\u5143\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tvar FSH", "  configService.setConfig(this)\n        require('../../test/Li", "eate');\n\n    },\n    onDestroy() {\n        console.info('AceApp", "Instance()\n        const expectExtend = new ExpectExtend({\n   ", "it()\n        const configService = core.getDefaultService('con", "ribute vec4 a_Position;\\n' +\n\t\t\t'void main() {\\n' +\n\t\t\t'  gl_P", "Create() {\n        console.info('AceApplication onCreate');\n\n ", "getDefaultService('config')\n        this.timeout = 60000\n     ", "system.app'\nimport Context from '@ohos.napi_context'\n\nimport {", "SOURCE =\n\t\t\t'precision mediump float;\\n' +\n\t\t\t'uniform vec4 u_", "nfo('AceApplication onDestroy');\n    }\n};\n", "e.info('AceApplication onCreate');\n\n    },\n    onDestroy() {\n ", "ramObj;\n\t}\n\n\n\tfunction createProgram(gl) {\n\t\t//\u9876\u70b9\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tvar V", "xport default {\n    onCreate() {\n        console.info('AceAppl", " \" + programObj)\n\t\tconst useProgramError1 = gl.getError();\n\t\tc", "world');\n    },\n    onShow(){\n        global.el = this.$refs.c", ";\n        \n        const core = Core.getInstance()\n        con", "if (!program) {\n\t\t\tconsole.log('Failed to create program');\n\t\t", "ribute vec4 a_Position;\" +\n\t\t\"void main() {\" +\n\t\t//\u8bbe\u7f6e\u5750\u6807\n\t\t\"gl_", "= gl.getError();\n\t\tconsole.info(\"useProgramError: \" + useProgr", "URRENT_PROGRAM);\n\t\tconsole.log(\"testUseProgram has failed for ", "estroy() {\n        console.info('AceApplication onDestroy');\n ", "ut = 60000\n        configService.setConfig(this)\n        requi", "HADER, vshader);\n\t\tconsole.log(\"======vertexShader: \" + vertex", "nfo('AceApplication onCreate');\n\n    },\n    onDestroy() {\n    ", "createProgram();\n\t\tconsole.log(\"testUseProgram has failed for ", "createProgram();\n\t\tconsole.info(\"testUseProgram has failed for", "n' +\n\t\t\t'  gl_Position = a_Position;\\n' +\n\t\t\t'}\\n';\n\n\t\t// \u7247\u5143\u7740\u8272", "fragmentShader);\n\t\tconst programObj = gl.createProgram();\n\t\tco", "gramObj;\n\t}\n\n\tfunction initShaders(gl, vshader, fshader) {\n\t\tv", "ore.init()\n        const configService = core.getDefaultServic", "_Position = a_Position; \" +\n\t\t//    \"gl_PointSize = 10.0;\" +\n\t", "itle: \"\"\n    },\n    onInit() {\n        this.title = this.$t('s", "hader, fshader);\n\t\tconsole.log(\"======createProgram program: \""], "files": ["WebGL.test12.js", "WebGL.test09.js", "screenshot.test.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test11.js", "WebGL.test02.js", "WebGL.test13.js", "WebGL.test01.js", "app.js", "WebGL.test05.js", "WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "display.test.js", "index.js", "WebGL.test04.js", "WebGL.test08.js", "WebGL.test03.js", "window.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WindowStage", "api_method_name": "off", "api_method_all": "off(eventType: 'windowStageEvent', callback?: Callback<WindowStageEventType>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["rue();\n\t\t\t\t\t\t\t\tdata.off('windowSizeChange');\n\t\t\t\t\t\t\t\tdata.setLa", "g. clear)\n\t\t// turn off scissor test again\n\t\tgl.disable(gl.SCIS", "ndowTest OnOffTest2 off callback success');\n                   ", "               data.off('systemAvoidAreaChange');\n             "], "files": ["webGL.test.js", "window.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}]}