{"subsystem_ch": "\u591a\u6a21\u8f93\u5165\u5b50\u7cfb\u7edf", "subsystem_en": "multimodalinput", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.multimodalInput.inputDevice", "api": [{"api_class_name": "inputDevice", "api_method_all": "declare namespace inputDevice {\r\n    type SourceType = 'keyboard' | 'mouse' | 'touchpad' | 'touchscreen' | 'joystick' | 'trackball';\r\n\r\n    type AxisType = 'NULL';\r\n\r\n    \r\n    interface AxisRange {\r\n        source: SourceType;\r\n        axis : AxisType;\r\n        max : number;\r\n        min: number;\r\n    }\r\n\r\n    \r\n    interface InputDeviceData {\r\n        id: number;\r\n        name: string;\r\n        sources : Array<SourceType>;\r\n        axisRanges : Array<AxisRange>;\r\n    }\r\n\r\n    \r\n    function getDeviceIds(callback: AsyncCallback<Array<number>>): void;\r\n    function getDeviceIds(): Promise<Array<number>>;\r\n\r\n    \r\n    function getDevice(deviceId: number, callback: AsyncCallback<InputDeviceData>): void;\r\n    function getDevice(deviceId: number): Promise<InputDeviceData>;\r\n}", "api_method_name": "inputDevice", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 25, "since": 0, "api_used": "\u662f", "lines": ["", "\n    })\n  })\n\n  it(\"inputDevice::getDevice_test-01\"", "est-03 enter`);\n    inputDevice.getDevice(-1, (data", "est-01 enter`);\n    inputDevice.getDeviceIds((data,", "est-02 enter`);\n    inputDevice.getDeviceIds((data,", "\u6570\u6b63\u786e,\u5224\u65ad\u4e00\u79cd\u6216\u591a\u79cd\u8bbe\u5907\n  it(\"inputDevice::getDeviceIds_test-", "h; i++) {\n          inputDevice.getDevice(data[i], ", " {\n    console.log(`inputDevice::getDevice_test-03 ", "       console.log(`inputDevice::getDevice_test-03 ", "/ \u53c2\u6570\u6b63\u786e,\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\n  it('inputDevice::getDeviceIds_test-", "\n      console.log(`inputDevice::getDevice_test-04 ", "est-04 enter`);\n    inputDevice.getDeviceIds((data,", "    });\n  })\n\n  it(\"inputDevice::getDevice_test03\",", "hos.multimodalInput.inputDevice';\nimport {\n  descri", "\n      console.log(`inputDevice::getDeviceIds_test-", "// \u53c2\u6570\u6b63\u5e38,\u8fd4\u56de\u503c\u6b63\u5e38\n  it(\"inputDevice::getDevice_test-02\"", " {\n    console.log(`inputDevice::getDevice_test-04 ", "\n      console.log(`inputDevice::getDevice_test-03 ", " {\n    console.log(`inputDevice::getDeviceIds_test-"], "files": ["InputDevice.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "inputDevice", "api_method_name": "getDeviceIds", "api_method_all": "function getDeviceIds(callback: AsyncCallback<Array<number>>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 10, "since": 8, "api_used": "\u662f", "lines": ["e.log(`inputDevice::getDeviceIds_test-01 enter`);\n    inputDevice.getDev", "e.log(`inputDevice::getDeviceIds_test-02 exit`);\n    })\n  })\n\n  it(\"inpu", "\n  it('inputDevice::getDeviceIds_test-01', 0, function () {\n    console.", "\n  it(\"inputDevice::getDeviceIds_test-02\", 0, function () {\n    console.", "e.log(`inputDevice::getDeviceIds_test-01 exit`);\n    })\n  })\n\n  // \u53c2\u6570\u6b63\u786e,", "e.log(`inputDevice::getDeviceIds_test-02 enter`);\n    inputDevice.getDev", "`);\n    inputDevice.getDeviceIds((data, err) => {\n      if (err) {\n     "], "files": ["InputDevice.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "inputDevice", "api_method_name": "getDeviceIds", "api_method_all": "function getDeviceIds(): Promise<Array<number>>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "inputDevice", "api_method_name": "getDevice", "api_method_all": "function getDevice(deviceId: number, callback: AsyncCallback<InputDeviceData>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 29, "since": 8, "api_used": "\u662f", "lines": ["e.log(`inputDevice::getDevice_test-04 exit`);\n    });\n  })\n\n  it(\"inp", "`);\n    inputDevice.getDevice(-1, (data, err) => {\n      if (err) {\n ", "e.log(`inputDevice::getDeviceIds_test-01 exit`);\n    })\n  })\n\n  // \u53c2\u6570", "\n  it(\"inputDevice::getDeviceIds_test-02\", 0, function () {\n    conso", "e.log(`inputDevice::getDeviceIds_test-01 enter`);\n    inputDevice.get", "\n  it('inputDevice::getDeviceIds_test-01', 0, function () {\n    conso", "e.log(`inputDevice::getDeviceIds_test-02 exit`);\n    })\n  })\n\n  it(\"i", "e.log(`inputDevice::getDevice_test-03 ${JSON.stringify(err)}`);\n     ", "e.log(`inputDevice::getDevice_test-03 exit`);\n    })\n  })\n\n  // \u53c2\u6570\u6b63\u5e38,", "       console.log(`getDevice:err ${JSON.stringify(err)}`)\n          ", "\n  it(\"inputDevice::getDevice_test03\", 0, function () {\n    console.l", "`);\n    inputDevice.getDeviceIds((data, err) => {\n      if (err) {\n  ", "\n  it(\"inputDevice::getDevice_test-01\", 0, function () {\n    console.", "e.log(`inputDevice::getDevice_test-04 enter`);\n    inputDevice.getDev", "\n  it(\"inputDevice::getDevice_test-02\", 0, function () {\n    console.", "        inputDevice.getDevice(data[i], (res, err) => {\n            co", "       console.log(`getDevice:data ${JSON.stringify(data)}`)\n        ", "       console.log(`getDevice:data_i ${JSON.stringify(data[i])}`)\n   ", "e.log(`inputDevice::getDeviceIds_test-02 enter`);\n    inputDevice.get", "e.log(`inputDevice::getDevice_test-04 exit`);\n    });\n  })\n})\n", "e.log(`inputDevice::getDevice_test-03 enter`);\n    inputDevice.getDev"], "files": ["InputDevice.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "inputDevice", "api_method_name": "getDevice", "api_method_all": "function getDevice(deviceId: number): Promise<InputDeviceData>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AxisRange", "api_method_all": "interface AxisRange {\r\n        source: SourceType;\r\n        axis : AxisType;\r\n        max : number;\r\n        min: number;\r\n    }", "api_method_name": "AxisRange", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AxisRange", "api_method_name": "source", "api_method_all": "source: SourceType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["     expect(data[i].sources).assertInstanceOf("], "files": ["InputDevice.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AxisRange", "api_method_name": "axis", "api_method_all": "axis : AxisType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["     expect(data[i].axisRanges).assertInstan"], "files": ["InputDevice.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AxisRange", "api_method_name": "max", "api_method_all": "max : number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AxisRange", "api_method_name": "min", "api_method_all": "min: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "InputDeviceData", "api_method_all": "interface InputDeviceData {\r\n        id: number;\r\n        name: string;\r\n        sources : Array<SourceType>;\r\n        axisRanges : Array<AxisRange>;\r\n    }", "api_method_name": "InputDeviceData", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "InputDeviceData", "api_method_name": "id", "api_method_all": "id: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["     expect(data[i].id).assertInstanceOf('", "tend({\n            'id': 'extend'\n        "], "files": ["InputDevice.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "InputDeviceData", "api_method_name": "name", "api_method_all": "name: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["     expect(data[i].name).assertInstanceOf('"], "files": ["InputDevice.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "InputDeviceData", "api_method_name": "sources", "api_method_all": "sources : Array<SourceType>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["     expect(data[i].sources).assertInstanceOf('"], "files": ["InputDevice.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "InputDeviceData", "api_method_name": "axisRanges", "api_method_all": "axisRanges : Array<AxisRange>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["     expect(data[i].axisRanges).assertInstanceOf('"], "files": ["InputDevice.test.js"], "is_white": " ", "desc": " "}]}