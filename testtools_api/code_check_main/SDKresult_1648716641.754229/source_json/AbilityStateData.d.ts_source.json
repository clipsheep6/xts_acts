{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\application\\AbilityStateData", "api": [{"api_class_name": "AbilityStateData", "api_method_all": "export default class AbilityStateData {\n    \n    bundleName: string;\n\n    \n    abilityName: string;\n\n    \n    pid: number;\n\n    \n    uid: number;\n\n    \n    state: number;\n\n    \n    abilityType: number;\n}", "api_method_name": "AbilityStateData", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["\n\n    function checkAbilityStateData(list) {\n        con", "tData)\n        checkAbilityStateData2(testData)\n        ", "console.log('==checkAbilityStateData==>' + JSON.stringif", "console.log('==checkAbilityStateData2==>' + JSON.stringi", "\n\n    function checkAbilityStateData2(list) {\n        co", "     }\n        checkAbilityStateData(assistData)\n       "], "files": ["startFULL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityStateData", "api_method_name": "bundleName", "api_method_all": "bundleName: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 953, "since": 8, "api_used": "\u662f", "lines": ["ypeof (info[i].want.bundleName)).assertEqual(\"stri", "MainAbility\"\n]\n\nlet bundleNameList = [\n    \"com.oh", "     expect(info[i].bundleNames.length).assertEqua", "expect(info[i].want.bundleName.length).assertLarge", "                    bundleName: \"com.ix.verify.io\"", "             expect(bundleNameList.indexOf(data[i]", "ypeof (data[i].want.bundleName)).assertEqual(\"stri", "expect(data[i].want.bundleName.length).assertLarge", "me:' + data[i].want.bundleName);\n                 ", "                    bundleName: \"com.ix.simulate.f", "                    bundleName: \"com.ix.verify.act", "rror.code + ', want.bundleName:' + data[i].want.bu", "             expect(bundleNameList.indexOf(info[i]", "   if (data[i].want.bundleName != 'com.example.act", "                    bundleName: \"com.ix.simulate.e", "ndexOf(info[i].want.bundleName)).assertLarger(-1);", "MainAbility\"\n]\n\nvar bundleNameList = [\n    \"com.oh", "ndexOf(data[i].want.bundleName)).assertLarger(-1);", "ray.isArray(info[i].bundleNames)).assertEqual(true"], "files": ["FormFuzzArray.test.js", "getHapModuleInfoJsunit.test.ets", "FormsOneAndOneJsunit.test.js", "ActsGetWantAllTest.js", "ActsProcessManageJsTest.test.js", "getAbilityInfoJsunit2.test.ets", "FormFuzzString.test.js", "taskSwitchJsunit.test.js", "app.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "ActsAbilityLifecycleStateNewTest.test.js", "amsMissionSnapshotTest.test.js", "MangerAbilityJsunit.test.js", "LockNew.js", "FormFuzzFunction.test.js", "startFULL.test.js", "getHapModuleInfoJsunit_app1.test.ets", "ActsAbilityDelegatorCaseTest.test.js", "FormFuzzNull.test.js", "ActsKillProcessTest.test.js", "index.js", "MissionManager.test.js", "index.ets", "ActsStServiceAbilityClientCaseTest.test.js", "FormFuzzNum.test.js", "FeatureAbilityJsunit.test.js", "FormsOneAndTwoJsunit.test.js", "FormFuzzUndefined.test.js", "FormFuzzObject.test.js", "FormFuzzBool.test.js", "FormsZeroAndOneJsunit.test.js", "FormsZeroJsunit.test.js", "AbilityDisableTest.js", "Getactive.test.js", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityStateData", "api_method_name": "abilityName", "api_method_all": "abilityName: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 339, "since": 8, "api_used": "\u662f", "lines": ["ypeof (info[i].want.abilityName)).assertEqual(\"stri", "ndexOf(data[i].want.abilityName)).assertLarger(-1);", "expect(data[i].want.abilityName.length).assertLarge", "ypeof (data[i].want.abilityName)).assertEqual(\"stri", "                    abilityName: \"com.example.Verif", "             expect(abilityNameList.indexOf(data[i]", "             expect(abilityNameList.indexOf(info[i]", "cjsunit/index'\n\nvar abilityNameList = [\n    \"com.oh", " if (result[i].want.abilityName != 'com.example.act", "expect(info[i].want.abilityName.length).assertLarge", "                    abilityName: \"com.example.Simul", "m 'deccjsunit'\n\nvar abilityNameList = [\n    \"com.oh", "ndexOf(info[i].want.abilityName)).assertLarger(-1);", "cjsunit/index'\n\nlet abilityNameList = [\n    \"com.oh", "m 'deccjsunit'\n\nlet abilityNameList = [\n    \"com.oh"], "files": ["ActsGetWantAllTest.js", "ActsProcessManageJsTest.test.js", "taskSwitchJsunit.test.js", "app.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "ActsAbilityLifecycleStateNewTest.test.js", "amsMissionSnapshotTest.test.js", "MangerAbilityJsunit.test.js", "LockNew.js", "startFULL.test.js", "ActsKillProcessTest.test.js", "index.js", "MissionManager.test.js", "index.ets", "ActsStServiceAbilityClientCaseTest.test.js", "FeatureAbilityJsunit.test.js", "AbilityDisableTest.js", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityStateData", "api_method_name": "pid", "api_method_all": "pid: number", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 39, "since": 8, "api_used": "\u662f", "lines": ["JSON.stringify(list.pid))\n        expect(li", "     expect(data[i].pid > 0).assertTrue();\n", "        expect(list.pid > 0).assertTrue()\n ", "     expect(data[0].pid > 0).assertTrue();\n", "expect(typeof (info.pid)).assertEqual(\"numb", "ect(typeof (info[i].pid)).assertEqual(\"numb", "g(\"checkProcessInfo pid : \" + info.pid);\n\n ", "     expect(info[i].pid).assertLarger(0);\n\n", "console.log('==list.pid==>' + JSON.stringif", " expect(dataInfo[i].pid).assertLarger(500);", "Info pid : \" + info.pid);\n\n        expect(t", "ons = {\n            pid :0,\n            uid"], "files": ["Getactive.test.js", "MangerAbilityJsunit.test.js", "startFULL.test.js", "FeatureAbilityJsunit.test.js", "ContextJsunit.test.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityStateData", "api_method_name": "uid", "api_method_all": "uid: number", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 45, "since": 8, "api_used": "\u662f", "lines": ["      uid :datainfo.uid\n        }\n        v", "     expect(data[0].uid > 0).assertTrue();\n", " expect(dataInfo[i].uid).assertLarger(2000)", "\n        expect(app.uid > 0).assertTrue();\n", "console.log('==list.uid==>' + JSON.stringif", "JSON.stringify(list.uid))\n    }\n\n    functi", "     expect(data[i].uid > 0).assertTrue();\n", "      uid :datainfo.uid\n        }\n        c", "        expect(list.uid > 0).assertTrue()\n ", "ect(typeof (info[i].uid)).assertEqual(\"numb", "     expect(info[i].uid).assertLarger(0);\n ", " expect(dataInfo[i].uid).assertLarger(10000", "pid :0,\n            uid :datainfo.uid\n     "], "files": ["MangerAbilityJsunit.test.js", "startFULL.test.js", "ContextJsunit.test.js", "ActsProcessManageJsTest.test.js", "Getactive.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityStateData", "api_method_name": "state", "api_method_all": "state: number", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 29, "since": 8, "api_used": "\u662f", "lines": ["ct('com.example.sum_statelistener.MainAbility", "tEqual('com.example.statelistener');\n    }\n})", "== 'com.example.sum_statelistener') {\n       ", "\");\n            var state = AbilityDelegator.", "\n        expect(app.state == 2).assertTrue();", "3).assertEqual(list.state)\n    }\n\n    functio", "\n            expect(state==AbilityDelegatorRe", "                || (state!=AbilityDelegatorRe", "me\": \"com.example.fzstatelistener.MainAbility", "                 || state!=AbilityDelegatorRe", "me\": \"com.example.fzstatelistener\",\n         ", "e == 'com.example.fzstatelistener') {\n       ", "pect('com.example.fzstatelistener.MainAbility", "2).assertEqual(list.state)\n    }\n\n    functio", "State_0400 data:\" + state);\n            expec", "ame == \"com.example.statelistener\") {\n       ", "ct('com.example.sum_statelistener').assertEqu", "pect('com.example.fzstatelistener').assertEqu"], "files": ["ActsAbilityLifecycleStateNewTest.test.js", "startFULL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityStateData", "api_method_name": "abilityType", "api_method_all": "abilityType: number", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}