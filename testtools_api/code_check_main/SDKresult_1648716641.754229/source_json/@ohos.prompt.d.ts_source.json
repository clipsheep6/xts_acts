{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.prompt", "api": [{"api_class_name": "prompt", "api_method_all": "declare namespace prompt {\n\n  \n  interface ShowToastOptions {\n\n    \n    message: string;\n\n    \n    duration?: number;\n\n    \n    bottom?: string | number;\n  }\n\n  \n  interface Button {\n\n    \n    text: string;\n\n    \n    color: string;\n  }\n\n  \n  interface ShowDialogSuccessResponse {\n\n    \n    index: number;\n  }\n\n  \n  interface ShowDialogOptions {\n\n    \n    title?: string;\n\n    \n    message?: string;\n\n    \n    buttons?: [Button, Button?, Button?];\n  }\n\n  \n  interface ActionMenuSuccessResponse {\n\n    \n    index: number;\n  }\n\n  \n  interface ActionMenuOptions {\n\n    \n    title?: string;\n\n    \n    buttons: [Button, Button?, Button?, Button?, Button?, Button?];\n  }\n\n  \n  function showToast(options: ShowToastOptions):void;\n\n  \n  function showDialog(options: ShowDialogOptions, callback: AsyncCallback<ShowDialogSuccessResponse>):void;\n  function showDialog(options: ShowDialogOptions): Promise<ShowDialogSuccessResponse>;\n\n  \n  function showActionMenu(options: ActionMenuOptions, callback: AsyncCallback<ActionMenuSuccessResponse>):void;\n  function showActionMenu(options: ActionMenuOptions): Promise<ActionMenuSuccessResponse>;\n}", "api_method_name": "prompt", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 1854, "since": 0, "api_used": "\u662f", "lines": ["rompt from '@system.prompt'\n\n@Entry\n@Component", "console.error(\"push prompt  page error:\" + err", "fo('beforeEach push prompt page result:' + JSO", " console.info(\"push prompt  page result:\" + JS", "      console.info(\"prompt beforeEach start\");", "      console.info(\"prompt each called\");\n    ", "hos.matrix4'\nimport prompt from '@system.promp", "Click(()=>{\n        prompt.showActionMenu({\n  ", "rFlag);\n            prompt.showToast({ message", "  console.info(\"get prompt state pages.name:\" ", "lick(()=> {\n        prompt.showDialog({\n      ", "owJsunit();\n  systempromptJsunit();\n  sourceTy", ".ets';\nimport systempromptJsunit from './Syste", "hos.emitter'\nimport prompt from '@ohos.prompt'", "nfo('beforeEach get prompt state pages.name:' ", "or('beforeEach push prompt page error:' + err)", "        }\n          prompt.showActionMenu({\n  ", "      console.info('promptTest_0100 is start')", "rompt from '@system.prompt'\n\n@Entry\n@Preview\n@", "sunit from './SystempromptJsunit.test.ets';\nim", "      console.info('promptTest_0200 END');\n   ", "      console.info('promptTest_0100 END');\n   ", "rompt from '@system.prompt';\n\n@Entry\n@Componen", "  console.info(\"get prompt state pages:\" + JSO", "();\n    });\n    it('promptTest_0200', 0, async", "      console.info(\"promptTest_0100 click resu", "      console.info('promptTest_0200 is start')", "hos.emitter'\nimport prompt from '@system.promp", " => {\n              prompt.showToast({\n       ", "k(() => {\n          prompt.showToast({ message", "@ts-nocheck\n\nimport prompt from '@system.promp", "\");\n    });\n    it('promptTest_0100', 0, async", "y\n@Component\nstruct promptExample {\n  @State t", "s.animator';\nimport prompt from '@system.promp", "s));\n        if (!(\"prompt \" == pages.name)) {", "       })\n          prompt.showDialog({\n      ", "nfo('beforeEach get prompt state pages:' + JSO", "      console.info(\"promptTest_0200 click resu", "y\n@Component\nstruct promptExample {\n  build(){", " prompt from '@ohos.prompt'\n\n@Entry\n@Component"], "files": ["ohosPrompt.ets", "configuration.ets", "SystempromptJsunit.test.ets", "appear.ets", "systemPrompt.ets", "GridJsunit.test.ets", "animatorOption.ets", "index.js", "List.test.ets", "ohosMatrix4.ets", "basicabilityapi.test.js", "ConfigurationJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "prompt", "api_method_name": "showToast", "api_method_all": "function showToast(options: ShowToastOptions):void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 1569, "since": 8, "api_used": "\u662f", "lines": ["nce;\n        prompt.showToast({\n            messa", "k(){\n        prompt.showToast({\n            messa", "rce;\n        prompt.showToast({\n            messa", "\n            prompt.showToast({ message: 'The tex", "s(){\n        prompt.showToast({\n            messa", "             prompt.showToast({\n                m", " {\n          prompt.showToast({ message: JSON.str", "d(){\n        prompt.showToast({\n            messa", "amp;\n        prompt.showToast({\n            messa", "erY;\n        prompt.showToast({\n            messa", "name\n        prompt.showToast({\n            messa", " {\n          prompt.showToast({ message: \"sucessf", "art;\n        prompt.showToast({\n            messa", "r(){\n        prompt.showToast({\n            messa"], "files": ["ohosPrompt.ets", "appear.ets", "animatorOption.ets", "index.js", "ohosMatrix4.ets", "basicabilityapi.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "prompt", "api_method_name": "showDialog", "api_method_all": "function showDialog(options: ShowDialogOptions, callback: AsyncCallback<ShowDialogSuccessResponse>):void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 9, "since": 8, "api_used": "\u662f", "lines": ["             text: 'showDialog',\n                color: '#666666',\n   ", "   })\n      Button('showDialog')\n      .key('button2')\n      .backgrou", "nsole.info(\"[prompt.showDialog] ret.index \" + ret.index);\n            ", "onsole.log('[prompt.showDialog] dialog cancel callback');\n            ", "onsole.log('[prompt.showDialog] complete');\n            }\n        });\n", "=> {\n        prompt.showDialog({\n          title: 'Title Info',\n      ", "     title: 'dialog showDialog test',\n            message: 'message of", "})\n          prompt.showDialog({\n            title: 'Title Info',\n    ", "RT')\n        prompt.showDialog({\n            title: 'dialog showDialog"], "files": ["ohosPrompt.ets", "systemPrompt.ets", "basicabilityapi.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "prompt", "api_method_name": "showDialog", "api_method_all": "function showDialog(options: ShowDialogOptions): Promise<ShowDialogSuccessResponse>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "prompt", "api_method_name": "showActionMenu", "api_method_all": "function showActionMenu(options: ActionMenuOptions, callback: AsyncCallback<ActionMenuSuccessResponse>):void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 3, "since": 0, "api_used": "\u662f", "lines": [")=>{\n        prompt.showActionMenu({\n              title: 'Title Info',\n  ", "mn(){\n      Button('showActionMenu')\n      .key('button1')\n      .backgrou", " }\n          prompt.showActionMenu({\n            title: 'Title Info',\n    "], "files": ["ohosPrompt.ets", "systemPrompt.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "prompt", "api_method_name": "showActionMenu", "api_method_all": "function showActionMenu(options: ActionMenuOptions): Promise<ActionMenuSuccessResponse>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ShowToastOptions", "api_method_all": "interface ShowToastOptions {\n\n    \n    message: string;\n\n    \n    duration?: number;\n\n    \n    bottom?: string | number;\n  }", "api_method_name": "ShowToastOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ShowToastOptions", "api_method_name": "message", "api_method_all": "message: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3690, "since": 8, "api_used": "\u662f", "lines": [" JSON.stringify(err.message))\n            }\n   ", " prompt.showToast({ message: 'The text is shown", " JSON.stringify(err.message))\n          }\n     ", "data error: \" + err.message);\n      }\n      don", "data error: \" + err.message);\n      }\n      awa", " JSON.stringify(err.message))\n        }\n      }", " prompt.showToast({ message: 'The text is hidde"], "files": ["ohosPrompt.ets", "configuration.ets", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "longPressGesture.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "PathJsunit.test.ets", "ZIndexJsunit.test.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "TextStyleJsunit.test.ets", "geometryTransition.ets", "marquee.ets", "TextClockJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "ResponseRegion.ets", "basicabilityapi.test.js", "CalendarJsunit.test.ets", "transition.ets", "systemPrompt.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "customDialogController.ets", "TransitionJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "tapGesture.ets", "QrCodeJsunit.test.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "PanGesture.ets", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "ColorGradientJsunit.test.ets", "ShapeJsunit.test.ets", "PieceCode.ets", "badge.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "textClock.ets", "tabs.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "TextAreaJsunit.test.ets", "imageAnimator.ets", "bindPopup.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "BorderJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "ohosMatrix4.ets", "CircleJsunit.test.ets", "FocusJsunit.test.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "animationStatus.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "TransFormJsunit.test.ets", "priorityGesture.ets", "touchAble.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "datePicker.ets", "pageTransition.ets", "AlertDialog.ets", "WebPage.ets", "TabsJsunit.test.ets", "ShapeClippingJsunit.test.ets", "GridSettingsJsunit.test.ets", "index.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "areaChange.ets", "parallelGesture.ets", "timeStamp.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "sharedTransition.ets", "motionPath.ets", "Badge.ets", "BindPopupJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShowToastOptions", "api_method_name": "duration", "api_method_all": "duration?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 240, "since": 8, "api_used": "\u662f", "lines": ["reateAnimator({\n    duration: 3000,\n    fill: 'f", "ata: {\n            \"duration\": \"nan\"\n          }", "xpect(objNew.$attrs.duration).assertEqual('500.0", "ull) {\n        this.duration = parseInt(eventDat", "he text is hidden', duration: 2000 })\n          ", "nsole.info(\"button6 duration value is : \" + this", "value is : \" + this.duration)\n          animateT", "xpect(objNew.$attrs.duration).assertEqual('nan')", "ata: {\n            \"duration\": \"500\"\n          }", "        animateTo({ duration: this.duration }, (", "To({ duration: this.duration }, () => {\n        ", "gify(this.matrix1), duration: 200 })\n          t", "nsole.info(\"button6 duration test animateTo STAR", " if (eventData.data.duration != null) {\n        ", "3.jpg',\n            duration: 500,\n            w", "ssage: \"sucessful\", duration: 200 })\n          t", "     .duration(this.duration)\n      .vertical(th", "s = {\n              duration: 5000,\n            ", "        animateTo({ duration: 1000 }, () => {\n  ", "nsole.info(\"button1 duration test animateTo STAR", "nsole.info(\"button1 duration value is : \" + this", " {\n                \"duration\": this.duration,\n  ", "an = false\n  @State duration: number = 100\n  @St", "2.jpg',\n            duration: 500,\n            w", "options = {\n        duration: 2000,\n        iter", "   \"duration\": this.duration,\n              }\n  ", "  expect(obj.$attrs.duration).assertEqual('1000.", "4.jpg',\n            duration: 500,\n            w", "nsole.info(\"button7 duration test animateTo STAR", "eInt(eventData.data.duration);\n      }\n      if ", "an = false\n  @State duration: number = 1000\n  @S", "nsole.info(\"button7 duration value is : \" + this", "The text is shown', duration: 2000 })\n          ", "p(this.loop)\n      .duration(this.duration)\n    ", "1.jpg',\n            duration: 500,\n            w"], "files": ["animate.ets", "pageTransition2.ets", "ohosPrompt.ets", "imageAnimatorProps.test.js", "ohosMatrix4.ets", "swiper.ets", "appear.ets", "animationStatus.ets", "fillMode.ets", "curves.ets", "chartProps.test.js", "SharedTransitionJsunit.test.ets", "pageTransition.ets", "geometryTransition.ets", "swiperProps.test.js", "AnimateJsunit.test.ets", "animatorOption.ets", "index.js", "SwiperJsunit.test.ets", "Swiper.ets", "basicabilityapi.test.js", "transition.ets", "sharedTransition.ets", "motionPath.ets", "imageAnimator.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShowToastOptions", "api_method_name": "bottom", "api_method_all": "bottom?: string | number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 95, "since": 8, "api_used": "\u662f", "lines": [").margin({ top: 10, bottom: 10 })\n      Image(", ".padding({ top: 10, bottom: 10 }).margin(10)\n\n", "\"bottom\": this.rect_bottom\n    }\n  }\n\n  static", "ntSize(16).margin({ bottom: 10 })\n      Flex({", "r(0x317aff).margin({bottom:20})\n        .key('", "IN_BOTTOM = 'margin-bottom'\nconst ATTRS_BORDER", ": this.rect_right, \"bottom\": this.rect_bottom\n", " = rect.top + (rect.bottom - rect.top) / 2;\n  ", "tOne.bottom + (rect.bottom - rect.top);\n      ", "r(0x317aff).margin({bottom:50}).key('button')\n", ")\n        .margin({ bottom: 10 })\n        .onC", ")\n        .margin({ bottom: 40 })\n        .onS", "  let upY = rectOne.bottom + (rect.bottom - re", ")\n        .margin({ bottom: 10 })\n        .key", "')[0]\n    this.rect_bottom = JSON.parse('[' + ", "tOne.top + (rectOne.bottom - rectOne.top) / 2;", ")\n        .margin({ bottom: 20 })\n    }\n    .w", "d)\n      }.margin({ bottom: 10 })\n    }\n  }\n}\n", ")\n        .margin({ bottom: 20 })\n        .key", "ight;\n  static rect_bottom;\n  static rect_valu"], "files": ["animate.ets", "Utils.ets", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "playMode.ets", "SourceTypeJsunit.test.ets", "canvas.ets", "ohosMatrix4.ets", "Text.ets", "PanGestureJsunit.test.ets", "Stack.ets", "Constants.ets", "customDialogController.ets", "CustomDialog.ets", "FormComponentPage.ets", "textClock.ets", "geometryTransition.ets", "TapGesture.test.ets", "marquee.ets", "ResponseRegionJsunit.test.ets", "dragEvent2.ets", "index.js", "dragEvent.ets", "PriorityGestureJsunit.test.ets", "transition.ets", "transForm.ets", "Calendar.ets", "Marquee.ets", "buttonProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Button", "api_method_all": "interface Button {\n\n    \n    text: string;\n\n    \n    color: string;\n  }", "api_method_name": "Button", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 666, "since": 8, "api_used": "\u662f", "lines": ["    Row() {\n        Button('start').key('butto", "ocused'\n  @State oneButtonColor: string = '#FF", "s.textTwo = 'Second Button onBlur'\n          t", "B'\n        })\n      Button(this.textThree)\n   ", "'\n          this.oneButtonColor = '#AFEEEE'\n  ", " }\n        })\n      Button('start')\n        .k", "C0CB'\n  @State threeButtonColor: string = '#87", " space:20 }){\n      Button(this.textOne)\n     ", "      });\n          Button('update').borderRad", "          this.threeButtonColor = '#FFC0CB'\n  ", "  Row() {\n          Button('pause').borderRadi", "is.textOne = 'First Button onFocus'\n          ", "his.btn1) {\n        Button() {\n          Image", "FF0000'\n  @State twoButtonColor: string = '#FF", "   Column() {\n      Button('click me')\n       ", "  Row() {\n          Button('play').borderRadiu", "s.textTwo = 'Second Button onFocus'\n          ", "olor.Black)\n        Button('confirm')\n        ", "groundColor(this.twoButtonColor)\n        .widt", ".textThree = 'Third Button onBlur'\n          t", "ceAround }) {\n      Button('disable')\n        ", "ey('rotate4')\n      Button(\"get Point\").paddin", "idth('100%')\n\n      Button('edit list')\n      ", "Around }) {\n        Button('cancel')\n         ", "B'\n        })\n      Button(this.textTwo)\n     ", "eBetween }) {\n      Button('Touch')\n        .b", "\n        })\n        Button('once').key('button", "         })\n        Button('preview')\n        ", "\n        })\n        Button('pause').key('butto", "oundColor(this.threeButtonColor)\n        .widt", "groundColor(this.oneButtonColor)\n        .widt", "space:20 }) {\n      Button(this.hoverText)\n   ", "  Row() {\n          Button('cancel').borderRad", "'\n          this.oneButtonColor = '#FFC0CB'\n  ", "    Row() {\n        Button('reverse').key('but", "   Column() {\n      Button(this.changeAppear)\n", "      });\n          Button('finish').borderRad", ".opacity(0.4)\n      Button(this.text)\n        ", "\n        })\n        Button('stop').key('button", "      });\n          Button('reverse').borderRa", "'\n          this.twoButtonColor = '#FFC0CB'\n  ", "is.textOne = 'First Button onBlur'\n          t", ".textThree = 'Third Button onFocus'\n          ", "'\n          this.twoButtonColor = '#AFEEEE'\n  ", "\n        })\n        Button('iteration').key('b", "          this.threeButtonColor = '#AFEEEE'\n  ", "n.Center,}) {\n      Button(this.show).width(80", ".Blue\n  @State eventButton: string = ''\n  @Sta", "Around }) {\n        Button('next')\n          ."], "files": ["ohosPrompt.ets", "systemRouterA.ets", "configuration.ets", "video.ets", "placement.ets", "playMode.ets", "Navigation.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "OhosRouterJsnuit.test.ets", "marquee.ets", "textTimer.ets", "Swiper.ets", "Divider.ets", "transition.ets", "textInput.ets", "systemPrompt.ets", "LinkJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "focus.ets", "touch.ets", "XComponentPage.ets", "ButtonJsunit.test.ets", "bindMenu.ets", "swiper.ets", "sideBar.ets", "toggle.ets", "Sidebar.ets", "Badge.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "animatorOption.ets", "AppStorageJsunit.test.ets", "edgeEffect.ets", "Marquee.ets", "Tab.ets", "PatternLock.ets", "textPickerDialog.ets", "enable.ets", "PieceCode.ets", "badge.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "textClock.ets", "list.ets", "AppStorage.ets", "List.ets", "GridContainer.ets", "direction.ets", "Video.ets", "Button.ets", "imageAnimator.ets", "bindPopup.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "mouseEvent.ets", "ohosMatrix4.ets", "appear.ets", "animationStatus.ets", "commonComponentJsApi.test.js", "fillMode.ets", "FormComponentPage.ets", "AlertDialog.ets", "WebPage.ets", "inputProps.test.js", "index.js", "ohosRouterA.ets", "Link.ets", "timeStamp.ets", "Toggle.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "Calendar.ets", "motionPath.ets", "search.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Button", "api_method_name": "text", "api_method_all": "text: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2156, "since": 8, "api_used": "\u662f", "lines": ["height;\n    this.context.imageSmoothingEnabl", " false;\n    this.context.drawImage(img, 30, ", "    }, item => item.text)\n      }\n      .wid", "riority: 3 },\n    { text: '4\\n(priority:4)',", "          Text(item.text)\n              .wid", ")\n      Button(this.text)\n        .key('enab", "xt = eventData.data.text\n      }\n    }\n  }\n\n", " })\n          .key('text1')\n          .onCli", " })\n          .key('text2')\n          .onCli", "6)\n                .textAlign(TextAlign.Cent", "oundColor(0xF5DEB3).textAlign(TextAlign.Cent", "2 = offscreen.getContext(\"2d\");\n    var img ", "xD2B48C)\n          .textAlign(TextAlign.Cent", "Italic bold cursive text')\n        .fontColo", "      Text('default text').fontSize(20)\n\n   ", "{\n          this.context.imageSmoothingEnabl", "FEEEE)\n            .textAlign(TextAlign.Cent", "alue)\n        .key('text1')\n        .backgro", "0BFFF)\n            .textAlign(TextAlign.Cent", "riority: 1 },\n    { text: '2\\n(priority:2)',", "size)\n        .key('text2')\n        .margin(", "ast({ message: 'The text is hidden', duratio", "olor')\n\n      Text(`text font size ${this.fo", "ight')\n\n      Text(`text fontFamily ${this.f", "Size')\n\n      Text(`text font style ${this.f", "ull) {\n        this.text = eventData.data.te", "riority: 2 },\n    { text: '3\\n(priority:3)',", "en: any[] = [\n    { text: '1\\n(priority:1)',", "('90%')\n      Text('text')\n        .blur(thi", "     Canvas(this.context)\n        .width('10", "682B4)\n            .textAlign(TextAlign.Cent", "xF5DEB3)\n          .textAlign(TextAlign.Cent", "582B4)\n            .textAlign(TextAlign.Cent", "an = true;\n  @State text: string = \"enable\";", " if (eventData.data.text != null) {\n        ", "class ChildInfo {\n  text: string = ''\n  prio", "2 = offscreen.getContext(\"2d\");\n    var imag", "ast({ message: 'The text is shown', duration", "tyle')\n\n      Text(`text fontWeight ${this.f", "(18)\n              .textAlign(TextAlign.Cent", "ze(20)\n\n      Text(`text font color ${this.f"], "files": ["ohosPrompt.ets", "ImageJsunit.test.ets", "textProps.test.js", "Navigator.ets", "canvas2.ets", "Qrcode.ets", "Navigation.ets", "TextPickerJsunit.test.ets", "Span.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "searchProps.test.js", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "TextClockJsunit.test.ets", "textTimer.ets", "Swiper.ets", "basicabilityapi.test.js", "Divider.ets", "border.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "systemPrompt.ets", "Image.ets", "List.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "focus.ets", "touch.ets", "Text.ets", "SpanJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "Sidebar.ets", "Scroll.ets", "text.ets", "TransitionJsunit.test.ets", "AreaChangeJsunit.test.ets", "positionSetting.ets", "TextArea.ets", "edgeEffect.ets", "richtextProps.test.js", "stepper.ets", "shape.ets", "image.ets", "svgTextProps.test.js", "textPathProps.test.js", "FlexDirectionJsunit.test.ets", "flex.ets", "gridContainer.ets", "textPickerDialog.ets", "gridPage.ets", "enable.ets", "badge.ets", "textStyle.ets", "imageEffects.ets", "ColumnSplit.ets", "textClock.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "list.ets", "List.ets", "GridContainer.ets", "dragEvent2.ets", "backgroundAndSizeSetting.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "TextAreaJsunit.test.ets", "pickerProps.test.js", "listItem.ets", "grid.ets", "textareaProps.test.js", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "buttonProps.test.js", "List.test.js", "global.ets", "EnableJsunit.test.ets", "canvas.ets", "pickerViewProps.test.js", "bindContextMenu.ets", "switchProps.test.js", "TextInput.ets", "appear.ets", "Constants.ets", "commonComponentJsApi.test.js", "FormComponentPage.ets", "Grid.ets", "touchAble.ets", "WebPage.ets", "TextTimerJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "areaChange.ets", "GridItem.ets", "timeStamp.ets", "Toggle.ets", "sharedTransition.ets", "ScrollBar.ets", "search.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Button", "api_method_name": "color", "api_method_all": "color: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 276, "since": 8, "api_used": "\u662f", "lines": ["(obj.$attrs.divider.color).assertEqual(\"#FFFF", "        radius: 20, color: Color.Gray, offset", "bjNew.$attrs.shadow.color).assertEqual(\"#FF00", " 2.000000;\n  @State color: string = 0xFFFFFF;", " { radius: 'error', color: 'error', offsetX: ", "rt default function colorGradientJsunit() {\n ", " if (eventData.data.colorValues != null) {\n  ", "ata: {\n            \"colorValues\": JSON.string", "  console.info(\"get colorGradient state pages", "ing = 150;\n  @State colorValues: Array = [[0x", "ull) {\n        this.color = eventData.data.co", "bjNew.$attrs.shadow.color).assertEqual(\"#8000", "bjNew.$attrs.shadow.color).assertEqual(\"#FF80", "ull) {\n        this.colorValues = JSON.parse(", "\n        }.border({ color: Color.Black, width", "TRS_SHADOW_COLOR = 'color'\nconst ATTRS_SHADOW", "ection.Top,\n        colors: [[0xAEE1E1, 0.0],", "        color: this.color,\n          startMar", "t(obj.$attrs.shadow.color).assertEqual(\"#FF80", ".border({ width: 5, color: 0x317AF7, radius: ", "    radius: 60,\n    colors:[[0xAEE1E1, 0.0], ", "r({ strokeWidth: 2, color: 0xFFFFFF, startMar", "ata: {\n            \"color\": '0xFF0000'\n      ", "(obj.$attrs.divider.color).assertEqual(\"#FF00", " console.info(\"push colorGradient page result", "radius: 0x7FFFFFFF, color: 0x7FFFFFFF, offset", "      console.info(\"colorGradient beforeEach ", "        uri: 'pages/colorGradient',\n      }\n ", "Direction.Left,\n    colors: [[0xAEE1E1, 0.0],", "s));\n        if (!(\"colorGradient\" == pages.n", " if (eventData.data.color != null) {\n        ", ",\n    end: 359,\n    colors: [[0xAEE1E1, 0.0],", "      console.info(\"colorGradient after each ", "    Text(`text font color ${this.fontColor}`)", "   Text('background color').fontSize(9).width", "arse(eventData.data.colorValues);\n      }\n   ", "ject= { radius: 10, color: Color.Gray, offset", "or = eventData.data.color;\n      }\n      if (", "console.error(\"push colorGradient page error:", "radius: 0x80000000, color: 0x80000000, offset", "bjNew.$attrs.shadow.color).assertEqual(\"#7FFF", "ata: {\n            \"color\": \"#FF0000FF\"\n     ", "fontColor)\n        .colorBlend(Color.Green)\n ", "right: 20, size: 2, color: Color.Blue })\n    ", "  if(eventData.data.colorValues != null) {\n  ", "= \"200px\";\n  @State color: Array = [[0x080808", "okeWidth,\n          color: this.color,\n      "], "files": ["ohosPrompt.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "Qrcode.ets", "Span.ets", "Progress.ets", "toolbarItemProps.test.js", "marquee.ets", "basicabilityapi.test.js", "DividerJsunit.test.ets", "Divider.ets", "border.ets", "systemPrompt.ets", "List.test.ets", "scrollCode.ets", "background.ets", "Text.ets", "SpanJsunit.test.ets", "gauge.ets", "TextJsunit.test.ets", "swiper.ets", "Blank.ets", "text.ets", "canvasProps.test.js", "BlankJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "edgeEffect.ets", "ProgressJsunit.test.ets", "labelProps.test.js", "image.ets", "ListJsunit.test.ets", "loadingProgress.ets", "stepperProps.test.js", "ratingProps.test.js", "ColorGradientJsunit.test.ets", "PatternLock.ets", "ShapeJsunit.test.ets", "badge.ets", "qrcodeProps.test.js", "textStyle.ets", "imageEffects.ets", "AlphabetIndexer.ets", "SubscribaleAbstractJsunit.test.ets", "stepperItemProps.test.js", "videoProps.test.js", "list.ets", "BackgroundJsunit.test.ets", "List.ets", "QrCode.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "dragEvent.ets", "pickerProps.test.js", "selectProps.test.js", "span.ets", "NavigatorCode.ets", "BackgroundAndSizeSettingJsunit.test.ets", "mouseEvent.ets", "BadgeJsunit.test.ets", "pickerViewProps.test.js", "divProps.test.js", "divider.ets", "Constants.ets", "progress.ets", "sliderProps.test.js", "WebPage.ets", "inputProps.test.js", "index.js", "progressProps.test.js", "Badge.ets", "colorGradient.ets", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShowDialogSuccessResponse", "api_method_all": "interface ShowDialogSuccessResponse {\n\n    \n    index: number;\n  }", "api_method_name": "ShowDialogSuccessResponse", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ShowDialogSuccessResponse", "api_method_name": "index", "api_method_all": "index: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1502, "since": 8, "api_used": "\u662f", "lines": ["       console.info(index.toString())\n       ", "Source([])\n  @State index: number = 1\n  @Stat", "    this.arr.splice(index, 1)\n          conso", " if (eventData.data.index != null) {\n        ", "    let callback = (indexEvent) => {\n        ", ";\n      }\n      let indexEvent = {\n        ev", "t));\n        expect(indexEvent.data.value).as", "    Stepper({\n      index: this.currentIndex\n", "d} from \"deccjsunit/index.ets\";\nimport testsu", ")\n      .index(this.index)\n      .autoPlay(th", "this.currentIndex = index\n    })\n    .align(A", "  events_emitter.on(indexEvent, callback);\n  ", "ngth\n  }\n\n  getData(index: number): any {\n   ", "t} from \"deccjsunit/index.ets\"\nimport router ", "events_emitter.emit(indexEvent, eventData);\n ", "chedCount(2)\n      .index(this.index)\n      .", " \" + JSON.stringify(indexEvent));\n        exp", "ull) {\n        this.index = parseInt(eventDat", "eInt(eventData.data.index);\n      }\n      if ", "(prevIndex: number, index: number) => {\n     ", "nsole.info(this.arr[index] + 'Delete')\n      ", "t} from \"deccjsunit/index.ets\";\nimport router", "')\n      .onChange((index: number) => {\n     ", "     .onItemDelete((index: number) => {\n     ", "   return this.list[index]\n  }\n\n  registerDat", "      }\n        let indexEvent = {\n          "], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "Navigator.ets", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "Row.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "CommonJsunit.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "Swiper.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "systemPrompt.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "EnmusFlexAlignJsunit.test.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "SystemAppJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "sideBar.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "edgeEffect.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "stepper.ets", "svgProps.test.js", "labelProps.test.js", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "Select.ets", "ratingProps.test.js", "MotionPathJsunit.test.ets", "stepperProps.test.js", "marqueeProps.test.js", "Tab.ets", "imageAnimatorProps.test.js", "Stepper.ets", "textPickerDialog.ets", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "popupProps.test.js", "AlphabetIndexer.ets", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "tabs.ets", "BindMenuJsunit.test.ets", "videoProps.test.js", "list.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "DatePickerJsunit.test.ets", "BasicJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "calendar.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "animateMotionProps.test.js", "listItem.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "buttonProps.test.js", "animateProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "ContentStorage.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "AnimationStatusJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "pickerViewProps.test.js", "CircleJsunit.test.ets", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "Constants.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "Grid.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "WebPage.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "polygonProps.test.js", "swiperProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "GridItem.ets", "tspanProps.test.js", "imageProps.test.js", "select.ets", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ShowDialogOptions", "api_method_all": "interface ShowDialogOptions {\n\n    \n    title?: string;\n\n    \n    message?: string;\n\n    \n    buttons?: [Button, Button?, Button?];\n  }", "api_method_name": "ShowDialogOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ShowDialogOptions", "api_method_name": "title", "api_method_all": "title?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 81, "since": 8, "api_used": "\u662f", "lines": ["       console.log('titleMode')\n      })\n    ", "ialog({\n            title: 'Title Info',\n    ", "\n      console.log(\"title\")\n    })\n  }\n\n  @Bu", "ull) {\n        this.title = eventData.data.ti", " \"<div class=\\\"item-title\\\"><h1>\u6587\u672c\u6d4b\u8bd5(h1\u6d4b\u8bd5)</h", "ull) {\n        this.titleMode = eventData.dat", "nMenu({\n            title: 'Title Info',\n    ", "lder IngredientItem(title:string, name: strin", "       console.log('titleMode:' + titleModel)", "itle: string = 'old title'\n  @State x: number", "  {\n                title: 'title',\n         ", " if (eventData.data.title != null) {\n        ", "            title: 'title',\n                m", "le = eventData.data.title\n      }\n      if (e", "(obj.$attrs.overlay.title).assertEqual(\"new t", "an = false\n  @State titleMode: NavigationTitl", "yExample {\n  @State title: string = 'old titl", "de = eventData.data.titleMode;\n      }\n      ", "      \"title\": \"new title\"\n          }\n      ", "umn() {\n      Text('title')\n        .width(80", "      .subTitle('subtitle')\n      .menus(this", ".onTitleModeChange((titleModel: NavigationTit", "ationMenus1)\n      .titleMode(NavigationTitle", "ata: {\n            \"title\": \"new title\"\n     ", "e).assertEqual(\"old title\");\n      expect(obj", "0 })\n      }\n      .title(this.NavigationTitl", "wDialog({\n          title: 'Title Info',\n    ", "eight('50%')\n      .title('title')\n      .sub", "e).assertEqual(\"new title\");\n      console.in", "enu({\n              title: 'Title Info',\n    ", "gationMenus)\n      .titleMode(NavigationTitle", "      .overlay(this.title,\n              { al", ".show({\n            title: 'Title',\n         ", "onTitleModeChanged((titleModel: NavigationTit", "ogressChange: \" + e.title);\n        })\n      ", "Flex() {\n      Text(title)\n        .fontSize(", "50%')\n      .title('title')\n      .subTitle('", "(obj.$attrs.overlay.title).assertEqual(\"old t"], "files": ["Navigation.ets", "ohosPrompt.ets", "AlertDialog.ets", "WebPage.ets", "systemPrompt.ets", "NavigationJsunit.test.ets", "fontWeight.ets", "index.js", "basicabilityapi.test.js", "menuProps.test.js", "navigation.ets", "overlay.ets", "OverlayJsunit.test.ets", "RichText.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShowDialogOptions", "api_method_name": "message", "api_method_all": "message?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3690, "since": 8, "api_used": "\u662f", "lines": [" JSON.stringify(err.message))\n            }\n   ", " prompt.showToast({ message: 'The text is shown", " JSON.stringify(err.message))\n          }\n     ", "data error: \" + err.message);\n      }\n      don", "data error: \" + err.message);\n      }\n      awa", " JSON.stringify(err.message))\n        }\n      }", " prompt.showToast({ message: 'The text is hidde"], "files": ["ohosPrompt.ets", "configuration.ets", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "longPressGesture.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "PathJsunit.test.ets", "ZIndexJsunit.test.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "TextStyleJsunit.test.ets", "geometryTransition.ets", "marquee.ets", "TextClockJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "ResponseRegion.ets", "basicabilityapi.test.js", "CalendarJsunit.test.ets", "transition.ets", "systemPrompt.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "customDialogController.ets", "TransitionJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "tapGesture.ets", "QrCodeJsunit.test.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "PanGesture.ets", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "ColorGradientJsunit.test.ets", "ShapeJsunit.test.ets", "PieceCode.ets", "badge.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "textClock.ets", "tabs.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "TextAreaJsunit.test.ets", "imageAnimator.ets", "bindPopup.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "BorderJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "ohosMatrix4.ets", "CircleJsunit.test.ets", "FocusJsunit.test.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "animationStatus.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "TransFormJsunit.test.ets", "priorityGesture.ets", "touchAble.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "datePicker.ets", "pageTransition.ets", "AlertDialog.ets", "WebPage.ets", "TabsJsunit.test.ets", "ShapeClippingJsunit.test.ets", "GridSettingsJsunit.test.ets", "index.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "areaChange.ets", "parallelGesture.ets", "timeStamp.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "sharedTransition.ets", "motionPath.ets", "Badge.ets", "BindPopupJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShowDialogOptions", "api_method_name": "buttons", "api_method_all": "buttons?: [Button, Button?, Button?]", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["nfo',\n              buttons: [\n                ", " Info',\n            buttons: [\n              {\n", "ge Info',\n          buttons: [\n            {\n  ", "ialog',\n            buttons: [\n                "], "files": ["ohosPrompt.ets", "systemPrompt.ets", "basicabilityapi.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ActionMenuSuccessResponse", "api_method_all": "interface ActionMenuSuccessResponse {\n\n    \n    index: number;\n  }", "api_method_name": "ActionMenuSuccessResponse", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ActionMenuSuccessResponse", "api_method_name": "index", "api_method_all": "index: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1502, "since": 8, "api_used": "\u662f", "lines": ["       console.info(index.toString())\n       ", "Source([])\n  @State index: number = 1\n  @Stat", "    this.arr.splice(index, 1)\n          conso", " if (eventData.data.index != null) {\n        ", "    let callback = (indexEvent) => {\n        ", ";\n      }\n      let indexEvent = {\n        ev", "t));\n        expect(indexEvent.data.value).as", "    Stepper({\n      index: this.currentIndex\n", "d} from \"deccjsunit/index.ets\";\nimport testsu", ")\n      .index(this.index)\n      .autoPlay(th", "this.currentIndex = index\n    })\n    .align(A", "  events_emitter.on(indexEvent, callback);\n  ", "ngth\n  }\n\n  getData(index: number): any {\n   ", "t} from \"deccjsunit/index.ets\"\nimport router ", "events_emitter.emit(indexEvent, eventData);\n ", "chedCount(2)\n      .index(this.index)\n      .", " \" + JSON.stringify(indexEvent));\n        exp", "ull) {\n        this.index = parseInt(eventDat", "eInt(eventData.data.index);\n      }\n      if ", "(prevIndex: number, index: number) => {\n     ", "nsole.info(this.arr[index] + 'Delete')\n      ", "t} from \"deccjsunit/index.ets\";\nimport router", "')\n      .onChange((index: number) => {\n     ", "     .onItemDelete((index: number) => {\n     ", "   return this.list[index]\n  }\n\n  registerDat", "      }\n        let indexEvent = {\n          "], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "Navigator.ets", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "Row.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "CommonJsunit.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "Swiper.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "systemPrompt.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "EnmusFlexAlignJsunit.test.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "SystemAppJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "sideBar.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "edgeEffect.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "stepper.ets", "svgProps.test.js", "labelProps.test.js", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "Select.ets", "ratingProps.test.js", "MotionPathJsunit.test.ets", "stepperProps.test.js", "marqueeProps.test.js", "Tab.ets", "imageAnimatorProps.test.js", "Stepper.ets", "textPickerDialog.ets", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "popupProps.test.js", "AlphabetIndexer.ets", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "tabs.ets", "BindMenuJsunit.test.ets", "videoProps.test.js", "list.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "DatePickerJsunit.test.ets", "BasicJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "calendar.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "animateMotionProps.test.js", "listItem.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "buttonProps.test.js", "animateProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "ContentStorage.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "AnimationStatusJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "pickerViewProps.test.js", "CircleJsunit.test.ets", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "Constants.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "Grid.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "WebPage.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "polygonProps.test.js", "swiperProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "GridItem.ets", "tspanProps.test.js", "imageProps.test.js", "select.ets", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ActionMenuOptions", "api_method_all": "interface ActionMenuOptions {\n\n    \n    title?: string;\n\n    \n    buttons: [Button, Button?, Button?, Button?, Button?, Button?];\n  }", "api_method_name": "ActionMenuOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ActionMenuOptions", "api_method_name": "title", "api_method_all": "title?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 81, "since": 8, "api_used": "\u662f", "lines": ["       console.log('titleMode')\n      })\n    ", "ialog({\n            title: 'Title Info',\n    ", "\n      console.log(\"title\")\n    })\n  }\n\n  @Bu", "ull) {\n        this.title = eventData.data.ti", " \"<div class=\\\"item-title\\\"><h1>\u6587\u672c\u6d4b\u8bd5(h1\u6d4b\u8bd5)</h", "ull) {\n        this.titleMode = eventData.dat", "nMenu({\n            title: 'Title Info',\n    ", "lder IngredientItem(title:string, name: strin", "       console.log('titleMode:' + titleModel)", "itle: string = 'old title'\n  @State x: number", "  {\n                title: 'title',\n         ", " if (eventData.data.title != null) {\n        ", "            title: 'title',\n                m", "le = eventData.data.title\n      }\n      if (e", "(obj.$attrs.overlay.title).assertEqual(\"new t", "an = false\n  @State titleMode: NavigationTitl", "yExample {\n  @State title: string = 'old titl", "de = eventData.data.titleMode;\n      }\n      ", "      \"title\": \"new title\"\n          }\n      ", "umn() {\n      Text('title')\n        .width(80", "      .subTitle('subtitle')\n      .menus(this", ".onTitleModeChange((titleModel: NavigationTit", "ationMenus1)\n      .titleMode(NavigationTitle", "ata: {\n            \"title\": \"new title\"\n     ", "e).assertEqual(\"old title\");\n      expect(obj", "0 })\n      }\n      .title(this.NavigationTitl", "wDialog({\n          title: 'Title Info',\n    ", "eight('50%')\n      .title('title')\n      .sub", "e).assertEqual(\"new title\");\n      console.in", "enu({\n              title: 'Title Info',\n    ", "gationMenus)\n      .titleMode(NavigationTitle", "      .overlay(this.title,\n              { al", ".show({\n            title: 'Title',\n         ", "onTitleModeChanged((titleModel: NavigationTit", "ogressChange: \" + e.title);\n        })\n      ", "Flex() {\n      Text(title)\n        .fontSize(", "50%')\n      .title('title')\n      .subTitle('", "(obj.$attrs.overlay.title).assertEqual(\"old t"], "files": ["Navigation.ets", "ohosPrompt.ets", "AlertDialog.ets", "WebPage.ets", "systemPrompt.ets", "NavigationJsunit.test.ets", "fontWeight.ets", "index.js", "basicabilityapi.test.js", "menuProps.test.js", "navigation.ets", "overlay.ets", "OverlayJsunit.test.ets", "RichText.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ActionMenuOptions", "api_method_name": "buttons", "api_method_all": "buttons: [Button, Button?, Button?, Button?, Button?, Button?]", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["nfo',\n              buttons: [\n                ", " Info',\n            buttons: [\n              {\n", "ge Info',\n          buttons: [\n            {\n  ", "ialog',\n            buttons: [\n                "], "files": ["ohosPrompt.ets", "systemPrompt.ets", "basicabilityapi.test.js"], "is_white": " ", "desc": " "}]}