{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@internal\\component\\ets\\toggle", "api": [{"api_class_name": "ToggleType", "api_method_all": "declare enum ToggleType {\n  \n  Checkbox,\n\n  \n  Switch,\n\n  \n  Button,\n}", "api_method_name": "ToggleType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 18, "since": 8, "api_used": "\u662f", "lines": ["     Toggle({ type: ToggleType.Switch, isOn: true ", ".type).assertEqual('ToggleType.Button')\n      expe", "eType: ToggleType = ToggleType.Button;\n  @State is", "     Toggle({ type: ToggleType.Checkbox, isOn: tru", ".type).assertEqual('ToggleType.Button');\n      con", "     Toggle({ type: ToggleType.Checkbox, isOn: fal", "     Toggle({ type: ToggleType.Button, isOn: false", ".type).assertEqual('ToggleType.Checkbox')\n      ex", ".type).assertEqual('ToggleType.Switch')\n      expe", " @State toggleType: ToggleType = ToggleType.Button", "     Toggle({ type: ToggleType.Button, isOn: true ", "     Toggle({ type: ToggleType.Switch })\n      }.w", "     Toggle({ type: ToggleType.Switch, isOn: false"], "files": ["ResponseRegion.ets", "Toggle.ets", "ToggleJsunit.test.ets", "toggle.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ToggleType", "api_method_name": "Checkbox", "api_method_all": "Checkbox,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 96, "since": 8, "api_used": "\u662f", "lines": ["true)\n        .key('Checkbox1')\n        .selecte", " console.info('[testCheckboxGroup_200] START');\n", "      console.info('Checkbox3 change is' + value", " Column() {\n        CheckboxGroup({group : 'chec", "   });\n\n    it('testCheckboxGroup_500', 0, async", " console.info('[testCheckboxGroup_100] START');\n", " console.info('[testCheckboxGroup_400] START');\n", "  console.info(\"testCheckboxGroup_100 component ", "   });\n\n    it('testCheckboxGroup_300', 0, async", ".onChange((itemName:CheckboxGroupResult) => {\n  ", "alse)\n        .key('Checkbox2')\n        .selecte", "{\n    console.info('Checkbox page show called');", "  console.info('testCheckboxGroup_300 END');\n   ", "  console.info('testCheckboxGroup_600 END');\n   ", "      console.info(\"Checkbox page state change c", "  console.info('testCheckboxGroup_400 END');\n   ", "{\n    Row() {\n      Checkbox({name: 'checkbox1',", "  console.info('testCheckboxGroup_500 END');\n   ", "         })\n        Checkbox({ name: 'checkbox1'", " console.info('[testCheckboxGroup_500] START');\n", "  console.info('testCheckboxGroup_100 END');\n   ", "y\n@Component\nstruct CheckboxExample {\n  @State s", "  console.info(\"testCheckboxGroup_500 component ", "  console.info(\"testCheckboxGroup_200 component ", " getInspectorByKey('CheckboxGroup');\n      let o", "   });\n\n    it('testCheckboxGroup_200', 0, async", " console.info('[testCheckboxGroup_600] START');\n", "  console.info('testCheckboxGroup_200 END');\n   ", "      console.info('Checkbox2 change is'+ value)", "         })\n        Checkbox({ name: 'checkbox3'", "{\n    console.info(\"Checkbox page stateChangCall", "   });\n\n    it('testCheckboxGroup_600', 0, async", "      console.info('Checkbox1 change is' + value", "e)\n        })\n      Checkbox({name: 'checkbox2',", "      console.info('Checkbox2 change is' + value", "      console.info('Checkbox1 change is'+ value)", "  console.info(\"testCheckboxGroup_400 component ", "21)\n          .key('CheckboxGroup')\n          .o", "         })\n        Checkbox({ name: 'checkbox2'", "  console.info(\"testCheckboxGroup_600 component ", "y\n@Component\nstruct CheckboxGroupExample {\n  @St", "   });\n\n    it('testCheckboxGroup_400', 0, async", " console.info('[testCheckboxGroup_300] START');\n", "   });\n\n    it('testCheckboxGroup_100', 0, async", "  console.info(\"testCheckboxGroup_300 component "], "files": ["ResponseRegion.ets", "checkbox.ets", "CheckboxJsunit.test.ets", "Toggle.ets", "ToggleJsunit.test.ets", "CheckboxGroupJsunit.test.ets", "checkboxGroup.ets", "index.js", "List.test.ets", "inputProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ToggleType", "api_method_name": "Switch", "api_method_all": "Switch,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 115, "since": 8, "api_used": "\u662f", "lines": ["  console.info('testSwitchClickEffectPropMediu", "  console.info('testSwitchClickEffectPropLarge", "  console.info('testSwitchFocusablePropFalse S", " {\n      Text('type:Switch').fontSize(30).font", "rtEqual('ToggleType.Switch')\n      expect(obj.", "* @tc.name      testSwitchClickEffectPropLarge", "     */\n    it('testSwitchClickEffectPropLarge", ";\n\n    \n    it('testSwitchRefPropNone', 0, asy", ";\n\n    \n    it('testSwitchDataProp', 0, async ", "pect(obj.$attrs.dataSwitch).assertEqual(undefi", ";\n\n    \n    it('testSwitchDisabledPropFalse', ", "* @tc.name      testSwitchClickEffectPropNone\n", " */\n        it('testSwitchComponent', 0, async", "     */\n    it('testSwitchClickEffectPropMediu", "  console.info('testSwitchDataPropNone START')", "  console.info('testSwitchDisabledPropFalse ST", "* @tc.name      testSwitchComponent\n         *", ";\n\n    \n    it('testSwitchFocusablePropFalse',", "* @tc.name      testSwitchClickEffectPropMediu", ";\n\n    \n    it('testSwitchRefProp', 0, async f", ";\n\n    \n    it('testSwitchClickEffectPropSmall", "  console.info('testSwitchDisabledPropTrue STA", "  console.info('testSwitchClassPropNone START'", "gify(obj.$attrs.dataSwitch));\n        done();\n", ")\n\n    \n    it('testSwitchIdProp', 0, async fu", "  console.info('testSwitchIdProp START');\n    ", ";\n\n    \n    it('testSwitchFocusablePropNone', ", "({ type: ToggleType.Switch, isOn: true })\n    ", "  console.info('testSwitchRefPropNone START');", ";\n\n    \n    it('testSwitchClassPropNone', 0, a", ";\n\n    \n    it('testSwitchDisabledPropNone', 0", "  console.info('testSwitchDataProp START');\n  ", ";\n\n    \n    it('testSwitchDataPropNone', 0, as", "  console.info('testSwitchClickEffectPropSmall", "  console.info('testSwitchRefProp START');\n   ", "   });\n\n    it('testSwitchClassProp', 0, async", "({ type: ToggleType.Switch })\n      }.width('1", "  console.info('testSwitchDisabledPropNone STA", "ch to Stopwatch' : 'Switch to Count Down')\n   ", "  console.info('testSwitchFocusablePropTrue ST", "({ type: ToggleType.Switch, isOn: false })\n   ", "  console.info('testSwitchFocusablePropNone ST", ";\n\n    \n    it('testSwitchDisabledPropTrue', 0", "  console.info('testSwitchClassProp START');\n ", ";\n\n    \n    it('testSwitchFocusablePropTrue', ", "witchProps] get dataSwitch value is: \" + JSON."], "files": ["switchProps.test.js", "Toggle.ets", "ToggleJsunit.test.ets", "aboutToDisappear.ets", "commonComponentJsApi.test.js", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ToggleType", "api_method_name": "Button", "api_method_all": "Button,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 666, "since": 8, "api_used": "\u662f", "lines": ["    Row() {\n        Button('start').key('butto", "ocused'\n  @State oneButtonColor: string = '#FF", "s.textTwo = 'Second Button onBlur'\n          t", "B'\n        })\n      Button(this.textThree)\n   ", "'\n          this.oneButtonColor = '#AFEEEE'\n  ", " }\n        })\n      Button('start')\n        .k", "C0CB'\n  @State threeButtonColor: string = '#87", " space:20 }){\n      Button(this.textOne)\n     ", "      });\n          Button('update').borderRad", "          this.threeButtonColor = '#FFC0CB'\n  ", "  Row() {\n          Button('pause').borderRadi", "is.textOne = 'First Button onFocus'\n          ", "his.btn1) {\n        Button() {\n          Image", "FF0000'\n  @State twoButtonColor: string = '#FF", "   Column() {\n      Button('click me')\n       ", "  Row() {\n          Button('play').borderRadiu", "s.textTwo = 'Second Button onFocus'\n          ", "olor.Black)\n        Button('confirm')\n        ", "groundColor(this.twoButtonColor)\n        .widt", ".textThree = 'Third Button onBlur'\n          t", "ceAround }) {\n      Button('disable')\n        ", "ey('rotate4')\n      Button(\"get Point\").paddin", "idth('100%')\n\n      Button('edit list')\n      ", "Around }) {\n        Button('cancel')\n         ", "B'\n        })\n      Button(this.textTwo)\n     ", "eBetween }) {\n      Button('Touch')\n        .b", "\n        })\n        Button('once').key('button", "         })\n        Button('preview')\n        ", "\n        })\n        Button('pause').key('butto", "oundColor(this.threeButtonColor)\n        .widt", "groundColor(this.oneButtonColor)\n        .widt", "space:20 }) {\n      Button(this.hoverText)\n   ", "  Row() {\n          Button('cancel').borderRad", "'\n          this.oneButtonColor = '#FFC0CB'\n  ", "    Row() {\n        Button('reverse').key('but", "   Column() {\n      Button(this.changeAppear)\n", "      });\n          Button('finish').borderRad", ".opacity(0.4)\n      Button(this.text)\n        ", "\n        })\n        Button('stop').key('button", "      });\n          Button('reverse').borderRa", "'\n          this.twoButtonColor = '#FFC0CB'\n  ", "is.textOne = 'First Button onBlur'\n          t", ".textThree = 'Third Button onFocus'\n          ", "'\n          this.twoButtonColor = '#AFEEEE'\n  ", "\n        })\n        Button('iteration').key('b", "          this.threeButtonColor = '#AFEEEE'\n  ", "n.Center,}) {\n      Button(this.show).width(80", ".Blue\n  @State eventButton: string = ''\n  @Sta", "Around }) {\n        Button('next')\n          ."], "files": ["ohosPrompt.ets", "systemRouterA.ets", "configuration.ets", "video.ets", "placement.ets", "playMode.ets", "Navigation.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "OhosRouterJsnuit.test.ets", "marquee.ets", "textTimer.ets", "Swiper.ets", "Divider.ets", "transition.ets", "textInput.ets", "systemPrompt.ets", "LinkJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "focus.ets", "touch.ets", "XComponentPage.ets", "ButtonJsunit.test.ets", "bindMenu.ets", "swiper.ets", "sideBar.ets", "toggle.ets", "Sidebar.ets", "Badge.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "animatorOption.ets", "AppStorageJsunit.test.ets", "edgeEffect.ets", "Marquee.ets", "Tab.ets", "PatternLock.ets", "textPickerDialog.ets", "enable.ets", "PieceCode.ets", "badge.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "textClock.ets", "list.ets", "AppStorage.ets", "List.ets", "GridContainer.ets", "direction.ets", "Video.ets", "Button.ets", "imageAnimator.ets", "bindPopup.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "mouseEvent.ets", "ohosMatrix4.ets", "appear.ets", "animationStatus.ets", "commonComponentJsApi.test.js", "fillMode.ets", "FormComponentPage.ets", "AlertDialog.ets", "WebPage.ets", "inputProps.test.js", "index.js", "ohosRouterA.ets", "Link.ets", "timeStamp.ets", "Toggle.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "Calendar.ets", "motionPath.ets", "search.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ToggleInterface", "api_method_all": "interface ToggleInterface {\n  \n  (options: { type: ToggleType; isOn?: boolean }): ToggleAttribute;\n}", "api_method_name": "ToggleInterface", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ToggleInterface", "api_method_name": "options", "api_method_all": "(options: { type: ToggleType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 791, "since": 8, "api_used": "\u662f", "lines": ["= await router.push(options);\n          await U", " start\");\n      let options = {\n        uri: 'p", "(obj.$attrs.overlay.options.offset.x).assertEqu", "(obj.$attrs.overlay.options.align).assertEqual(", "(obj.$attrs.overlay.options.offset.y).assertEqu", " (done) {\n      let options = {\n        uri: 'p"], "files": ["listItemGroupProps.test.js", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "EnmusFlexAlignJsunit.test.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "svgProps.test.js", "labelProps.test.js", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "ratingProps.test.js", "stepperProps.test.js", "MotionPathJsunit.test.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "popupProps.test.js", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "gridColProps.test.js", "buttonProps.test.js", "animateProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "pickerViewProps.test.js", "CircleJsunit.test.ets", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "swiperProps.test.js", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "polygonProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ToggleInterface", "api_method_name": "isOn", "api_method_all": "isOn?: boolean }): ToggleAttribute", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 45, "since": 8, "api_used": "\u662f", "lines": ["oggleType.Checkbox, isOn: true })\n        .s", "  expect(obj.$attrs.isOn).assertEqual('false", " if (eventData.data.isOn != null) {\n        ", "ata: {\n            \"isOn\": -1,\n          }\n ", "oggleType.Checkbox, isOn: false })\n         ", " ToggleType.Button, isOn: true }) {\n        ", "\"status changed \" + isOn)\n        })\n      }", "xpect(objNew.$attrs.isOn).assertEqual('true'", "ata: {\n            \"isOn\": 'aaa',\n          ", " ToggleType.Button, isOn: false }) {\n       ", "\"status changed \" + isOn)\n        })\n\n      ", "On = eventData.data.isOn;\n      }\n    }\n  }\n", "omponent status:' + isOn)\n        })\n      }", "xpect(objNew.$attrs.isOn).assertEqual('false", "pe.Button;\n  @State isOn: boolean = false;\n\n", "ull) {\n        this.isOn = eventData.data.is", " ToggleType.Switch, isOn: true })\n          ", "\n        .onChange((isOn: boolean) => {\n    ", "gleType, isOn: this.isOn }) {\n          Text", "omponent status:' + isOn)\n        })\n    }\n ", "e: this.toggleType, isOn: this.isOn }) {\n   ", " ToggleType.Switch, isOn: false })\n         ", "\"status changed \" + isOn)\n          })\n     ", "oggleType.Checkbox, isOn: true })\n          ", "ata: {\n            \"isOn\": true,\n          }", "omponent status:' + isOn)\n        })\n\n      ", "         .onChange((isOn: boolean) => {\n    ", "  expect(obj.$attrs.isOn).assertEqual('true'"], "files": ["ResponseRegion.ets", "Toggle.ets", "toggle.ets", "ToggleJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ToggleAttribute", "api_method_all": "declare class ToggleAttribute extends CommonMethod<ToggleAttribute> {\n  \n  onChange(callback: (isOn: boolean) => void): ToggleAttribute;\n\n  \n  selectedColor(value: ResourceColor): ToggleAttribute;\n\n  \n  switchPointColor(color: ResourceColor): ToggleAttribute;\n}", "api_method_name": "ToggleAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ToggleAttribute", "api_method_name": "onChangecallback", "api_method_all": "onChange(callback: (isOn: boolean) => void): ToggleAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ToggleAttribute", "api_method_name": "onChangecallback", "api_method_all": "onChange(callback: (isOn: boolean) => void): ToggleAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ToggleAttribute", "api_method_name": "selectedColor", "api_method_all": "selectedColor(value: ResourceColor): ToggleAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 36, "since": 8, "api_used": "\u662f", "lines": ["xpect(objNew.$attrs.selectedColor).assertEqual('#FF00", "cted: 0 })\n        .selectedColor(0xffffff)\n        .", "t: 50 })\n          .selectedColor('#FFFF0000')\n      ", "r.Black)\n          .selectedColor(0xCCCCCC)\n         ", "false })\n          .selectedColor('#FFFF0000')\n      ", "t(false)\n          .selectedColor(0x39a2db)\n         ", "or.Gray)\n          .selectedColor(Color.Blue)\n       ", "\n        }\n        .selectedColor(0x39a2db)\n        .", " if (eventData.data.selectedColor != null) {\n        ", "ata: {\n            \"selectedColor\": '-a',\n          }", ".selectedColor(this.selectedColor)\n        .onChange(", "or = eventData.data.selectedColor;\n      }\n      if (", ".Gray)\n            .selectedColor(Color.Blue)\n       ", "ata: {\n            \"selectedColor\": '#330A59F8',\n    ", "FF0000')\n          .selectedColor('#FF0000FF')\n      ", "('toggle')\n        .selectedColor(this.selectedColor)", "Black)\n            .selectedColor(0xCCCCCC)\n         ", "heckbox1')\n        .selectedColor(0xed6f21)\n        .", "ata: {\n            \"selectedColor\": '-0.1',\n         ", "  expect(obj.$attrs.selectedColor).assertEqual('#330A", "  expect(obj.$attrs.selectedColor).assertEqual('#FFFF", "FF00DDDD')\n        .selectedColor(0xffffff)\n        .", "is.color2)\n        .selectedColor(this.color3)\n      ", "Group'})\n          .selectedColor(0xed6f21)\n         ", "ull) {\n        this.selectedColor = eventData.data.se", "eExample {\n  @State selectedColor: Color = '#330A59F7", "(8)\n        Button('selectedColor').onClick(() => {\n ", "xpect(objNew.$attrs.selectedColor).assertEqual('#330A", "heckbox2')\n        .selectedColor(0x39a2db)\n        .", "ct(true)\n          .selectedColor(0x39a2db)\n         ", "lor.Red)\n          .selectedColor(Color.Blue)\n       ", "n: true })\n        .selectedColor(0x39a2db)\n        .", " true })\n          .selectedColor('#FFFF0000')\n      "], "files": ["ResponseRegion.ets", "checkbox.ets", "Toggle.ets", "AlphabetIndexer.ets", "slider.ets", "ToggleJsunit.test.ets", "PatternLock.ets", "toggle.ets", "checkboxGroup.ets", "Slider.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ToggleAttribute", "api_method_name": "switchPointColor", "api_method_all": "switchPointColor(color: ResourceColor): ToggleAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 0, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.switchPointColor).assertEqual('#FF80", "ght: 50 })\n        .switchPointColor('#FF808080')\n      ", "t: 50 })\n          .switchPointColor('#FF808080')\n      "], "files": ["Toggle.ets", "ToggleJsunit.test.ets"], "is_white": " ", "desc": " "}]}