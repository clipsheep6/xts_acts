{"subsystem_ch": "\u5206\u5e03\u5f0f\u6570\u636e\u7ba1\u7406\u5b50\u7cfb\u7edf", "subsystem_en": "distributeddatamgr", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.data.dataAbility", "api": [{"api_class_name": "dataAbility", "api_method_all": "declare namespace dataAbility {\n    \n    function createRdbPredicates(name: string, dataAbilityPredicates: DataAbilityPredicates): rdb.RdbPredicates;\n\n    \n    class DataAbilityPredicates {\n        \n        equalTo(field: string, value: ValueType): DataAbilityPredicates;\n\n        \n        notEqualTo(field: string, value: ValueType): DataAbilityPredicates;\n\n        \n        beginWrap(): DataAbilityPredicates;\n\n        \n        endWrap(): DataAbilityPredicates;\n\n        \n        or(): DataAbilityPredicates;\n\n        \n        and(): DataAbilityPredicates;\n\n        \n        contains(field: string, value: string): DataAbilityPredicates;\n\n        \n        beginsWith(field: string, value: string): DataAbilityPredicates;\n\n        \n        endsWith(field: string, value: string): DataAbilityPredicates;\n\n        \n        isNull(field: string): DataAbilityPredicates;\n\n        \n        isNotNull(field: string): DataAbilityPredicates;\n\n        \n        like(field: string, value: string): DataAbilityPredicates;\n\n        \n        glob(field: string, value: string): DataAbilityPredicates;\n\n        \n        between(field: string, low: ValueType, high: ValueType): DataAbilityPredicates;\n\n        \n        notBetween(field: string, low: ValueType, high: ValueType): DataAbilityPredicates;\n\n        \n        greaterThan(field: string, value: ValueType): DataAbilityPredicates;\n\n        \n        lessThan(field: string, value: ValueType): DataAbilityPredicates;\n\n        \n        greaterThanOrEqualTo(field: string, value: ValueType): DataAbilityPredicates;\n\n        \n        lessThanOrEqualTo(field: string, value: ValueType): DataAbilityPredicates;\n\n        \n        orderByAsc(field: string): DataAbilityPredicates;\n\n        \n        orderByDesc(field: string): DataAbilityPredicates;\n\n        \n        distinct(): DataAbilityPredicates;\n\n        \n        limitAs(value: number): DataAbilityPredicates;\n\n        \n        offsetAs(rowOffset: number): DataAbilityPredicates;\n\n        \n        groupBy(fields: Array<string>): DataAbilityPredicates;\n\n        \n        indexedBy(field: string): DataAbilityPredicates;\n\n        \n        in(field: string, value: Array<ValueType>): DataAbilityPredicates;\n\n        \n        notIn(field: string, value: Array<ValueType>): DataAbilityPredicates;\n    }\n    \n    type ValueType = number | string | boolean;\n}", "api_method_name": "dataAbility", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 586, "since": 0, "api_used": "\u662f", "lines": ["   let predicates = dataAbility.createRdbPredicates", "ates(\"AllDataType\", dataAbilityPredicates);\n\n      ", "4775807;\n\ndescribe('dataAbilityPredicatesTest', fun", "  {\n            let dataAbilityPredicates = await n", "ates();\n            dataAbilityPredicates.equalTo(\"", "dicates = await new dataAbility.DataAbilityPredicat", "ates();\n            dataAbilityPredicates.notEqualT", "s.data.rdb';\nimport dataAbility from '@ohos.data.da", "ty from '@ohos.data.dataAbility';\n\nconst TAG = '[RD"], "files": ["DataAbilityPredicatesJsunit.test.js", "DataShareJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "dataAbility", "api_method_name": "createRdbPredicates", "api_method_all": "function createRdbPredicates(name: string, dataAbilityPredicates: DataAbilityPredicates): rdb.RdbPredicates;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 114, "since": 7, "api_used": "\u662f", "lines": ["cates = dataAbility.createRdbPredicates(\"AllDataType\", data"], "files": ["DataAbilityPredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_all": "class DataAbilityPredicates {\n        \n        equalTo(field: string, value: ValueType): DataAbilityPredicates;\n\n        \n        notEqualTo(field: string, value: ValueType): DataAbilityPredicates;\n\n        \n        beginWrap(): DataAbilityPredicates;\n\n        \n        endWrap(): DataAbilityPredicates;\n\n        \n        or(): DataAbilityPredicates;\n\n        \n        and(): DataAbilityPredicates;\n\n        \n        contains(field: string, value: string): DataAbilityPredicates;\n\n        \n        beginsWith(field: string, value: string): DataAbilityPredicates;\n\n        \n        endsWith(field: string, value: string): DataAbilityPredicates;\n\n        \n        isNull(field: string): DataAbilityPredicates;\n\n        \n        isNotNull(field: string): DataAbilityPredicates;\n\n        \n        like(field: string, value: string): DataAbilityPredicates;\n\n        \n        glob(field: string, value: string): DataAbilityPredicates;\n\n        \n        between(field: string, low: ValueType, high: ValueType): DataAbilityPredicates;\n\n        \n        notBetween(field: string, low: ValueType, high: ValueType): DataAbilityPredicates;\n\n        \n        greaterThan(field: string, value: ValueType): DataAbilityPredicates;\n\n        \n        lessThan(field: string, value: ValueType): DataAbilityPredicates;\n\n        \n        greaterThanOrEqualTo(field: string, value: ValueType): DataAbilityPredicates;\n\n        \n        lessThanOrEqualTo(field: string, value: ValueType): DataAbilityPredicates;\n\n        \n        orderByAsc(field: string): DataAbilityPredicates;\n\n        \n        orderByDesc(field: string): DataAbilityPredicates;\n\n        \n        distinct(): DataAbilityPredicates;\n\n        \n        limitAs(value: number): DataAbilityPredicates;\n\n        \n        offsetAs(rowOffset: number): DataAbilityPredicates;\n\n        \n        groupBy(fields: Array<string>): DataAbilityPredicates;\n\n        \n        indexedBy(field: string): DataAbilityPredicates;\n\n        \n        in(field: string, value: Array<ValueType>): DataAbilityPredicates;\n\n        \n        notIn(field: string, value: Array<ValueType>): DataAbilityPredicates;\n    }", "api_method_name": "DataAbilityPredicates", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 213, "since": 7, "api_used": "\u662f", "lines": ["DM_AppDataFWK_JSRDB_DataAbilityPredicates_0051\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0057\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0043\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0033\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0031\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0032\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0060\n     * @tc.des", "ait new dataAbility.DataAbilityPredicates();\n        dataAbil", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0040\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0041\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0027\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0052\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0030\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0056\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0042\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0055\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0050\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0053\n     * @tc.des", "DM_AppDataFWK_JSRDB_DataAbilityPredicates_0054\n     * @tc.des", "ait new dataAbility.DataAbilityPredicates();\n            data"], "files": ["DataAbilityPredicatesJsunit.test.js", "DataShareJsunit.test.js", "List.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "equalTo", "api_method_all": "equalTo(field: string, value: ValueType): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 122, "since": 7, "api_used": "\u662f", "lines": ["         predicates.equalTo('age', 28)\n        ", "         predicates.equalTo(\"stringValue\", \"ABC", "()\n                .equalTo(\"characterValue\", '", "         predicates.equalTo('name', 'zhangsan')", "eValue\", -128).or().equalTo(\"byteValue\", 1);\n  ", "\")\n                .equalTo(\"characterValue\", '", "         predicates.equalTo('name', 'lisi')\n   ", "taAbilityPredicates.equalTo(\"integerValue\", 1);", "         predicates.equalTo(\"shortValue\", -3276", "()\n                .equalTo(\"integerValue\", 1);", "         predicates.equalTo(\"longValue\", 1);\n  ", "taAbilityPredicates.equalTo(\"shortValue\", -3276", "\n        predicates.equalTo(\"name\", \"zhangsan\")", "          predicate.equalTo(\"id\", 1);\n         ", "taAbilityPredicates.equalTo(\"longValue\", 1);\n  ", "         predicates.equalTo(\"booleanValue\", tru", "taAbilityPredicates.equalTo(\"booleanValue\", tru", "         predicates.equalTo(\"byteValue\", -128).", "         predicates.equalTo(\"floatValue\", -0.12", "         predicates.equalTo(\"doubleValue\", DOUB", "         predicates.equalTo(\"integerValue\", 1);", "taAbilityPredicates.equalTo(\"byteValue\", -128).", "HIJKLMN\").or().or().equalTo(\"integerValue\", 1);", "()\n                .equalTo(\"integerValue\", 214", "taAbilityPredicates.equalTo(\"doubleValue\", DOUB", "taAbilityPredicates.equalTo(\"stringValue\", \"ABC", "IJKLMN\").or().and().equalTo(\"integerValue\", 1);", "()\n                .equalTo(\"integerValue\", 1)\n", "         predicates.equalTo('aaa id', 1)\n      ", "taAbilityPredicates.equalTo(\"floatValue\", -0.12"], "files": ["RdbstorePredicatesJsunit.test.js", "RdbstoreUpdateJsunit.test.js", "DataAbilityPredicatesJsunit.test.js", "RdbstoreDeleteJsunit.test.js", "RdbstoreInsertJsunit.test.js", "RdbStoreResultSetJsunit.test.js", "RdbStoreDistributedJsunit.test.js", "QueryJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "notEqualTo", "api_method_all": "notEqualTo(field: string, value: ValueType): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 59, "since": 7, "api_used": "\u662f", "lines": ["taAbilityPredicates.notEqualTo(\"shortValue\", -3276", "@tc.desc predicates notEqualTo normal test\n     */", "         predicates.notEqualTo(\"floatValue\", -0.12", ";\n            query.notEqualTo(\"key\", 0);\n        ", "taAbilityPredicates.notEqualTo(\"floatValue\", -0.12", "         predicates.notEqualTo(\"doubleValue\", DOUB", "taAbilityPredicates.notEqualTo(\"stringValue\", \"ABC", "         predicates.notEqualTo(\"integerValue\", 1);", ";\n            query.notEqualTo(\"key2\", 5.0);\n     ", "         predicates.notEqualTo(\"shortValue\", -3276", "         predicates.notEqualTo(\"stringValue\", \"ABC", "taAbilityPredicates.notEqualTo(\"byteValue\", -128);", "alTo(\"key2\", \"str\").notEqualTo(\"key3\", false);\n   ", "lTo(\"key\", 0).and().notEqualTo(\"key\", 1).and();\n  ", ";\n            query.notEqualTo(\"key\", \"V0\").orderB", ";\n            query.notEqualTo(\"key\", false).order", "         predicates.notEqualTo(\"booleanValue\", tru", "@tc.name predicates notEqualTo normal test\n     * ", "taAbilityPredicates.notEqualTo(\"byteValue\", 1);\n  ", ";\n            query.notEqualTo(\"key3\", false);\n   ", "r(\"key\", [1, 7, 8]).notEqualTo(\"kkk\", 5);\n        ", "[\"v1\", \"v2\", \"v3\"]).notEqualTo(\"kkk\", \"v3\");\n     ", "taAbilityPredicates.notEqualTo(\"doubleValue\", DOUB", ";\n            query.notEqualTo(\"key1\", \"value\", \"t", "query.isNull(\"key\").notEqualTo(\"key1\", 4).isNull(\"", "taAbilityPredicates.notEqualTo(\"integerValue\", 1);", ";\n            query.notEqualTo(\"key4\", \"string\");\n", "taAbilityPredicates.notEqualTo(\"booleanValue\", tru", ";\n            query.notEqualTo(\"key\", 0).or(1).not", ";\n            query.notEqualTo(\"key2\", NaN);\n     ", ";\n            query.notEqualTo(\"key\", \"v1\");\n     ", ";\n            query.notEqualTo(\"key\", 0).and().not", ";\n            query.notEqualTo(\"key\", 5);\n        ", ";\n            query.notEqualTo(\"key0\", 5).equalTo(", "         predicates.notEqualTo(\"longValue\", 1);\n  ", "taAbilityPredicates.notEqualTo(\"longValue\", 1);\n  ", "         predicates.notEqualTo(\"byteValue\", -128);", ";\n            query.notEqualTo(\"key\", 0).and(1).no", ";\n            query.notEqualTo(\"key\", 0).or();\n   ", ";\n            query.notEqualTo(\"key1\", 5);\n       ", ".equalTo(\"key1\", 5).notEqualTo(\"key2\", \"str\").notE", "         predicates.notEqualTo(\"byteValue\", 1);\n  "], "files": ["DataAbilityPredicatesJsunit.test.js", "QueryJsunit.test.js", "RdbstorePredicatesJsunit.test.js", "SchemaJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "beginWrap", "api_method_all": "beginWrap(): DataAbilityPredicates;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 30, "since": 7, "api_used": "\u662f", "lines": ["@tc.name predicates beginWrap normal test\n     * ", "@tc.desc predicates beginWrap normal test\n     */", "\")\n                .beginWrap()\n                ."], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "endWrap", "api_method_all": "endWrap(): DataAbilityPredicates;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["7)\n                .endWrap();\n            let ", "')\n                .endWrap();\n            let "], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "or", "api_method_all": "or(): DataAbilityPredicates;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 6347, "since": 7, "api_used": "\u662f", "lines": ["", "\n                \"shortValue\": -32768,\n   ", "ribe, beforeAll, beforeEach, afterEach, af", "ait dataRdb.getRdbStore(STORE_CONFIG, 1);\n", "result = await rdbStore.query(predicates);", "NTEGER , \"\n+ \"primShortValue INTEGER , pri", "ist.test')\n        core.execute()\n    },\n ", "sh')\n        const core = Core.getInstance", "unction () {\n    beforeAll(async function ", "rimCharValue TEXT, `order` INTEGER);\";\n\nco", "eccjsunit/index'\nimport dataRdb from '@oho", "e/regenerator')\n\nexport default {\n    data", "st configService = core.getDefaultService(", "\n                \"shortValue\": 1,\n        ", "mport {describe, beforeAll, beforeEach, af", "         await rdbStore.insert(\"AllDataTyp", "@ohos.data.rdb';\nimport dataAbility from '", "ngValue INTEGER , shortValue INTEGER , boo", "tes.db\",\n}\nvar rdbStore = undefined;\nvar D", "= this.$t('strings.world');\n    },\n    onS", "sole.info(TAG + 'beforeEach')\n    })\n\n    ", "sole.info(TAG + 'beforeAll')\n        rdbSt", "\n        await rdbStore.executeSql(CREATE_", "        })\n        core.addService('expect", "ectExtend)\n        core.init()\n        con", "\n                \"shortValue\": 32767,\n    ", "(\"byteValue\", -128).or().equalTo(\"byteValu", "      const core = Core.getInstance()\n    ", "3();\n    })\n\n    beforeEach(function () {\n", "el/runtime/regenerator')\n\nexport default {", "eAll')\n        rdbStore = await dataRdb.ge", "\ninjectRef.regeneratorRuntime = require('@", "edicates.equalTo(\"shortValue\", -32768.0);\n", "rAll')\n        rdbStore = null\n        awa", " dataRdb.deleteRdbStore(\"Predicates.db\");\n"], "files": ["RdbstorePredicatesJsunit.test.js", "List.test.js", "RdbstoreRdbstoreJsunit.test.js", "StorageCallBackJsunit.test.js", "FieldNodeJsunit.test.js", "RdbstoreDeleteJsunit.test.js", "SingleKvStoreEnumJsunit.test.js", "RdbStoreDistributedJsunit.test.js", "KvStoreResultSetJsunit.test.js", "RdbstoreUpdateJsunit.test.js", "DeviceKvStoreCallbackJsunit.test.js", "app.js", "RdbStoreResultSetJsunit.test.js", "KvManagerPromiseJsunit.test.js", "QueryJsunit.test.js", "StoragePromiseJsunit.test.js", "DataAbilityPredicatesJsunit.test.js", "RdbstoreInsertJsunit.test.js", "SchemaJsunit.test.js", "index.js", "DataShareJsunit.test.js", "DeviceKvStorePromiseJsunit.test.js", "StorageSyncJsunit.test.js", "RdbstoreTransactionJsunit.test.js", "SingleKvStorePromiseJsunit.test.js", "ObjectStoreJsunit.test.js", "SingleKvStoreCallbackJsunit.test.js", "StorageHelperJsunit.test.js", "RdbstorePredicatesJoinJsunit.test.js", "RdbstoreStoreExcuteSqlJsunit.test.js", "KvManagerCallbackJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "and", "api_method_all": "and(): DataAbilityPredicates;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 36, "since": 7, "api_used": "\u662f", "lines": ["CDEFGHIJKLMN\").or().and().equalTo(\"integerV", " * @tc.desc the min and max value test with", "TAG + \"set employee and product to be distr", "   * @tc.desc begin and end with ? by glob.", ".equalTo(\"key1\", 0).and().equalTo(\"key2\", \"", "@tc.desc the common and min value test with", "otEqualTo(\"key\", 0).and().notEqualTo(\"key\",", ";\n            query.and();\n            quer", "otEqualTo(\"key\", 0).and(1).notInNumber(\"key", "otEqualTo(\"key\", 1).and();\n            expe", "request\" + \" with \\\"and\\\" or use or() befor", "\")\n                .and()\n                .", "@tc.desc predicates and normal test\n     */", "@tc.desc the common and max value test with", "@tc.name predicates and normal test\n     * ", "y.isNotNull(\"key1\").and().notEqualTo(\"key1\"", "   * @tc.desc begin and end with * by glob."], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbStoreDistributedJsunit.test.js", "RdbstorePredicatesJsunit.test.js", "QueryJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "contains", "api_method_all": "contains(field: string, value: string): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["taAbilityPredicates.contains(\"characterValue\", \"", "\n        predicates.contains(\"characterValue\", \"", "@tc.desc predicates contains normal test\n     */", "\n        predicates.contains(\"stringValue\", \"DEF", "@tc.name predicates contains normal test\n     * ", "taAbilityPredicates.contains(\"stringValue\", \"DEF"], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "beginsWith", "api_method_all": "beginsWith(field: string, value: string): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["@tc.desc predicates beginsWith normal test\n     */", "taAbilityPredicates.beginsWith(\"characterValue\", \"", "taAbilityPredicates.beginsWith(\"stringValue\", \"ABC", "\n        predicates.beginsWith(\"characterValue\", \"", "\n        predicates.beginsWith(\"stringValue\", \"ABC", "@tc.name predicates beginsWith normal test\n     * "], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "endsWith", "api_method_all": "endsWith(field: string, value: string): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["\n        predicates.endsWith(\"characterValue\", \"", "taAbilityPredicates.endsWith(\"stringValue\", \"LMN", "taAbilityPredicates.endsWith(\"characterValue\", \"", "@tc.name predicates endsWith normal test\n     * ", "@tc.desc predicates endsWith normal test\n     */", "\n        predicates.endsWith(\"stringValue\", \"LMN"], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "isNull", "api_method_all": "isNull(field: string): DataAbilityPredicates;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 30, "since": 7, "api_used": "\u662f", "lines": ["taAbilityPredicates.isNull(\"longValue\");\n     ", " @tc.desc resultSet isNull normal test\n     */", ";\n            query.isNull(\"key2\");\n          ", "\n        predicates.isNull(\"stringValue\");\n   ", "tEqualTo(\"key1\", 4).isNull(\"key2\");\n          ", " @tc.name resultSet isNull normal test\n     * ", "taAbilityPredicates.isNull(\"stringValue\");\n   ", ";\n            query.isNull(0);\n            con", "@tc.desc predicates isNull normal test\n     */", ";\n            query.isNull(\"key\").notEqualTo(\"", "\n        predicates.isNull(\"primLongValue\");\n ", ";\n            query.isNull(\"key\");\n           ", ";\n            query.isNull(\"key\", 0);\n        ", "taAbilityPredicates.isNull(\"primLongValue\");\n ", "taAbilityPredicates.isNull(\"stringValueX\");\n  ", "\n        predicates.isNull(\"longValue\");\n     ", "@tc.name predicates isNull normal test\n     * ", "\n        predicates.isNull(\"stringValueX\");\n  "], "files": ["DataAbilityPredicatesJsunit.test.js", "QueryJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "isNotNull", "api_method_all": "isNotNull(field: string): DataAbilityPredicates;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 31, "since": 7, "api_used": "\u662f", "lines": ["\n        predicates.isNotNull(\"primLongValue\");\n ", "\n        predicates.isNotNull(\"longValue\");\n     ", "@tc.name predicates isNotNull normal test\n     * ", "taAbilityPredicates.isNotNull(\"longValue\");\n     ", "\n        predicates.isNotNull(\"stringValueX\");\n  ", ";\n            query.isNotNull(1);\n            con", ";\n            query.isNotNull(\"key1\").and().notEq", ";\n            query.isNotNull(\"key\");\n           ", "\n        predicates.isNotNull(\"stringValue\");\n   ", "@tc.desc predicates isNotNull normal test\n     */", "taAbilityPredicates.isNotNull(\"stringValueX\");\n  ", ";\n            query.isNotNull(\"key2\", \"any\");\n   ", "taAbilityPredicates.isNotNull(\"stringValue\");\n   ", "taAbilityPredicates.isNotNull(\"primLongValue\");\n ", ";\n            query.isNotNull(\"$.name\");\n        "], "files": ["DataAbilityPredicatesJsunit.test.js", "QueryJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "like", "api_method_all": "like(field: string, value: string): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 78, "since": 7, "api_used": "\u662f", "lines": ["\n        predicates.like(\"stringValue\", \"\u4e2d\")", "@tc.name predicates like normal test\n     * ", "taAbilityPredicates.like(\"stringValue\", \"%LM", "@tc.desc predicates like normal test\n     */", "\n        predicates.like(\"stringValue\", \"ABC", "taAbilityPredicates.like(\"stringValue\", \"ABC", "\n        predicates.like(\"stringValue\", \"%LM", "\n        predicates.like(\"characterValue\", \"", "taAbilityPredicates.like(\"stringValue\", \"\u4e2d\")", "taAbilityPredicates.like(\"characterValue\", \""], "files": ["DataAbilityPredicatesJsunit.test.js", "QueryJsunit.test.js", "RdbstorePredicatesJsunit.test.js", "SchemaJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "glob", "api_method_all": "glob(field: string, value: string): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 30, "since": 7, "api_used": "\u662f", "lines": ["esc begin with * by glob.\n     */\n    it('te", "totypeOf(global) || global\ninjectRef.regener", "ject.getPrototypeOf(global) || global\ninject", "taAbilityPredicates.glob(\"stringValue\", \"*LM", ".desc end with ? by glob.\n     */\n    it('te", "n and end with ? by glob.\n     */\n    it('te", "taAbilityPredicates.glob(\"stringValue\", \"ABC", "taAbilityPredicates.glob(\"stringValue\", \"*FG", "         predicates.glob(\"stringValue\", \"*LM", "         predicates.glob(\"stringValue\", \"?BC", "esc begin with ? by glob.\n     */\n    it('te", "         predicates.glob(\"stringValue\", \"ABC", "taAbilityPredicates.glob(\"stringValue\", \"?BC", "         predicates.glob(\"stringValue\", \"*FG", "n and end with * by glob.\n     */\n    it('te"], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "between", "api_method_all": "between(field: string, low: ValueType, high: ValueType): DataAbilityPredicates;", "api_type": "", "api_args_count": 3, "api_level": 11, "api_used_count": 48, "since": 7, "api_used": "\u662f", "lines": ["taAbilityPredicates.between(\"doubleValue\", DOUB", "         predicates.between(\"longValue\", 2, -1)", "taAbilityPredicates.between(\"integerValue\", 1, ", "         predicates.between(\"integerValue\", 1, ", "@tc.desc predicates between normal test\n     */", "@tc.name predicates between normal test\n     * ", "taAbilityPredicates.between(\"doubleValue\", 0.0,", "         predicates.between(\"stringValue\", \"ABB", "         predicates.between(\"doubleValue\", 0.0,", "taAbilityPredicates.between(\"longValue\", 0, 2);", "taAbilityPredicates.between(\"longValue\", 2, -1)", "taAbilityPredicates.between(\"integerValue\", 0, ", "         predicates.between(\"integerValue\", 0, ", "taAbilityPredicates.between(\"stringValue\", \"ABB", "         predicates.between(\"doubleValue\", DOUB", "         predicates.between(\"longValue\", 0, 2);"], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "notBetween", "api_method_all": "notBetween(field: string, low: ValueType, high: ValueType): DataAbilityPredicates;", "api_type": "", "api_args_count": 3, "api_level": 11, "api_used_count": 16, "since": 7, "api_used": "\u662f", "lines": ["         predicates.notBetween(\"integerValue\", 0, ", "taAbilityPredicates.notBetween(\"integerValue\", 0, ", "taAbilityPredicates.notBetween(\"longValue\", 0, 2);", "         predicates.notBetween(\"doubleValue\", 0.0,", "         predicates.notBetween(\"longValue\", 0, 2);", "t double value with notBetween.\n     */\n    it('te", "         predicates.notBetween(\"stringValue\", \"ABB", "taAbilityPredicates.notBetween(\"stringValue\", \"ABB", "est long value with notBetween.\n     */\n    it('te", "taAbilityPredicates.notBetween(\"doubleValue\", 0.0,", " integer value with notBetween.\n     */\n    it('te", "t string value with notBetween.\n     */\n    it('te"], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "greaterThan", "api_method_all": "greaterThan(field: string, value: ValueType): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 92, "since": 7, "api_used": "\u662f", "lines": ["taAbilityPredicates.greaterThan(\"longValue\", -999);", "taAbilityPredicates.greaterThan(\"integerValue\", -99", "         predicates.greaterThan(\"stringValue\", \"ABC", "         predicates.greaterThan(\"integerValue\", 1);", "taAbilityPredicates.greaterThanOrEqualTo(\"longValue", "taAbilityPredicates.greaterThan(\"doubleValue\", 999.", "taAbilityPredicates.greaterThan(\"stringValue\", \"ABC", "@tc.name predicates greaterThan normal test\n     * ", "taAbilityPredicates.greaterThanOrEqualTo(\"stringVal", "taAbilityPredicates.greaterThan(\"doubleValue\", 0.0)", "taAbilityPredicates.greaterThanOrEqualTo(\"doubleVal", "taAbilityPredicates.greaterThanOrEqualTo(\"integerVa", "         predicates.greaterThan(\"doubleValue\", 0.0)", "taAbilityPredicates.greaterThan(\"stringValue\", \"ZZZ", "@tc.desc predicates greaterThanOrEqualTo normal tes", "@tc.name predicates greaterThanOrEqualTo normal tes", "         predicates.greaterThan(\"longValue\", 1);\n  ", "taAbilityPredicates.greaterThan(\"longValue\", 1);\n  ", "@tc.desc predicates greaterThan normal test\n     */", "taAbilityPredicates.greaterThan(\"integerValue\", 1);"], "files": ["DataAbilityPredicatesJsunit.test.js", "QueryJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "lessThan", "api_method_all": "lessThan(field: string, value: ValueType): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 92, "since": 7, "api_used": "\u662f", "lines": ["taAbilityPredicates.lessThan(\"longValue\", -92233", "taAbilityPredicates.lessThan(\"longValue\", 1);\n  ", "taAbilityPredicates.lessThan(\"doubleValue\", 1.0)", "taAbilityPredicates.lessThanOrEqualTo(\"longValue", "         predicates.lessThan(\"doubleValue\", 0.0)", "taAbilityPredicates.lessThan(\"integerValue\", 1);", "         predicates.lessThan(\"integerValue\", 1);", "         predicates.lessThan(\"longValue\", 1);\n  ", "@tc.desc predicates lessThanOrEqualTo normal tes", "taAbilityPredicates.lessThanOrEqualTo(\"stringVal", "@tc.name predicates lessThanOrEqualTo normal tes", "taAbilityPredicates.lessThan(\"stringValue\", \"ABD", "         predicates.lessThan(\"stringValue\", \"ABD", "taAbilityPredicates.lessThanOrEqualTo(\"integerVa", "taAbilityPredicates.lessThan(\"doubleValue\", 0.0)", "taAbilityPredicates.lessThanOrEqualTo(\"doubleVal", "taAbilityPredicates.lessThan(\"integerValue\", -21", "@tc.desc predicates lessThan normal test\n     */", "@tc.name predicates lessThan normal test\n     * "], "files": ["DataAbilityPredicatesJsunit.test.js", "QueryJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "greaterThanOrEqualTo", "api_method_all": "greaterThanOrEqualTo(field: string, value: ValueType): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 34, "since": 7, "api_used": "\u662f", "lines": [";\n            query.greaterThanOrEqualTo(\"key1\", \"value\", \"t", ";\n            query.greaterThanOrEqualTo(\"key3\", true);\n    ", ";\n            query.greaterThanOrEqualTo(\"key4\", \"string\");\n", ";\n            query.greaterThanOrEqualTo(\"key1\", 5);\n       ", ";\n            query.greaterThanOrEqualTo(\"key2\", 5.0);\n     ", "5)\n                .greaterThanOrEqualTo(\"key1\", \"v5\")\n     ", "\")\n                .greaterThanOrEqualTo(\"key3\", false);\n   ", "         predicates.greaterThanOrEqualTo(\"stringValue\", \"ABC", "         predicates.greaterThanOrEqualTo(\"integerValue\", 1);", ";\n            query.greaterThanOrEqualTo(\"key0\", 5)\n        ", "@tc.name predicates greaterThanOrEqualTo normal test\n     * ", "taAbilityPredicates.greaterThanOrEqualTo(\"stringValue\", \"ABC", "         predicates.greaterThanOrEqualTo(\"doubleValue\", 0.0)", "         predicates.greaterThanOrEqualTo(\"longValue\", 1);\n  ", ";\n            query.greaterThanOrEqualTo(\"key\", 5);\n        ", ";\n            query.greaterThanOrEqualTo(\"key2\", NaN);\n     ", "@tc.desc predicates greaterThanOrEqualTo normal test\n     */", "taAbilityPredicates.greaterThanOrEqualTo(\"doubleValue\", 0.0)", "taAbilityPredicates.greaterThanOrEqualTo(\"integerValue\", 1);", "taAbilityPredicates.greaterThanOrEqualTo(\"longValue\", 1);\n  "], "files": ["DataAbilityPredicatesJsunit.test.js", "QueryJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "lessThanOrEqualTo", "api_method_all": "lessThanOrEqualTo(field: string, value: ValueType): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 34, "since": 7, "api_used": "\u662f", "lines": ["ualTo(\"key1\", \"v5\").lessThanOrEqualTo(\"key3\", false);\n   ", ";\n            query.lessThanOrEqualTo(\"key4\", \"string\");\n", "taAbilityPredicates.lessThanOrEqualTo(\"integerValue\", 1);", ";\n            query.lessThanOrEqualTo(\"key2\", 5.0);\n     ", "@tc.name predicates lessThanOrEqualTo normal test\n     * ", "         predicates.lessThanOrEqualTo(\"doubleValue\", 0.0)", ";\n            query.lessThanOrEqualTo(\"key1\", \"value\", \"t", "rEqualTo(\"key0\", 5).lessThanOrEqualTo(\"key1\", \"v5\").lessT", ";\n            query.lessThanOrEqualTo(\"key\", 5);\n        ", "@tc.desc predicates lessThanOrEqualTo normal test\n     */", ";\n            query.lessThanOrEqualTo(\"key3\", true);\n    ", "taAbilityPredicates.lessThanOrEqualTo(\"stringValue\", \"ABD", ";\n            query.lessThanOrEqualTo(\"key2\", NaN);\n     ", "         predicates.lessThanOrEqualTo(\"stringValue\", \"ABD", "taAbilityPredicates.lessThanOrEqualTo(\"longValue\", 1);\n  ", "taAbilityPredicates.lessThanOrEqualTo(\"doubleValue\", 0.0)", ";\n            query.lessThanOrEqualTo(\"key0\", 5).lessThan", "         predicates.lessThanOrEqualTo(\"integerValue\", 1);", "         predicates.lessThanOrEqualTo(\"longValue\", 1);\n  ", ";\n            query.lessThanOrEqualTo(\"key1\", 5);\n       "], "files": ["DataAbilityPredicatesJsunit.test.js", "QueryJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "orderByAsc", "api_method_all": "orderByAsc(field: string): DataAbilityPredicates;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 9, "since": 7, "api_used": "\u662f", "lines": ["qualTo(\"key\", \"V0\").orderByAsc(\"sortbykey1\").order", ";\n            query.orderByAsc();\n            cons", ", \"ABCDEFGHIJKLMN\").orderByAsc(\"integerValue\").dis", "ualTo(\"key\", false).orderByAsc(1);\n            con", ", \"ABCDEFGHIJKLMN\").orderByAsc(\"integerValueX\").di", ";\n            query.orderByAsc(\"sortbykey\");\n     ", "ByAsc(\"sortbykey1\").orderByAsc(\"sortbykey2\");\n    "], "files": ["DataAbilityPredicatesJsunit.test.js", "QueryJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "orderByDesc", "api_method_all": "orderByDesc(field: string): DataAbilityPredicates;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 9, "since": 7, "api_used": "\u662f", "lines": ["qualTo(\"key\", \"V0\").orderByDesc(\"sortbykey1\").order", ";\n            query.orderByDesc();\n            cons", "yDesc(\"sortbykey1\").orderByDesc(\"sortbykey2\");\n    ", ";\n            query.orderByDesc(\"sortbykey\");\n     ", ", \"ABCDEFGHIJKLMN\").orderByDesc(\"integerValueX\").di", "ualTo(\"key\", false).orderByDesc(1);\n            con", ", \"ABCDEFGHIJKLMN\").orderByDesc(\"integerValue\").dis"], "files": ["DataAbilityPredicatesJsunit.test.js", "QueryJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "distinct", "api_method_all": "distinct(): DataAbilityPredicates;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["Asc(\"integerValue\").distinct();\n            let ", "sc(\"integerValueX\").distinct();\n            let ", "esc(\"integerValue\").distinct();\n            let "], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "limitAs", "api_method_all": "limitAs(value: number): DataAbilityPredicates;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 20, "since": 7, "api_used": "\u662f", "lines": [", \"ABCDEFGHIJKLMN\").limitAs(3).offsetAs(-1);\n  ", ", \"ABCDEFGHIJKLMN\").limitAs(3);\n        let res", ", \"ABCDEFGHIJKLMN\").limitAs(100);\n        let r", ", \"ABCDEFGHIJKLMN\").limitAs(-1);\n        let pr", ", \"ABCDEFGHIJKLMN\").limitAs(1);\n        let res", ", \"ABCDEFGHIJKLMN\").limitAs(-1);\n        let re", ", \"ABCDEFGHIJKLMN\").limitAs(0);\n        let res", ", \"ABCDEFGHIJKLMN\").limitAs(100);\n        let p", ", \"ABCDEFGHIJKLMN\").limitAs(3).offsetAs(1);\n   ", "\"stringValue\", \"\u4e2d\").limitAs(1);\n        let res", ", \"ABCDEFGHIJKLMN\").limitAs(0);\n        let pre", ", \"ABCDEFGHIJKLMN\").limitAs(1);\n        let pre", ", \"ABCDEFGHIJKLMN\").limitAs(3).offsetAs(5);\n   ", "\"stringValue\", \"\u4e2d\").limitAs(1);\n        let pre", ", \"ABCDEFGHIJKLMN\").limitAs(3);\n        let pre", ", \"ABCDEFGHIJKLMN\").limitAs(3).offsetAs(0);\n   "], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "offsetAs", "api_method_all": "offsetAs(rowOffset: number): DataAbilityPredicates;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["IJKLMN\").limitAs(3).offsetAs(5);\n        let res", "IJKLMN\").limitAs(3).offsetAs(1);\n        let pre", "IJKLMN\").limitAs(3).offsetAs(5);\n        let pre", "IJKLMN\").limitAs(3).offsetAs(0);\n        let pre", "IJKLMN\").limitAs(3).offsetAs(1);\n        let res", "IJKLMN\").limitAs(3).offsetAs(0);\n        let res", "IJKLMN\").limitAs(3).offsetAs(-1);\n        let re", "IJKLMN\").limitAs(3).offsetAs(-1);\n        let pr"], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "groupBy", "api_method_all": "groupBy(fields: Array<string>): DataAbilityPredicates;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 12, "since": 7, "api_used": "\u662f", "lines": [", \"ABCDEFGHIJKLMN\").groupBy([\"characterValue\"])", "@tc.name predicates groupBy test\n     * @tc.num", "@tc.desc predicates groupBy test\n     */\n    it", ", \"ABCDEFGHIJKLMN\").groupBy([\"characterValueX\"]"], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "indexedBy", "api_method_all": "indexedBy(field: string): DataAbilityPredicates;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 12, "since": 7, "api_used": "\u662f", "lines": [", \"ABCDEFGHIJKLMN\").indexedBy([\"characterValueX\"]", ", \"ABCDEFGHIJKLMN\").indexedBy([\"characterValue\"])", "@tc.name predicates indexedBy test\n     * @tc.num", "@tc.desc predicates indexedBy test\n     */\n    it"], "files": ["DataAbilityPredicatesJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "in", "api_method_all": "in(field: string, value: Array<ValueType>): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 3573, "since": 7, "api_used": "\u662f", "lines": ["redicates.lessThan(\"integerValue\", 1);\n   ", ".lessThanOrEqualTo(\"integerValue\", 1);\n   ", "icates.lessThan(\"stringValue\", \"ABD\");\n   ", "AUTOINCREMENT, \"\n+ \"integerValue INTEGER ,", "eaterThanOrEqualTo(\"integerValue\", 1);\n   ", ") {\n        console.info(TAG + 'beforeAll'", " {\n                \"integerValue\": -214748", "Predicates.equalTo(\"integerValue\", 1);\n   ", "edicates.isNull(\"stringValueX\");\n        l", ") {\n        console.info(TAG + 'beforeEach", "t} from 'deccjsunit/index'\nimport dataRdb ", ") {\n        console.info('onShow finish')\n", "      var u8 = new Uint8Array([1, 2, 3])\n ", "                \"stringValue\": \"ABCDEFGHIJ", "d} from 'deccjsunit/index'\n\nconst injectRe", "redicates.lessThan(\"integerValue\", -214748", "cates.isNotNull(\"stringValueX\");\n        l", "tes.greaterThan(\"stringValue\", \"ABC\");\n   ", "dicates.equalTo(\"stringValue\", \"ABCDEFGHIJ", "cates.isNotNull(\"stringValue\");\n        le", "ates.notEqualTo(\"stringValue\", \"ABCDEFGHIJ", "title = this.$t('strings.world');\n    },\n ", ") {\n        console.info('TestApplication ", " {\n                \"integerValue\": 2147483", " {\n                \"integerValue\": 1,\n    ", "loatValue REAL , stringValue TEXT , blobVa", "icates.greaterThan(\"integerValue\", 1);\n   ", "tes.greaterThan(\"stringValue\", \"ZZZ\");\n   ", "nsole.info('onShow finish')\n        const ", ") {\n        console.info(TAG + 'afterAll')", "f(global) || global\ninjectRef.regeneratorR", "dicates.notEqualTo(\"integerValue\", 1);\n   ", "erThanOrEqualTo(\"stringValue\", \"ABC\");\n   ", "ssThanOrEqualTo(\"stringValue\", \"ABD\");\n   ", "xtend)\n        core.init()\n        const c", "*******Unit Test Begin*************\");\n\n  ", "sunit/index'\n\nconst injectRef = Object.get", "     await rdbStore.insert(\"AllDataType\", ", ") {\n        console.info(TAG + 'afterEach'", "icates.greaterThan(\"integerValue\", -999);\n", "edicates.isNull(\"stringValue\");\n        le", "var rdbStore = undefined;\nvar DOUBLE_MAX ="], "files": ["RdbstorePredicatesJsunit.test.js", "List.test.js", "RdbstoreRdbstoreJsunit.test.js", "StorageCallBackJsunit.test.js", "FieldNodeJsunit.test.js", "RdbstoreDeleteJsunit.test.js", "SingleKvStoreEnumJsunit.test.js", "RdbStoreDistributedJsunit.test.js", "KvStoreResultSetJsunit.test.js", "RdbstoreUpdateJsunit.test.js", "DeviceKvStoreCallbackJsunit.test.js", "app.js", "RdbStoreResultSetJsunit.test.js", "KvManagerPromiseJsunit.test.js", "QueryJsunit.test.js", "StoragePromiseJsunit.test.js", "DataAbilityPredicatesJsunit.test.js", "RdbstoreInsertJsunit.test.js", "SchemaJsunit.test.js", "index.js", "DataShareJsunit.test.js", "DeviceKvStorePromiseJsunit.test.js", "StorageSyncJsunit.test.js", "RdbstoreTransactionJsunit.test.js", "SingleKvStorePromiseJsunit.test.js", "ObjectStoreJsunit.test.js", "SingleKvStoreCallbackJsunit.test.js", "StorageHelperJsunit.test.js", "RdbstorePredicatesJoinJsunit.test.js", "RdbstoreStoreExcuteSqlJsunit.test.js", "KvManagerCallbackJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityPredicates", "api_method_name": "notIn", "api_method_all": "notIn(field: string, value: Array<ValueType>): DataAbilityPredicates;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 19, "since": 7, "api_used": "\u662f", "lines": [";\n            query.notInNumber(\"key\", [1, 2]", ";\n            query.notInNumber(\"key\", [1000]", ";\n            query.notInString(\"key\", [\"\", \"", "r(\"key\", [1, 2, 3]).notInNumber(\"key\", [1, 7,", "To(\"key\", 0).and(1).notInNumber(\"key\", [1, 3]", ";\n            query.notInNumber(\"key\", [1, 2,", ";\n            query.notInString(\"key\", [\"v1\",", ";\n            query.notInNumber(\"key\", [\"stri", ";\n            query.notInString(\"key\", [1, 2]", "\n        predicates.notIn(\"integerValue\", val", "lTo(\"key\", 0).or(1).notInNumber(\"key\", [1, 3]", ";\n            query.notInNumber(\"key\", [1], 2", "taAbilityPredicates.notIn(\"integerValue\", val"], "files": ["DataAbilityPredicatesJsunit.test.js", "QueryJsunit.test.js", "RdbstorePredicatesJsunit.test.js"], "is_white": " ", "desc": " "}]}