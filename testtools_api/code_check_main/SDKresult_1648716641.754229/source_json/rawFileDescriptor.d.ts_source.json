{"subsystem_ch": "\u5168\u7403\u5316\u5b50\u7cfb\u7edf", "subsystem_en": "global", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\global\\rawFileDescriptor", "api": [{"api_class_name": "RawFileDescriptor", "api_method_all": "export interface RawFileDescriptor {\r\n  \r\n  fd: number;\r\n\r\n  \r\n  offset: number;\r\n\r\n  \r\n  length: number;\r\n}", "api_method_name": "RawFileDescriptor", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 21, "since": 8, "api_used": "\u662f", "lines": ["e\n    */\n    it('getRawFileDescriptor_test_002', 0, async", "    console.log('getRawFileDescriptor_test_002--' + rawfi", "  console.log('closeRawFileDescriptor_test_002--' + value", "    console.log('getRawFileDescriptor_test_001--'\n       ", "e\n    */\n    it('getRawFileDescriptor_test_001', 0, async", " @tc.name test closeRawFileDescriptor method in callback ", "    */\n    it('closeRawFileDescriptor_test_002', 0, async", "  console.log('closeRawFileDescriptor_test_001--' + error", "    */\n    it('closeRawFileDescriptor_test_001', 0, async", " * @tc.name test getRawFileDescriptor method in promise m", " * @tc.desc get the RawFileDescriptor in callback mode\n  ", "\n            mgr.getRawFileDescriptor('rawfiletest.xml', ", "\n            mgr.getRawFileDescriptor('rawfiletest.xml').", " * @tc.name test getRawFileDescriptor method in callback ", "    console.log('getRawFileDescriptor_test_002--'\n       ", "c.desc get the closeRawFileDescriptor in promise mode\n   ", " * @tc.desc get the RawFileDescriptor in promise mode\n   ", "c.desc get the closeRawFileDescriptor in callback mode\n  ", " @tc.name test closeRawFileDescriptor method in promise m", "           mgr.closeRawFileDescriptor('rawfiletest.xml', ", "           mgr.closeRawFileDescriptor('rawfiletest.xml')."], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "RawFileDescriptor", "api_method_name": "fd", "api_method_all": "fd: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 7, "since": 8, "api_used": "\u662f", "lines": ["           +'fd:' + fdValue\n              ", "'\n                +'fd:' + rawfile.fd\n    ", "                  +'fd:' + fdValue\n       ", "t fdValue = rawfile.fd;\n                le", "            rawfile.fd = 2000;\n           ", "   +'fd:' + rawfile.fd\n                + '", "                let fdValue = rawfile.fd;\n"], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "RawFileDescriptor", "api_method_name": "offset", "api_method_all": "offset: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 7, "since": 8, "api_used": "\u662f", "lines": ["                 + 'offset:' + offsetValue\n   ", "                let offsetValue = rawfile.offs", "      + 'offset:' + offsetValue\n              ", "fsetValue = rawfile.offset;\n                le", "'offset:' + rawfile.offset\n                + '", "\n                + 'offset:' + rawfile.offset\n", "            rawfile.offset = 20;\n             "], "files": ["Resmgr.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "RawFileDescriptor", "api_method_name": "length", "api_method_all": "length: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 45, "since": 0, "api_used": "\u662f", "lines": ["\n                + 'length:' + rawfile.length)", "'long', unitUsage: 'length-road' });\n        c", "rentPreferredLang().length;\n        while(curr", "                 + 'length:' + lengthValue);\n ", " let len = langList.length;\n        for (let i", "           + 'value.length: ' + value.length\n ", "       expect(value.length > 0).assertTrue();\n", "        expect(list.length).assertLarger(0);\n ", "Usage).assertEqual('length-road');\n    })\n\n   ", " let len = langList.length;\n        while(len ", "    let len = value.length;\n        console.lo", "       expect(value.length).assertLarger(0);\n ", "            rawfile.length = 200;\n            ", "e.length: ' + value.length\n                   ", "     let len = list.length;\n        console.lo", "     let len = lang.length;\n        console.lo", "                let lengthValue = rawfile.leng", "ngthValue = rawfile.length;\n                ex", "    let len = count.length;\n        console.lo", "      + 'length:' + lengthValue);\n            ", "'length:' + rawfile.length);\n            })\n  ", "= initPreferredLang.length;\n    let hour = I18"], "files": ["I18n.test.js", "Resmgr.test.js", "Lang.test.js", "Perf.test.js", "Intl.test.js"], "is_white": " ", "desc": " "}]}