{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.application.DataShareExtensionAbility", "api": [{"api_class_name": "DataShareExtensionAbility", "api_method_all": "export default class DataShareExtensionAbility {\n    \n    context?: ExtensionContext;\n\n    \n    onCreate?(want: Want): void;\n\n    \n    getFileTypes?(uri: string, mimeTypeFilter: string, callback: AsyncCallback<Array<string>>): void;\n\n    \n    insert?(uri: string, valueBucket: rdb.ValuesBucket, callback: AsyncCallback<number>): void;\n\n    \n    update?(uri: string, valueBucket: rdb.ValuesBucket, predicates: dataAbility.DataAbilityPredicates,\n        callback: AsyncCallback<number>): void;\n\n    \n    delete?(uri: string, predicates: dataAbility.DataAbilityPredicates, callback: AsyncCallback<number>): void;\n\n    \n    query?(uri: string, columns: Array<string>, predicates: dataAbility.DataAbilityPredicates,\n        callback: AsyncCallback<ResultSet>): void;\n\n    \n    getType?(uri: string, callback: AsyncCallback<string>): void;\n\n    \n    batchInsert?(uri: string, valueBuckets: Array<rdb.ValuesBucket>, callback: AsyncCallback<number>): void;\n\n    \n    normalizeUri?(uri: string, callback: AsyncCallback<string>): void;\n\n    \n    denormalizeUri?(uri: string, callback: AsyncCallback<string>): void;\n}", "api_method_name": "DataShareExtensionAbility", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataShareExtensionAbility", "api_method_name": "onCreate", "api_method_all": "onCreate?(want: Want): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 239, "since": 9, "api_used": "\u662f", "lines": ["e.info('Application onCreate')\n  },\n  onDestroy(", "\nexport default {\n  onCreate() {\n    console.inf", "nfo('AceApplication onCreate');\n    },\n    onDes", "ProcessManageJsTest onCreate');\n    },\n    onDes", "xport default {\n    onCreate() {\n        console"], "files": ["LockNew.js", "taskSwitchJsunit.test.js", "app.js", "MissionManagerTest.js", "app.ets", "AbilityDisableTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataShareExtensionAbility", "api_method_name": "getFileTypes", "api_method_all": "getFileTypes?(uri: string, mimeTypeFilter: string, callback: AsyncCallback<Array<string>>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 11, "api_used_count": 1, "since": 9, "api_used": "\u662f", "lines": ["log('featureAbility getFileTypes getDataAbilityHelper ====>: ' + DAHelpe"], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataShareExtensionAbility", "api_method_name": "insert", "api_method_all": "insert?(uri: string, valueBucket: rdb.ValuesBucket, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 11, "api_used_count": 1, "since": 9, "api_used": "\u662f", "lines": ["     await DAHelper.insert(dataAbilityUri, valueBucket,\n          "], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataShareExtensionAbility", "api_method_name": "update", "api_method_all": "update?(uri: string, valueBucket: rdb.ValuesBucket, predicates: dataAbility.DataAbilityPredicates,\n        callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 4, "api_level": 11, "api_used_count": 66, "since": 9, "api_used": "\u662f", "lines": ["    expect(dataB[0].updateEnabled).assertEqual(1);\n            exp", "ll(dataAbilityUri, 'update', arg, pacMap, (err, data) => {\n       ", "e.log('dataUriUtils updateIdSync start1 ');\n        var idint = 11", "e.log('dataUriUtils updateIdSync_test start3 successful ');\n\n     ", "e.log('updateIdSync updateIdSync URI : ' + result);\n        expect", "e.log('dataUriUtils updateIdSync_test start2 successful ');\n\n     ", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils\",idint);\n   ", "e.log('dataUriUtils updateIdSync start666 ');\n\n        var result ", "e.log('dataUriUtils updateIdSync start4 ');\n        var idint = 55", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils/\",idint)\n   ", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils/123456789011", "e.log('dataUriUtils updateIdSync start2 ');\n        var idint = 11", "       console.log('updateIdSync updateIdSync URI : ' + result);\n ", "    expect(dataB[0].updateDuration).assertEqual(1);\n              ", "     );\n    },\n\n    updateData(obj) {\n        console.log('formSys", "    expect(dataB[0].updateEnabled).assertEqual(1);\n               ", "e.log('updateIdSync updateIdSync URI : ' + result);\n\n        expec", "e.log('dataUriUtils updateIdSync start5 ');\n\n        var idint = 0", "     expect(data[i].updateEnabled).assertEqual(1);\n               ", "     abilityManager.updateConfiguration(Configuration)\n           ", "       console.log('updateIdSync updateIdSync URI : ' + result);\n\n", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils/1122\",idint)", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils/-1\",idint)\n ", "e.log('dataUriUtils updateIdSync_test start1 successful ');\n\n     ", "     await DAHelper.update(\n            dataAbilityUri,\n          ", "e.log('dataUriUtils updateIdSync_test start4 successful ');\n\n     ", " expect(datainfo[i].updateDuration).assertEqual(1);\n              ", "    expect(dataB[0].updateDuration).assertEqual(1);\n            ex", "y_CoverApi_0800 --- updateConfiguration \" + JSON.stringify(data));", "     expect(data[i].updateDuration).assertEqual(1);\n              ", " expect(datainfo[i].updateEnabled).assertEqual(1);\n               ", "e.log('dataUriUtils updateIdSync start3 ');\n        var idint = 33"], "files": ["FormsOneAndTwoJsunit.test.js", "DataUriUtilsJsSt.test.js", "ActsDataAbilityJsTest.test.js", "FormsOneAndOneJsunit.test.js", "FormsZeroAndOneJsunit.test.js", "app.js", "coverApiTest.js", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataShareExtensionAbility", "api_method_name": "delete", "api_method_all": "delete?(uri: string, predicates: dataAbility.DataAbilityPredicates, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 11, "api_used_count": 111, "since": 9, "api_used": "\u662f", "lines": ["e.log('dataUriUtils deleteIdSync_test start3 successful ');\n\n     ", "ction_0200_callback deleteForm end\");\n            done();\n        ", "Array_0200_callback deleteForm formId typeof:\" + typeof(formId));\n", "tBool_0200_callback deleteForm formId typeof:\" + typeof(formId));\n", "e.log('dataUriUtils deleteIdSync_test start4 successful ');\n\n     ", "stBool_0200_promise deleteForm formId typeof:\" + typeof(formId));\n", "tBool_0200_callback deleteForm end\");\n            done();\n        ", "        formManager.deleteForm(\n                    formId,\n      ", "nction_0200_promise deleteForm begin\");\n    \n            var formI", "e.log('dataUriUtils deleteIdSync start4 ');\n        var result = d", "e.log('dataUriUtils deleteIdSync_test start1 successful ');\n\n     ", "ge.indexOf(\"type of deleteForm is incorrect\") > -1).assertTrue();\n", "Array_0200_callback deleteForm end\");\n            done();\n        ", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils\");\n        c", "     await DAHelper.delete(\n            dataAbilityUri,\n          ", "l(await formManager.deleteForm(formId));\n                console.l", "tArray_0200_promise deleteForm end\");\n            done();\n        ", "e.log('dataUriUtils deleteIdSync start1 ');\n        var result = d", "tBool_0200_callback deleteForm begin\");\n    \n            var formI", "stBool_0200_promise deleteForm end\");\n            done();\n        ", "ction_0200_callback deleteForm begin\");\n    \n            var formI", "tArray_0200_promise deleteForm formId typeof:\" + typeof(formId));\n", "e.log('dataUriUtils deleteIdSync start5 ');\n        var result = d", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils/1122\");\n    ", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils/-1\");\n      ", "Array_0200_callback deleteForm begin\");\n    \n            var formI", "e.log('dataUriUtils deleteIdSync URI : ' + result);\n\n        expec", "e.log('dataUriUtils deleteIdSync start2 ');\n        var result = d", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils1122\");\n     ", "tArray_0200_promise deleteForm begin\");\n    \n            var formI", "ll(dataAbilityUri, 'delete', arg, pacMap, (err, data) => {\n       ", "e.log('dataUriUtils deleteIdSync start3 ');\n        var result = d", "ction_0200_callback deleteForm formId typeof:\" + typeof(formId));\n", "nction_0200_promise deleteForm formId typeof:\" + typeof(formId));\n", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils/1122/2211\");", "e.log('dataUriUtils deleteIdSync_test start2 successful ');\n\n     ", "stBool_0200_promise deleteForm begin\");\n    \n            var formI", "e.log('dataUriUtils deleteIdSync_test start5 successful ');\n\n     "], "files": ["FormFuzzArray.test.js", "FormFuzzFunction.test.js", "FormFuzzString.test.js", "FormFuzzNum.test.js", "DataUriUtilsJsSt.test.js", "ActsDataAbilityJsTest.test.js", "FormFuzzUndefined.test.js", "FormFuzzObject.test.js", "FormFuzzBool.test.js", "FormFuzzNull.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataShareExtensionAbility", "api_method_name": "query", "api_method_all": "query?(uri: string, columns: Array<string>, predicates: dataAbility.DataAbilityPredicates,\n        callback: AsyncCallback<ResultSet>): void;", "api_type": "callback", "api_args_count": 4, "api_level": 11, "api_used_count": 167, "since": 9, "api_used": "\u662f", "lines": ["SUB_AA_OpenHarmony_EqueryAbilityByWant_0300\", 0, async function (", "     await DAHelper.query(\n            dataAbilityUri,\n          ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200 queryAbilityByWant er", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400 registerId  : ' + JSO", "mmand_Callback_0100 query string i = ' + i);\n                expe", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0100-------------------\");", "uration information query interface of the specified module \n    ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0100\", 0, async function (", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0300 getapplicationInfo er", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0300-------------------\");", "(\"=ACTS_AQuery_0400 query err,data=======>\"\n                    +", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400 registerId  : ' + typ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200\", 0, async function (", "      bundleManager.queryAbilityByWant(want,bundleFlags,userId,(e", "ll(dataAbilityUri, 'query', arg, pacMap, (err, data) => {\n       ", "uration information query interface of the specified package \n   ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400\", 0, async function (", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400-------------\");\n     ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200-------------------\");", "yAbilityByWant_0200 queryAbilityByWant errCode : '\n              ", "mmand_Callback_0200 query string i = ' + i);\n                expe", "nHarmony_Clear_0100 queryAbilityByWant errCode : '\n              "], "files": ["FormFuzzArray.test.js", "FormFuzzFunction.test.js", "FormFuzzString.test.js", "FormFuzzNum.test.js", "FormsOneAndTwoJsunit.test.js", "ActsDataAbilityJsTest.test.js", "FormFuzzUndefined.test.js", "ActsAbilityDelegatorCaseTest.test.js", "FormFuzzBool.test.js", "FormFuzzNull.test.js", "FormFuzzObject.test.js", "AbilityDisableTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataShareExtensionAbility", "api_method_name": "getType", "api_method_all": "getType?(uri: string, callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 11, "api_used_count": 3, "since": 9, "api_used": "\u662f", "lines": ["=ACTS_AGetType_0200 getType AsyncCallback catch(err)====>:' + err);", "ACTS_AOpenFile_0700 getType AsyncCallback catch(err)====>:' + err);", "     await DAHelper.getType(\n            dataAbilityUri,\n          "], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataShareExtensionAbility", "api_method_name": "batchInsert", "api_method_all": "batchInsert?(uri: string, valueBuckets: Array<rdb.ValuesBucket>, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 11, "api_used_count": 1, "since": 9, "api_used": "\u662f", "lines": ["     await DAHelper.batchInsert(\n            dataAbilityUri,\n          "], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataShareExtensionAbility", "api_method_name": "normalizeUri", "api_method_all": "normalizeUri?(uri: string, callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 11, "api_used_count": 12, "since": 9, "api_used": "\u662f", "lines": ["onsole.log('ACTS_ADenormalizeUri_0200====<begin');\n    let ret = false;\n", "\n        DAHelper.denormalizeUri(\n            dataAbilityUri,\n          ", "onsole.log('ACTS_ADenormalizeUri_0200====<end catch');\n        done();\n ", " {\n        DAHelper.normalizeUri(\n            dataAbilityUri,\n          ", " }\n})\n\n\nit('ACTS_ADenormalizeUri_0200', 0, async function (done) {\n    c", "log('featureAbility normalizeUri getDataAbilityHelper ====>: ' + DAHelpe", "ole.error('=ACTS_ADenormalizeUri_0200 denormalizeUri AsyncCallback catch", "onsole.log('ACTS_ADenormalizeUri_0200====<end');\n                done();", "_ANormalizeUri_0200 normalizeUri AsyncCallback catch(err)====>:' + err);", "ole.debug(\"=ACTS_ADenormalizeUri_0200 err,data=======>\"\n                ", "normalizeUri_0200 denormalizeUri AsyncCallback catch(err)====>:' + err);", "g('featureAbility DenormalizeUri getDataAbilityHelper ====>: ' + DAHelpe"], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataShareExtensionAbility", "api_method_name": "denormalizeUri", "api_method_all": "denormalizeUri?(uri: string, callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 11, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["DenormalizeUri_0200 denormalizeUri AsyncCallback catch(err)====>:' + err);", " {\n        DAHelper.denormalizeUri(\n            dataAbilityUri,\n          "], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataShareExtensionAbility", "api_method_name": "context", "api_method_all": "context?: ExtensionContext", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 292, "since": 9, "api_used": "\u662f", "lines": ["t TAG_TEST_0012 = ' context_featureAbility_test", "t TAG_TEST_0300 = ' context_printDrawnCompleted", "t TAG_TEST_0200 = ' context_isUpdatingConfigura", "t TAG_TEST_0700 = ' context_isRamConstrainedDev", "       var result = context.setWakeUpScreen(tru", ";\n            await context.printDrawnCompleted", "();\n                context.printDrawnCompleted", "       var result = context.setDisplayOrientati", "tContext();\n        context.getCacheDir().then(", "Time();\n        var context = await featureAbil", "--------------start context_getCacheDir_test_01", "();\n                context.isUpdatingConfigura", "       var result = context.setShowOnLockScreen", "ole.log(\"logMessage context_getCacheDir_test_01", "t TAG_TEST_0400 = ' context_printDrawnCompleted", "t TAG_TEST_0800 = ' context_isRamConstrainedDev", "--------------start context_getCacheDir_test_02", "       console.log(\"context_getCacheDir_test_01", "  });\n\n    \n    it(\"context_getCacheDir_test_02", "t TAG_TEST_0900 = ' context_featureAbility_test", "  });\n\n    \n    it(\"context_getCacheDir_test_01", "      console.info(\"context after each called\")", "t TAG_TEST_0011 = ' context_featureAbility_test", "----------------end context_getCacheDir_test_01", "t TAG_TEST_0010 = ' context_featureAbility_test", "  var data1 = await context.getCacheDir();\n    ", "t TAG_TEST_0100 = ' context_isUpdatingConfigura", "ls.getDurationTime('context_getCacheDir_test_01", "t TAG_TEST_0500 = ' context_getAppMemorySize_te", "                var context = ability_featureAb", "  }\n            var context = featureAbility.ge", "t TAG_TEST_0600 = ' context_getAppMemorySize_te", "      console.info(\"context before each called\"", "();\n            var context = ability_featureAb", "       var result = context.getDisplayOrientati", ";\n            await context.isUpdatingConfigura"], "files": ["getApplicationContextJsunit.test.ets", "addContextAndAbilityJsunit.test.ets", "getAbilityInfoJsunit2.test.ets", "getHapModuleInfoJsunit.test.ets", "ContextJsunit.test.ets", "getHapModuleInfoJsunit_app1.test.ets", "FeatureAbilityJsunit.test.js", "ActsAbilityDelegatorCaseTest.test.js", "ContextJsunit.test.js", "index.js", "getAbilityInfoJsunit.test.ets", "AbilityDisableTest.js", "getAppVersionInfoJsunit.test.ets"], "is_white": " ", "desc": " "}]}