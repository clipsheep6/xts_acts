{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\bundle\\applicationInfo", "api": [{"api_class_name": "ApplicationInfo", "api_method_all": "export interface ApplicationInfo {\r\n  \r\n  readonly name: string;\r\n\r\n  \r\n  readonly description: string;\r\n\r\n  \r\n  readonly descriptionId: number;\r\n\r\n  \r\n  readonly systemApp: boolean;\r\n\r\n  \r\n  readonly enabled: boolean;\r\n\r\n  \r\n  readonly label: string;\r\n\r\n  \r\n  readonly labelId: string;\r\n\r\n  \r\n  readonly icon: string;\r\n\r\n  \r\n  readonly iconId: string;\r\n\r\n  \r\n  readonly process: string;\r\n\r\n  \r\n  readonly supportedModes: number;\r\n\r\n  \r\n  readonly moduleSourceDirs: Array<string>;\r\n\r\n  \r\n  readonly permissions: Array<string>;\r\n\r\n  \r\n  readonly moduleInfos: Array<ModuleInfo>;\r\n\r\n  \r\n  readonly entryDir: string;\r\n\r\n  \r\n  readonly codePath: string;\r\n\r\n  \r\n  readonly metaData: Map<string, Array<CustomizeData>>;\r\n\r\n  \r\n  readonly metadata: Map<string, Array<Metadata>>;\r\n\r\n  \r\n  readonly removable: boolean;\r\n\r\n  \r\n  readonly accessTokenId: number;\r\n\r\n  \r\n  readonly uid: number;\r\n\r\n  \r\n  readonly entityType: string;\r\n}", "api_method_name": "ApplicationInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 106, "since": 7, "api_used": "\u662f", "lines": ["ole.log(msg + \"checkApplicationInfo info.permissions[\" ", "sole.log(msg+ \"checkApplicationInfo supportedModes : \" ", "ole.log(msg + \"checkApplicationInfo label : \" + info.la", "sole.log(msg+ \"checkApplicationInfo name : \" + info.nam", "sole.log(msg+ \"checkApplicationInfo systemApp : \" + inf", "ole.log(msg + \"checkApplicationInfo labelId : \" + info.", "ole.log(msg + \"checkApplicationInfo entryDir : \" + info", "sole.log(msg+ \"checkApplicationInfo moduleSourceDirs le", "      function checkApplicationInfo(msg,info) {\n       ", ".log(msg + \"---checkApplicationInfo End--- \");\n\n    }\n\n", "ole.log(msg + \"checkApplicationInfo info.moduleSourceDi", "ole.log(msg + \"checkApplicationInfo name : \" + info.nam", "sole.log(msg+ \"checkApplicationInfo labelId : \" + info.", "sole.log(msg+ \"checkApplicationInfo label : \" + info.la", "ual(\"\");\n      checkApplicationInfo(msg, data.applicati", "sole.log(msg+ \"checkApplicationInfo info.moduleSourceDi", "sole.log(msg+ \"checkApplicationInfo description : \" + i", "sole.log(msg+ \"checkApplicationInfo icon : \" + info.ico", "ole.log(msg + \"checkApplicationInfo enabled : \" + info.", "sole.log(msg+ \"checkApplicationInfo info.permissions[\" ", "ole.log(msg + \"checkApplicationInfo supportedModes : \" ", "ole.log(msg + \"checkApplicationInfo moduleSourceDirs le", "sole.log(msg+ \"checkApplicationInfo descriptionId : \" +", "sole.log(msg+ \"checkApplicationInfo enabled : \" + info.", "ual(\"\");\n      checkApplicationInfo2(msg,data.applicati", "ole.log(msg + \"checkApplicationInfo permissions length ", "sole.log(msg+ \"checkApplicationInfo iconId : \" + info.i", "\"\");\n          checkApplicationInfo(msg,data.applicatio", "sole.log(msg+ \"checkApplicationInfo entryDir : \" + info", "ole.log(msg + \"checkApplicationInfo icon : \" + info.ico", "ole.log(msg + \"checkApplicationInfo start : \" + JSON.st", "\n\n    function checkApplicationInfo2(msg,info) {\n      ", "ole.log(msg + \"checkApplicationInfo iconId : \" + info.i", "\n\n    function checkApplicationInfo(msg, info) {\n      ", "ole.log(msg + \"checkApplicationInfo systemApp : \" + inf", "e.log(msg+ \"---checkApplicationInfo End--- \");\n    }\n  ", "ole.log(msg + \"checkApplicationInfo descriptionId : \" +", "ole.log(msg + \"checkApplicationInfo moduleInfos length ", "sole.log(msg+ \"checkApplicationInfo start : \" + JSON.st", "sole.log(msg+ \"checkApplicationInfo info.moduleInfos[\" ", "sole.log(msg+ \"checkApplicationInfo moduleInfos length ", "sole.log(msg+ \"checkApplicationInfo permissions length ", "ole.log(msg + \"checkApplicationInfo process : \" + info.", "sole.log(msg+ \"checkApplicationInfo process : \" + info.", "ole.log(msg + \"checkApplicationInfo description : \" + i", "ole.log(msg + \"checkApplicationInfo info.moduleInfos[\" "], "files": ["getAbilityInfoJsunit2.test.ets", "List.test.js", "getHapModuleInfoJsunit_app1.test.ets", "FeatureAbilityJsunit.test.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "AbilityDisableTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "name", "api_method_all": "readonly name: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 454, "since": 7, "api_used": "\u662f", "lines": ["alueBucket = {\n    \"name\": \"ActsDataAbilityH", "expect(typeof (info.name)).assertEqual(\"stri", "expect(typeof (data.name)).assertEqual(\"stri", "h_Delete_0400\n* @tc.name: ExecuteBatch : Pre", "TS_Call_0200\n * @tc.name: call : Queries dat", "TS_Call_0400\n * @tc.name: call : Deletes one", ";\n      expect(data.name).assertEqual(\"com.o", "nfo name : \" + info.name);\n          console", "checkRunningProcess(name, dataInfo) {\n      ", " \"checkAbilityInfo2 name : \" + data.name);\n ", "nfo name : \" + info.name);\n      console.log", "h_Assert_0400\n* @tc.name: ExecuteBatch : Pre", "        expect(info.name).assertEqual(\"com.o", "\"checkHapModuleInfo name : \" + data.name);\n ", "        expect(data.name).assertEqual(\"com.e", "fo2 name : \" + data.name);\n      console.log", "4.20, },\n        { \"name\": \"ActsDataAbilityH", "nfo name : \" + data.name);\n          console", "+ \"checkAbilityInfo name : \" + data.name);\n ", "ARelease_0100\n* @tc.name: Releases the clien", "\n\n      expect(info.name).assertEqual(\"com.o", "rray = new Array({ \"name\": \"ActsDataAbilityH", "TS_Call_0100\n * @tc.name: call : Inserts a s", "TS_Call_0300\n * @tc.name: call : Updates dat", "nfo name : \" + data.name);\n      console.log", "o[i].processName == name) {\n                ", "teIdSync_0100\n* @tc.name: Updates the ID in ", "heckApplicationInfo name : \" + info.name);\n "], "files": ["FormFuzzArray.test.js", "getHapModuleInfoJsunit.test.ets", "FormsOneAndOneJsunit.test.js", "ActsGetWantAllTest.js", "ActsProcessManageJsTest.test.js", "getAbilityInfoJsunit2.test.ets", "FormFuzzString.test.js", "app.js", "MissionManagerTest.js", "getAbilityInfoJsunit.test.ets", "LockNew.js", "FormFuzzFunction.test.js", "getHapModuleInfoJsunit_app1.test.ets", "ActsDataAbilityJsTest.test.js", "DataUriUtilsJsSt.test.js", "FormFuzzNull.test.js", "ActsKillProcessTest.test.js", "FormFuzzNum.test.js", "FeatureAbilityJsunit.test.js", "FormsOneAndTwoJsunit.test.js", "FormFuzzUndefined.test.js", "FormFuzzObject.test.js", "FormFuzzBool.test.js", "FormsZeroAndOneJsunit.test.js", "ContextJsunit.test.js", "AbilityDisableTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "description", "api_method_all": "readonly description: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 128, "since": 7, "api_used": "\u662f", "lines": [";\n      expect(data.description).assertEqual(\"\");\n ", "expect(typeof (info.descriptionId)).assertEqual(\"nu", "\"checkHapModuleInfo descriptionId : \" + data.descri", "cription : \" + info.description);\n      console.log", "+ \"checkAbilityInfo descriptionId : \" + data.descri", "expect(typeof (data.descriptionId)).assertEqual(\"nu", "cription : \" + data.description);\n      console.log", "iptionId : \" + info.descriptionId);\n      console.l", ";\n      expect(data.descriptionId).assertEqual(0);\n", "ssertEqual(\"$string:description_mainability2\");\n   ", ";\n      expect(data.description).assertEqual(\"$stri", "\"checkHapModuleInfo description : \" + data.descript", "expect(typeof (info.description)).assertEqual(\"stri", "iptionId : \" + data.descriptionId);\n      console.l", ";\n      expect(info.description).assertEqual(\"$stri", ";\n      expect(info.descriptionId > 0).assertTrue()", "+ \"checkAbilityInfo description : \" + data.descript", ";\n      expect(data.descriptionId > 0).assertTrue()", "$string:mainability_description\");\n      expect(dat", "expect(typeof (data.description)).assertEqual(\"stri", "heckApplicationInfo description : \" + info.descript", " \"checkAbilityInfo2 descriptionId : \" + data.descri", "$string:mainability_description\");\n      expect(inf", "heckApplicationInfo descriptionId : \" + info.descri", " \"checkAbilityInfo2 description : \" + data.descript"], "files": ["getAbilityInfoJsunit2.test.ets", "getHapModuleInfoJsunit.test.ets", "FeatureAbilityJsunit.test.js", "getHapModuleInfoJsunit_app1.test.ets", "FormsOneAndTwoJsunit.test.js", "FormsOneAndOneJsunit.test.js", "FormsZeroAndOneJsunit.test.js", "getAbilityInfoJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "descriptionId", "api_method_all": "readonly descriptionId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 46, "since": 7, "api_used": "\u662f", "lines": [" \"checkAbilityInfo2 descriptionId : \" + data.descript", "        expect(data.descriptionId > 0).assertTrue();\n", "iptionId : \" + info.descriptionId);\n      console.log", "        expect(info.descriptionId).assertEqual(0);   ", "iptionId : \" + info.descriptionId);\n        console.l", "expect(typeof (info.descriptionId)).assertEqual(\"numb", "       console.log(\"descriptionId : \" + info.descript", "iptionId : \" + data.descriptionId);\n      console.log", "iptionId : \" + data.descriptionId);\n          console", "g(\"checkAbilityInfo descriptionId : \" + data.descript", "heckApplicationInfo descriptionId : \" + info.descript", "expect(typeof (data.descriptionId)).assertEqual(\"numb", ";\n      expect(data.descriptionId > 0).assertTrue();\n", "        expect(data.descriptionId).assertEqual(0);\n  ", "+ \"checkAbilityInfo descriptionId : \" + data.descript", ";\n      expect(data.descriptionId).assertEqual(0);\n  ", ";\n      expect(info.descriptionId > 0).assertTrue();\n", "\"checkHapModuleInfo descriptionId : \" + data.descript", "iptionId : \" + info.descriptionId);\n          console", "        expect(info.descriptionId > 0).assertTrue();\n", "iptionId : \" + data.descriptionId);\n        console.l"], "files": ["getAbilityInfoJsunit2.test.ets", "getHapModuleInfoJsunit.test.ets", "FeatureAbilityJsunit.test.js", "getHapModuleInfoJsunit_app1.test.ets", "getAbilityInfoJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "systemApp", "api_method_all": "readonly systemApp: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 16, "since": 7, "api_used": "\u662f", "lines": [";\n      expect(info.systemApp).assertEqual(true);", "        expect(info.systemApp).assertEqual(true);", "ystemApp : \" + info.systemApp);\n        console.l", "ystemApp : \" + info.systemApp);\n          console", "       console.log(\"systemApp : \" + info.systemAp", "expect(typeof (info.systemApp)).assertEqual(\"bool", "ystemApp : \" + info.systemApp);\n      console.log", "heckApplicationInfo systemApp : \" + info.systemAp"], "files": ["getAbilityInfoJsunit.test.ets", "getAbilityInfoJsunit2.test.ets", "FeatureAbilityJsunit.test.js", "getHapModuleInfoJsunit_app1.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "enabled", "api_method_all": "readonly enabled: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 16, "since": 7, "api_used": "\u662f", "lines": ["        expect(info.enabled).assertEqual(true);", "expect(typeof (info.enabled)).assertEqual(\"bool", " enabled : \" + info.enabled);\n      console.log", " enabled : \" + info.enabled);\n          console", "       console.log(\"enabled : \" + info.enabled)", "\"enabled : \" + info.enabled);\n        console.l", "heckApplicationInfo enabled : \" + info.enabled)", ";\n      expect(info.enabled).assertEqual(true);"], "files": ["getAbilityInfoJsunit.test.ets", "getAbilityInfoJsunit2.test.ets", "FeatureAbilityJsunit.test.js", "getHapModuleInfoJsunit_app1.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "label", "api_method_all": "readonly label: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 102, "since": 7, "api_used": "\u662f", "lines": ["expect(typeof (info.label)).assertEqual(\"stri", ";\n      expect(data.labelId >0).assertTrue();", " \"checkAbilityInfo2 label : \" + data.label);\n", "+ \"checkAbilityInfo labelId : \" + data.labelI", ";\n      expect(data.labelId).assertEqual(0);\n", ";\n      expect(data.labelId > 0).assertTrue()", "expect(typeof (data.label)).assertEqual(\"stri", " labelId : \" + info.labelId);\n      console.l", "o2 label : \" + data.label);\n      console.log", "fo label : \" + info.label);\n      console.log", "expect(typeof (data.labelId)).assertEqual(\"nu", ";\n      expect(info.label).assertEqual(\"$stri", ";\n      expect(data.label).assertEqual(\"$stri", "expect(typeof (info.labelId)).assertEqual(\"st", "fo label : \" + data.label);\n      console.log", "\"checkHapModuleInfo labelId : \" + data.labelI", "heckApplicationInfo labelId : \" + info.labelI", "\"checkHapModuleInfo label : \" + data.label);\n", " labelId : \" + data.labelId);\n      console.l", "ect(typeof (info[i].label)).assertEqual(\"stri", "ect(typeof (data[i].label)).assertEqual(\"stri", "heckApplicationInfo label : \" + info.label);\n", " \"checkAbilityInfo2 labelId : \" + data.labelI", "+ \"checkAbilityInfo label : \" + data.label);\n"], "files": ["getAbilityInfoJsunit2.test.ets", "MangerAbilityJsunit.test.js", "LockNew.js", "getHapModuleInfoJsunit.test.ets", "getHapModuleInfoJsunit_app1.test.ets", "FeatureAbilityJsunit.test.js", "getAbilityInfoJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "labelId", "api_method_all": "readonly labelId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 43, "since": 7, "api_used": "\u662f", "lines": ["heckApplicationInfo labelId : \" + info.labelId)", "\"labelId : \" + info.labelId);\n        console.l", "expect(typeof (data.labelId)).assertEqual(\"numb", ";\n      expect(data.labelId).assertEqual(0);\n  ", " labelId : \" + data.labelId);\n        console.l", "        expect(data.labelId > 0).assertTrue();\n", "expect(typeof (info.labelId)).assertEqual(\"stri", "+ \"checkAbilityInfo labelId : \" + data.labelId)", "g(\"checkAbilityInfo labelId : \" + data.labelId)", "\"checkHapModuleInfo labelId : \" + data.labelId)", " labelId : \" + info.labelId);\n      console.log", " \"checkAbilityInfo2 labelId : \" + data.labelId)", "       console.log(\"labelId : \" + info.labelId)", ";\n      expect(data.labelId >0).assertTrue();\n ", " labelId : \" + data.labelId);\n      console.log", ";\n      expect(data.labelId > 0).assertTrue();\n", "        expect(info.labelId).assertEqual(0);  /", " labelId : \" + data.labelId);\n          console", " labelId : \" + info.labelId);\n          console", "        expect(data.labelId).assertEqual(0);\n  "], "files": ["getAbilityInfoJsunit2.test.ets", "getHapModuleInfoJsunit.test.ets", "FeatureAbilityJsunit.test.js", "getHapModuleInfoJsunit_app1.test.ets", "getAbilityInfoJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "icon", "api_method_all": "readonly icon: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 112, "since": 7, "api_used": "\u662f", "lines": ["+ \"checkAbilityInfo icon : \" + data.icon);\n ", "2 iconId : \" + data.iconId);\n      console.l", "\"checkHapModuleInfo icon : \" + data.icon);\n ", "o iconId : \" + info.iconId);\n      console.l", "+ \"checkAbilityInfo iconId : \" + data.iconId", ";\n      expect(data.iconId > 0).assertTrue()", ";\n      expect(data.iconId).assertEqual(0);\n", "assertEqual(\"$media:icon\");\n      expect(inf", "expect(typeof (data.iconId)).assertEqual(\"nu", "o iconId : \" + data.iconId);\n      console.l", "\"checkHapModuleInfo iconId : \" + data.iconId", "ect(typeof (data[i].iconPath)).assertEqual(\"", "heckApplicationInfo icon : \" + info.icon);\n ", "nfo icon : \" + info.icon);\n      console.log", "nfo icon : \" + data.icon);\n      console.log", "heckApplicationInfo iconId : \" + info.iconId", " \"checkAbilityInfo2 icon : \" + data.icon);\n ", "fo2 icon : \" + data.icon);\n      console.log", "expect(typeof (info.iconId)).assertEqual(\"st", ";\n      expect(data.icon).assertEqual(\"$medi", "expect(typeof (data.icon)).assertEqual(\"stri", "ect(typeof (info[i].iconPath)).assertEqual(\"", "expect(typeof (info.icon)).assertEqual(\"stri", ";\n      expect(info.icon).assertEqual(\"$medi", " \"checkAbilityInfo2 iconId : \" + data.iconId", "assertEqual(\"$media:icon\");\n      expect(dat"], "files": ["getAbilityInfoJsunit2.test.ets", "MangerAbilityJsunit.test.js", "getHapModuleInfoJsunit.test.ets", "getHapModuleInfoJsunit_app1.test.ets", "FeatureAbilityJsunit.test.js", "getAbilityInfoJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "iconId", "api_method_all": "readonly iconId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 43, "since": 7, "api_used": "\u662f", "lines": ["heckApplicationInfo iconId : \" + info.iconId);", "o iconId : \" + data.iconId);\n      console.log", "o iconId : \" + data.iconId);\n        console.l", "o iconId : \" + info.iconId);\n      console.log", "+ \"checkAbilityInfo iconId : \" + data.iconId);", "        expect(data.iconId > 0).assertTrue();\n", "o iconId : \" + info.iconId);\n          console", "        expect(info.iconId).assertEqual(0);   ", ";\n      expect(data.iconId).assertEqual(0);\n  ", "expect(typeof (info.iconId)).assertEqual(\"stri", "g(\"checkAbilityInfo iconId : \" + data.iconId);", "(\"iconId : \" + info.iconId);\n        console.l", "o iconId : \" + data.iconId);\n          console", ";\n      expect(data.iconId > 0).assertTrue();\n", "       console.log(\"iconId : \" + info.iconId);", " \"checkAbilityInfo2 iconId : \" + data.iconId);", "expect(typeof (data.iconId)).assertEqual(\"numb", "\"checkHapModuleInfo iconId : \" + data.iconId);", "2 iconId : \" + data.iconId);\n      console.log", "        expect(data.iconId).assertEqual(0);\n  "], "files": ["getAbilityInfoJsunit2.test.ets", "getHapModuleInfoJsunit.test.ets", "FeatureAbilityJsunit.test.js", "getHapModuleInfoJsunit_app1.test.ets", "getAbilityInfoJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "process", "api_method_all": "readonly process: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 195, "since": 7, "api_used": "\u662f", "lines": ["        expect(data.process).assertEqual(\"\");\n ", ";\n      expect(info.process).assertEqual(\"\");\n ", "     expect(info[i].processName.length).assertL", " process : \" + info.process);\n          console", "+ \"checkAbilityInfo process : \" + data.process)", " process : \" + data.process);\n      console.log", "expect(typeof (info.process)).assertEqual(\"stri", ";\n      expect(data.process).assertEqual(\"\");\n ", "heckApplicationInfo process : \" + info.process)", "com.example.actskillprocesswithaccountcloseapi7", " process : \" + data.process);\n          console", "ect(typeof (info[i].processName)).assertEqual(\"", " \"checkAbilityInfo2 process : \" + data.process)", "expect(typeof (data.process)).assertEqual(\"stri", "        expect(info.process).assertEqual(\"\");\n ", " process : \" + info.process);\n      console.log"], "files": ["getAbilityInfoJsunit2.test.ets", "MangerAbilityJsunit.test.js", "Getactive.test.js", "getHapModuleInfoJsunit.test.ets", "startFULL.test.js", "getHapModuleInfoJsunit_app1.test.ets", "FeatureAbilityJsunit.test.js", "ContextJsunit.test.js", "ActsKillProcessTest.test.js", "getAbilityInfoJsunit.test.ets", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "supportedModes", "api_method_all": "readonly supportedModes: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 28, "since": 7, "api_used": "\u662f", "lines": ["        expect(data.supportedModes).assertEqual(0);\n\n ", ";\n      expect(info.supportedModes).assertEqual(0);\n  ", "\"checkHapModuleInfo supportedModes : \" + data.supporte", "expect(typeof (data.supportedModes)).assertEqual(\"numb", "tedModes : \" + info.supportedModes);\n\n        console.", "tedModes : \" + data.supportedModes);\n        console.l", "expect(typeof (info.supportedModes)).assertEqual(\"numb", "        expect(info.supportedModes).assertEqual(0);\n  ", "tedModes : \" + info.supportedModes);\n          console", "       console.log(\"supportedModes : \" + info.supporte", "tedModes : \" + data.supportedModes);\n          console", "heckApplicationInfo supportedModes : \" + info.supporte", ";\n      expect(data.supportedModes).assertEqual(0);\n  ", "tedModes : \" + data.supportedModes);\n      console.log", "tedModes : \" + info.supportedModes);\n\n      console.lo"], "files": ["getAbilityInfoJsunit2.test.ets", "getHapModuleInfoJsunit.test.ets", "FeatureAbilityJsunit.test.js", "getHapModuleInfoJsunit_app1.test.ets", "getAbilityInfoJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "moduleSourceDirs", "api_method_all": "readonly moduleSourceDirs: Array<string>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 31, "since": 7, "api_used": "\u662f", "lines": ["pplicationInfo info.moduleSourceDirs[\" + j + \"] : \" + in", "       console.log(\"moduleSourceDirs length : \" + info.m", "      }else if(info.moduleSourceDirs.length == 2) {\n    ", "var j = 0; j < info.moduleSourceDirs.length; j++) {\n    ", "s length : \" + info.moduleSourceDirs.length);\n          ", "heckApplicationInfo moduleSourceDirs length : \" + info.m", "+ j + \"] : \" + info.moduleSourceDirs[j]);\n          }\n  ", "  console.log(\"info.moduleSourceDirs[\" + j + \"] : \" + in", "\n          if (info.moduleSourceDirs.length == 1){\n     ", "n\");\n      if (info.moduleSourceDirs.length == 1){\n     ", "+ j + \"] : \" + info.moduleSourceDirs[j]);\n        }\n    ", "(Array.isArray(info.moduleSourceDirs)).assertEqual(true)", "s length : \" + info.moduleSourceDirs.length);\n      for ", "s length : \" + info.moduleSourceDirs.length);\n        fo", "+ j + \"] : \" + info.moduleSourceDirs[j]);\n      }\n      ", "        expect(info.moduleSourceDirs[0]).assertEqual(\"/d"], "files": ["getAbilityInfoJsunit.test.ets", "getAbilityInfoJsunit2.test.ets", "FeatureAbilityJsunit.test.js", "getHapModuleInfoJsunit_app1.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "permissions", "api_method_all": "readonly permissions: Array<string>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 58, "since": 7, "api_used": "\u662f", "lines": ["+ k + \"] : \" + info.permissions[k]);\n          }\n  ", "s length : \" + info.permissions.length);\n        fo", "  console.log(\"info.permissions[\" + j + \"] : \" + in", "+ j + \"] : \" + info.permissions[j]);\n        }\n    ", "etAbilityInfo2 data.permissions[\" + j + \"] : \" + da", " \"checkAbilityInfo2 permissions length : \" + data.p", "s length : \" + info.permissions.length);\n      for ", "+ \"checkAbilityInfo permissions length : \" + data.p", "+ j + \"] : \" + data.permissions[j]);\n          }\n  ", "       console.log(\"permissions length : \" + info.p", "var j = 0; j < data.permissions.length; j++) {\n    ", "pplicationInfo info.permissions[\" + k + \"] : \" + in", "s length : \" + info.permissions.length);\n          ", "+ j + \"] : \" + data.permissions[j]);\n      }\n      ", "(Array.isArray(data.permissions)).assertEqual(true)", "c: Requests certain permissions from the system.\n  ", "var k = 0; k < info.permissions.length; k++) {\n    ", "(Array.isArray(info.permissions)).assertEqual(true)", " : Requests certain permissions from the system.\n  ", "heckApplicationInfo permissions length : \" + info.p", "s length : \" + data.permissions.length);\n      for ", "+ k + \"] : \" + info.permissions[k]);\n      }\n      ", "var j = 0; j < info.permissions.length; j++) {\n    ", "s length : \" + data.permissions.length);\n          ", "getAbilityInfo data.permissions[\" + j + \"] : \" + da", "ission: The list of permissions to be requested.\n  "], "files": ["getAbilityInfoJsunit2.test.ets", "getHapModuleInfoJsunit.test.ets", "getHapModuleInfoJsunit_app1.test.ets", "FeatureAbilityJsunit.test.js", "ContextJsunit.test.js", "getAbilityInfoJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "moduleInfos", "api_method_all": "readonly moduleInfos: Array<ModuleInfo>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 85, "since": 7, "api_used": "\u662f", "lines": [" {\n        if (info.moduleInfos[0].moduleName == \"m", "s length : \" + info.moduleInfos.length);\n      for ", "        expect(info.moduleInfos[0].moduleSourceDir)", "        expect(info.moduleInfos[1].moduleName).asse", "        expect(info.moduleInfos[2].moduleSourceDir)", "ourceDir : \" + info.moduleInfos[i].moduleSourceDir)", "pplicationInfo info.moduleInfos[\" + i + \"].moduleSo", "(Array.isArray(info.moduleInfos)).assertEqual(true)", "heckApplicationInfo moduleInfos length : \" + info.m", "duleName : \" + info.moduleInfos[i].moduleName);\n   ", "        expect(info.moduleInfos[2].moduleName).asse", "var i = 0; i < info.moduleInfos.length; i++) {\n    ", " : \"\n        + info.moduleInfos[i].moduleSourceDir)", " : \"\n        + info.moduleInfos[i].moduleName);\n   ", "        expect(info.moduleInfos[1].moduleSourceDir)", "pplicationInfo info.moduleInfos[\" + i + \"].moduleNa", "        expect(info.moduleInfos[0].moduleName).asse"], "files": ["getAbilityInfoJsunit.test.ets", "getAbilityInfoJsunit2.test.ets", "FeatureAbilityJsunit.test.js", "getHapModuleInfoJsunit_app1.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "entryDir", "api_method_all": "readonly entryDir: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 16, "since": 7, "api_used": "\u662f", "lines": ["entryDir : \" + info.entryDir);\n\n      expect(typ", "heckApplicationInfo entryDir : \" + info.entryDir", "entryDir : \" + info.entryDir);\n\n        expect(t", "       console.log(\"entryDir : \" + info.entryDir", "entryDir : \" + info.entryDir);\n          expect(", ";\n      expect(info.entryDir).assertEqual(\"/data", "expect(typeof (info.entryDir)).assertEqual(\"stri", "        expect(info.entryDir).assertEqual(\"/data"], "files": ["getAbilityInfoJsunit.test.ets", "getAbilityInfoJsunit2.test.ets", "FeatureAbilityJsunit.test.js", "getHapModuleInfoJsunit_app1.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "codePath", "api_method_all": "readonly codePath: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["JSON.stringify(data.codePath))\n            expec", "JSON.stringify(data.codePath)).\n            asse"], "files": ["ApplicationInfoJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "metaData", "api_method_all": "readonly metaData: Map<string, Array<CustomizeData>>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 20, "since": 8, "api_used": "\u662f", "lines": ["    expect(dataB[0].metaData.customizeData[0].na", "     expect(data[i].metaData.customizeData[0].na", " expect(datainfo[i].metaData.customizeData[0].va", " expect(datainfo[i].metaData.customizeData[0].na", "    expect(dataB[0].metaData.customizeData[0].va", "     expect(data[i].metaData.customizeData[0].va"], "files": ["FormsZeroAndOneJsunit.test.js", "FormsOneAndOneJsunit.test.js", "FormsOneAndTwoJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "metadata", "api_method_all": "readonly metadata: Map<string, Array<Metadata>>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "removable", "api_method_all": "readonly removable: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["ole.log(TAG + \"data.removable: \" + JSON.stringify", "JSON.stringify(data.removable)).assertEqual(\"true", "JSON.stringify(data.removable))\n            expec"], "files": ["ApplicationInfoJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "accessTokenId", "api_method_all": "readonly accessTokenId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["        expect(data.accessTokenId == 537317578).asser", "ole.log(TAG + \"data.accessTokenId: \" + JSON.stringify", "JSON.stringify(data.accessTokenId))\n            expec"], "files": ["ApplicationInfoJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "uid", "api_method_all": "readonly uid: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 45, "since": 8, "api_used": "\u662f", "lines": ["      uid :datainfo.uid\n        }\n        v", "     expect(data[0].uid > 0).assertTrue();\n", " expect(dataInfo[i].uid).assertLarger(2000)", "\n        expect(app.uid > 0).assertTrue();\n", "console.log('==list.uid==>' + JSON.stringif", "JSON.stringify(list.uid))\n    }\n\n    functi", "     expect(data[i].uid > 0).assertTrue();\n", "      uid :datainfo.uid\n        }\n        c", "        expect(list.uid > 0).assertTrue()\n ", "ect(typeof (info[i].uid)).assertEqual(\"numb", "     expect(info[i].uid).assertLarger(0);\n ", " expect(dataInfo[i].uid).assertLarger(10000", "pid :0,\n            uid :datainfo.uid\n     "], "files": ["MangerAbilityJsunit.test.js", "startFULL.test.js", "ContextJsunit.test.js", "ActsProcessManageJsTest.test.js", "Getactive.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ApplicationInfo", "api_method_name": "entityType", "api_method_all": "readonly entityType: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}