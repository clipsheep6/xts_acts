{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\application\\abilityMonitor", "api": [{"api_class_name": "AbilityMonitor", "api_method_all": "export interface AbilityMonitor {\n    \n    abilityName: string;\n\n    \n    onAbilityCreate?:() => void;\n\n    \n    onAbilityForeground?:() => void;\n\n    \n    onAbilityBackground?:() => void;\n\n    \n    onAbilityDestroy?:() => void;\n\n    \n    onWindowStageCreate?:() => void;\n\n    \n    onWindowStageRestore?:() => void;\n\n    \n    onWindowStageDestroy?:() => void;\n}", "api_method_name": "AbilityMonitor", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 3, "since": 9, "api_used": "\u662f", "lines": ["debug(\"ACTS_====>addAbilityMonitor finish e====\");\n   ", "debug(\"ACTS_====>addAbilityMonitor finish b====\");\n   ", "AbilityDelegator.addAbilityMonitor(\n            {abili"], "files": ["ActsAbilityLifecycleStateNewTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityMonitor", "api_method_name": "onAbilityCreate", "api_method_all": "onAbilityCreate?:() => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityMonitor", "api_method_name": "onAbilityForeground", "api_method_all": "onAbilityForeground?:() => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 5, "since": 9, "api_used": "\u662f", "lines": ["le.debug(\"====>ACTS_onAbilityForegroundCallback====AbilityD", "onAbilityForeground:onAbilityForegroundCallback,\n          ", ");\n        function onAbilityForegroundCallback(){\n        ", "lity3',\n            onAbilityForeground:onAbilityForeground", "le.debug(\"====>ACTS_onAbilityForegroundCallback====\");\n    "], "files": ["ActsAbilityLifecycleStateNewTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityMonitor", "api_method_name": "onAbilityBackground", "api_method_all": "onAbilityBackground?:() => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityMonitor", "api_method_name": "onAbilityDestroy", "api_method_all": "onAbilityDestroy?:() => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 4, "since": 9, "api_used": "\u662f", "lines": ["le.debug(\"====>ACTS_onAbilityDestroyCallback====\");\n    ", "   onAbilityDestroy:onAbilityDestroyCallback}).then(()=>", " }\n        function onAbilityDestroyCallback(){\n        ", "llback,\n            onAbilityDestroy:onAbilityDestroyCal"], "files": ["ActsAbilityLifecycleStateNewTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityMonitor", "api_method_name": "onWindowStageCreate", "api_method_all": "onWindowStageCreate?:() => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityMonitor", "api_method_name": "onWindowStageRestore", "api_method_all": "onWindowStageRestore?:() => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityMonitor", "api_method_name": "onWindowStageDestroy", "api_method_all": "onWindowStageDestroy?:() => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityMonitor", "api_method_name": "abilityName", "api_method_all": "abilityName: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 339, "since": 9, "api_used": "\u662f", "lines": ["ypeof (info[i].want.abilityName)).assertEqual(\"stri", "ndexOf(data[i].want.abilityName)).assertLarger(-1);", "expect(data[i].want.abilityName.length).assertLarge", "ypeof (data[i].want.abilityName)).assertEqual(\"stri", "                    abilityName: \"com.example.Verif", "             expect(abilityNameList.indexOf(data[i]", "             expect(abilityNameList.indexOf(info[i]", "cjsunit/index'\n\nvar abilityNameList = [\n    \"com.oh", " if (result[i].want.abilityName != 'com.example.act", "expect(info[i].want.abilityName.length).assertLarge", "                    abilityName: \"com.example.Simul", "m 'deccjsunit'\n\nvar abilityNameList = [\n    \"com.oh", "ndexOf(info[i].want.abilityName)).assertLarger(-1);", "cjsunit/index'\n\nlet abilityNameList = [\n    \"com.oh", "m 'deccjsunit'\n\nlet abilityNameList = [\n    \"com.oh"], "files": ["ActsGetWantAllTest.js", "ActsProcessManageJsTest.test.js", "taskSwitchJsunit.test.js", "app.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "ActsAbilityLifecycleStateNewTest.test.js", "amsMissionSnapshotTest.test.js", "MangerAbilityJsunit.test.js", "LockNew.js", "startFULL.test.js", "ActsKillProcessTest.test.js", "index.js", "MissionManager.test.js", "index.ets", "ActsStServiceAbilityClientCaseTest.test.js", "FeatureAbilityJsunit.test.js", "AbilityDisableTest.js", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}]}