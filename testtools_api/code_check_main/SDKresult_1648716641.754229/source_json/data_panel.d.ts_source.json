{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@internal\\component\\ets\\data_panel", "api": [{"api_class_name": "DataPanelType", "api_method_all": "declare enum DataPanelType {\n  \n  Line,\n\n  \n  Circle,\n}", "api_method_name": "DataPanelType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["0], max: 100, type: DataPanelType.Line })\n        .wi", "0], max: 100, type: DataPanelType.Circle})\n        .w", ".type).assertEqual(\"DataPanelType.Circle\")\n      cons", "tringify(obj.$attrs.DataPanelType));\n      console.lo"], "files": ["DataPanelJsunit.test.ets", "DataPanel.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "DataPanelType", "api_method_name": "Line", "api_method_all": "Line,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 826, "since": 8, "api_used": "\u662f", "lines": ["1660);\n  }\n\n  createLinearGradient() {\n    l", "Cap: LineCapStyle = LineCapStyle.Butt;\n  @St", "    this.context.setLineDash([0, 0]);\n  }\n\n ", " this.context.createLinearGradient(50, 1900,", "t.ets';\nimport enumsLineCapStyleJsunit from ", "eforeEach push enumsLineCapStyleTest page re", " console.info('enumsLineCapStyleTest_0100 ST", " + obj.$attrs.strokeLineCap)\n      expect(ob", "iperDisplayMode.AutoLinear\n  @State edgeEffe", " console.info(\"enumsLineCapStyleTest_0100 co", "j = this.context.getLineDash();\n  }\n\n  setPi", "eforeEach push enumsLineCapStyleTest page er", "y\n@Component\nstruct LineExample {\n  @State s", "o('obj.$attrs.strokeLineCap' + obj.$attrs.st", "ashOffset(10).strokeLineCap(LineCapStyle.But", "===============enumsLineCapStyle test before", "tate strokeLineCap: LineCapStyle = LineCapSt", "yle = ProgressStyle.Linear\n  private stateCh", "15 }) {\n      Text('Linear Progress').fontSi", "beforeEach get enumsLineCapStyleTest state p", "   Column() {\n      Line({ width: 50, height", "         this.createLinearGradient();\n      ", "tyle: ProgressStyle.Linear }).width(200).val", "athJsunit();\n  enumsLineCapStyleJsunit();\n  ", "t(10).strokeLineCap(LineCapStyle.Butt)\n     ", "    .strokeLineJoin(LineJoinStyle.Round).ant", "TTRS_MAXLINES = 'maxLines'\nconst ATTRS_DECOR", "tColor(0xCCCCCC).maxLines(1)\n        Column(", " console.info('enumsLineCapStyleTest_0100 EN", " DEBUGLINE = '$debugLine'\nconst ATTRS = '$at", " {\n  describe('enumsLineCapStyle', function ", "neCap).assertEqual('LineCapStyle.Butt');\n   ", " 4000, curve: Curve.Linear }, () => {\n      ", "= 0;\n  @State strokeLineCap: LineCapStyle = ", "   uri: 'pages/enumsLineCapStyle',\n      }\n ", ".Butt)\n      .strokeLineJoin(LineJoinStyle.R", "Jsunit from './EnmusLineCapStyleJsunit.test.", "    this.context.setLineDash([10, 20]);\n    ", "ct(obj.$attrs.strokeLineCap).assertEqual('Li", "00, 100);\n  }\n\n  getLineDash() {\n    this.co", "tyle: ProgressStyle.Linear }).color(Color.Re", "  });\n\n    it('enumsLineCapStyleTest_0100', "], "files": ["pageTransition2.ets", "Shape.ets", "pathProps.test.js", "circleProps.test.js", "EnmusLineCapStyleJsunit.test.ets", "ShapeJsunit.test.ets", "canvas.ets", "Text.ets", "SpanJsunit.test.ets", "lineProps.test.js", "divider.ets", "TextJsunit.test.ets", "swiper.ets", "Span.ets", "Constants.ets", "polylineProps.test.js", "Progress.ets", "commonComponentJsApi.test.js", "curves.ets", "line.ets", "ellipseProps.test.js", "DataPanel.ets", "chartProps.test.js", "pageTransition.ets", "progress.ets", "swiperProps.test.js", "WebPage.ets", "polygonProps.test.js", "AnimateJsunit.test.ets", "enumsLineCapStyle.ets", "index.js", "LineJsunit.test.ets", "Divider.ets", "DividerJsunit.test.ets", "ProgressJsunit.test.ets", "animateTransformProps.test.js", "svgProps.test.js", "shape.ets", "animateMotionProps.test.js", "motionPath.ets", "List.test.ets", "rectProps.test.js", "overlay.ets", "animateProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataPanelType", "api_method_name": "Circle", "api_method_all": "Circle,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 116, "since": 8, "api_used": "\u662f", "lines": ["  console.info('testCircleFillOpacityPropOne S", "  console.info('testCircleOpacityPropTwo START", "shape).assertEqual('Circle');\n      console.in", "type: DataPanelType.Circle})\n        .width(th", "\n     \n     it('testCircleFillOpacityPropOne',", "  console.info('testCircleOpacityPropThree STA", "ceAround }) {\n      Circle({ width: 150, heigh", "monShapeMethod= new Circle({ width: 280, heigh", "\n     \n     it('testCircleFillOpacityPropThree", " this.$element(\"typeCircle\").getInspector()\n  ", ",\n        qrcodeTypeCircle : null,\n        qrc", "ircleJsunit from './CircleJsunit.test.ets';\nim", "  console.info('testCircleFillOpacityPropTwo S", "\n     \n     it('testCircleOpacityPropOne', 0, ", "rue;\n  @State isClipCircle:boolean = true;\n  @", "  it('testButtonTypeCircle', 0, async function", "peCircle : this.typeCircle,\n            typeTe", "      testButtonTypeCircle\n     * @tc.desc    ", "\n     \n     it('testCircleFillProp', 0, async ", "info('testButtonTypeCircle START');\n        co", "  console.info('testCircleFillRulePropOne STAR", "\n     \n     it('testCircleFillOpacityPropTwo',", "  console.info('testCircleOpacityPropOne START", "\n     \n     it('testCircleOpacityPropTwo', 0, ", "\n     \n     it('testCircleFillRulePropTwo', 0,", "shape).assertEqual('Circle');\n      let strJso", "$element(\"qrcodeTypeCircle\").getInspector()\n  ", "qual(\"DataPanelType.Circle\")\n      console.log", "onType = ButtonType.Circle\n  private content: ", "lobalThis.value.typeCircle);\n        console.i", "  console.info('testCircleStrokeProp START');\n", "  console.info('testCircleFillRulePropTwo STAR", "d).assertEqual('typeCircle')\n        expect(ob", ": null,\n        typeCircle : null,\n        typ", "\n     \n     it('testCircleOpacityPropThree', 0", "  console.info('testCircleFillProp START');\n  ", "()\n        this.typeCircle = this.$element(\"ty", "y\n@Component\nstruct CircleExample {\n  @State w", "is.typeCapsule, typeCircle : this.typeCircle,\n", "rtEqual('ButtonType.Circle')\n      expect(obj.", "     this.qrcodeTypeCircle = this.$element(\"qr", "  console.info('testCircleFillOpacityPropThree", "\n     \n     it('testCircleStrokeProp', 0, asyn", "\n     \n     it('testCircleFillRulePropOne', 0,", "le : this.qrcodeTypeCircle,\n            qrcode", "\n     \n     it('testCircleStrokeDashArrayProp'", "          qrcodeTypeCircle : this.qrcodeTypeCi", "eight: 150 })\n      Circle()\n        .width(`$", "this.maskType = new Circle({ width: 280, heigh", " { type: ButtonType.Circle, stateEffect: this."], "files": ["DataPanelJsunit.test.ets", "ButtonJsunit.test.ets", "circle.ets", "List.test.ets", "circleProps.test.js", "Button.ets", "ShapeClippingJsunit.test.ets", "commonComponentJsApi.test.js", "index.js", "shapeClipping.ets", "qrcodeProps.test.js", "DataPanel.ets", "buttonProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataPanelOptions", "api_method_all": "declare interface DataPanelOptions {\n  \n  values: number[];\n\n  \n  max?: number;\n\n  \n  type?: DataPanelType;\n}", "api_method_name": "DataPanelOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataPanelOptions", "api_method_name": "values", "api_method_all": "values: number[]", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 61, "since": 7, "api_used": "\u662f", "lines": ["[\"+name+\"Props] get values value is: \" + JSON.", "  expect(obj.$attrs.values).assertEqual('10;30", "ctor()\n        this.valuesPropNone = this.$ele", "rop : null,\n        valuesPropNone : null,\n   ", "different textAlign values\n        ctx.textAli", "luesPropNone : this.valuesPropNone,\n        }\n", "e.log(\"cd DataPanel values1 \" + typeof ([20, 4", "one : null,\n        valuesProp : null,\n       ", "  expect(obj.$attrs.values).assertEqual(undefi", "ctor()\n        this.valuesProp = this.$element", "tringify(obj.$attrs.values));\n        done();\n", "tringify(obj.$attrs.values));\n      console.lo", "ne = this.$element(\"valuesPropNone\").getInspec", "\n\n      DataPanel({ values: [20, 40, 20], max:", "se(globalThis.value.valuesProp);\n        conso", "rs.id).assertEqual('valuesProp')\n        expec", "se(globalThis.value.valuesPropNone);\n        c", "esProp,\n            valuesPropNone : this.valu", "e.log(\"cd DataPanel values\" + JSON.stringify(o", "e.log(\"cd DataPanel values \" + typeof (obj.$at", "rs.id).assertEqual('valuesPropNone')\n        e", "opNone,\n            valuesProp : this.valuesPr", "tringify(obj.$attrs.values)).assertEqual('[20,", "op = this.$element(\"valuesProp\").getInspector(", ")\n      DataPanel({ values: [20, 40, 20], max:", " typeof (obj.$attrs.values));\n      console.lo", "luesPropNone : this.valuesPropNone,\n          ", "  valuesProp : this.valuesProp,\n            va"], "files": ["animateTransformProps.test.js", "DataPanelJsunit.test.ets", "index.js", "DataPanel.ets", "animateProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataPanelOptions", "api_method_name": "max", "api_method_all": "max?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 147, "since": 7, "api_used": "\u662f", "lines": ["overflow }\n  @State maxLines: number = 2\n  ", "lues: [20, 40, 20], max: 100})\n        .wid", "tringify(obj.$attrs.maxFontSize));\n      co", "arWidth(210)\n      .maxSideBarWidth(260)\n  ", "ineOffset)\n        .maxLines(2)\n        .te", "erSpacing)\n        .maxFontSize(this.maxFon", "fontColor(0xCCCCCC).maxLines(1)\n        Col", "  expect(obj.$attrs.maxCount).assertEqual('", "his.counts,\n        maxCount: 99,\n        s", "eBarWidth(210)\n    .maxSideBarWidth(260)\n  ", "umber = 15\n  @State maxFontSize: number = 1", "e = { minWidth: 20, maxWidth: 200, minHeigh", "tringify(obj.$attrs.maxCount))\n      consol", "onsole.log(\"cd text maxFontSize\" + JSON.str", "onsole.log(\"cd text maxLines\" + JSON.string", ".$attrs.constructor.max).assertEqual(100.00", ".Right,\n            maxCount: 99,\n         ", "tringify(obj.$attrs.maxLines));\n      conso", "tringify(obj.$attrs.max));\n      console.lo", "  expect(obj.$attrs.maxLines).assertEqual(\"", "flow.Clip)\n        .maxLines(2)\n        .te", "e({minWidth: '10%', maxWidth: '50%', height", "sole.log(\"yr badge0 maxCount-'99'\" + JSON.s", ".log(\"cd  DataPanel max\" + JSON.stringify(o", "  expect(obj.$attrs.max).assertEqual(100.00", "el('10')\n          .maxLabel('10')\n        ", "n.Left,\n            maxCount: 99,\n         ", "{ value: 0, min: 0, max: 100 })\n        .ke", "lues: [20, 40, 20], max: 100, type: DataPan", "  min: 0,\n          max: 100,\n          ste", "ghtTop,\n            maxCount: 99,\n         ", " 200, minHeight: 0, maxHeight: 50 }\n  @Stat", "FF0000')\n          .maxLength(10)\n         ", "min: 0,\n            max: 100,\n            s", "t ATTRS_MAXLINES = 'maxLines'\nconst ATTRS_D", "  .maxFontSize(this.maxFontSize)\n        .f"], "files": ["BadgeJsunit.test.ets", "Slider.ets", "badge.ets", "Text.ets", "gauge.ets", "TextInput.ets", "TextJsunit.test.ets", "Constants.ets", "sideBar.ets", "Sidebar.ets", "DataPanel.ets", "SliderJsunit.test.ets", "sliderProps.test.js", "inputProps.test.js", "index.js", "mediaquery.test.js", "backgroundAndSizeSetting.ets", "badgeProps.test.js", "DataPanelJsunit.test.ets", "slider.ets", "textareaProps.test.js", "Badge.ets", "overlay.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "DataPanelOptions", "api_method_name": "type", "api_method_all": "type?: DataPanelType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 5337, "since": 8, "api_used": "\u662f", "lines": ["ata: {\n            \"type\": \"PanelType.Miniba", "er0100] expect(obj.$type) is: \" + (obj.$type", "is: \" + (obj.$attrs.type));\n      done();\n  ", "log0100] obj.$attrs.type is: \" + (obj.$attrs", ";\n      expect(obj.$type).assertEqual('Stepp", "    y: downY,\n      type: TouchType.Down,\n  ", "og0100] expect(obj.$type) is: \" + (obj.$type", "eck\n\nconst TYPE = '$type'\nconst ID = '$ID'\nc", "pe = eventData.data.type;\n      }\n    }\n  }\n", "        expect(obj.$type).assertEqual('Flex'", "      y: upY,\n      type: TouchType.Up,\n    ", ";\n      expect(obj.$type).assertEqual('TextA", "bj.$attrs.transform.type)\n        .assertEqu", ";\n      expect(obj.$type).assertEqual('GridC", "  expect(obj.$attrs.type).assertEqual(\"Panel", ";\n      expect(obj.$type).assertEqual('Swipe", "      .decoration({ type: this.decoration, c", "ean = true\n  @State type: PanelType = PanelT", " if (eventData.data.type != null) {\n        ", "type) is: \" + (obj.$type));\n      console.in", "pe = eventData.data.type;\n      }\n      if (", "extInput')\n        .type(this.inputType)\n   ", "          if (event.type === TouchType.Down)", ";\n      expect(obj.$type).assertEqual('Image", "          if (event.type === TouchType.Move)", ";\n      expect(obj.$type).assertEqual('Flex'", "  if(eventData.data.type != null) {\n        ", "eTest_0200 obj.obj.$type is: \" + obj.$type);", ".$type is: \" + obj.$type);\n      var res = o", "ata: {\n            \"type\": 'InputType.Email'", ";\n      expect(obj.$type).assertEqual('Gauge", "ull) {\n        this.type = eventData.data.ty", "          if (event.type === TouchType.Up) {", ";\n      expect(obj.$type).assertEqual('Text'", "   }\n      }\n      .type(this.type).mode(thi", " }\n      .type(this.type).mode(this.mode)\n  ", ";\n      expect(obj.$type).assertEqual('Row')", "yStep * i),\n        type: TouchType.Move\n   "], "files": ["pageTransition2.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "listItemGroupProps.test.js", "pathProps.test.js", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "Navigator.ets", "textProps.test.js", "ParallelGestureJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "Row.ets", "TextPickerJsunit.test.ets", "Span.ets", "polylineProps.test.js", "Panel.ets", "sourceType.ets", "searchProps.test.js", "spanProps.test.js", "toolbarItemProps.test.js", "TapGesture.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "transition.ets", "textInput.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "GridJsnuit.test.ets", "button.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "touch.ets", "circleProps.test.js", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "Text.ets", "SpanJsunit.test.ets", "stackProps.test.js", "PanelJsunit.test.ets", "StepperJsunit.test.ets", "PanGestureJsunit.test.ets", "ButtonJsunit.test.ets", "TextJsunit.test.ets", "toggle.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "text.ets", "TransitionJsunit.test.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "BlankJsunit.test.ets", "ResponseRegionJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "PanGesture.ets", "svgProps.test.js", "labelProps.test.js", "image.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "MotionPathJsunit.test.ets", "Utils.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "popupProps.test.js", "ToggleJsunit.test.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "Button.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "gridColProps.test.js", "span.ets", "NavigatorCode.ets", "buttonProps.test.js", "animateProps.test.js", "AnimationStatusJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "BadgeJsunit.test.ets", "pickerViewProps.test.js", "divProps.test.js", "switchProps.test.js", "TextInput.ets", "Constants.ets", "ellipseProps.test.js", "TransFormJsunit.test.ets", "DataPanel.ets", "Grid.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SharedTransitionJsunit.test.ets", "pageTransition.ets", "datePicker.ets", "sliderProps.test.js", "swiperProps.test.js", "WebPage.ets", "TextTimerJsunit.test.ets", "polygonProps.test.js", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "Link.ets", "GridItem.ets", "tspanProps.test.js", "imageProps.test.js", "Toggle.ets", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "panelProps.test.js", "sharedTransition.ets", "panel.ets", "menuProps.test.js", "rectProps.test.js", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "DataPanelInterface", "api_method_all": "interface DataPanelInterface {\n  \n  (options: DataPanelOptions): DataPanelAttribute;\n}", "api_method_name": "DataPanelInterface", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataPanelInterface", "api_method_name": "options", "api_method_all": "(options: DataPanelOptions): DataPanelAttribute", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 791, "since": 7, "api_used": "\u662f", "lines": ["= await router.push(options);\n          await U", " start\");\n      let options = {\n        uri: 'p", "(obj.$attrs.overlay.options.offset.x).assertEqu", "(obj.$attrs.overlay.options.align).assertEqual(", "(obj.$attrs.overlay.options.offset.y).assertEqu", " (done) {\n      let options = {\n        uri: 'p"], "files": ["listItemGroupProps.test.js", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "EnmusFlexAlignJsunit.test.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "svgProps.test.js", "labelProps.test.js", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "ratingProps.test.js", "stepperProps.test.js", "MotionPathJsunit.test.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "popupProps.test.js", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "gridColProps.test.js", "buttonProps.test.js", "animateProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "pickerViewProps.test.js", "CircleJsunit.test.ets", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "swiperProps.test.js", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "polygonProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataPanelAttribute", "api_method_all": "declare class DataPanelAttribute extends CommonMethod<DataPanelAttribute> {\n  \n  closeEffect(value: boolean): DataPanelAttribute;\n}", "api_method_name": "DataPanelAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataPanelAttribute", "api_method_name": "closeEffect", "api_method_all": "closeEffect(value: boolean): DataPanelAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 12, "since": 0, "api_used": "\u662f", "lines": ["tringify(obj.$attrs.closeEffect))\n      expect(obj.", "  expect(obj.$attrs.closeEffect).assertEqual(\"true\"", "        })\n        .closeEffect(true)\n      DataPan", "  expect(obj.$attrs.closeEffect).assertEqual(\"false", " console.log(\"panel closeEffect\" + JSON.stringify(o", "        })\n        .closeEffect(false)\n    }\n    .k", "        })\n        .closeEffect(false)\n\n      DataP"], "files": ["DataPanelJsunit.test.ets", "DataPanel.ets"], "is_white": " ", "desc": " "}]}