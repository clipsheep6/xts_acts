{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@internal\\component\\ets\\stepper_item", "api": [{"api_class_name": "ItemState", "api_method_all": "declare enum ItemState {\n  \n  Normal,\n\n  \n  Disabled,\n\n  \n  Waiting,\n\n  \n  Skip,\n}", "api_method_name": "ItemState", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 19, "since": 8, "api_used": "\u662f", "lines": ["ItemState.Waiting ? ItemState.Normal : ItemState.", "tState: ItemState = ItemState.Normal\n  @State sec", " ItemState.Normal : ItemState.Skip\n          })\n ", "dState: ItemState = ItemState.Normal\n\n  build() {", " ItemState.Normal : ItemState.Waiting\n          }", "dState: ItemState = ItemState.Normal\n  @State dis", "sabled: ItemState = ItemState.Normal\n\n  build() {", "== ItemState.Skip ? ItemState.Normal : ItemState.", "this.firstState === ItemState.Skip ? ItemState.No", " @State firstState: ItemState = ItemState.Normal\n", "his.secondState === ItemState.Waiting ? ItemState", "\n  @State disabled: ItemState = ItemState.Normal\n", "@State secondState: ItemState = ItemState.Normal\n"], "files": ["Stepper.ets", "stepper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ItemState", "api_method_name": "Normal", "api_method_all": "Normal,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 102, "since": 8, "api_used": "\u662f", "lines": ["ntStyle\": FontStyle.Normal\n          }\n       ", "assertEqual('Sticky.Normal');\n      console.in", ") {\n        Text(\"3.Normal\")\n      }.type(Butt", "ertEqual('FontStyle.Normal');\n      done();\n  ", "putType = InputType.Normal;\n  @State fontSize:", "rtEqual('FontWeight.Normal');\n      done();\n  ", "sertEqual(\"TextCase.Normal\")\n      expect(obj.", "rtEqual('ButtonType.Normal')\n      console.inf", "       Text('sticky:Normal , item2222')\n      ", "       Text('sticky:Normal , click me edit lis", "ky: Sticky = Sticky.Normal;\n  @State editMode:", "emState = ItemState.Normal\n\n  build() {\n    St", "sertEqual('TextCase.Normal');\n      done();\n  ", "    Text('Orange 18 Normal source-sans-pro tex", "Waiting ? ItemState.Normal : ItemState.Waiting", "PlayMode = PlayMode.Normal\n\n  onPageShow() {\n ", "fontStyle(FontStyle.Normal)\n        .fontColor", " .textCase(TextCase.Normal)\n            .fontC", "emState = ItemState.Normal\n  @State secondStat", "  }.type(ButtonType.Normal)\n      .backgroundC", "te.Skip ? ItemState.Normal : ItemState.Skip\n  ", "emState = ItemState.Normal\n  @State disabled: ", "onType = ButtonType.Normal;\n  @State fontSizeV", "', style: FontStyle.Normal }\n  @State fontColo", "rtEqual(\"FontWeight.Normal\")\n      expect(obj.", "fontStyle(FontStyle.Normal)\n        .fontWeigh", "', style: FontStyle.Normal })\n        .key('se", "PlayMode = PlayMode.Normal\n\n  build() {\n    Fl", " { type: ButtonType.Normal })\n            .bac", "ntWeight(FontWeight.Normal)\n        .textAlign", "rtEqual('ButtonType.Normal');\n      done();\n  ", "sertEqual('TextCase.Normal')\n      expect(obj.", " TextCase= TextCase.Normal\n  @State fontSizeVa", "', style: FontStyle.Normal })\n        .selecte", "   style: FontStyle.Normal\n        })\n        ", "r, style: FontStyle.Normal })\n        .itemSiz", "', style: FontStyle.Normal\n      };\n      try ", "    }.sticky(Sticky.Normal)\n          .editabl", "', style: FontStyle.Normal })\n        .optionF", " TextCase= TextCase.Normal\n  @State decoration"], "files": ["animate.ets", "Select.ets", "SelectJsunit.test.ets", "ListItemJsunit.test.ets", "Stepper.ets", "ListItem.ets", "playMode.ets", "Text.ets", "SpanJsunit.test.ets", "textStyle.ets", "ButtonJsunit.test.ets", "TextInput.ets", "TextJsunit.test.ets", "Span.ets", "AlphabetIndexer.ets", "listItemProps.test.js", "TextStyleJsunit.test.ets", "TextArea.ets", "index.js", "Link.ets", "TextInputJsunit.test.ets", "stepper.ets", "select.ets", "textArea.ets", "textInput.ets", "listItem.ets", "Button.ets", "search.ets", "button.ets", "span.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ItemState", "api_method_name": "Disabled", "api_method_all": "Disabled,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 284, "since": 8, "api_used": "\u662f", "lines": ["alse: this.indicatorDisabledPropFalse,\n         ", ".$element(\"indicatorDisabledPropFalse\").getInspe", " \n    it('testCanvasDisabledPropTrue', 0, async ", "sole.info('testChartDisabledPropTrue START');\n  ", "  \n    it('testbadgeDisabledPropTrue', 0, async ", "sole.info('testChartDisabledPropFalse START');\n ", "ole.info('testdialogDisabledPropNone START');\n  ", "      this.indicatorDisabledPropTrue = this.$ele", "ole.info('testCanvasDisabledPropFalse START')\n  ", "\n     it('testdialogDisabledPropNone', 0, async ", "nsole.info('testformDisabledPropTrue START');\n  ", " \n    it('testCanvasDisabledPropFalse', 0, async", "    \n    it('testDivDisabledPropFalse', 0, async", "sole.info('testChartDisabledPropNone START');\n  ", " \n    it('testButtonDisabledPropNone', 0, async ", "    \n    it('testDivDisabledPropTrue', 0, async ", ".$element(\"indicatorDisabledPropTrue\").getInspec", "           indicatorDisabledPropTrue: this.indic", "  \n    it('testChartDisabledPropFalse', 0, async", "onsole.info('testDivDisabledPropFalse START');\n ", "  \n    it('testbadgeDisabledPropNone', 0, async ", " \n    it('testButtonDisabledPropTrue', 0, async ", " \n    it('testCanvasDisabledPropNone', 0, async ", "\n     it('testdialogDisabledPropTrue', 0, async ", "ole.info('testCanvasDisabledPropNone START')\n   ", "nsole.info('testformDisabledPropFalse START');\n ", "l,\n        indicatorDisabledPropFalse: null,\n   ", "ole.info('testButtonDisabledPropTrue START');\n  ", "sole.info('testbadgeDisabledPropFalse START');\n ", "ole.info('testButtonDisabledPropFalse START');\n ", "      this.indicatorDisabledPropFalse = this.$el", "  \n    it('testChartDisabledPropNone', 0, async ", "   \n    it('testformDisabledPropFalse', 0, async", "\n     it('testdialogDisabledPropFalse', 0, async", "  \n    it('testChartDisabledPropTrue', 0, async ", "    \n    it('testDivDisabledPropNone', 0, async ", "l,\n        indicatorDisabledPropTrue: null,\n    ", "ole.info('testdialogDisabledPropFalse START');\n ", "ole.info('testdialogDisabledPropTrue START');\n  ", "  \n    it('testbadgeDisabledPropFalse', 0, async", "ole.info('testCanvasDisabledPropTrue START')\n   ", "sole.info('testbadgeDisabledPropTrue START');\n  ", "onsole.info('testDivDisabledPropTrue START');\n  ", "onsole.info('testDivDisabledPropNone START');\n  ", "True: this.indicatorDisabledPropTrue,\n          ", " \n    it('testButtonDisabledPropFalse', 0, async", "sole.info('testbadgeDisabledPropNone START');\n  ", "           indicatorDisabledPropFalse: this.indi", "   \n    it('testformDisabledPropTrue', 0, async ", "ole.info('testButtonDisabledPropNone START');\n  "], "files": ["ratingProps.test.js", "listItemGroupProps.test.js", "formProps.test.js", "tabContentProps.test.js", "marqueeProps.test.js", "textProps.test.js", "imageAnimatorProps.test.js", "buttonProps.test.js", "toolbarProps.test.js", "tabsProps.test.js", "pickerViewProps.test.js", "qrcodeProps.test.js", "stackProps.test.js", "divProps.test.js", "switchProps.test.js", "popupProps.test.js", "refreshProps.test.js", "listItemProps.test.js", "searchProps.test.js", "chartProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "canvasProps.test.js", "sliderProps.test.js", "swiperProps.test.js", "toolbarItemProps.test.js", "videoProps.test.js", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "optionProps.test.js", "badgeProps.test.js", "pieceProps.test.js", "dialogProps.test.js", "imageProps.test.js", "listProps.test.js", "labelProps.test.js", "pickerProps.test.js", "progressProps.test.js", "selectProps.test.js", "textareaProps.test.js", "gridColProps.test.js", "gridContainerProps.test.js", "stepperProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ItemState", "api_method_name": "Waiting", "api_method_all": "Waiting,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 11, "since": 8, "api_used": "\u662f", "lines": ["ole.info('testButtonWaitingFalse START');\n     ", "ole.info('testButtonWaitingTrue START');\n      ", "State === ItemState.Waiting ? ItemState.Normal ", "name      testButtonWaitingFalse\n     * @tc.des", "/\n    it('testButtonWaitingTrue', 0, async func", "name      testButtonWaitingNone\n     * @tc.desc", "ole.info('testButtonWaitingNone START');\n      ", "/\n    it('testButtonWaitingNone', 0, async func", "/\n    it('testButtonWaitingFalse', 0, async fun", "name      testButtonWaitingTrue\n     * @tc.desc", ".Normal : ItemState.Waiting\n          })\n      "], "files": ["buttonProps.test.js", "stepper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ItemState", "api_method_name": "Skip", "api_method_all": "Skip,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["     console.log('onSkip')\n    })\n    .onCha", "    console.info('onSkip')\n    })\n    .onCha", ".Normal : ItemState.Skip\n          })\n      ", "State === ItemState.Skip ? ItemState.Normal ", "ish')\n    })\n    .onSkip(() => {\n      conso"], "files": ["Stepper.ets", "stepper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "StepperItemInterface", "api_method_all": "interface StepperItemInterface {\n  \n  (): StepperItemAttribute;\n}", "api_method_name": "StepperItemInterface", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "StepperItemAttribute", "api_method_all": "declare class StepperItemAttribute extends CommonMethod<StepperItemAttribute> {\n  \n  prevLabel(value: string): StepperItemAttribute;\n\n  \n  nextLabel(value: string): StepperItemAttribute;\n\n  \n  status(value?: ItemState): StepperItemAttribute;\n}", "api_method_name": "StepperItemAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "StepperItemAttribute", "api_method_name": "prevLabel", "api_method_all": "prevLabel(value: string): StepperItemAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 10, "since": 8, "api_used": "\u662f", "lines": ["      {\n            prevLabel: 'BACK',\n          ", "        labelObj: { prevLabel: '', nextLabel: 'ne", "abel('Next')\n      .prevLabel('Previous')\n      .", "      {\n            prevLabel: 'B',\n            n"], "files": ["index.js", "Stepper.ets", "stepper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "StepperItemAttribute", "api_method_name": "nextLabel", "api_method_all": "nextLabel(value: string): StepperItemAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 13, "since": 8, "api_used": "\u662f", "lines": ["'BACK',\n            nextLabel: 'NEXT',\n          ", "0 })\n      }\n      .nextLabel('')\n      .position", "l: 'B',\n            nextLabel: 'N',\n            s", "5%', y: 0 })\n      .nextLabel('Finish')\n      .ke", "j: { prevLabel: '', nextLabel: 'next', status: ''", "  })\n      }\n      .nextLabel('Next')\n      .prev"], "files": ["index.js", "Stepper.ets", "stepper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "StepperItemAttribute", "api_method_name": "status", "api_method_all": "status(value?: ItemState): StepperItemAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 64, "since": 0, "api_used": "\u662f", "lines": ["console.log('Radio3 status is ' + value)\n     ", "('Previous')\n      .status(this.firstState)\n  ", ") {\n          Text('status button').padding({ ", "l: 'N',\n            status: 'normal'\n        }", "etNextButtonStatus({status: 'skip', label: 'SK", "      console.info('status' + value)\n      })\n", "console.log('Radio2 status is ' + value)\n     ", "seRegion] Component status:' + isOn)\n        }", "      console.info('status:' + value)\n    })\n ", "console.log('Radio1 status is ' + value)\n     ", "      console.info(\"status changed \" + isOn)\n ", " nextLabel: 'next', status: '' },\n        idPr", "5%', y: 0 })\n      .status(this.secondState)\n ", "ole.info('Component status:' + isOn)\n        }"], "files": ["ResponseRegion.ets", "index.js", "stepper.ets", "radio.ets", "Toggle.ets", "Stepper.ets", "sideBar.ets", "toggle.ets", "Sidebar.ets"], "is_white": " ", "desc": " "}]}