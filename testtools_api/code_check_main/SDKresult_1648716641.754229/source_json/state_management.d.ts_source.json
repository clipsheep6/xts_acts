{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@internal\\component\\ets\\state_management", "api": [{"api_class_name": "IPropertySubscriber", "api_method_all": "interface IPropertySubscriber {\n  \n  id(): number;\n\n  \n  aboutToBeDeleted(owningView?: IPropertySubscriber): void;\n}", "api_method_name": "IPropertySubscriber", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["et subscriber = new IPropertySubscriber();\n      let abstra", "it('stateManagement_IPropertySubscriber_0100', 0, function ", "o('[stateManagement_IPropertySubscriber_0100] END');\n      ", "o('[stateManagement_IPropertySubscriber_0100] Start');\n    ", "tProps(persistProp);IPropertySubscriber\n      persistentSto", "ertySubscriber =new IPropertySubscriber();\n      let id = i"], "files": ["SubscribaleAbstractJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "IPropertySubscriber", "api_method_name": "id", "api_method_all": "id(): number;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 8283, "since": 7, "api_used": "\u662f", "lines": ["emsColumn\")\n      .width('90%')\n      .bor", "eAppear: string = 'Hide Text'\n  private my", "nSelf,height:100').width('34%').height(100", "        this.strokeWidthValue = eventData.", "Basis\")\n          .width('60%')\n          ", "ole.log(\"imageData_width=\" + imageData.wid", "')\n      .border({ width: 1 })\n      .alig", "key('flex')\n      .width('90%')\n      .hei", "entData.data.strokeWidthValue != null) {\n ", ".context)\n        .width('100%').height('4", "hrink\")\n          .width('50%')\n          ", "/bg.jpg\");\n    let width = img.width;\n    ", "{\n        Column().width('50%').height(30)", "idth(`${this.strokeWidthValue}`)\n        .", "gn.Center)\n      }.width('90%').height(120", ".alignItems)\n    }.width('100%').padding({", "gnSelf,height:80').width('33%').height(80)", "50;\n  @State strokeWidthValue: string = 20", "   let width = img.width;\n    let height =", "ontColor(0xCCCCCC).width('90%')\n      Flex", "if (eventData.data.width != null) {\n      ", "hrink')\n          .width('40%')\n          ", "}`)\n        .strokeWidth(`${this.strokeWid", "\n    }.padding(30).width('100%')\n  }\n}", "ontColor(0xCCCCCC).width('90%')\n      Colu", "gebitmap_width=\" + width);\n    console.log", "entData.data.strokeWidthValue;\n      }\n   ", "rink(2)\n          .width('40%')\n          ", "se().width(`${this.width}`).height(`${this", ";\n        })\n    }.width('100%').height('1", " {\n      Ellipse().width(`${this.width}`).", "tretch)\n          .width('33%')\n          ", "sage: 'The text is hidden', duration: 2000", ": 30 })\n    }\n    .width('100%').height('1", ")\n        Column().width('50%').height(30)", "nabled)\n    }\n    .width('100%')\n    .padd", "or(0xAFEEEE)\n    }.width('100%').margin({ ", "is.changeAppear = 'Hide Text'\n            ", "hValue}`)\n        .width(200)\n        .hei", "h = eventData.data.width;\n      }\n      if", "y('ellipse')\n    }.width('100%').height('1", ".height(200)\n    }.width('100%').margin({ ", "e.log(\"imagebitmap_width=\" + width);\n    c", "Example {\n  @State width: string = \"200px\"", "ll) {\n        this.width = eventData.data."], "files": ["pageTransition2.ets", "ohosPrompt.ets", "listItemGroupProps.test.js", "systemRouterA.ets", "pathProps.test.js", "dividerProps.test.js", "video.ets", "tabContentProps.test.js", "textProps.test.js", "Navigator.ets", "longPressGesture.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "playMode.ets", "toolbarProps.test.js", "Qrcode.ets", "Row.ets", "Navigation.ets", "imageFit.ets", "PathJsunit.test.ets", "Span.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "column.ets", "Panel.ets", "Progress.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "toolbarItemProps.test.js", "TapGesture.test.ets", "marquee.ets", "Rating.ets", "enumsLineCapStyle.ets", "mediaquery.test.js", "Swiper.ets", "DividerJsunit.test.ets", "ScrollCodeJsunit.test.ets", "Divider.ets", "border.ets", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "badgeProps.test.js", "scrollBar.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "transition.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "GridJsnuit.test.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "polyline.ets", "formProps.test.js", "focus.ets", "VideoJsunit.test.ets", "touch.ets", "circleProps.test.js", "ListItem.ets", "background.ets", "Slider.ets", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "stackProps.test.js", "Text.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "enumsVerticalAlign.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "TextJsunit.test.ets", "sideBar.ets", "toggle.ets", "GridJsunit.test.ets", "refreshProps.test.js", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "VisibilityJsunit.test.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "TextArea.ets", "animatorOption.ets", "tapGesture.ets", "shapeClipping.ets", "flexDirection.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "GridItem.test.ets", "PanGesture.ets", "richtextProps.test.js", "stepper.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "image.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "gridContainerProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "flex.ets", "sharedTransition2.ets", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "Polyline.ets", "Stepper.ets", "gridPage.ets", "imageAnimatorProps.test.js", "enumsImage.ets", "enable.ets", "PieceCode.ets", "tabsProps.test.js", "polygon.ets", "badge.ets", "lineProps.test.js", "qrcodeProps.test.js", "textStyle.ets", "imageEffects.ets", "popupProps.test.js", "SubscribaleAbstractJsunit.test.ets", "ohosRouterB.ets", "ColumnSplit.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "videoProps.test.js", "enumsItemAlign.ets", "list.ets", "colorGradient.ets", "BackgroundJsunit.test.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "BasicJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "animateTransformProps.test.js", "dragEvent.ets", "QrcodeJsunit.test.ets", "Video.ets", "pieceProps.test.js", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "animateMotionProps.test.js", "selectProps.test.js", "grid.ets", "Button.ets", "ScrollJsunit.test.ets", "Polygon.ets", "gridColProps.test.js", "textareaProps.test.js", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animateProps.test.js", "animate.ets", "buttonProps.test.js", "List.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "BorderJsunit.test.ets", "direction2.ets", "mouseEvent.ets", "RowSplit.ets", "canvas.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "bindContextMenu.ets", "CircleJsunit.test.ets", "Rect.ets", "divProps.test.js", "divider.ets", "ScrollBar.ets", "switchProps.test.js", "TextInput.ets", "ellipse.ets", "radio.ets", "appear.ets", "Constants.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "GradientDirectionJsunit.test.ets", "enumsFlexAlign.ets", "Path.ets", "commonComponentJsApi.test.js", "fillMode.ets", "line.ets", "curves.ets", "priorityGesture.ets", "DataPanel.ets", "ellipseProps.test.js", "FormComponentPage.ets", "Grid.ets", "chartProps.test.js", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "visibility.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "polygonProps.test.js", "sliderProps.test.js", "TabsJsunit.test.ets", "swiperProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "toggleProps.test.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "tspanProps.test.js", "parallelGesture.ets", "imageProps.test.js", "select.ets", "timeStamp.ets", "Toggle.ets", "slider.ets", "NavigationJsunit.test.ets", "listProps.test.js", "aboutToDisappear.ets", "progressProps.test.js", "Calendar.ets", "panelProps.test.js", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "enumsHorizontalAlign.ets", "panel.ets", "menuProps.test.js", "rectProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "IPropertySubscriber", "api_method_name": "aboutToBeDeleted", "api_method_all": "aboutToBeDeleted(owningView?: IPropertySubscriber): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["y12\");\n      twoWay.aboutToBeDeleted(new SubscribedAbstr", "y12\");\n      oneWay.aboutToBeDeleted(new SubscribedAbstr", "iPropertySubscriber.aboutToBeDeleted();\n      expect(tru", "ber.id();\n      let aboutToBeDeleted = iPropertySubscrib"], "files": ["SubscribaleAbstractJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ISinglePropertyChangeSubscriber", "api_method_all": "interface ISinglePropertyChangeSubscriber<T> extends IPropertySubscriber {\n  \n  hasChanged(newValue: T): void;\n}", "api_method_name": "ISinglePropertyChangeSubscriber", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["et subscriber = new ISinglePropertyChangeSubscriber<string>(\n        (d", "o('[stateManagement_ISinglePropertyChangeSubscriber_hasChanged_0100] ST", "it('stateManagement_ISinglePropertyChangeSubscriber_hasChanged_0100', 0", "o('[stateManagement_ISinglePropertyChangeSubscriber_hasChanged_0100] EN"], "files": ["SubscribaleAbstractJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ISinglePropertyChangeSubscriber", "api_method_name": "hasChanged", "api_method_all": "hasChanged(newValue: T): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["rtyChangeSubscriber_hasChanged_0100', 0, function ", "get();\n      oneWay.hasChanged(\"key12\");\n      one", "rtyChangeSubscriber_hasChanged_0100] END');\n      ", "get();\n      twoWay.hasChanged(\"key12\");\n      two", "rtyChangeSubscriber_hasChanged_0100] START');\n    "], "files": ["SubscribaleAbstractJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_all": "declare abstract class SubscribedAbstractProperty<T> {\n  \n  protected subscribers_: Set<number>;\n\n  \n  private id_;\n\n  \n  private info_?;\n\n  \n  constructor(\n    \n    subscribeMe?: IPropertySubscriber,\n    \n    info?: string,\n  );\n\n  \n  id(): number;\n\n  \n  info(): string;\n\n  \n  abstract get(): T;\n\n  \n  abstract set(newValue: T): void;\n\n  \n  createTwoWaySync(subscribeMe?: IPropertySubscriber, info?: string): SyncedPropertyTwoWay<T>;\n\n  \n  createOneWaySync(subscribeMe?: IPropertySubscriber, info?: string): SyncedPropertyOneWay<T>;\n\n  \n  unlinkSuscriber(subscriberId: number): void;\n\n  \n  protected notifyHasChanged(newValue: T): void;\n\n  \n  protected notifyPropertyRead(): void;\n\n  \n  numberOfSubscrbers(): number;\n}", "api_method_name": "abstractSubscribedAbstractProperty", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_name": "constructor", "api_method_all": "constructor(\n    \n    subscribeMe?: IPropertySubscriber,\n    \n    info?: string,\n  )", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 80, "since": 7, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_name": "id", "api_method_all": "id(): number;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 8283, "since": 7, "api_used": "\u662f", "lines": ["emsColumn\")\n      .width('90%')\n      .bor", "eAppear: string = 'Hide Text'\n  private my", "nSelf,height:100').width('34%').height(100", "        this.strokeWidthValue = eventData.", "Basis\")\n          .width('60%')\n          ", "ole.log(\"imageData_width=\" + imageData.wid", "')\n      .border({ width: 1 })\n      .alig", "key('flex')\n      .width('90%')\n      .hei", "entData.data.strokeWidthValue != null) {\n ", ".context)\n        .width('100%').height('4", "hrink\")\n          .width('50%')\n          ", "/bg.jpg\");\n    let width = img.width;\n    ", "{\n        Column().width('50%').height(30)", "idth(`${this.strokeWidthValue}`)\n        .", "gn.Center)\n      }.width('90%').height(120", ".alignItems)\n    }.width('100%').padding({", "gnSelf,height:80').width('33%').height(80)", "50;\n  @State strokeWidthValue: string = 20", "   let width = img.width;\n    let height =", "ontColor(0xCCCCCC).width('90%')\n      Flex", "if (eventData.data.width != null) {\n      ", "hrink')\n          .width('40%')\n          ", "}`)\n        .strokeWidth(`${this.strokeWid", "\n    }.padding(30).width('100%')\n  }\n}", "ontColor(0xCCCCCC).width('90%')\n      Colu", "gebitmap_width=\" + width);\n    console.log", "entData.data.strokeWidthValue;\n      }\n   ", "rink(2)\n          .width('40%')\n          ", "se().width(`${this.width}`).height(`${this", ";\n        })\n    }.width('100%').height('1", " {\n      Ellipse().width(`${this.width}`).", "tretch)\n          .width('33%')\n          ", "sage: 'The text is hidden', duration: 2000", ": 30 })\n    }\n    .width('100%').height('1", ")\n        Column().width('50%').height(30)", "nabled)\n    }\n    .width('100%')\n    .padd", "or(0xAFEEEE)\n    }.width('100%').margin({ ", "is.changeAppear = 'Hide Text'\n            ", "hValue}`)\n        .width(200)\n        .hei", "h = eventData.data.width;\n      }\n      if", "y('ellipse')\n    }.width('100%').height('1", ".height(200)\n    }.width('100%').margin({ ", "e.log(\"imagebitmap_width=\" + width);\n    c", "Example {\n  @State width: string = \"200px\"", "ll) {\n        this.width = eventData.data."], "files": ["pageTransition2.ets", "ohosPrompt.ets", "listItemGroupProps.test.js", "systemRouterA.ets", "pathProps.test.js", "dividerProps.test.js", "video.ets", "tabContentProps.test.js", "textProps.test.js", "Navigator.ets", "longPressGesture.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "playMode.ets", "toolbarProps.test.js", "Qrcode.ets", "Row.ets", "Navigation.ets", "imageFit.ets", "PathJsunit.test.ets", "Span.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "column.ets", "Panel.ets", "Progress.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "toolbarItemProps.test.js", "TapGesture.test.ets", "marquee.ets", "Rating.ets", "enumsLineCapStyle.ets", "mediaquery.test.js", "Swiper.ets", "DividerJsunit.test.ets", "ScrollCodeJsunit.test.ets", "Divider.ets", "border.ets", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "badgeProps.test.js", "scrollBar.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "transition.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "GridJsnuit.test.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "polyline.ets", "formProps.test.js", "focus.ets", "VideoJsunit.test.ets", "touch.ets", "circleProps.test.js", "ListItem.ets", "background.ets", "Slider.ets", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "stackProps.test.js", "Text.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "enumsVerticalAlign.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "TextJsunit.test.ets", "sideBar.ets", "toggle.ets", "GridJsunit.test.ets", "refreshProps.test.js", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "VisibilityJsunit.test.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "TextArea.ets", "animatorOption.ets", "tapGesture.ets", "shapeClipping.ets", "flexDirection.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "GridItem.test.ets", "PanGesture.ets", "richtextProps.test.js", "stepper.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "image.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "gridContainerProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "flex.ets", "sharedTransition2.ets", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "Polyline.ets", "Stepper.ets", "gridPage.ets", "imageAnimatorProps.test.js", "enumsImage.ets", "enable.ets", "PieceCode.ets", "tabsProps.test.js", "polygon.ets", "badge.ets", "lineProps.test.js", "qrcodeProps.test.js", "textStyle.ets", "imageEffects.ets", "popupProps.test.js", "SubscribaleAbstractJsunit.test.ets", "ohosRouterB.ets", "ColumnSplit.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "videoProps.test.js", "enumsItemAlign.ets", "list.ets", "colorGradient.ets", "BackgroundJsunit.test.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "BasicJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "animateTransformProps.test.js", "dragEvent.ets", "QrcodeJsunit.test.ets", "Video.ets", "pieceProps.test.js", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "animateMotionProps.test.js", "selectProps.test.js", "grid.ets", "Button.ets", "ScrollJsunit.test.ets", "Polygon.ets", "gridColProps.test.js", "textareaProps.test.js", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animateProps.test.js", "animate.ets", "buttonProps.test.js", "List.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "BorderJsunit.test.ets", "direction2.ets", "mouseEvent.ets", "RowSplit.ets", "canvas.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "bindContextMenu.ets", "CircleJsunit.test.ets", "Rect.ets", "divProps.test.js", "divider.ets", "ScrollBar.ets", "switchProps.test.js", "TextInput.ets", "ellipse.ets", "radio.ets", "appear.ets", "Constants.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "GradientDirectionJsunit.test.ets", "enumsFlexAlign.ets", "Path.ets", "commonComponentJsApi.test.js", "fillMode.ets", "line.ets", "curves.ets", "priorityGesture.ets", "DataPanel.ets", "ellipseProps.test.js", "FormComponentPage.ets", "Grid.ets", "chartProps.test.js", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "visibility.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "polygonProps.test.js", "sliderProps.test.js", "TabsJsunit.test.ets", "swiperProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "toggleProps.test.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "tspanProps.test.js", "parallelGesture.ets", "imageProps.test.js", "select.ets", "timeStamp.ets", "Toggle.ets", "slider.ets", "NavigationJsunit.test.ets", "listProps.test.js", "aboutToDisappear.ets", "progressProps.test.js", "Calendar.ets", "panelProps.test.js", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "enumsHorizontalAlign.ets", "panel.ets", "menuProps.test.js", "rectProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_name": "info", "api_method_all": "info(): string;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 16618, "since": 7, "api_used": "\u662f", "lines": ["ll) {\n      console.info(\"[column] page stat", "ll) {\n      console.info(\"[appear] page stat", "            console.info(\"appearFlag start t", "roy() {\n    console.info('Application onDest", "            console.info(\"onAreaChange start", "a) => {\n    console.info(\"[column] page stat", "how() {\n    console.info('gauge page show ca", "            console.info(\"onClick emit actio", "how() {\n    console.info('imageEffects page ", "{\n          console.info('scrollOffset:' + s", "            console.info(\"onClick start to e", "a) => {\n    console.info(\"[ellipse] page sta", "ll) {\n      console.info(\"gauge page state c", "            console.info(\"appearFlag emit ac", "ll) {\n      console.info(\"[stateChangCallBac", "{\n          console.info(`Ace: on area chang", "a) => {\n    console.info(\"GridSetting page s", "ll) {\n      console.info(\"imageEffects page ", ")\n          console.info('last' + lastIndex)", "            console.info(\"onAreaChange emit ", "ear() {\n    console.info(\"start run testcase", "            console.info(\"disAppearFlag emit", ")\n          console.info('scrollState:' + sc", "ll) {\n      console.info(\"gridContainer page", "how() {\n    console.info('[list] page show c", "how() {\n    console.info('[appear] page show", "how() {\n    console.info('flex page show cal", "ll) {\n      console.info(\"[ellipse] page sta", "ate() {\n    console.info('Application onCrea", "ll) {\n      console.info(\"Flex page state ch", "how() {\n    console.info('gridContainer page", "{\n          console.info('first' + firstInde", "            console.info('appearFlag current", "();\n        console.info('Operation successf", "a) => {\n    console.info(\"[stateChangCallBac", "{\n          console.info(this.arr[index] + '", "how() {\n    console.info('[ellipse] page sho", "how() {\n    console.info('[enabled] page sho", "a) => {\n    console.info(\"[appear] page stat", "            console.info(\"disAppearFlag star", "            console.info('disAppearFlag curr", "');\n        console.info('parameters---->' +", "a) => {\n    console.info(\"LayoutConstraints ", "how() {\n    console.info('[column] page show", ";\n          console.info('onAreaChange curre"], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageEffectsJsunit.test.ets", "ColumnSplitJsunit.test.ets", "Navigation.ets", "ZIndexJsunit.test.ets", "checkboxGroup.ets", "sourceType.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "TapGesture.test.ets", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "border.ets", "ResponseRegion.ets", "FillModeJsunit.test.ets", "textArea.ets", "transition.ets", "gridSettings.ets", "Image.ets", "LongPressGesture.test.ets", "path.ets", "VideoJsunit.test.ets", "touch.ets", "SpanJsunit.test.ets", "PanelJsunit.test.ets", "sideBar.ets", "Prop.ets", "customDialogController.ets", "EnmusImageJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "VisibilityJsunit.test.ets", "TextArea.ets", "ResponseRegionJsunit.test.ets", "flexDirection.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "ListJsunit.test.ets", "gridContainerProps.test.js", "Select.ets", "flex.ets", "MotionPathJsunit.test.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enable.ets", "tabsProps.test.js", "lineProps.test.js", "AlphabetIndexer.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "videoProps.test.js", "DatePickerJsunit.test.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "StackJsunit.test.ets", "circle.ets", "animateMotionProps.test.js", "textareaProps.test.js", "span.ets", "NavigatorCode.ets", "patternLock.ets", "AnimationStatusJsunit.test.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "divProps.test.js", "divider.ets", "animationStatus.ets", "zIndex.ets", "ellipseProps.test.js", "chartProps.test.js", "sliderProps.test.js", "polygonProps.test.js", "inputProps.test.js", "SwiperJsunit.test.ets", "imageProps.test.js", "select.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "refresh.ets", "ScrollBar.ets", "overlay.ets", "pathProps.test.js", "configuration.ets", "tabContentProps.test.js", "longPressGesture.ets", "Qrcode.ets", "PathJsunit.test.ets", "Progress.ets", "column.ets", "Panel.ets", "CustomDialog.ets", "OhosRouterJsnuit.test.ets", "TextClockJsunit.test.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "GeometryTransitionJsunit.test.ets", "ScrollCodeJsunit.test.ets", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "textInput.ets", "TouchJsunit.test.ets", "transForm.ets", "Column.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "SelectJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "background.ets", "Slider.ets", "StepperJsunit.test.ets", "ButtonJsunit.test.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "index.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "richtextProps.test.js", "PanGesture.ets", "shape.ets", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "imageAnimatorProps.test.js", "PieceCode.ets", "qrcodeProps.test.js", "GlobalJsunit.test.ets", "SystemRouterJsunit.test.ets", "stepperItemProps.test.js", "textClock.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "GridContainer.ets", "checkbox.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "grid.ets", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "bindPopup.ets", "buttonProps.test.js", "animateProps.test.js", "animate.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "RowSplit.ets", "pickerViewProps.test.js", "TextInput.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "priorityGesture.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "CanvasJsunit.test.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "tabBarProps.test.js", "ColumnJsunit.test.ets", "parallelGesture.ets", "slider.ets", "panelProps.test.js", "motionPath.ets", "Badge.ets", "ColumnSplit.ets", "search.ets", "rectProps.test.js", "blank.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "video.ets", "textProps.test.js", "DragEventJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "TextPickerJsunit.test.ets", "Span.ets", "CheckboxGroupJsunit.test.ets", "AppearJsunit.test.ets", "CommonJsunit.test.ets", "marquee.ets", "PieceJsunit.test.ets", "basicabilityapi.test.js", "badgeProps.test.js", "CalendarJsunit.test.ets", "LinkJsunit.test.ets", "CurvesJsunit.test.ets", "DirectionJsunit.test.ets", "RadioJsunit.test.ets", "Stack.ets", "bindMenu.ets", "Sidebar.ets", "text.ets", "tapGesture.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "stepper.ets", "svgProps.test.js", "textPathProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "textPickerDialog.ets", "badge.ets", "imageEffects.ets", "popupProps.test.js", "tabs.ets", "dragEvent2.ets", "app.ets", "GaugeJsunit.test.ets", "BasicJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "Video.ets", "listItem.ets", "Button.ets", "ScrollJsunit.test.ets", "Polygon.ets", "panDirection.ets", "ContentStorage.test.ets", "direction2.ets", "BadgeJsunit.test.ets", "CircleJsunit.test.ets", "Rect.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "line.ets", "GestureModeJsunit.test.ets", "progress.ets", "datePicker.ets", "WebPage.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "index.js", "tspanProps.test.js", "timeStamp.ets", "Toggle.ets", "Direction2Jsunit.test.ets", "panel.ets", "colorGradient.ets", "CounterJsunit.test.ets", "dividerProps.test.js", "ListItemJsunit.test.ets", "Navigator.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "polylineProps.test.js", "richText.ets", "PositionSettingJsunit.test.ets", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "textTimer.ets", "Rating.ets", "Swiper.ets", "LineJsunit.test.ets", "DividerJsunit.test.ets", "Divider.ets", "RichTextJsunit.test.ets", "scrollBar.ets", "NavigatorCodeJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "focus.ets", "circleProps.test.js", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "stackProps.test.js", "Text.ets", "EdgeEffectJsunit.test.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "SystemAppJsunit.test.ets", "swiper.ets", "refreshProps.test.js", "Blank.ets", "ScrollerBarJsunit.test.ets", "TransitionJsunit.test.ets", "AreaChangeJsunit.test.ets", "PropJsunit.test.ets", "GridItem.test.ets", "labelProps.test.js", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "gridContainer.ets", "Tab.ets", "Stepper.ets", "ShapeJsunit.test.ets", "textStyle.ets", "SubscribaleAbstractJsunit.test.ets", "app.js", "listItemProps.test.js", "gridRowProps.test.js", "list.ets", "AppStorage.ets", "QrCode.ets", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "imageAnimator.ets", "BackgroundAndSizeSettingJsunit.test.ets", "Flex.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "switchProps.test.js", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "Path.ets", "fillMode.ets", "TransFormJsunit.test.ets", "DataPanel.ets", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "swiperProps.test.js", "TabsJsunit.test.ets", "LoadingProgressJsunit.test.ets", "GridSettingsJsunit.test.ets", "toggleProps.test.js", "areaChange.ets", "Link.ets", "listProps.test.js", "progressProps.test.js", "Calendar.ets", "sharedTransition.ets", "BindPopupJsunit.test.ets", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_name": "abstract", "api_method_all": "abstract get(): T;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["      let numbers = abstract.owningProperties_;\n", "leAbstract();\n      abstract.addOwningProperty(s", "y(subscriber)\n      abstract.removeOwningPropert", "pertyById(1);\n      abstract.notifyPropertyHasCh", "gProperties_;\n      abstract.removeOwningPropert", "criber();\n      let abstract = new SubscribaleAb"], "files": ["SubscribaleAbstractJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_name": "abstract", "api_method_all": "abstract set(newValue: T): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["      let numbers = abstract.owningProperties_;\n", "leAbstract();\n      abstract.addOwningProperty(s", "y(subscriber)\n      abstract.removeOwningPropert", "pertyById(1);\n      abstract.notifyPropertyHasCh", "gProperties_;\n      abstract.removeOwningPropert", "criber();\n      let abstract = new SubscribaleAb"], "files": ["SubscribaleAbstractJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_name": "createTwoWaySync", "api_method_all": "createTwoWaySync(subscribeMe?: IPropertySubscriber, info?: string): SyncedPropertyTwoWay<T>;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["bedAbstractProperty.createTwoWaySync('subscribtest');\n  "], "files": ["SubscribedAbstractPropertyJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_name": "createOneWaySync", "api_method_all": "createOneWaySync(subscribeMe?: IPropertySubscriber, info?: string): SyncedPropertyOneWay<T>;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["bedAbstractProperty.createOneWaySync('subscribtest');\n  "], "files": ["SubscribedAbstractPropertyJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_name": "unlinkSuscriber", "api_method_all": "unlinkSuscriber(subscriberId: number): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["bedAbstractProperty.unlinkSuscriber(0);\n      subscribe"], "files": ["SubscribedAbstractPropertyJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_name": "protected", "api_method_all": "protected notifyHasChanged(newValue: T): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_name": "protected", "api_method_all": "protected notifyPropertyRead(): void;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_name": "numberOfSubscrbers", "api_method_all": "numberOfSubscrbers(): number;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["bedAbstractProperty.numberOfSubscrbers();\n      subscribed"], "files": ["SubscribedAbstractPropertyJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribedAbstractProperty", "api_method_name": "protected", "api_method_all": "protected subscribers_: Set<number>", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_all": "declare class AppStorage {\n  \n  static Link(propName: string): any;\n\n  \n  static SetAndLink<T>(propName: string, defaultValue: T): SubscribedAbstractProperty<T>;\n\n  \n  static Prop(propName: string): any;\n\n  \n  static SetAndProp<S>(propName: string, defaultValue: S): SubscribedAbstractProperty<S>;\n\n  \n  static Has(propName: string): boolean;\n\n  \n  static Get<T>(propName: string): T | undefined;\n\n  \n  static Set<T>(propName: string, newValue: T): boolean;\n\n  \n  static SetOrCreate<T>(propName: string, newValue: T): void;\n\n  \n  static Delete(propName: string): boolean;\n\n  \n  static Keys(): IterableIterator<string>;\n\n  \n  static staticClear(): boolean;\n\n  \n  static IsMutable(propName: string): boolean;\n\n  \n  static Size(): number;\n}", "api_method_name": "AppStorage", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 77, "since": 7, "api_used": "\u662f", "lines": ["it('stateManagement_AppStorage_setOrCreate_0100', ", "m '@system.router'\n\nAppStorage.SetOrCreate(\"PropC\"", "eleteValue = String(AppStorage.Delete(\"PropC\"))\nva", "PropAValue = String(AppStorage.Get(\"PropA\"))\nfor (", "rage.Get(\"PropB\"))\n\nAppStorage.SetAndProp(\"PropA\",", "age.Link(\"PropC\");\n\nAppStorage.SetOrCreate(\"PropA\"", "rt default function AppStorageJsunit() {\n  describ", ");\n      let size = AppStorage.Size();\n      conso", "       let enable = AppStorage.Get(\"colorMode\");\n ", "PropBValue = String(AppStorage.Get(\"PropB\"))\n\nAppS", "o('[stateManagement_AppStorage_setOrCreate_0100] s", "      let enable1 = AppStorage.Get(\"colorMode\");\n ", "r hasValue = String(AppStorage.Has(\"PropB\"))\nvar i", "  console.info(\"get AppStorage state success \" + J", "   console.info(\"yr AppStorage0 type: \" + JSON.str", "\n      let enable = AppStorage.Get(\"colorMode\");\n ", "o('[stateManagement_AppStorage_setOrCreate_0100] k", "        uri: 'pages/AppStorage',\n      }\n      try", "      console.info('AppStorageTest003 START');\n   ", "\n      let enable = AppStorage.Get(\"layoutDirectio", "ropA\");\nvar prop1 = AppStorage.Prop(\"PropA\");\n\nApp", "      console.info('AppStorage0 END');\n      done(", "      let enable2 = AppStorage.Get(\"layoutDirectio", "      console.info('AppStorageTest002 START');\n   ", " console.info(\"push AppStorage page success \" + JS", "console.error(\"push AppStorage page error \" + JSON", "ropA\");\nvar link2 = AppStorage.Link(\"PropA\");\nvar ", "PropAValue = String(AppStorage.Set(\"PropA\", 20))\nv", "\", \"value2\");\n      AppStorage.SetOrCreate<string>", "s));\n        if (!(\"AppStorage\" == pages.name)) {\n", "pC\", 1)\nvar link3 = AppStorage.Link(\"PropC\");\n\nApp", "      console.info(\"AppStorage after each called\")", "    console.log(\"yr AppStorage1 label-'47'\" + JSON", "tableValue = String(AppStorage.IsMutable(\"PropB\"))", "      console.info('AppStorageTest001 START');\n   ", "\", \"value1\");\n      AppStorage.SetOrCreate<string>", "      let enable1 = AppStorage.Get(\"layoutDirectio", "orageJsunit from './AppStorageJsunit.test.ets';\nim", "      console.info('AppStorageTest002 END');\n     ", "100] START');\n      AppStorage.SetOrCreate<string>", "age.Prop(\"PropA\");\n\nAppStorage.SetAndLink(\"PropB\",", "\"))\nfor (let key of AppStorage.Keys()) {\n  var key", "\", 47);\nvar link1 = AppStorage.Link(\"PropA\");\nvar ", "    console.log(\"yr AppStorage0 label-'47'\" + JSON", "o('[stateManagement_AppStorage_setOrCreate_0100] E", "w PersistentStorage(AppStorage, new Storage());\n  ", "o('[stateManagement_AppStorage_setOrCreate_0100] S", "e;\n      let key1 = AppStorage.Get<string>(\"key1\")"], "files": ["List.test.ets", "AppStorage.ets", "SubscribaleAbstractJsunit.test.ets", "AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "Link", "api_method_all": "static Link(propName: string): any;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 13, "since": 7, "api_used": "\u662f", "lines": ["console.error(\"push Link page error \" + JSON", " console.info(\"push Link page success \" + JS", " link3 = AppStorage.Link(\"PropC\");\n\nAppStora", "s));\n        if (!(\"Link\" == pages.name)) {\n", ";\n\nAppStorage.SetAndLink(\"PropB\", 50)\nvar Pr", "uct PlayButton {\n  @Link stateEffect: boolea", "        uri: 'pages/Link',\n      }\n      try", "  console.info(\"get Link state success \" + J", " link1 = AppStorage.Link(\"PropA\");\nvar link2", " linkJsunit from './LinkJsunit.test.ets';\nim", " link2 = AppStorage.Link(\"PropA\");\nvar prop1", "      console.info(\"Link after each called\")"], "files": ["List.test.ets", "AppStorage.ets", "LinkJsunit.test.ets", "Link.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "SetAndLink", "api_method_all": "static SetAndLink<T>(propName: string, defaultValue: T): SubscribedAbstractProperty<T>;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["ropA\");\n\nAppStorage.SetAndLink(\"PropB\", 50)\nvar Pr"], "files": ["AppStorage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "Prop", "api_method_all": "static Prop(propName: string): any;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 28222, "since": 7, "api_used": "\u662f", "lines": ["ment_Environment_EnvProps_0100] enable1 = ' ", "PersistProps(persistProp);IPropertySubscribe", "t('stateManagement_IPropertySubscriber_0100'", "ment_Environment_EnvProp_colorMode_0100] ena", "  abstract.addOwningProperty(subscriber);\n  ", "ment_Environment_EnvProp_colorMode_0100', 0,", "criber = new ISinglePropertyChangeSubscriber", "     Environment.EnvProp(\"layoutDirection\", ", "teManagement_ISinglePropertyChangeSubscriber", "./SubscribedAbstractPropertyJsunit.test.ets'", "ment_Environment_EnvProp_layoutDirection_010", "ment_Environment_EnvProps_0100', 0, function", "leAbstract_addOwningProperty_0100] START');\n", "ment_Environment_EnvProp_colorMode_0100] STA", "t subscribedAbstractPropertyJsunit from './S", "ment_Environment_EnvProp_colorMode_0100] END", "     Environment.EnvProp(\"colorMode\", ColorM", "t subscriber = new IPropertySubscriber();\n  ", "     Environment.EnvProps(props);\n        le", "ment_Environment_EnvProps_0100] enable = ' +", "bstract.removeOwningPropertyById(1);\n      a", ");\n      let persistProp = {\n        \"proper", "  console.info('stopPropagation')\n          ", "istentStorage.DeleteProp(\"colorMode\");\n     ", "    }\n          stopPropagation: () => {\n   ", "     abstract.notifyPropertyHasChanged(\"key1", "ment_Environment_EnvProps_0100] END');\n     ", "rs = abstract.owningProperties_;\n      abstr", "  subscribedAbstractPropertyJsunit();\n  cont", "stentStorage.PersistProp<string>(\"key10\", \"v", "leAbstract_addOwningProperty_0100] END');\n  ", "leAbstract_addOwningProperty_0100', 0, funct", "leAbstract_addOwningProperty_0100] data = ' ", "ment_Environment_EnvProps_0100] err = ' + er", "stentStorage.PersistProps(persistProp);IProp", "bstract.removeOwningProperty(subscriber)\n   ", "Props(persistProp);IPropertySubscriber\n     ", "ment_Environment_EnvProps_0100] START');\n   ", " ')')\n          stopPropagation: () => {\n   "], "files": ["ratingProps.test.js", "listItemGroupProps.test.js", "formProps.test.js", "List.test.js", "pathProps.test.js", "touch.ets", "dividerProps.test.js", "marqueeProps.test.js", "tabContentProps.test.js", "circleProps.test.js", "imageAnimatorProps.test.js", "textProps.test.js", "mouseEvent.ets", "toolbarProps.test.js", "tabsProps.test.js", "pickerViewProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "divProps.test.js", "stackProps.test.js", "switchProps.test.js", "stepperProps.test.js", "popupProps.test.js", "SubscribaleAbstractJsunit.test.ets", "gridContainerProps.test.js", "polylineProps.test.js", "refreshProps.test.js", "Prop.ets", "ellipseProps.test.js", "listItemProps.test.js", "searchProps.test.js", "chartProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "spanProps.test.js", "canvasProps.test.js", "sliderProps.test.js", "swiperProps.test.js", "toolbarItemProps.test.js", "polygonProps.test.js", "videoProps.test.js", "AppStorage.ets", "tabBarProps.test.js", "inputProps.test.js", "index.js", "PropJsunit.test.ets", "optionProps.test.js", "toggleProps.test.js", "AppStorageJsunit.test.ets", "animateTransformProps.test.js", "badgeProps.test.js", "richtextProps.test.js", "tspanProps.test.js", "pieceProps.test.js", "svgProps.test.js", "dialogProps.test.js", "imageProps.test.js", "listProps.test.js", "animateMotionProps.test.js", "labelProps.test.js", "pickerProps.test.js", "progressProps.test.js", "selectProps.test.js", "textareaProps.test.js", "svgTextProps.test.js", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "panelProps.test.js", "textPathProps.test.js", "List.test.ets", "menuProps.test.js", "rectProps.test.js", "buttonProps.test.js", "animateProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "SetAndProp", "api_method_all": "static SetAndProp<S>(propName: string, defaultValue: S): SubscribedAbstractProperty<S>;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["ropB\"))\n\nAppStorage.SetAndProp(\"PropA\", 47)\nvar Pr"], "files": ["AppStorage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "Has", "api_method_all": "static Has(propName: string): boolean;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["tractProperty.notifyHasChanged('subscribtes", "= String(AppStorage.Has(\"PropB\"))\nvar isMut", "tract.notifyPropertyHasChanged(\"key1\", \"val"], "files": ["SubscribedAbstractPropertyJsunit.test.ets", "SubscribaleAbstractJsunit.test.ets", "AppStorage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "Get", "api_method_all": "static Get<T>(propName: string): T | undefined;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 141, "since": 7, "api_used": "\u662f", "lines": ["nable1 = AppStorage.Get(\"colorMode\");\n     ", "\n    \n    it('ButtonGetInspectorByKey030', ", "\n    it('testDividerGetInspectorByKey020', ", "  console.info('testGetImageAttr2 START');\n", "\n    \n    it('ButtonGetInspectorByKey020', ", ");\n    \n    it('testGetImageAttr030', 0, as", "  console.info('testGetImageAttr3 END');\n  ", "\n    it('testDividerGetInspectorByKey010', ", "nsole.info('cd BlankGetInspectorByKey END')", ";\n\n    \n    it('testGetImageAttr020', 0, as", "nable1 = AppStorage.Get(\"layoutDirection\");", "  console.info('testGetInspectorByKey START", "  console.info('testGetImageAttr5 START');\n", "\n    \n    it('buttonGetInspectorByKey010', ", "  \n    it('testPanelGetInspectorByKey020', ", "  console.info('testGetImageAttr4 START');\n", "console.info(\"buttonGetInspectorByKey010 ob", "  console.info('testGetImageAttr5 END');\n  ", "   it('testDataPanelGetInspectorByKey020', ", "  \n    it('testPanelGetInspectorByKey030', ", "\n    it('testCounterGetInspectorByKey010', ", ";\n\n    \n    it('testGetImageAttr050', 0, as", "  console.info('testGetImageAttr1 END');\n  ", "   it('testDataPanelGetInspectorByKey010', ", "\n    it('testDividerGetInspectorByKey030', ", "  \n    it('testPanelGetInspectorByKey010', ", "t key1 = AppStorage.Get<string>(\"key1\");\n  ", "  console.info('testGetImageAttr1 START');\n", ";\n\n    \n    it('testGetImageAttr010', 0, as", "  console.info('testGetImageAttr4 END');\n  ", "enable = AppStorage.Get(\"layoutDirection\");", "nable2 = AppStorage.Get(\"layoutDirection\");", "\n\n    \n    it('BlankGetInspectorByKey', 0, ", "  console.info('testGetImageAttr3 START');\n", "  console.info('testGetInspectorByKey END')", "   it('testDataPanelGetInspectorByKey030', ", "  console.info('testGetImageAttr2 END');\n  ", "enable = AppStorage.Get(\"colorMode\");\n     ", ";\n\n    \n    it('testGetImageAttr040', 0, as"], "files": ["ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "CounterJsunit.test.ets", "BadgeJsunit.test.ets", "SpanJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "TextJsunit.test.ets", "commonComponentJsApi.test.js", "SliderJsunit.test.ets", "BlankJsunit.test.ets", "AppStorage.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "DividerJsunit.test.ets", "basicabilityapi.test.js", "ProgressJsunit.test.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "StackJsunit.test.ets", "RatingJsunit.test.ets", "ScrollJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "Set", "api_method_all": "static Set<T>(propName: string, newValue: T): boolean;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 393, "since": 7, "api_used": "\u662f", "lines": ["sole.info(\"[testGridSettings005] start to p", "sole.info(\"[testGridSettings007] start to p", "  console.info(\"gridSettings after each cal", "sole.info('[testGridSettings003] START');\n ", "nsole.info(\"get gridSettings state pages:\" ", "sole.info(\"[testGridSettings003] gridRow us", ");\n\n    it('testGridSettings005', 0, async ", ");\n\n    it('testGridSettings006', 0, async ", "ole.error(\"push gridSettings page error:\" +", "sole.info('[testGridSettings001] START');\n ", "sole.info(\"[testGridSettings005] component ", "sole.info(\"[testGridSettings002] gridRow us", "nsole.log(\"[testGridSettings004] change com", "sole.info(\"[testGridSettings005] gridRow us", "sole.info(\"[testGridSettings002] component ", "nsole.log(\"[testGridSettings005] change com", "sole.info(\"[testGridSettings001] gridRow us", "sole.info(\"[testGridSettings002] start to p", "sole.info(\"[testGridSettings006] gridOffset", "sole.info('[testGridSettings005] START');\n ", "sole.info(\"[testGridSettings004] component ", ");\n\n    it('testGridSettings001', 0, async ", "sole.info('[testGridSettings004] START');\n ", ");\n\n    it('testGridSettings002', 0, async ", "sole.info(\"[testGridSettings003] component ", ");\n\n    it('testGridSettings007', 0, async ", "sole.info(\"[testGridSettings006] component ", ") {\n  describe('gridSettingsTest', function", "    uri: 'pages/gridSettings',\n      }\n    ", "sole.info(\"[testGridSettings000] component ", "sole.info(\"[testGridSettings001] component ", "sole.info(\"push gridSettings page result:\" ", "  console.info(\"GridSetting page stateChang", "sole.info('[testGridSettings006] START');\n ", "nsole.log(\"[testGridSettings007] change com", "nsole.log(\"[testGridSettings003] change com", "sole.info(\"[testGridSettings003] start to p", "sole.info(\"[testGridSettings004] start to p", "sole.info(\"[testGridSettings004] gridRow us", ");\n\n    it('testGridSettings000', 0, async ", "omponent\nstruct GridSetting {\n  @State smSp", "nsole.info(\"get gridSettings state pages.na", "nsole.log(\"[testGridSettings002] change com", ");\n\n    it('testGridSettings003', 0, async ", ");\n\n    it('testGridSettings004', 0, async ", "efault function gridSettingsJsunit() {\n  de", "sole.info(\"[testGridSettings007] component ", "sole.info('[testGridSettings007] START');\n ", "sole.info('[testGridSettings000] START');\n ", "sole.info('[testGridSettings002] START');\n "], "files": ["BackgroundAndSizeSettingJsunit.test.ets", "ImageEffectsJsunit.test.ets", "canvas2.ets", "Slider.ets", "canvas.ets", "PositionSettingJsunit.test.ets", "priorityGesture.ets", "SliderJsunit.test.ets", "positionSetting.ets", "AppStorage.ets", "index.js", "GridSettingsJsunit.test.ets", "AppStorageJsunit.test.ets", "basicabilityapi.test.js", "parallelGesture.ets", "slider.ets", "gridSettings.ets", "List.test.ets", "patternLock.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "SetOrCreate", "api_method_all": "static SetOrCreate<T>(propName: string, newValue: T): void;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": [");\n      AppStorage.SetOrCreate<string>(\"key2\", \"va", "router'\n\nAppStorage.SetOrCreate(\"PropC\", 1)\nvar lin", ");\n      AppStorage.SetOrCreate<string>(\"key3\", \"va", ");\n      AppStorage.SetOrCreate<string>(\"key1\", \"va", "ropC\");\n\nAppStorage.SetOrCreate(\"PropA\", 47);\nvar l"], "files": ["AppStorage.ets", "AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "Delete", "api_method_all": "static Delete(propName: string): boolean;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 31, "since": 7, "api_used": "\u662f", "lines": ["(this.arr[index] + 'Delete')\n          this.ar", " })\n  }\n  notifyDataDelete(index: number): voi", "(eventData.data.showDelete != null) {\n        ", "1\");\n      expect(isDelete)\n      .assertTrue;", "indexEvent.data.showDelete).assertEqual(true);", " {\n        this.showDelete = eventData.data.sh", " {\n        this.showDelete = true\n        try ", "lag)\n        .onItemDelete((index: number) => ", "  persistentStorage.DeleteProp(\"colorMode\");\n ", "this.arr1[index] + 'Delete')\n          this.ar", "Subscriber.aboutToBeDeleted();\n      expect(tr", "= String(AppStorage.Delete(\"PropC\"))\nvar hasVa", " eventData.data.showDelete;\n      }\n    }\n  }\n", "s.arr[index - 1] + 'Delete')\n        this.arr.", "    twoWay.aboutToBeDeleted(new SubscribedAbst", "ode)\n        .onItemDelete((index: number) => ", "talic;\n  @State showDelete :boolean = false\n  ", "    oneWay.aboutToBeDeleted(new SubscribedAbst", "\n      let aboutToBeDeleted = iPropertySubscri", "pe = TransitionType.Delete\n  @State transition", "Style)\n        .showDelete(this.showDelete)\n  ", "     listener.onDataDeleted(index)\n    })\n  }\n", "\n              \"showDelete\": this.showDelete,\n", "tMode)\n      .onItemDelete((index: number) => ", "showDelete(this.showDelete)\n        .onClose((", "owDelete\": this.showDelete,\n            }\n    ", "TART');\n      let isDelete = contentStorage.de"], "files": ["lazyForEach.ets", "list.ets", "SubscribaleAbstractJsunit.test.ets", "transition.ets", "ContentStorage.test.ets", "listItem.ets", "AppStorage.ets", "List.ets", "PieceJsunit.test.ets", "PieceCode.ets", "edgeEffect.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "Keys", "api_method_all": "static Keys(): IterableIterator<string>;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["t key of AppStorage.Keys()) {\n  var keys = k"], "files": ["AppStorage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "Clear", "api_method_all": "static staticClear(): boolean;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["ole.info('testRouterClear START');\n        ro", ";\n\n    \n    it('testClearTimeout', 0, async f", "  console.info('testClearTimeout START');\n   ", "ole.info('testRouterClear END');\n    });\n\n   ", "  console.info('testClearInterval START');\n  ", "1\");\n      expect(isClear)\n      .assertTrue;", "  console.info('testClearTimeout delay 0.5s')", "}\n\n    \n    it('testClearInterval', 0, async ", "  console.info('testClearInterval END');\n    ", " \n    it('testRouterClear', 0, function () {\n", "  console.info('testClearInterval res = ' + r", "  console.info('testClearInterval finally');\n", "TART');\n      let isClear = contentStorage.cl", "  console.info('testClearTimeout END');\n     "], "files": ["basicabilityapi.test.js", "ContentStorage.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "IsMutable", "api_method_all": "static IsMutable(propName: string): boolean;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["= String(AppStorage.IsMutable(\"PropB\"))\n\n\n@Entry\n"], "files": ["AppStorage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppStorage", "api_method_name": "Size", "api_method_all": "static Size(): number;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1415, "since": 7, "api_used": "\u662f", "lines": ["in(30)\n        .fontSize(20)\n        .onClic", "    this.sizeType = SizeType.Auto;\n         ", "ontainer: row').fontSize(20).fontColor(Color", "20)\n            .useSizeType({\n             ", "}\n\n  testImageBitmapSize() {\n    let img = n", "ext('saturate').fontSize(15).fontColor(0xCCC", "    this.sizeType = SizeType.XS;\n          b", "    .backgroundImageSize({ width: 1200, heig", "    this.sizeType = SizeType.SM;\n          b", "layPriority 4').fontSize(20).fontColor(Color", "key(\"flexGrow\").fontSize(9).fontColor(0xCCCC", "\n  @State sizeType: SizeType = SizeType.XS;\n", "t('alignItems').fontSize(9).fontColor(0xCCCC", "t('brightness').fontSize(15).fontColor(0xCCC", "ht(40)\n        .fontSize(16)\n        .backgr", "xt('grayscale').fontSize(15).fontColor(0xCCC", "   Text('Left').fontSize(25)\n        }\n     ", "ht(40)\n        .fontSize(16)\n        .backdr", "ntainer: grid').fontSize(20).fontColor(Color", "ey(\"alignSelf\").fontSize(9).fontColor(0xCCCC", "TEST')\n        .fontSize(50)\n        .fontWe", "  Text('Right').fontSize(25)\n        }\n     ", "      }\n        .useSizeType({\n          xs:", "\n              .fontSize(40)\n              .", "b)\n            .fontSize(20)\n            .as", "')\n            .fontSize(20)\n            .us", "izeType: SizeType = SizeType.XS;\n  private s", "ext('contrast').fontSize(15).fontColor(0xCCC", "ntainer({ sizeType: SizeType.SM }) {\n      R", "\n              .fontSize(18)\n              .", "    this.sizeType = SizeType.Auto;\n      }\n ", "xt('flexBasis').fontSize(9).fontColor(0xCCCC", "xt('hueRotate').fontSize(15).fontColor(0xCCC", "    this.sizeType = SizeType.LG;\n          b", "t('flexShrink').fontSize(9).fontColor(0xCCCC", " Text('Center').fontSize(25)\n        }\n     ", " Text('shadow').fontSize(15).fontColor(0xCCC", "'backdropBlur').fontSize(15).fontColor(0xCCC", "xt('font blur').fontSize(15).fontColor(0xCCC", "this.testImageBitmapSize();\n          this.t", " Text('invert').fontSize(15).fontColor(0xCCC", "    this.sizeType = SizeType.MD;\n          b"], "files": ["ImageJsunit.test.ets", "systemRouterA.ets", "configuration.ets", "ImageEffectsJsunit.test.ets", "longPressGesture.ets", "placement.ets", "Qrcode.ets", "Navigation.ets", "imageFit.ets", "Span.ets", "Progress.ets", "column.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "TextStyleJsunit.test.ets", "marquee.ets", "TextClockJsunit.test.ets", "textTimer.ets", "Rating.ets", "Swiper.ets", "Divider.ets", "border.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "systemPrompt.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "List.test.ets", "scrollCode.ets", "button.ets", "ListItem.ets", "background.ets", "Slider.ets", "Text.ets", "SpanJsunit.test.ets", "Counter.ets", "ButtonJsunit.test.ets", "enumsVerticalAlign.ets", "SystemAppJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "Stack.ets", "sideBar.ets", "toggle.ets", "Blank.ets", "Badge.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "positionSetting.ets", "TextArea.ets", "flexDirection.ets", "shapeClipping.ets", "AppStorageJsunit.test.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "stepper.ets", "shape.ets", "image.ets", "svgTextProps.test.js", "textPathProps.test.js", "row.ets", "loadingProgress.ets", "Marquee.ets", "gridContainerProps.test.js", "flex.ets", "Shape.ets", "gridContainer.ets", "PatternLock.ets", "Stepper.ets", "gridPage.ets", "enumsImage.ets", "badge.ets", "textStyle.ets", "imageEffects.ets", "AlphabetIndexer.ets", "ohosRouterB.ets", "ColumnSplit.ets", "textClock.ets", "layoutConstraints.ets", "list.ets", "MarqueeJsunit.test.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "flexWrap.ets", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "TextAreaJsunit.test.ets", "lazyForEach.ets", "listItem.ets", "grid.ets", "Button.ets", "fontWeight.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "BackgroundAndSizeSettingJsunit.test.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "BadgeJsunit.test.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "Rect.ets", "divider.ets", "TextInput.ets", "ImageAnimatorJsunit.test.ets", "Constants.ets", "rating.ets", "animationStatus.ets", "Path.ets", "fillMode.ets", "curves.ets", "DataPanel.ets", "FormComponentPage.ets", "Grid.ets", "visibility.ets", "progress.ets", "AlertDialog.ets", "WebPage.ets", "TextTimerJsunit.test.ets", "swiperProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "tspanProps.test.js", "Toggle.ets", "slider.ets", "RatingJsunit.test.ets", "Calendar.ets", "refresh.ets", "ScrollBar.ets", "enumsHorizontalAlign.ets", "colorGradient.ets", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Environment", "api_method_all": "declare class Environment {\n  \n  constructor();\n\n  \n  static EnvProp<S>(key: string, value: S): boolean;\n\n  \n  static EnvProps(\n    props: {\n      key: string;\n      defaultValue: any;\n    }[],\n  ): void;\n\n  \n  static Keys(): Array<string>;\n}", "api_method_name": "Environment", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 22, "since": 7, "api_used": "\u662f", "lines": ["      try {\n        Environment.EnvProps(props);\n  ", "o('[stateManagement_Environment_EnvProps_0100] err ", "=' + enable);\n      Environment.EnvProp(\"layoutDire", "100] START');\n      Environment.EnvProp(\"colorMode\"", "it('stateManagement_Environment_EnvProp_colorMode_0", "o('[stateManagement_Environment_EnvProp_colorMode_0", "o('[stateManagement_Environment_EnvProp_layoutDirec", "100] START');\n      Environment.EnvProp(\"layoutDire", "it('stateManagement_Environment_EnvProps_0100', 0, ", "o('[stateManagement_Environment_EnvProps_0100] enab", "it('stateManagement_Environment_EnvProp_layoutDirec", "' + enable1);\n      Environment.EnvProp(\"layoutDire", "=' + enable);\n      Environment.EnvProp(\"colorMode\"", "o('[stateManagement_Environment_EnvProps_0100] END'", "o('[stateManagement_Environment_EnvProps_0100] STAR"], "files": ["AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Environment", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 80, "since": 7, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Environment", "api_method_name": "EnvProp", "api_method_all": "static EnvProp<S>(key: string, value: S): boolean;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 22, "since": 7, "api_used": "\u662f", "lines": ["agement_Environment_EnvProps_0100] END');\n     ", "        Environment.EnvProps(props);\n        le", ";\n      Environment.EnvProp(\"colorMode\", ColorM", ";\n      Environment.EnvProp(\"layoutDirection\", ", "agement_Environment_EnvProps_0100] enable = ' +", "agement_Environment_EnvProp_colorMode_0100] END", "agement_Environment_EnvProp_colorMode_0100', 0,", "agement_Environment_EnvProps_0100', 0, function", "agement_Environment_EnvProp_layoutDirection_010", "agement_Environment_EnvProps_0100] START');\n   ", "agement_Environment_EnvProp_colorMode_0100] STA", "agement_Environment_EnvProp_colorMode_0100] ena", "agement_Environment_EnvProps_0100] enable1 = ' ", "agement_Environment_EnvProps_0100] err = ' + er"], "files": ["AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Environment", "api_method_name": "EnvProps", "api_method_all": "static EnvProps(\n    props: {\n      key: string;\n      defaultValue: any;\n    }[],\n  ): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 7, "since": 7, "api_used": "\u662f", "lines": ["agement_Environment_EnvProps_0100] enable = ' + ", "agement_Environment_EnvProps_0100] END');\n      ", "        Environment.EnvProps(props);\n        let", "agement_Environment_EnvProps_0100] enable1 = ' +", "agement_Environment_EnvProps_0100] err = ' + err", "agement_Environment_EnvProps_0100', 0, function ", "agement_Environment_EnvProps_0100] START');\n    "], "files": ["AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Environment", "api_method_name": "Keys", "api_method_all": "static Keys(): Array<string>;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["t key of AppStorage.Keys()) {\n  var keys = k"], "files": ["AppStorage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ColorMode", "api_method_all": "declare enum ColorMode {\n  \n  LIGHT = 0,\n\n  \n  DARK,\n}", "api_method_name": "ColorMode", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 7, "since": 7, "api_used": "\u662f", "lines": ["  expect(enable1 == ColorMode.DARK)\n      .assert", "ode\", defaultValue: ColorMode.LIGHT\n             ", "nvProp(\"colorMode\", ColorMode.DARK);\n      let en", "   expect(enable == ColorMode.LIGHT)\n        .ass", "   expect(enable == ColorMode.LIGHT)\n      .asser", "nvProp(\"colorMode\", ColorMode.LIGHT);\n      let e"], "files": ["SubscribaleAbstractJsunit.test.ets", "AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ColorMode", "api_method_name": "LIGHT", "api_method_all": "LIGHT = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["enable == ColorMode.LIGHT)\n        .assertTru", "ultValue: ColorMode.LIGHT\n                  }", "enable == ColorMode.LIGHT)\n      .assertTrue;", "lorMode\", ColorMode.LIGHT);\n      let enable ", "ultValue: ColorMode.LIGHT\n                   "], "files": ["SubscribaleAbstractJsunit.test.ets", "AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ColorMode", "api_method_name": "DARK", "api_method_all": "DARK,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["lorMode\", ColorMode.DARK);\n      let enable1", "nable1 == ColorMode.DARK)\n      .assertTrue;"], "files": ["AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "LayoutDirection", "api_method_all": "declare enum LayoutDirection {\n  \n  LTR,\n\n  \n  RTL,\n\n  \n  Auto,\n}", "api_method_name": "LayoutDirection", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 9, "since": 7, "api_used": "\u662f", "lines": ["   expect(enable == LayoutDirection.LTR)\n      .assertT", "  expect(enable1 == LayoutDirection.RTL)\n      .assertT", "(\"layoutDirection\", LayoutDirection.RTL);\n      let ena", "(\"layoutDirection\", LayoutDirection.LTR);\n      let ena", "ion\", defaultValue: LayoutDirection.LTR\n               ", "  expect(enable2 == LayoutDirection.Auto)\n      .assert", "(\"layoutDirection\", LayoutDirection.Auto);\n      let en", "  expect(enable1 == LayoutDirection.RTL)\n        .asser"], "files": ["SubscribaleAbstractJsunit.test.ets", "AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "LayoutDirection", "api_method_name": "LTR", "api_method_all": "LTR,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["ue: LayoutDirection.LTR\n                   ", "n\", LayoutDirection.LTR);\n      let enable ", "ue: LayoutDirection.LTR\n                  }", " == LayoutDirection.LTR)\n      .assertTrue;"], "files": ["SubscribaleAbstractJsunit.test.ets", "AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "LayoutDirection", "api_method_name": "RTL", "api_method_all": "RTL,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": [" == LayoutDirection.RTL)\n        .assertTru", " == LayoutDirection.RTL)\n      .assertTrue;", "n\", LayoutDirection.RTL);\n      let enable1"], "files": ["AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "LayoutDirection", "api_method_name": "Auto", "api_method_all": "Auto,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 581, "since": 8, "api_used": "\u662f", "lines": ["pAuto : this.dirPropAuto,\n             dirPr", "     this.rotatePropAutoReverse = this.$elem", "\n            dirPropAuto : this.dirPropAuto,", ".objectFit(ImageFit.Auto).width(110).height(", "se : this.rotatePropAutoReverse,\n           ", "= SwiperDisplayMode.AutoLinear\n  @State edge", "is.$element(\"dirPropAuto\").getInspector()\n  ", "        this.dirPropAuto = this.$element(\"di", "ertEqual('Direction.Auto');\n      console.in", "ertEqual(\"ItemAlign.Auto\");\n      console.in", "autoReset' + this.isAutoReset).onClick(() =>", "sertEqual('BarState.Auto')\n      console.inf", "          rotatePropAutoReverse : this.rotat", "          .overlay('Auto', { align: Alignmen", "ateValue\": BarState.Auto\n          }\n       ", "emAlign = ItemAlign.Auto\n\n  build() {\n    Fl", "Style = BorderStyle.Auto;\n  @State borderRad", "pe) {\n        case 'Auto':\n          this.si", "ll,\n         dirPropAuto : null,\n         di", "rection = Direction.Auto\n  @State position: ", "ber= 30;\n  @State isAutoReset: boolean= true", "ignSelf = ItemAlign.Auto;\n      }\n    }\n  }\n", "n\", LayoutDirection.Auto);\n      let enable2", "ImageSize(ImageSize.Auto)\n        .width('90", "ertEqual('ImageSize.Auto');\n      console.in", "AutoReset = !this.isAutoReset\n        }).mar", "pAuto : this.dirPropAuto,\n            dirPro", "ignSelf = ItemAlign.Auto;\n          break;\n ", "ertEqual(\"Direction.Auto\")\n      expect(obj.", "ection\":  Direction.Auto,\n          }\n      ", "lf) {\n        case 'Auto':\n          this.al", ",\n        rotatePropAutoReverse : null,\n    ", "sizeType = SizeType.Auto;\n          break;\n ", " {\n          this.isAutoReset = !this.isAuto", "sizeType = SizeType.Auto;\n      }\n    }\n  }\n", " sizeType: SizeType.Auto, gutter: 10, margin", "al, state: BarState.Auto }) {\n          Text", "$element(\"rotatePropAutoReverse\").getInspect", "  .autoReset(this.isAutoReset)\n        .onPa", "ull,\n        dirPropAuto : null,\n        dir", "             dirPropAuto : this.dirPropAuto,", " == LayoutDirection.Auto)\n      .assertTrue;", "ertEqual(\"ItemAlign.Auto\")\n      expect(obj.", "emAlign = ItemAlign.Auto\n  @State borderStyl"], "files": ["ratingProps.test.js", "flex.ets", "listItemGroupProps.test.js", "formProps.test.js", "dividerProps.test.js", "marqueeProps.test.js", "gridContainer.ets", "PatternLock.ets", "imageAnimatorProps.test.js", "tabContentProps.test.js", "textProps.test.js", "ScrollBarJsunit.test.ets", "enumsImage.ets", "toolbarProps.test.js", "tabsProps.test.js", "pickerViewProps.test.js", "qrcodeProps.test.js", "Text.ets", "divProps.test.js", "stackProps.test.js", "switchProps.test.js", "imageFit.ets", "TextJsunit.test.ets", "swiper.ets", "popupProps.test.js", "gridContainerProps.test.js", "CheckboxGroupJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "listItemProps.test.js", "searchProps.test.js", "chartProps.test.js", "gridRowProps.test.js", "EnmusImageJsunit.test.ets", "spanProps.test.js", "stepperItemProps.test.js", "canvasProps.test.js", "sliderProps.test.js", "swiperProps.test.js", "enumsItemAlign.ets", "toolbarItemProps.test.js", "videoProps.test.js", "RowJsunit.test.ets", "GridContainer.ets", "inputProps.test.js", "index.js", "FlexJsunit.test.ets", "optionProps.test.js", "tabBarProps.test.js", "toggleProps.test.js", "AppStorageJsunit.test.ets", "badgeProps.test.js", "border.ets", "pieceProps.test.js", "dialogProps.test.js", "imageProps.test.js", "listProps.test.js", "animateMotionProps.test.js", "labelProps.test.js", "pickerProps.test.js", "progressProps.test.js", "selectProps.test.js", "textareaProps.test.js", "Direction2Jsunit.test.ets", "gridColProps.test.js", "panelProps.test.js", "ScrollBar.ets", "menuProps.test.js", "buttonProps.test.js", "stepperProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "PersistentStorage", "api_method_all": "declare class PersistentStorage {\n  \n  constructor(appStorage: AppStorage, storage: Storage);\n\n  \n  static PersistProp<T>(key: string, defaultValue: T): void;\n\n  \n  static DeleteProp(key: string): void;\n\n  \n  static PersistProps(\n    properties: {\n      key: string;\n      defaultValue: any;\n    }[],\n  ): void;\n\n  \n  static Keys(): Array<string>;\n}", "api_method_name": "PersistentStorage", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["o('[stateManagement_PersistentStorage_0100] Start');\n    ", "o('[stateManagement_PersistentStorage_0100] END');\n      ", "istentStorage = new PersistentStorage(AppStorage, new Sto", "it('stateManagement_PersistentStorage_0100', 0, function "], "files": ["SubscribaleAbstractJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "PersistentStorage", "api_method_name": "constructor", "api_method_all": "constructor(appStorage: AppStorage, storage: Storage)", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 80, "since": 7, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "PersistentStorage", "api_method_name": "PersistProp", "api_method_all": "static PersistProp<T>(key: string, defaultValue: T): void;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["  persistentStorage.PersistProps(persistProp);IProp", "  persistentStorage.PersistProp<string>(\"key10\", \"v"], "files": ["SubscribaleAbstractJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "PersistentStorage", "api_method_name": "DeleteProp", "api_method_all": "static DeleteProp(key: string): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["  persistentStorage.DeleteProp(\"colorMode\");\n     "], "files": ["SubscribaleAbstractJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "PersistentStorage", "api_method_name": "PersistProps", "api_method_all": "static PersistProps(\n    properties: {\n      key: string;\n      defaultValue: any;\n    }[],\n  ): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["  persistentStorage.PersistProps(persistProp);IPrope"], "files": ["SubscribaleAbstractJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "PersistentStorage", "api_method_name": "Keys", "api_method_all": "static Keys(): Array<string>;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["t key of AppStorage.Keys()) {\n  var keys = k"], "files": ["AppStorage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Storage", "api_method_all": "declare class Storage {\n  \n  constructor(needCrossThread?: boolean, file?: string);\n\n  \n  get(key: string): string | undefined;\n\n  \n  set(key: string, val: any): void;\n\n  \n  clear(): void;\n\n  \n  delete(key: string): void;\n}", "api_method_name": "Storage", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 199, "since": 7, "api_used": "\u662f", "lines": ["      let key1 = AppStorage.Get<string>(\"key1\")", "  let key1 = contentStorage.get<string>(\"key1\")", "teManagement_ContentStorage_setOrCreate_0100] E", "[stateManagement_AppStorage_setOrCreate_0100] s", "o('[stateManagement_Storage_set_0100] 0000');\n ", "[stateManagement_AppStorage_setOrCreate_0100] k", "sole.error(\"push appStorage page error: \" + err", "lue\");\n      contentStorage.setOrCreate<int>(\"k", ";\n        if (!(\"appStorage\" == pages.name)) {\n", "o('[stateManagement_Storage_set_0100] key5 =' +", "\n  describe('ContentStorage', function () {\n   ", "\"value1\");\n      AppStorage.SetOrCreate<string>", "() {\n  describe('appStorage', function () {\n\n  ", "\"value2\");\n      AppStorage.SetOrCreate<string>", ", 11);\n      contentStorage.setOrCreate<boolean", "o('[stateManagement_Storage_set_0100] 3333');\n ", "  let key2 = contentStorage.get<int>(\"key2\");\n ", "   let enable1 = AppStorage.Get(\"layoutDirectio", "  let key3 = contentStorage.get<boolean>(\"key3\"", "o('[stateManagement_Storage_set_0100] 1111');\n ", "     uri: 'pages/appStorage',\n      }\n      let", "[stateManagement_AppStorage_setOrCreate_0100] E", "    let enable = AppStorage.Get(\"colorMode\");\n ", "o('[stateManagement_Storage_set_0100] END');\n  ", "  let storage = new Storage();\n      console.in", "      let size = AppStorage.Size();\n      conso", "] START');\n      AppStorage.SetOrCreate<string>", "'stateManagement_AppStorage_setOrCreate_0100', ", "it('stateManagement_Storage_set_0100', 0, funct", "   console.info(\"appStorage after each called\")", "[stateManagement_AppStorage_setOrCreate_0100] S", "ult function ContentStorageJsunit() {\n  describ", "    let enable = AppStorage.Get(\"layoutDirectio", "teManagement_ContentStorage_setOrCreate_0100', ", "torage = new ContentStorage();\n\n    \n    it('st", "() {\n    let contentStorage = new ContentStorag", "onsole.info(\"get appStorage state pages.name: \"", "o('[stateManagement_Storage_set_0100] 2222' + k", "o('[stateManagement_Storage_set_0100] key6 =' +", "ART');\n      contentStorage.setOrCreate<string>", "default function AppStorageJsunit() {\n  describ", "teManagement_ContentStorage_get_0100', 0, funct", "   let enable2 = AppStorage.Get(\"layoutDirectio", "   console.info(\"appStorage beforeEach start\");", "teManagement_ContentStorage_setOrCreate_0100] S", "   let enable1 = AppStorage.Get(\"colorMode\");\n ", "o('[stateManagement_Storage_set_0100] START');\n"], "files": ["WebPage.ets", "SubscribaleAbstractJsunit.test.ets", "ContentStorage.test.ets", "AppStorage.ets", "List.test.ets", "AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Storage", "api_method_name": "constructor", "api_method_all": "constructor(needCrossThread?: boolean, file?: string)", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 80, "since": 7, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Storage", "api_method_name": "get", "api_method_all": "get(key: string): string | undefined;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 13929, "since": 7, "api_used": "\u662f", "lines": ["onfigService = core.getDefaultService('conf", "  const core = Core.getInstance();\n        ", "      console.info(\"get appear state pages.", ".list.length\n  }\n\n  getData(index: number):", "      let strJson = getInspectorByKey('elli", "         + event.target.area.globalPos.x + ", "         + event.target.area.width + '\\nhei", "      console.info(\"get appear state pages:", "Canvas2 = offscreen.getContext(\"2d\");\n    v", "   let strJsonNew = getInspectorByKey('enab", "areaChangeTest_0300 get event state result ", "areaChangeTest_0400 get state result is: \" ", "      console.info(\"get column state pages.", "      console.info(\"get enable state pages:", "      console.info(\"get ellipse state pages", "      console.info(\"get flex state success ", "      console.info(\"get enable state pages.", " let pages = router.getState();\n        con", "\n    featureAbility.getWant()\n      .then((", "      let strJson = getInspectorByKey('enab", "height\uff1a' + event.target.area.height)\n      ", ".info(\"testAppear01 get appearEvent result ", ".info(\"testAppear02 get appearEvent result ", "areaChangeTest_0300 get state result is: \" ", ".x + ',' + event.target.area.globalPos.y + ", "      console.info(\"get column state pages:", "      console.info(\"get areaChange state su", "      let strJson = getInspectorByKey('alig", ".info(\"testAppear02 get disAppearEvent resu"], "files": ["pageTransition2.ets", "ohosPrompt.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "listItemGroupProps.test.js", "pathProps.test.js", "configuration.ets", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "Navigator.ets", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "Row.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "Swiper.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "button.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "EnmusFlexAlignJsunit.test.ets", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "Text.ets", "SpanJsunit.test.ets", "stackProps.test.js", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "SystemAppJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "refreshProps.test.js", "Prop.ets", "ScrollerBarJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "svgProps.test.js", "labelProps.test.js", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "ratingProps.test.js", "stepperProps.test.js", "MotionPathJsunit.test.ets", "Utils.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "popupProps.test.js", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "AppStorage.ets", "DatePickerJsunit.test.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "dragEvent.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "animateMotionProps.test.js", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "NavigatorCode.ets", "buttonProps.test.js", "animateProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "global.ets", "ContentStorage.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "AnimationStatusJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "canvas.ets", "AboutToDisappearJsunit.test.ets", "ohosMatrix4.ets", "CircleJsunit.test.ets", "divProps.test.js", "pickerViewProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "FormComponentPage.ets", "Grid.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "pageTransition.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "WebPage.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "polygonProps.test.js", "swiperProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "ohosRouterA.ets", "GridItem.ets", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "panelProps.test.js", "sharedTransition.ets", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Storage", "api_method_name": "set", "api_method_all": "set(key: string, val: any): void;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 1392, "since": 7, "api_used": "\u662f", "lines": ["      configService.setConfig(Want.paramete", "  xs: { span: 2, offset: 8 },\n             ", ", lg: { span: 7, offset: 2 }\n        })\n   ", "an: this.smSpan, offset: this.smOffset },\n ", "llBack);\n    let offsetChangeEvent = {\n    ", "\n    it('ACE_global_setTimeout', 0, functio", "  xs: { span: 6, offset: 0 },\n             ", "  xs: { span: 2, offset: 6 },\n             ", "  lg: { span: 2, offset: 2 }\n            })", "       .key('gridOffset')\n\n        Row() {\n", ";\n        this.smOffset = eventData.data.of", "entData.data.gridOffset) {\n        this.gri", "s.useSizeType.sm.offset).assertEqual(2);\n  ", "  }\n        .gridOffset(this.gridOffset)\n  ", "  lg: { span: 2, offset: 0 }\n            })", "lor: Color.Gray, offsetX: 5, offsetY: 5 }\n ", "  sm: { span: 2, offset: 10 },\n            ", "entData.data.gridOffset;\n      } else if (e", ".onScroll((scrollOffset: number, scrollStat", " this.alignment, offset: { x: this.x, y: th", "ame} START`);\n      setTimeout(() => {\n    ", "ray, offsetX: 5, offsetY: 5 }\n  @State gray", "  lg: { span: 2, offset: 4 }\n            })", "s.useSizeType.sm.offset).assertEqual(-21474", " 1,\n            \"offset\": 2\n          }\n   ", "  xs: { span: 1, offset: 0 }, sm: { span: t", "vents_emitter.on(offsetChangeEvent, this.st", "  sm: { span: 6, offset: 2 },\n             ", "  xs: { span: 2, offset: 10 },\n            ", "dOffset(this.gridOffset)\n        .height(\"1", ", offset: this.smOffset },\n          md: { ", "lignment.Bottom, offset: { x: 0, y: 20 } })", "  sm: { span: 2, offset: 8 },\n             ", "Offset:' + scrollOffset)\n          console.", "= eventData.data.offset;\n      } else if (e", "  md: { span: 2, offset: 10 },\n            ", "        this.gridOffset = eventData.data.gr", "  lg: { span: 6, offset: 6 }\n            })", "  sm: { span: 2, offset: 0 },\n             ", "  md: { span: 2, offset: 2 },\n             ", " 1;\n  @State gridOffset: number = 0;\n\n  bui", "  md: { span: 6, offset: 4 },\n             ", "tring = \"ACE_global_setTimeout\"\n      conso", "s.useSizeType.sm.offset).assertEqual(1);\n  ", "00,\n            \"offset\": 0x80000000\n      ", "  md: { span: 2, offset: 0 },\n             ", "sole.info('scrollOffset:' + scrollOffset)\n ", " = 2;\n  @State smOffset: number = 1;\n  @Sta", "  md: { span: 5, offset: 1 }, lg: { span: 7"], "files": ["listItemGroupProps.test.js", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "video.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "textProps.test.js", "canvas2.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "imageFit.ets", "polylineProps.test.js", "PositionSettingJsunit.test.ets", "CustomDialog.ets", "searchProps.test.js", "spanProps.test.js", "toolbarItemProps.test.js", "textTimer.ets", "enumsLineCapStyle.ets", "OverlayJsunit.test.ets", "DividerJsunit.test.ets", "basicabilityapi.test.js", "badgeProps.test.js", "dialogProps.test.js", "CalendarJsunit.test.ets", "gridSettings.ets", "LinkJsunit.test.ets", "GridJsnuit.test.ets", "scrollCode.ets", "formProps.test.js", "VideoJsunit.test.ets", "circleProps.test.js", "stackProps.test.js", "Text.ets", "SpanJsunit.test.ets", "PanelJsunit.test.ets", "StepperJsunit.test.ets", "ButtonJsunit.test.ets", "SystemAppJsunit.test.ets", "TextJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "Scroll.ets", "customDialogController.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "BlankJsunit.test.ets", "positionSetting.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "ProgressJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "PanGesture.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "gridContainerProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "gridContainer.ets", "PatternLock.ets", "imageAnimatorProps.test.js", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "imageEffects.ets", "popupProps.test.js", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "videoProps.test.js", "list.ets", "AppStorage.ets", "List.ets", "GridContainer.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "calendar.ets", "TextInputJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "Video.ets", "StackJsunit.test.ets", "TextAreaJsunit.test.ets", "pickerProps.test.js", "pieceProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "textareaProps.test.js", "ScrollJsunit.test.ets", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "patternLock.ets", "animateProps.test.js", "buttonProps.test.js", "panDirection.ets", "ContentStorage.test.ets", "BadgeJsunit.test.ets", "canvas.ets", "pickerViewProps.test.js", "divProps.test.js", "switchProps.test.js", "Constants.ets", "commonComponentJsApi.test.js", "ellipseProps.test.js", "chartProps.test.js", "touchAble.ets", "SliderJsunit.test.ets", "sliderProps.test.js", "swiperProps.test.js", "WebPage.ets", "polygonProps.test.js", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "toggleProps.test.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Calendar.ets", "panelProps.test.js", "gestureMode.ets", "refresh.ets", "motionPath.ets", "menuProps.test.js", "rectProps.test.js", "overlay.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Storage", "api_method_name": "clear", "api_method_all": "clear(): void;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 392, "since": 7, "api_used": "\u662f", "lines": ["ry {\n        router.clear();\n        let page", "ment_ContentStorage_clear_0100', 0, function ", "ment_ContentStorage_clear_0100] END');\n      ", "ar = contentStorage.clear(\"key1\");\n      expe", "ey6);\n      storage.clear();\n      key6 = sto", "ment_ContentStorage_clear_0100] START');\n    "], "files": ["listItemGroupProps.test.js", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "EnmusFlexAlignJsunit.test.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "svgProps.test.js", "labelProps.test.js", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "ratingProps.test.js", "stepperProps.test.js", "MotionPathJsunit.test.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "popupProps.test.js", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "gridColProps.test.js", "buttonProps.test.js", "animateProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "ContentStorage.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "AnimationStatusJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "canvas.ets", "AboutToDisappearJsunit.test.ets", "pickerViewProps.test.js", "CircleJsunit.test.ets", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "WebPage.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "polygonProps.test.js", "swiperProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "ohosRouterA.ets", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Storage", "api_method_name": "delete", "api_method_all": "delete(key: string): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 9, "since": 7, "api_used": "\u662f", "lines": ["ey5);\n      storage.delete(\"key5\");\n      key5", "t(\"PropA\", 20))\nvar deleteValue = String(AppSt", "ment_ContentStorage_delete_0100] END');\n      ", "ment_ContentStorage_delete_0100', 0, function ", "tate str7: string = deleteValue\n  @State str8:", ";\n        function4.delete();\n    },\n\n    chan", "ment_ContentStorage_delete_0100] START');\n    ", "    this.controller.deleteJavaScriptRegister('", "te = contentStorage.delete(\"key1\");\n      expe"], "files": ["WebPage.ets", "ContentStorage.test.ets", "AppStorage.ets", "index.js", "AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribaleAbstract", "api_method_all": "declare abstract class SubscribaleAbstract {\n  \n  private owningProperties_: Set<number>;\n\n  \n  constructor();\n\n  \n  protected notifyPropertyHasChanged(propName: string, newValue: any): void;\n\n  \n  public addOwningProperty(subscriber: IPropertySubscriber): void;\n\n  \n  public removeOwningProperty(property: IPropertySubscriber): void;\n\n  \n  public removeOwningPropertyById(subscriberId: number): void;\n}", "api_method_name": "abstractSubscribaleAbstract", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribaleAbstract", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 80, "since": 7, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribaleAbstract", "api_method_name": "protected", "api_method_all": "protected notifyPropertyHasChanged(propName: string, newValue: any): void;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribaleAbstract", "api_method_name": "public", "api_method_all": "public addOwningProperty(subscriber: IPropertySubscriber): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["\n    return 0\n  }\n  public getData(index: numb", "ataAdd(index)\n  }\n  public pushData(data: stri", "eListener[] = []\n\n  public totalCount(): numbe", "aArray.length\n  }\n  public getData(index: numb", "Array[index]\n  }\n\n  public addData(index: numb", " '/path/image3']\n\n  public totalCount(): numbe"], "files": ["lazyForEach.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribaleAbstract", "api_method_name": "public", "api_method_all": "public removeOwningProperty(property: IPropertySubscriber): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["\n    return 0\n  }\n  public getData(index: numb", "ataAdd(index)\n  }\n  public pushData(data: stri", "eListener[] = []\n\n  public totalCount(): numbe", "aArray.length\n  }\n  public getData(index: numb", "Array[index]\n  }\n\n  public addData(index: numb", " '/path/image3']\n\n  public totalCount(): numbe"], "files": ["lazyForEach.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribaleAbstract", "api_method_name": "public", "api_method_all": "public removeOwningPropertyById(subscriberId: number): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["\n    return 0\n  }\n  public getData(index: numb", "ataAdd(index)\n  }\n  public pushData(data: stri", "eListener[] = []\n\n  public totalCount(): numbe", "aArray.length\n  }\n  public getData(index: numb", "Array[index]\n  }\n\n  public addData(index: numb", " '/path/image3']\n\n  public totalCount(): numbe"], "files": ["lazyForEach.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "abstractSubscribaleAbstract", "api_method_name": "private", "api_method_all": "private owningProperties_: Set<number>", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 169, "since": 7, "api_used": "\u662f", "lines": [" boolean = false\n\n  private stateChangCallBack ", "youtConstraints {\n  private children: string[] ", "dDayRowSpace\n  };\n  private stateChangCallBack ", "io: number = 1.5;\n  private container: Containe", "      }\n    }\n  }\n  private stateChangCallBackT", "ngCallBack);\n  }\n\n  private hiddenChangCallBack", "allBackTwo);\n  }\n\n  private stateChangCallBack ", "Value: string= 10\n  private stateChangCallBack ", ": boolean = false\n  private changeAppear: strin", "FlexDirection.Row\n  private stateChangCallBack ", " height: 280 });\n\n  private stateChangCallBack ", "lue: number = 40\n\n  private stateChangCallBack ", "      }\n    }\n  }\n  private noneChangCallBack =", "us: number = 70;\n\n  private stateChangCallBack ", "uct ListExample {\n  private arr: number[] = [0,", "st: number[] = []\n  private listener: DataChang", "wiperController()\n  private data: MyDataSource ", "ating: true\n  };\n\n  private stateChangCallBack ", "angCallBack)\n  }\n\n  private hiddenChangCallBack", "gCallBack);\n\n  }\n\n  private stateChangCallBack ", ", [0xD94838, 1]];\n  private stateChangCallBack ", "     }\n    }\n  }\n\n  private stateChangCallBackO", "eight;\n    }\n  }\n\n  private weightChangCallBack", " boolean = false;\n  private stateChangCallBack ", "     }\n    }\n  }\n\n  private shapeChangCallBack ", "angCallBack)\n  }\n\n  private stateChangCallBack ", "      }\n    }\n  }\n  private stateChangCallBack ", "ing = 'Hide Text'\n  private myText: string = 'T", "     }\n    }\n  }\n\n  private stateChangCallBackT", "ht2: string = 2;\n\n  private stateChangCallBack ", "pe = SizeType.XS;\n  private stateChangCallBack ", "y: 100, z: 30 })\n\n  private stateChangCallBack ", "     }\n    }\n  }\n\n  private noneChangCallBack =", "boolean = false;\n\n  private aboutToAppear(): vo", "0, y:200, z:30})\n\n  private stateChangCallBack ", "ngCallBack);\n  }\n\n  private stateChangCallBack ", "t SwiperExample {\n  private swiperController: S", " Color= 0xCCCCCC\n\n  private stateChangCallBack ", "nts IDataSource {\n  private list: number[] = []", "argin;\n    }\n  }\n\n  private sizeChangCallBack ="], "files": ["video.ets", "canvas2.ets", "Navigation.ets", "imageFit.ets", "richText.ets", "column.ets", "checkboxGroup.ets", "navigation.ets", "Swiper.ets", "Divider.ets", "border.ets", "ResponseRegion.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "transition.ets", "transForm.ets", "path.ets", "Column.ets", "scrollCode.ets", "button.ets", "focus.ets", "touch.ets", "ListItem.ets", "background.ets", "Text.ets", "Counter.ets", "gauge.ets", "Stack.ets", "swiper.ets", "sideBar.ets", "toggle.ets", "Blank.ets", "Badge.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "flexDirection.ets", "shapeClipping.ets", "edgeEffect.ets", "PanGesture.ets", "stepper.ets", "shape.ets", "row.ets", "loadingProgress.ets", "flex.ets", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "textPickerDialog.ets", "gridPage.ets", "enable.ets", "PieceCode.ets", "badge.ets", "imageEffects.ets", "AlphabetIndexer.ets", "ColumnSplit.ets", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "list.ets", "colorGradient.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "flexWrap.ets", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "checkbox.ets", "lazyForEach.ets", "circle.ets", "listItem.ets", "Button.ets", "fontWeight.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "canvas.ets", "ohosMatrix4.ets", "divider.ets", "ScrollBar.ets", "ellipse.ets", "appear.ets", "rating.ets", "zIndex.ets", "line.ets", "DataPanel.ets", "touchAble.ets", "pageTransition.ets", "visibility.ets", "progress.ets", "datePicker.ets", "Link.ets", "select.ets", "slider.ets", "aboutToDisappear.ets", "Calendar.ets", "sharedTransition.ets", "refresh.ets", "motionPath.ets", "search.ets", "panel.ets", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}]}