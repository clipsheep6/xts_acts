{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\ability\\want", "api": [{"api_class_name": "Want", "api_method_all": "export declare interface Want {\n  \n  deviceId?: string;\n\n  \n  bundleName?: string;\n\n  \n  abilityName?: string;\n\n  \n  uri?: string;\n\n  \n  type?: string;\n\n  \n  flags?: number;\n\n  \n  action?: string;\n\n  \n  parameters?: {[key: string]: any};\n\n  \n  entities?: Array<string>;\n\n  \n  extensionAbilityName?: string;\n\n  \n  extensionAbilityType?: number;\n}", "api_method_name": "Want", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 148, "since": 6, "api_used": "\u662f", "lines": ["nShowProcess abilityWant:\"\n        + JSON.st", "\"SUB_AA_OpenHarmony_Want_0200\";\n        var ", "'SUB_AA_OpenHarmony_Want_0300', 0, async fun", "mony_EqueryAbilityByWant_0100---------------", "testTarget = abilityWant.parameters.testTarg", " SUB_AA_OpenHarmony_Want_0300-------------\")", " SUB_AA_OpenHarmony_Want_0200-------------\")", "ON.stringify(abilityWant));\n        testActi", "'SUB_AA_OpenHarmony_Want_0200', 0, async fun", "  featureAbility.getWant((err,data) =>{\n    ", "               want:Want,\n                ab", " ' + JSON.stringify(Want));\n      })\n      .", "testAction = abilityWant.action;\n        con", "Want()\n      .then((Want) => {\n        const", "ry{\n            let Want = {\n               ", "mony_EqueryAbilityByWant_0100\", 0, async fun", "\"SUB_AA_OpenHarmony_Want_0300\";\n        var ", "\n        var abilityWant = await featureAbil", "testAction = abilityWant.action;\n    console", "  featureAbility.getWant()\n      .then((Want", " {\n            want:Want,\n            abilit", ") {\n\n    var abilityWant = await featureAbil", "ON.stringify(abilityWant));\n    testAction =", "igService.setConfig(Want.parameters);\n      ", ">' + JSON.stringify(Want.parameters));\n     ", "t featureAbility.getWant();\n    console.log(", "_0100 queryAbilityByWant errCode : '\n       ", "rAppA onShow abilityWant:\"\n            + JSO", "   try{\n        let Want = {\n            bun", "t featureAbility.getWant();\n        console.", "nager.queryAbilityByWant(want,bundleFlags,us"], "files": ["List.test.js", "ActsStServiceAbilityClientCaseTest.test.js", "FeatureAbilityJsunit.test.js", "app.js", "ActsGetWantAllTest.js", "index.js", "ApplicationInfoJsunit.test.js", "AbilityDisableTest.js", "index.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Want", "api_method_name": "deviceId", "api_method_all": "deviceId?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 96, "since": 6, "api_used": "\u662f", "lines": ["ypeof (data[i].want.deviceId)).assertEqual(\"stri", "ypeof (info[i].want.deviceId)).assertEqual(\"stri", "ons = {\n            deviceId : \"\",\n            r", "dataInfo[i].ability.deviceId).assertEqual(\"\");\n ", "ons = {\n            deviceId : undefined,\n      ", "                    deviceId: \"\",\n              ", "t(typeof (data.want.deviceId)).assertEqual(\"stri", "ons = {\n            deviceId : \"2BB6F91131F74C11"], "files": ["MangerAbilityJsunit.test.js", "FeatureAbilityJsunit.test.js", "FeatureAbilityDistribute.test.js", "ActsGetWantAllTest.js", "index.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Want", "api_method_name": "bundleName", "api_method_all": "bundleName?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 953, "since": 6, "api_used": "\u662f", "lines": ["ypeof (info[i].want.bundleName)).assertEqual(\"stri", "MainAbility\"\n]\n\nlet bundleNameList = [\n    \"com.oh", "     expect(info[i].bundleNames.length).assertEqua", "expect(info[i].want.bundleName.length).assertLarge", "                    bundleName: \"com.ix.verify.io\"", "             expect(bundleNameList.indexOf(data[i]", "ypeof (data[i].want.bundleName)).assertEqual(\"stri", "expect(data[i].want.bundleName.length).assertLarge", "me:' + data[i].want.bundleName);\n                 ", "                    bundleName: \"com.ix.simulate.f", "                    bundleName: \"com.ix.verify.act", "rror.code + ', want.bundleName:' + data[i].want.bu", "             expect(bundleNameList.indexOf(info[i]", "   if (data[i].want.bundleName != 'com.example.act", "                    bundleName: \"com.ix.simulate.e", "ndexOf(info[i].want.bundleName)).assertLarger(-1);", "MainAbility\"\n]\n\nvar bundleNameList = [\n    \"com.oh", "ndexOf(data[i].want.bundleName)).assertLarger(-1);", "ray.isArray(info[i].bundleNames)).assertEqual(true"], "files": ["FormFuzzArray.test.js", "getHapModuleInfoJsunit.test.ets", "FormsOneAndOneJsunit.test.js", "ActsGetWantAllTest.js", "ActsProcessManageJsTest.test.js", "getAbilityInfoJsunit2.test.ets", "FormFuzzString.test.js", "taskSwitchJsunit.test.js", "app.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "ActsAbilityLifecycleStateNewTest.test.js", "amsMissionSnapshotTest.test.js", "MangerAbilityJsunit.test.js", "LockNew.js", "FormFuzzFunction.test.js", "startFULL.test.js", "getHapModuleInfoJsunit_app1.test.ets", "ActsAbilityDelegatorCaseTest.test.js", "FormFuzzNull.test.js", "ActsKillProcessTest.test.js", "index.js", "MissionManager.test.js", "index.ets", "ActsStServiceAbilityClientCaseTest.test.js", "FormFuzzNum.test.js", "FeatureAbilityJsunit.test.js", "FormsOneAndTwoJsunit.test.js", "FormFuzzUndefined.test.js", "FormFuzzObject.test.js", "FormFuzzBool.test.js", "FormsZeroAndOneJsunit.test.js", "FormsZeroJsunit.test.js", "AbilityDisableTest.js", "Getactive.test.js", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Want", "api_method_name": "abilityName", "api_method_all": "abilityName?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 339, "since": 6, "api_used": "\u662f", "lines": ["ypeof (info[i].want.abilityName)).assertEqual(\"stri", "ndexOf(data[i].want.abilityName)).assertLarger(-1);", "expect(data[i].want.abilityName.length).assertLarge", "ypeof (data[i].want.abilityName)).assertEqual(\"stri", "                    abilityName: \"com.example.Verif", "             expect(abilityNameList.indexOf(data[i]", "             expect(abilityNameList.indexOf(info[i]", "cjsunit/index'\n\nvar abilityNameList = [\n    \"com.oh", " if (result[i].want.abilityName != 'com.example.act", "expect(info[i].want.abilityName.length).assertLarge", "                    abilityName: \"com.example.Simul", "m 'deccjsunit'\n\nvar abilityNameList = [\n    \"com.oh", "ndexOf(info[i].want.abilityName)).assertLarger(-1);", "cjsunit/index'\n\nlet abilityNameList = [\n    \"com.oh", "m 'deccjsunit'\n\nlet abilityNameList = [\n    \"com.oh"], "files": ["ActsGetWantAllTest.js", "ActsProcessManageJsTest.test.js", "taskSwitchJsunit.test.js", "app.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "ActsAbilityLifecycleStateNewTest.test.js", "amsMissionSnapshotTest.test.js", "MangerAbilityJsunit.test.js", "LockNew.js", "startFULL.test.js", "ActsKillProcessTest.test.js", "index.js", "MissionManager.test.js", "index.ets", "ActsStServiceAbilityClientCaseTest.test.js", "FeatureAbilityJsunit.test.js", "AbilityDisableTest.js", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Want", "api_method_name": "uri", "api_method_all": "uri?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 209, "since": 6, "api_used": "\u662f", "lines": ["ataAbilityResult[i].uri).assertEqual(dataAb", "dataInfo[i].ability.uri).assertEqual(undefi", "stemappamulti';\nvar uriSystemB = '/data/acc", " \"checkAbilityInfo2 uri : \" + data.uri);\n  ", "ataAbilityResult[i].uri)\n                  ", "+ \"checkAbilityInfo uri : \" + data.uri);\n  ", ".pmsystemappb';\nvar uriVendorA = '/data/acc", "AppDataPathFileNums(uri, callBack) {\n      ", "                    uri: \"key={true,true,fa", "Info uri : \" + data.uri);\n      console.log", "expect(typeof (data.uri)).assertEqual(\"stri", "     fileio.opendir(uriSystemAMulti).then(f", "        expect(data.uri).assertEqual(\"\");\n ", ";\n      expect(data.uri).assertEqual(\"\");\n ", "dorABundleName;\nvar uriSystemA = '/data/acc", "                    uri: dataAbilityUri,\n  ", "     fileio.opendir(uriSystemA).then(functi", "Info uri : \" + data.uri);\n          console", "nfo2 uri : \" + data.uri);\n      console.log", ".pmsystemappa';\nvar uriSystemAMulti = '/dat", "for data[' + i + '].uri ====>: '\n          ", "               uri: uri,\n                su", "t({\n                uri: uri,\n             "], "files": ["getAbilityInfoJsunit2.test.ets", "MangerAbilityJsunit.test.js", "getHapModuleInfoJsunit.test.ets", "getHapModuleInfoJsunit_app1.test.ets", "FeatureAbilityJsunit.test.js", "ActsDataAbilityJsTest.test.js", "app.js", "ActsGetWantAllTest.js", "index.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "second.js", "AbilityDisableTest.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Want", "api_method_name": "type", "api_method_all": "type?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2091, "since": 6, "api_used": "\u662f", "lines": ["             expect(typeof (data[i].want.dev", "             expect(typeof (info[i].label)).", "             expect(typeof (info[i].want.abi", "             expect(typeof (info[i].want)).a", "             expect(typeof (info[i].processN", "             expect(typeof (data[i].iconPath", "             expect(typeof (info[i].missionI", "             expect(typeof (info[i].want.bun", "             expect(typeof (info[i].want.dev", "             expect(typeof (info[i].uid)).as", "ef = Object.getPrototypeOf(global) || global", "             expect(typeof (data[i].want.bun", "             expect(typeof (info[i].pid)).as", "             expect(typeof (data[i].want.abi", "             expect(typeof (data[i].missionI", "             expect(typeof (info)).assertEqu", "             expect(typeof (info[i].iconPath", "             expect(typeof (data[i].want)).a", "             expect(typeof (data[i].label))."], "files": ["FormFuzzArray.test.js", "getHapModuleInfoJsunit.test.ets", "ContextJsunit.test.ets", "FormsOneAndOneJsunit.test.js", "ActsGetWantAllTest.js", "getAbilityInfoJsunit2.test.ets", "FormFuzzString.test.js", "app.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "getApplicationContextJsunit.test.ets", "MangerAbilityJsunit.test.js", "FormFuzzFunction.test.js", "startFULL.test.js", "getHapModuleInfoJsunit_app1.test.ets", "ActsDataAbilityJsTest.test.js", "DataUriUtilsJsSt.test.js", "FormFuzzNull.test.js", "ActsKillProcessTest.test.js", "index.js", "index.ets", "addContextAndAbilityJsunit.test.ets", "FormFuzzNum.test.js", "FeatureAbilityJsunit.test.js", "FormsOneAndTwoJsunit.test.js", "FormFuzzUndefined.test.js", "FormFuzzObject.test.js", "FormFuzzBool.test.js", "FormsZeroAndOneJsunit.test.js", "ContextJsunit.test.js", "AbilityDisableTest.js", "getAppVersionInfoJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Want", "api_method_name": "flags", "api_method_all": "flags?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 33, "since": 6, "api_used": "\u662f", "lines": ["   expect(data.want.flags).assertEqual(wantCo", "                    flags: 2,\n               ", "}\",\n                flags: wantConstant.Flags", "                    flags: wantConstant.Flags"], "files": ["FeatureAbilityJsunit.test.js", "ActsGetWantAllTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Want", "api_method_name": "action", "api_method_all": "action?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 200, "since": 6, "api_used": "\u662f", "lines": ["                    action: \"action1\",\n       ", "           action: \"action1\",\n                "], "files": ["MangerAbilityJsunit.test.js", "ActsStServiceAbilityClientCaseTest.test.js", "FeatureAbilityJsunit.test.js", "ActsGetWantAllTest.js", "index.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Want", "api_method_name": "parameters", "api_method_all": "parameters?: {[key: string]: any}", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 317, "since": 6, "api_used": "\u662f", "lines": ["vice.setConfig(Want.parameters);\n        testsuite", "bilityDelegatorArgs.parameters).assertEqual(undefi", "      console.info('parameters---->' + JSON.string", "      console.info('parameters2---->' + JSON.strin", "ATestRunner_0200====parameters>\" + JSON.stringify(", "JSON.stringify(Want.parameters));\n        configSe", "                    parameters: {\n                ", "bilityDelegatorArgs.parameters));\n            expe", "                    parameters:\n                  "], "files": ["MangerAbilityJsunit.test.js", "FeatureAbilityJsunit.test.js", "ActsAbilityDelegatorCaseTest.test.js", "app.js", "ContextJsunit.test.js", "ActsGetWantAllTest.js", "index.js", "ApplicationInfoJsunit.test.js", "AbilityDisableTest.js", "lanuageConfigapi7.test.js", "ActsProcessManageJsTest.test.js", "index.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Want", "api_method_name": "entities", "api_method_all": "entities?: Array<string>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 73, "since": 6, "api_used": "\u662f", "lines": ["                    entities: [\"entity1\"],\n     ", "2\",\n                entities: [\"entity1\", \"entit", "e\",\n                entities: 'asdfghj'\n        ", "                    entities: [\"entity.system.ho", "y.isArray(data.want.entities)).assertEqual(true)", "                    entities: [''],\n            ", "   expect(data.want.entities[0]).assertEqual(\"en", "e\",\n                entities: [\"entity.system.ho", " = 0; j < data.want.entities.length; j++) {\n    ", "                    entities: [\"\"],\n            ", " through action and entities. Entities is config", "   expect(data.want.entities[1]).assertEqual(\"en", "1\",\n                entities: [\"entity1\"],\n     ", " through action and entities\n     * @tc.desc    ", "e\",\n                entities: []\n            }\n ", " without configured entities is started through ", " console.info('want.entities.length : ' + data.w", " console.info('want.entities : ' + data.want.ent", " through action and entities, which are configur", "ies : ' + data.want.entities[j]);\n        }\n    ", "gth : ' + data.want.entities.length);\n        fo"], "files": ["FeatureAbilityJsunit.test.js", "MangerAbilityJsunit.test.js", "ActsGetWantAllTest.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Want", "api_method_name": "extensionAbilityName", "api_method_all": "extensionAbilityName?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Want", "api_method_name": "extensionAbilityType", "api_method_all": "extensionAbilityType?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}