{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.application.appManager", "api": [{"api_class_name": "appManager", "api_method_all": "declare namespace appManager {\r\n    \r\n    function registerApplicationStateObserver(observer: ApplicationStateObserver): number;\r\n\r\n    \r\n    function unregisterApplicationStateObserver(observerId: number,  callback: AsyncCallback<void>): void;\r\n    function unregisterApplicationStateObserver(observerId: number): Promise<void>;\r\n\r\n    \r\n     function getForegroundApplications(callback: AsyncCallback<Array<AppStateData>>): void;\r\n     function getForegroundApplications(): Promise<Array<AppStateData>>;\r\n\r\n    \r\n    function killProcessWithAccount(bundleName: string, accountId: number): Promise<void>;\r\n    function killProcessWithAccount(bundleName: string, accountId: number, callback: AsyncCallback<void>): void;\r\n\r\n     \r\n      function isRunningInStabilityTest(callback: AsyncCallback<boolean>): void;\r\n      function isRunningInStabilityTest(): Promise<boolean>;\r\n\r\n    \r\n    function getProcessRunningInfos(): Promise<Array<ProcessRunningInfo>>;\r\n    function getProcessRunningInfos(callback: AsyncCallback<Array<ProcessRunningInfo>>): void;\r\n\r\n    \r\n     function killProcessesByBundleName(bundleName: string): Promise<void>;\r\n     function killProcessesByBundleName(bundleName: string, callback: AsyncCallback<void>);\r\n\r\n    \r\n     function clearUpApplicationData(bundleName: string): Promise<void>;\r\n     function clearUpApplicationData(bundleName: string, callback: AsyncCallback<void>);\r\n\r\n    \r\n    function isRamConstrainedDevice(): Promise<boolean>;\r\n    function isRamConstrainedDevice(callback: AsyncCallback<boolean>): void;\r\n\r\n    \r\n    function getAppMemorySize(): Promise<number>;\r\n    function getAppMemorySize(callback: AsyncCallback<number>): void;\r\n}", "api_method_name": "appManager", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 104, "since": 0, "api_used": "\u662f", "lines": ["   let info = await appManager.getProcessRunningIn", "leep end\");\n        appManager.getProcessRunningIn", "procrssinfo = await appManager.getProcessRunningIn", "   var info = await appManager.killProcessesByBund", "ual(true);\n\n        appManager.killProcessWithAcco", "sunit/index\"\nimport appManager from '@ohos.applica", "   var info = await appManager.getProcessRunningIn", "ame data');\n        appManager.killProcessesByBund", "\n\n            await appManager.killProcessWithAcco", "ue);\n\n        await appManager.killProcessWithAcco", "sionManager'\nimport appManager from \"@ohos.applica", "on (done) {\n        appManager.killProcessesByBund", "var getinfo = await appManager.getProcessRunningIn", " \"@ohos.application.appManager\"\nimport { describe,"], "files": ["MangerAbilityJsunit.test.js", "startFULL.test.js", "ActsKillProcessTest.test.js", "index.js", "coverApiTest.js", "AbilityDisableTest.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "registerApplicationStateObserver", "api_method_all": "function registerApplicationStateObserver(observer: ApplicationStateObserver): number;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["r rest = appManager.registerApplicationStateObserver({\n            onFor", "sterId = appManager.registerApplicationStateObserver({\n            onFor", " await appManager.unregisterApplicationStateObserver(parseInt(registerId", "sterId = appManager.registerApplicationStateObserver({\n                o", " await appManager.unregisterApplicationStateObserver(registerId, async(e"], "files": ["AbilityDisableTest.js", "startFULL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "unregisterApplicationStateObserver", "api_method_all": "function unregisterApplicationStateObserver(observerId: number,  callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["   await appManager.unregisterApplicationStateObserver(registerId, async(err, data) => {\n     ", "   await appManager.unregisterApplicationStateObserver(parseInt(registerId), async(err, data) "], "files": ["AbilityDisableTest.js", "startFULL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "unregisterApplicationStateObserver", "api_method_all": "function unregisterApplicationStateObserver(observerId: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "getForegroundApplications", "api_method_all": "function getForegroundApplications(callback: AsyncCallback<Array<AppStateData>>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "getForegroundApplications", "api_method_all": "function getForegroundApplications(): Promise<Array<AppStateData>>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["  await  appManager.getForegroundApplications().then((data) => {\n          console.lo", "  await  appManager.getForegroundApplications().then((data) => {\n            for (var"], "files": ["startFULL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "killProcessWithAccount", "api_method_all": "function killProcessWithAccount(bundleName: string, accountId: number): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 7, "since": 8, "api_used": "\u662f", "lines": ["\n        appManager.killProcessWithAccount(BUNDLE_NAME, NULL_ACCOUNT_ID).then(() =", "\n        appManager.killProcessWithAccount(NULL_BUNDLE_NAME, ACCOUNT_ID).then(() =", "   await appManager.killProcessWithAccount(BUNDLE_NAME, ACCOUNT_ID).then(async () ", "         appManager.killProcessWithAccount(BUNDLE_NAME, ACCOUNT_ID).then(async () "], "files": ["ActsKillProcessTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "killProcessWithAccount", "api_method_all": "function killProcessWithAccount(bundleName: string, accountId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["   await appManager.killProcessWithAccount(BUNDLE_NAME, ACCOUNT_ID, (async () => {", "'======>beforeEach  killProcessWithAccountFATest<=======');\n\n        await feature", " -a com.example.actskillProcessWithAccountclosetest.MainAbility'\n                +", "\n        appManager.killProcessWithAccount(BUNDLE_NAME, NULL_ACCOUNT_ID, (() => {\n", " -b com.example.actskillProcessWithAccountclosetest'\n            var AbilityDelega", "\n        appManager.killProcessWithAccount(NULL_BUNDLE_NAME, ACCOUNT_ID, (() => {\n"], "files": ["ActsAbilityDelegatorCaseTest.test.js", "ActsKillProcessTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "isRunningInStabilityTest", "api_method_all": "function isRunningInStabilityTest(callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "isRunningInStabilityTest", "api_method_all": "function isRunningInStabilityTest(): Promise<boolean>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["\n        appManager.isRunningInStabilityTest()\n            .then((data) => {\n       "], "files": ["coverApiTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "getProcessRunningInfos", "api_method_all": "function getProcessRunningInfos(): Promise<Array<ProcessRunningInfo>>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "getProcessRunningInfos", "api_method_all": "function getProcessRunningInfos(callback: AsyncCallback<Array<ProcessRunningInfo>>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 56, "since": 8, "api_used": "\u662f", "lines": ["ccountFA_0800 ==1== getProcessRunningInfos ======> '\n                + JSON.string", "sWithAccountFA_0300 getProcessRunningInfos ======> '\n                    + JSON.st", "ccountFA_0400 ==1== getProcessRunningInfos ======> '\n                + JSON.string", "sWithAccountFA_0700 getProcessRunningInfos ======> '\n                    + JSON.st", "'Acts_Ams_test_3300 getProcessRunningInfos JSON String: ' + JSON.stringify(info));", "sWithAccountFA_0300 getProcessRunningInfos =1= ======> '\n            + JSON.string", "ccountFA_0300 ==1== getProcessRunningInfos ======> '\n                + JSON.string", "'Acts_Ams_test_5000 getProcessRunningInfos error.code \\\n                ' + error.", "sWithAccountFA_0500 getProcessRunningInfos ======> '\n                + JSON.string", "sWithAccountFA_0800 getProcessRunningInfos =1= ======> '\n            + JSON.string", "ccountFA_0700 ==1== getProcessRunningInfos ======> '\n                + JSON.string", " = await appManager.getProcessRunningInfos()\n        console.log('ACTS_KillProcess", "ccountFA_0400 ==2== getProcessRunningInfos ======>'\n                    + JSON.str", " = await appManager.getProcessRunningInfos();\n        expect(Array.isArray(info)).", "ccountFA_0100 ==1== getProcessRunningInfos ======> '\n            + JSON.stringify(", " = await appManager.getProcessRunningInfos();\n        console.info('Acts_Ams_test_", " = await appManager.getProcessRunningInfos()\n                console.log('ACTS_Kil", "'Acts_Ams_test_0200 getProcessRunningInfos error.code \\\n                ' + error.", "  console.log('ACTS_getProcessRunningInfos_0100====<begin');\n        var data = aw", "'Acts_Ams_test_6600 getProcessRunningInfos error.code \\\n                ' + error.", "\n        appManager.getProcessRunningInfos(\n            (error, info) => {\n       ", "sWithAccountFA_0100 getProcessRunningInfos ======> '\n                + JSON.string", "'Acts_Ams_test_3400 getProcessRunningInfos error.code \\\n                ' + error.", "sWithAccountFA_0800 getProcessRunningInfos ======> '\n                    + JSON.st", "\n\n    \n    it('ACTS_getProcessRunningInfos_0100', 0, async function (done) {\n     ", "ccountFA_0500 ==1== getProcessRunningInfos ======> '\n            + JSON.stringify(", "'Acts_Ams_test_1800 getProcessRunningInfos error.code \\\n                ' + error.", "sWithAccountFA_0700 getProcessRunningInfos =1= ======> '\n            + JSON.string", " = await appManager.getProcessRunningInfos()\n            console.log('ACTS_KillPro", "sWithAccountFA_0400 getProcessRunningInfos =1= ======> '\n            + JSON.string"], "files": ["MangerAbilityJsunit.test.js", "ActsKillProcessTest.test.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "killProcessesByBundleName", "api_method_all": "function killProcessesByBundleName(bundleName: string): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["\n        appManager.killProcessesByBundleName('XXXXXXXX').then(data => {\n            ", "\n        appManager.killProcessesByBundleName('XXXXXXXXXXXX').then(data => {\n        ", "\n        appManager.killProcessesByBundleName('com.ix.simulate.feature').then(data =>"], "files": ["MangerAbilityJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "killProcessesByBundleName", "api_method_all": "function killProcessesByBundleName(bundleName: string, callback: AsyncCallback<void>);", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 114, "since": 8, "api_used": "\u662f", "lines": ["'ACTS_ProcessManage_killProcessesByBundleNameFA_0200', 0, async function (done) {\n   ", "\n        appManager.killProcessesByBundleName('XXXXXXXXXXXX',\n            (error, inf", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0400 end');\n            done();\n     ", "\n        appManager.killProcessesByBundleName('com.ix.verify.io',\n            (error,", " = await appManager.killProcessesByBundleName('com.ix.simulate.feature');\n        con", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0300 UnSubscribe CallBack====>\");\n   ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0400 flagProcessA====>\"\n             ", "nfo('Acts_test_3100 killProcessesByBundleName data');\n        appManager.killProcesse", "'Acts_Ams_test_1600 killProcessesByBundleName error.code: \\\n                    ' + e", "\n        appManager.killProcessesByBundleName('xxxxxxxxx',\n            (error) => {\n ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0100 processexist:====>\"\n            ", "'Acts_Ams_test_6400 killProcessesByBundleName error.code ' + error.code);\n           ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0300 subscriber====>\"\n               ", "nfo('Acts_test_4700 killProcessesByBundleName data');\n        appManager.killProcesse", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0300 Create Subscriber data====>\"\n   ", "'Acts_Ams_test_8000 killProcessesByBundleName error.code: \\\n                ' + error", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0100 begin');\n\n        await featureA", "nfo('Acts_test_1500 killProcessesByBundleName data');\n        appManager.killProcesse", "'Acts_Ams_test_4800 killProcessesByBundleName error.code: \\\n                ' + error", "'Acts_Ams_test_3200 killProcessesByBundleName error.code: \\\n                    ' + e", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0400', 0, async function (done) {\n   ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0300 processexist:====>\"\n            ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0300 missionexist:====>\"\n            ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0200 Create Subscriber data====>\"\n   ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0200 processexist:====>\"\n            ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0200 Subscribe CallBack data:====>\"\n ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0400 flagProcessAMulti====>\"\n        ", "'Acts_Ams_test_1500 killProcessesByBundleName data  [' + info + ']');\n        expect(", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0400 flagMissionA====>\"\n             ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0500 processexist:====>\"\n            ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0200 subscriber====>\"\n               ", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0500 begin');\n        await featureAb", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0200 - startAbility: '\n              ", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0500', 0, async function (done) {\n   ", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0200 begin');\n        var subscriber;", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0100 end');\n            done();\n     ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0400 flagMissionAMulti====>\"\n        ", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0100', 0, async function (done) {\n   ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0200 missionexist:====>\"\n            ", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0400 begin');\n        var flagProcess", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0100 missionexist:====>\"\n            ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0200 UnSubscribe CallBack====>\");\n   ", "\n        appManager.killProcessesByBundleName('xxxxxxxxxxx',\n            (error, info", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0200 end');\n            done();\n     ", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0300 begin');\n        var subscriber;", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0300', 0, async function (done) {\n   ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0300 Subscribe CallBack data:====>\"\n ", "'ACTS_ProcessManage_killProcessesByBundleNameFA_0300 end');\n            done();\n     ", "\n        appManager.killProcessesByBundleName('com.ix.simulate.feature',\n            ", ">ACTS_ProcessManage_killProcessesByBundleNameFA_0400 processInfos====>\"\n             "], "files": ["MangerAbilityJsunit.test.js", "ActsProcessManageJsTest.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "clearUpApplicationData", "api_method_all": "function clearUpApplicationData(bundleName: string): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "clearUpApplicationData", "api_method_all": "function clearUpApplicationData(bundleName: string, callback: AsyncCallback<void>);", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 160, "since": 8, "api_used": "\u662f", "lines": ["\"ACTS_ProcessManage_clearUpApplicationDataFA_0400 opendir successfully:\"\n         ", "'ACTS_ProcessManage_clearUpApplicationDataFA_0200', 0, async function (done) {\n   ", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0100 opendir Multi failed JSON error:", "'ACTS_ProcessManage_clearUpApplicationDataFA_0100 end');\n                done();\n ", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0100 opendir failed JSON error:\"\n    ", "'ACTS_ProcessManage_clearUpApplicationDataFA_0200 begin');\n        var subscriber;", "'ACTS_ProcessManage_clearUpApplicationDataFA_0300 end');\n                    done(", ">ACTS_ProcessManage_clearUpApplicationDataFA_0200 UnSubscribe CallBack====>\");\n   ", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0400 opendir Multi failed JSON error:", "'ACTS_ProcessManage_clearUpApplicationDataFA_0400', 0, async function (done) {\n   ", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0300 opendir failed JSON error:\"\n    ", "'ACTS_ProcessManage_clearUpApplicationDataFA_0300 begin');\n        var subscriber;", ">ACTS_ProcessManage_clearUpApplicationDataFA_0400 flagProcessAMulti====>\"\n        ", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0400 opendir Multi successfully:\"\n   ", ">ACTS_ProcessManage_clearUpApplicationDataFA_0300 UnSubscribe CallBack====>\");\n   ", ">ACTS_ProcessManage_clearUpApplicationDataFA_0400 missionInfos====>\"\n             ", ">ACTS_ProcessManage_clearUpApplicationDataFA_0300 subscribeCallBack missionexist:\"", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0100 opendir Multi successfully:\"\n   ", ">ACTS_ProcessManage_clearUpApplicationDataFA_0300 subscriber====>\"\n            + J", ">ACTS_ProcessManage_clearUpApplicationDataFA_0200 subscriber====>\"\n            + J", ">ACTS_ProcessManage_clearUpApplicationDataFA_0400 flagMissionAMulti====>\"\n        ", ">ACTS_ProcessManage_clearUpApplicationDataFA_0200 subscribeCallBack missionexist:\"", "'ACTS_ProcessManage_clearUpApplicationDataFA_0400 begin');\n        var flagProcess", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0200 opendir failed JSON error:\"\n    ", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0300 opendir successfully:\"\n         ", ">ACTS_ProcessManage_clearUpApplicationDataFA_0400 processInfos====>\"\n             ", "'ACTS_ProcessManage_clearUpApplicationDataFA_0400 end');\n                done();\n ", "'ACTS_ProcessManage_clearUpApplicationDataFA_0100 begin');\n        await featureAb", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0100 opendir successfully:\"\n         ", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0100 opendir failed error:\" + err);\n ", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0400 opendir Multi failed error:\" + e", ">ACTS_ProcessManage_clearUpApplicationDataFA_0400 flagProcessA====>\"\n             ", ">ACTS_ProcessManage_clearUpApplicationDataFA_0300 subscribeCallBack processexist:\"", ">ACTS_ProcessManage_clearUpApplicationDataFA_0300 SubscribeCallBack data.event:===", ">ACTS_ProcessManage_clearUpApplicationDataFA_0100 processexist:====>\"\n            ", " ACTS_ProcessManage_clearUpApplicationDataFA_0300\n    * @tc.name: The system appli", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0100 opendir Multi failed error:\" + e", ">ACTS_ProcessManage_clearUpApplicationDataFA_0200 subscribeCallBack processexist:\"", ">ACTS_ProcessManage_clearUpApplicationDataFA_0100 missionexist:====>\"\n            ", " ACTS_ProcessManage_clearUpApplicationDataFA_0400\n    * @tc.name: The system appli", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0200 opendir failed error:\" + err);\n ", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0400 opendir failed JSON error:\"\n    ", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0200 opendir successfully:\"\n         ", ">ACTS_ProcessManage_clearUpApplicationDataFA_0400 flagMissionA====>\"\n             ", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0400 opendir failed error:\" + err);\n ", ">ACTS_ProcessManage_clearUpApplicationDataFA_0200 SubscribeCallBack data.event:===", "\"ACTS_ProcessManage_clearUpApplicationDataFA_0300 opendir failed error:\" + err);\n ", "'ACTS_ProcessManage_clearUpApplicationDataFA_0300', 0, async function (done) {\n   ", "'ACTS_ProcessManage_clearUpApplicationDataFA_0200 end');\n                done();\n ", "'ACTS_ProcessManage_clearUpApplicationDataFA_0100', 0, async function (done) {\n   "], "files": ["coverApiTest.js", "ActsProcessManageJsTest.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "isRamConstrainedDevice", "api_method_all": "function isRamConstrainedDevice(): Promise<boolean>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["wait abilityManager.isRamConstrainedDevice().then((data) => {\n                var "], "files": ["addContextAndAbilityJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "isRamConstrainedDevice", "api_method_all": "function isRamConstrainedDevice(callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["ST_0700 = ' context_isRamConstrainedDevice_test_0100 ';\nconst TAG_TEST_0800 = ' co", "ST_0800 = ' context_isRamConstrainedDevice_test_0200 ';\nconst TAG_TEST_0900 = ' co", "     abilityManager.isRamConstrainedDevice((error, data) => {\n                var "], "files": ["addContextAndAbilityJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "getAppMemorySize", "api_method_all": "function getAppMemorySize(): Promise<number>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["wait abilityManager.getAppMemorySize()\n                .then((data) => {\n   "], "files": ["addContextAndAbilityJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "appManager", "api_method_name": "getAppMemorySize", "api_method_all": "function getAppMemorySize(callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 0, "api_used": "\u662f", "lines": ["ST_0500 = ' context_getAppMemorySize_test_0100 ';\nconst TAG_TEST_0600 = ' co", "     abilityManager.getAppMemorySize((error, data) => {\n                var ", "ST_0600 = ' context_getAppMemorySize_test_0200 ';\nconst TAG_TEST_0700 = ' co"], "files": ["addContextAndAbilityJsunit.test.ets"], "is_white": " ", "desc": " "}]}