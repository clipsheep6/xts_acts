{"subsystem_ch": "\u77ed\u8ddd\u901a\u4fe1\u5b50\u7cfb\u7edf", "subsystem_en": "communication", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.nfc.cardEmulation", "api": [{"api_class_name": "cardEmulation", "api_method_all": "declare namespace cardEmulation {\n  enum FeatureType {\n    \n    HCE = 0,\n\n    \n    UICC = 1,\n\n    \n    ESE = 2,\n  }\n\n  \n  function isSupported(feature: number): boolean;\n\n  \n  export class HceService {\n    \n    startHCE(aidList: string[]): boolean;\n\n    \n    stopHCE(): boolean;\n\n\n    \n\n    on(type: \"hceCmd\", callback: AsyncCallback<number[]>): void;\n\n    \n    sendResponse(responseApdu: number[]): void;\n  }\n}", "api_method_name": "cardEmulation", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "cardEmulation", "api_method_name": "isSupported", "api_method_all": "function isSupported(feature: number): boolean;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FeatureType", "api_method_all": "enum FeatureType {\n    \n    HCE = 0,\n\n    \n    UICC = 1,\n\n    \n    ESE = 2,\n  }", "api_method_name": "FeatureType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FeatureType", "api_method_name": "HCE", "api_method_all": "HCE = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FeatureType", "api_method_name": "UICC", "api_method_all": "UICC = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FeatureType", "api_method_name": "ESE", "api_method_all": "ESE = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 5, "since": 0, "api_used": "\u662f", "lines": ["endRequest(CODE_WRITESEQUENCEABLE, data, re", "\n    const CODE_WRITESEQUENCEABLE = 23\n    ", "sertTrue(Btname.CHINESES_TEST == JSON.strin", "ocalName(Btname.CHINESES_TEST);\n        exp", "aaaaaaaaa',\n    CHINESES_TEST :'\u6d4b\u8bd5\u84dd\u7259\u540d\u79f0\u662f\u5426\u6b63\u5e38\u6d4b"], "files": ["RpcClientJsunit.test.js", "Bluetooth.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "HceService", "api_method_all": "export class HceService {\n    \n    startHCE(aidList: string[]): boolean;\n\n    \n    stopHCE(): boolean;\n\n\n    \n\n    on(type: \"hceCmd\", callback: AsyncCallback<number[]>): void;\n\n    \n    sendResponse(responseApdu: number[]): void;\n  }", "api_method_name": "HceService", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "HceService", "api_method_name": "startHCE", "api_method_all": "startHCE(aidList: string[]): boolean;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "HceService", "api_method_name": "stopHCE", "api_method_all": "stopHCE(): boolean;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "HceService", "api_method_name": "on", "api_method_all": "on(type: \"hceCmd\", callback: AsyncCallback<number[]>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 11, "api_used_count": 3899, "since": 6, "api_used": "\u662f", "lines": ["onShow() {\n        console.info('onShow finish')\n    },\n    on", "ction () {\n        console.info('afterAll called')\n    })\n\n   ", "0:\n                console.info('[bluetooth_js] bt turn off:'+", "reate');\n    },\n    onDestroy() {\n        console.info('AceApp", "n (done) {\n        console.info('[bluetooth_js] enable start')", "etState();\n        console.info('[bluetooth_js] getState On = ", "('config')\n        configService.setConfig(this)\n\n        requ", "ooth_js] bt turning on:'+ JSON.stringify(sta));\n              ", "finish')\n    },\n    onReady() {\n        console.info('onReady ", " }\n\n    async function tryToEnableBt() {\n        let sta = blu", "t:\n                console.info('[bluetooth_js] enable success", "   beforeEach(function () {\n        console.info('beforeEach c", "ction () {\n        console.info('beforeAll called')\n        ga", "      console.info('onReady finish')\n        const core = Core", "e.info('AceApplication onDestroy');\n    }\n};\n", "ction () {\n        console.info('beforeEach called')\n\n    })\n ", "1:\n                console.info('[bluetooth_js] bt turning on:", "Instance()\n        const expectExtend = new ExpectExtend({\n   ", "3:\n                console.info('[bluetooth_js] bt turning off", "0, async function (done) {\n        console.info('[bluetooth_js", "uetooth_js] bt turn on:'+ JSON.stringify(sta));\n              ", "y finish')\n        const core = Core.getInstance()\n        con", "= bluetooth.BLE.getConnectedBLEDevices();\n        console.info", "n (done) {\n        console.info('[bluetooth_js] getConnectedBL", "      console.info('onShow finish')\n    },\n    onReady() {\n   ", "world');\n    },\n    onShow() {\n        console.info('onShow fi", "    beforeAll(function () {\n        console.info('beforeAll ca", "nfo('AceApplication onCreate');\n    },\n    onDestroy() {\n     ", "nfo('AceApplication onDestroy');\n    }\n};\n", "tEqual(2);\n        done();\n    })\n\n\n    \n    it('SUB_COMMUNACA", "xport default {\n    onCreate() {\n        console.info('AceAppl", "01', 0, async function (done) {\n        console.info('[bluetoo", "getDefaultService('config')\n        configService.setConfig(th", "ction () {\n        console.info('afterEach called')\n    })\n   ", "\n    afterAll(function () {\n        console.info('afterAll cal", "Create() {\n        console.info('AceApplication onCreate');\n  ", "estroy() {\n        console.info('AceApplication onDestroy');\n ", "nReady() {\n        console.info('onReady finish')\n        cons", "2:\n                console.info('[bluetooth_js] bt turn on:'+ ", "'[bluetooth_js] getConnectedBLEDevices test start ...');\n     ", ")\n    })\n\n    function sleep(delay) {\n        return new Promi", "re.init()\n\n        const configService = core.getDefaultServic", "othhostTest', function() {\n\n    let gattServer = null;\n    let", "e.info('AceApplication onCreate');\n    },\n    onDestroy() {\n  ", "t()\n\n        const configService = core.getDefaultService('con", "    afterEach(function () {\n        console.info('afterEach ca", "itle: \"\"\n    },\n    onInit() {\n        this.title = this.$t('s", "  configService.setConfig(this)\n\n        require('../../test/L"], "files": ["RpcJsunit.test.js", "BluetoothOn.test.js", "BluetoothBle.test.js", "WifiP2P.test.js", "app.js", "WifiSoftAP.test.js", "WifiSta.test.js", "index.js", "RpcClientJsunit.test.js", "Bluetooth.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "HceService", "api_method_name": "sendResponse", "api_method_all": "sendResponse(responseApdu: number[]): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 5, "since": 0, "api_used": "\u662f", "lines": ["result = gattServer.sendResponse(serverResponse);\n  ", "et ret = gattServer.sendResponse(serverResponse);\n  ", "nfo('[bluetooth_js] sendResponse ret : ' + ret);\n\n  ", "nfo('[bluetooth_js] sendResponse start');\n        aw"], "files": ["BluetoothBle.test.js", "BluetoothOn.test.js"], "is_white": " ", "desc": " "}]}