{"subsystem_ch": "\u5305\u7ba1\u7406\u5b50\u7cfb\u7edf", "subsystem_en": "appexecfwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\bundle\\bundleInstaller", "api": [{"api_class_name": "InstallParam", "api_method_all": "export interface InstallParam {\r\n  \r\n  userId: number;\r\n\r\n  \r\n  installFlag: number;\r\n\r\n  \r\n  isKeepData: boolean;\r\n}", "api_method_name": "InstallParam", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "InstallParam", "api_method_name": "userId", "api_method_all": "userId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 289, "since": 7, "api_used": "\u662f", "lines": [", {\n                userId: 100,\n             ", "Path, {\n            userId: 100,\n            i", "ath1, {\n            userId: 100,\n            i", "                    userId: 100,\n             ", "    {\n              userId: 100,\n             ", "  {\n                userId: 100,\n             ", "{\n                  userId: 100,\n             ", "ap'], {\n            userId: 100,\n            i"], "files": ["ActsBmsCleanCacheTest.test.js", "ActsBmsHapModuleTest.test.js", "ActsBmsAccessTokenTest.test.js", "ActsBmsMetaDataTest.test.js", "ExampleJsunit.test.js", "ActsBmsGetBackGroundModes.test.js", "ActsBmsJsTest.test.js", "ActsBmsQueryAbilityByWant.test.js", "ActsBmsFormsInfoTest.test.js", "ActsBmsJsUnPermissionTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "InstallParam", "api_method_name": "installFlag", "api_method_all": "installFlag: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 281, "since": 7, "api_used": "\u662f", "lines": [" 100,\n              installFlag: INSTALL_FLAG,\n    ", "00,\n                installFlag: 0,\n               ", "00,\n                installFlag: 1,\n               ", "                    installFlag: INSTALL_FLAG,\n    ", ",\n                  installFlag: INSTALL_FLAG,\n    ", "00,\n                installFlag: INSTALL_FLAG,\n    ", "                    installFlag: 1,\n               ", "d: 100,\n            installFlag: 1,\n            isK"], "files": ["ActsBmsCleanCacheTest.test.js", "ActsBmsHapModuleTest.test.js", "ActsBmsAccessTokenTest.test.js", "ActsBmsMetaDataTest.test.js", "ExampleJsunit.test.js", "ActsBmsGetBackGroundModes.test.js", "ActsBmsJsTest.test.js", "ActsBmsQueryAbilityByWant.test.js", "ActsBmsFormsInfoTest.test.js", "ActsBmsJsUnPermissionTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "InstallParam", "api_method_name": "isKeepData", "api_method_all": "isKeepData: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 281, "since": 7, "api_used": "\u662f", "lines": ["lag: 1,\n            isKeepData: false\n        }, O", " 1,\n                isKeepData: false\n            ", "                    isKeepData: false\n            ", "                    isKeepData: false,\n           ", "FLAG,\n              isKeepData: false,\n           ", "AG,\n                isKeepData: false,\n           ", ",\n                  isKeepData: false,\n           ", "lag: 1,\n            isKeepData: false\n        }, o", " 0,\n                isKeepData: false\n            "], "files": ["ActsBmsCleanCacheTest.test.js", "ActsBmsHapModuleTest.test.js", "ActsBmsAccessTokenTest.test.js", "ActsBmsMetaDataTest.test.js", "ExampleJsunit.test.js", "ActsBmsGetBackGroundModes.test.js", "ActsBmsJsTest.test.js", "ActsBmsQueryAbilityByWant.test.js", "ActsBmsFormsInfoTest.test.js", "ActsBmsJsUnPermissionTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "InstallStatus", "api_method_all": "export interface InstallStatus {\r\n\r\n  \r\n  status: bundle.InstallErrorCode;\r\n\r\n  \r\n  statusMessage: string;\r\n}", "api_method_name": "InstallStatus", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "InstallStatus", "api_method_name": "status", "api_method_all": "status: bundle.InstallErrorCode", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 617, "since": 7, "api_used": "\u662f", "lines": ["        expect(data.statusMessage).assertEqual", "        expect(data.status).assertEqual(0);\n  "], "files": ["ActsBmsCleanCacheTest.test.js", "ActsBmsHapModuleTest.test.js", "ActsBmsAccessTokenTest.test.js", "ActsBmsMetaDataTest.test.js", "ExampleJsunit.test.js", "ActsBmsGetBackGroundModes.test.js", "ActsBmsJsTest.test.js", "ActsBmsQueryAbilityByWant.test.js", "ActsBmsFormsInfoTest.test.js", "ActsBmsJsUnPermissionTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "InstallStatus", "api_method_name": "statusMessage", "api_method_all": "statusMessage: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 357, "since": 7, "api_used": "\u662f", "lines": ["        expect(data.statusMessage).assertEqual(\"SUCCE", "        expect(data.statusMessage).assertEqual('SUCCE"], "files": ["ActsBmsCleanCacheTest.test.js", "ActsBmsHapModuleTest.test.js", "ActsBmsAccessTokenTest.test.js", "ActsBmsMetaDataTest.test.js", "ExampleJsunit.test.js", "ActsBmsGetBackGroundModes.test.js", "ActsBmsJsTest.test.js", "ActsBmsQueryAbilityByWant.test.js", "ActsBmsFormsInfoTest.test.js", "ActsBmsJsUnPermissionTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleInstaller", "api_method_all": "export interface BundleInstaller {\r\n  \r\n  install(bundleFilePaths: Array<string>, param: InstallParam, callback: AsyncCallback<InstallStatus>): void;\r\n\r\n  \r\n  uninstall(bundleName: string, param: InstallParam, callback: AsyncCallback<InstallStatus>): void;\r\n\r\n  \r\n   recover(bundleName: string, param: InstallParam, callback: AsyncCallback<InstallStatus>): void;\r\n}", "api_method_name": "BundleInstaller", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 157, "since": 7, "api_used": "\u662f", "lines": ["]\n        bundle.getBundleInstaller().then(installer =>", "r = await bundle.getBundleInstaller()\n        installer", "r = await bundle.getBundleInstaller();\n        installe", "r = await bundle.getBundleInstaller();\n        console."], "files": ["ActsBmsCleanCacheTest.test.js", "ActsBmsHapModuleTest.test.js", "ActsBmsAccessTokenTest.test.js", "ActsBmsMetaDataTest.test.js", "ExampleJsunit.test.js", "ActsBmsGetBackGroundModes.test.js", "ActsBmsJsTest.test.js", "ActsBmsQueryAbilityByWant.test.js", "ActsBmsFormsInfoTest.test.js", "ActsBmsJsUnPermissionTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleInstaller", "api_method_name": "install", "api_method_all": "install(bundleFilePaths: Array<string>, param: InstallParam, callback: AsyncCallback<InstallStatus>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 1381, "since": 7, "api_used": "\u662f", "lines": ["00,\n                installFlag: 0,\n                isKeepData: fal", ";\n        installer.install(\n            bundlePath,\n            {\n", "          installer.install(bundlePath2, {\n                userId: ", " 100,\n              installFlag: INSTALL_FLAG,\n              isKeep", "nstaller();\n        installer.install(\n            bundlePath,\n    ", "nstaller();\n        installer.install(bundlePath, {\n            use", "     })\n            installer.uninstall(bundleName, {\n             ", "      }, OnReceiveUninstallEvent);\n        }\n        function OnRec", "oken1\";\n        let installer = await bundle.getBundleInstaller();\n", "CESS\");\n            installer.install(bundlePath2, {\n              ", "        installer.uninstall(bundleName, {\n                userId: 1", "         OnReceiveUninstallEvent\n            );    \n        }   \n  ", "nstaller();\n        installer.install(bundlePath1, {\n            us", ";\n        installer.install(bundlePath1, {\n            userId: 100,", "        installer.uninstall(\n                    bundleName,\n      ", "oken1';\n        let installer = await bundle.getBundleInstaller();\n", "function OnReceiveUninstallEvent(err, data) {\n            expect(er", ";\n        installer.install(bundlePath, {\n            userId: 100,\n", "                    installFlag: INSTALL_FLAG,\n                    ", "    });\n            installer.uninstall(\n                    bundle", "d: 100,\n            installFlag: 1,\n            isKeepData: false\n ", "00,\n                installFlag: 1,\n                isKeepData: fal"], "files": ["ActsBmsCleanCacheTest.test.js", "ActsBmsHapModuleTest.test.js", "ActsBmsAccessTokenTest.test.js", "ActsBmsMetaDataTest.test.js", "ExampleJsunit.test.js", "ActsBmsGetBackGroundModes.test.js", "ActsBmsJsTest.test.js", "ActsBmsQueryAbilityByWant.test.js", "ActsBmsFormsInfoTest.test.js", "ActsBmsJsUnPermissionTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleInstaller", "api_method_name": "uninstall", "api_method_all": "uninstall(bundleName: string, param: InstallParam, callback: AsyncCallback<InstallStatus>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 179, "since": 7, "api_used": "\u662f", "lines": ["          installer.uninstall(BUNDLE_NAME1, {\n                userId:", "          installer.uninstall(BUNDLE_NAME1, {\n                    use", " information of the uninstall app is removed (by promise)\n    */\n    ", "          installer.uninstall(BUNDLE_NAME1,\n                         ", "          installer.uninstall(BUNDLE_NAME1, installParam, (err, data)", "          installer.uninstall(BUNDLE_NAME1, {\n                       ", "          installer.uninstall(BUNDLE_NAME4, installParam, (err, data)", "          installer.uninstall(BUNDLE_NAME4, {\n                userId:", "          installer.uninstall(BUNDLE_NAME2, installParam, (err, data)", " information of the uninstall app is removed (by callback)\n    */\n   ", "          installer.uninstall(\n                    bundleName,\n      ", "          installer.uninstall(\n                bundleName,\n          ", "          installer.uninstall(BUNDLE_NAME4, {\n                    use", "          installer.uninstall(bundleName, {\n                userId: 1", "          installer.uninstall(BUNDLE_NAME2, {\n                userId:", "          installer.uninstall(BUNDLE_NAME5, {\n                userId:", "          installer.uninstall(BUNDLE_NAME2, {\n                    use", "          installer.uninstall(BUNDLE_NAME5, installParam, (err, data)", "          installer.uninstall(BUNDLE_NAME6, installParam, (err, data)", "          installer.uninstall(SYSTEM_NAME, installParam, (err, data) ", "          installer.uninstall(BUNDLE_NAME5, {\n                    use", "          installer.uninstall(\n              bundleName,\n            "], "files": ["ActsBmsCleanCacheTest.test.js", "ActsBmsHapModuleTest.test.js", "ActsBmsAccessTokenTest.test.js", "ActsBmsMetaDataTest.test.js", "ExampleJsunit.test.js", "ActsBmsGetBackGroundModes.test.js", "ActsBmsJsTest.test.js", "ActsBmsQueryAbilityByWant.test.js", "ActsBmsFormsInfoTest.test.js", "ActsBmsJsUnPermissionTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleInstaller", "api_method_name": "recover", "api_method_all": "recover(bundleName: string, param: InstallParam, callback: AsyncCallback<InstallStatus>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}