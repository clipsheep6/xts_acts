{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\ability\\dataAbilityHelper", "api": [{"api_class_name": "DataAbilityHelper", "api_method_all": "export interface DataAbilityHelper {\r\n    \r\n    openFile(uri: string, mode: string, callback: AsyncCallback<number>): void;\r\n    openFile(uri: string, mode: string): Promise<number>;\r\n\r\n    \r\n    on(type: 'dataChange', uri: string, callback: AsyncCallback<void>): void;\r\n\r\n    \r\n    off(type: 'dataChange', uri: string, callback?: AsyncCallback<void>): void;\r\n\r\n    \r\n    getType(uri: string, callback: AsyncCallback<string>): void;\r\n    getType(uri: string): Promise<string>;\r\n\r\n    \r\n    getFileTypes(uri: string, mimeTypeFilter: string, callback: AsyncCallback<Array<string>>): void;\r\n    getFileTypes(uri: string, mimeTypeFilter: string): Promise<Array<string>>;\r\n\r\n    \r\n    normalizeUri(uri: string, callback: AsyncCallback<string>): void;\r\n    normalizeUri(uri: string): Promise<string>;\r\n\r\n    \r\n    denormalizeUri(uri: string, callback: AsyncCallback<string>): void;\r\n    denormalizeUri(uri: string): Promise<string>;\r\n\r\n    \r\n    notifyChange(uri: string, callback: AsyncCallback<void>): void;\r\n    notifyChange(uri: string): Promise<void>;\r\n\r\n    \r\n    insert(uri: string, valuesBucket: rdb.ValuesBucket, callback: AsyncCallback<number>): void;\r\n    insert(uri: string, valuesBucket: rdb.ValuesBucket): Promise<number>;\r\n\r\n    \r\n    batchInsert(uri: string, valuesBuckets: Array<rdb.ValuesBucket>, callback: AsyncCallback<number>): void;\r\n    batchInsert(uri: string, valuesBuckets: Array<rdb.ValuesBucket>): Promise<number>;\r\n\r\n    \r\n    delete(uri: string, predicates: dataAbility.DataAbilityPredicates, callback: AsyncCallback<number>): void;\r\n    delete(uri: string, predicates?: dataAbility.DataAbilityPredicates): Promise<number>;\r\n    delete(uri: string, callback: AsyncCallback<number>): void;\r\n\r\n    \r\n    update(uri: string, valuesBucket: rdb.ValuesBucket, predicates: dataAbility.DataAbilityPredicates, callback: AsyncCallback<number>): void;\r\n    update(uri: string, valuesBucket: rdb.ValuesBucket, predicates?: dataAbility.DataAbilityPredicates): Promise<number>;\r\n    update(uri: string, valuesBucket: rdb.ValuesBucket, callback: AsyncCallback<number>): void;\r\n\r\n    \r\n    query(uri: string, columns: Array<string>, predicates: dataAbility.DataAbilityPredicates, callback: AsyncCallback<ResultSet>): void;\r\n    query(uri: string, callback: AsyncCallback<ResultSet>): void;\r\n    query(uri: string, columns: Array<string>, callback: AsyncCallback<ResultSet>): void;\r\n    query(uri: string, predicates: dataAbility.DataAbilityPredicates, callback: AsyncCallback<ResultSet>): void;\r\n    query(uri: string, columns?: Array<string>, predicates?: dataAbility.DataAbilityPredicates): Promise<ResultSet>;\r\n\r\n    \r\n    call(uri: string, method: string, arg: string, extras: PacMap, callback: AsyncCallback<PacMap>): void;\r\n    call(uri: string, method: string, arg: string, extras: PacMap): Promise<PacMap>;\r\n\r\n    \r\n     executeBatch(uri: string, operations: Array<DataAbilityOperation>, callback: AsyncCallback<Array<DataAbilityResult>>): void;\r\n     executeBatch(uri: string, operations: Array<DataAbilityOperation>): Promise<Array<DataAbilityResult>>;\r\n}", "api_method_name": "DataAbilityHelper", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 21, "since": 7, "api_used": "\u662f", "lines": ["ity getFileTypes getDataAbilityHelper ====>: ' + DAHelper", "reAbility Update getDataAbilityHelper ====>: ' + DAHelper", "y DenormalizeUri getDataAbilityHelper ====>: ' + DAHelper", "       console.log('DataAbilityHelper ACTS_AOpenFile_0700", "ity normalizeUri getDataAbilityHelper ====>: ' + DAHelper", "lity BatchInsert getDataAbilityHelper ====>: ' + DAHelper", "rray({ \"name\": \"ActsDataAbilityHelperTest\", \"age\": 24, \"s", "atureAbility.acquireDataAbilityHelper(dataAbilityUri);\n  ", "S_AbeforeAll acquireDataAbilityHelper catch(err)====>:' +", "le_0700 OpenFile getDataAbilityHelper ====>: ' + DAHelper", "     { \"name\": \"ActsDataAbilityHelperTest\", \"age\": 24, \"s", " {\n    \"name\": \"ActsDataAbilityHelperTest\",\n    \"age\": 24", "('featureAbility getDataAbilityHelper ====>: ' + DAHelper", "eAbility GetType getDataAbilityHelper ====>: ' + DAHelper"], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "openFile", "api_method_all": "openFile(uri: string, mode: string, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": [" {\n        DAHelper.openFile(\n            dataAbilityUri,\n          "], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "openFile", "api_method_all": "openFile(uri: string, mode: string): Promise<number>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "on", "api_method_all": "on(type: 'dataChange', uri: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 18390, "since": 7, "api_used": "\u662f", "lines": ["  configService.setConfig(this)\n            this.timeout = 100", "ackFifthScene, missionId: \" + data[i].missionId)\n             ", "       }\n    },\n    onReady() {\n        console.info('onReady'", "reate');\n    },\n    onDestroy() {\n        console.info('AceApp", "nfig')\n            configService.setConfig(this)\n            t", "      console.info('onReady');\n    },\n}\n\n", "e/regenerator')\nlet once = true\nexport default {\n    data: {\n ", "      console.info('onShow finish')\n\n            const core = ", "e beforeAll getMissionInfos data: ' + JSON.stringify(data));\n ", "deccjsunit/index'\n\nconst injectRef = Object.getPrototypeOf(glo", "bility'\nimport missionManager from '@ohos.application.missionM", "d: \" + data[i].missionId)\n                missionManager.clear", "e.info('AceApplication onDestroy');\n    }\n};\n", "beforeAll clearMission error.code \\\n                        ' ", "               missionManager.clearMission(data[i].missionId,\n", " function () {\n    console.info('----ActsAmsCallBackFifthScene", "ance()\n            const expectExtend = new ExpectExtend({\n   ", "ty\",\n    \"com.ohos.contactsdataability\",\n    \"com.ix.simulate.", "ission(data[i].missionId,\n                    (error, info) =>", ", maxnum);\n        console.log('ActsAmsCallBackFifthScene befo", "rom \"@ohos.application.appManager\"\nimport { describe, beforeAl", " {\n                console.log(\"ActsAmsCallBackFifthScene, mis", "                   console.info('ActsAmsCallBackFifthScene bef", "onManager.clearMission(data[i].missionId,\n                    ", " false\n            console.info('onShow finish')\n\n            ", "\n            const configService = core.getDefaultService('con", ")\n    \n            const configService = core.getDefaultServic", "    \"com.ohos.telephonydataability\",\n    \"com.ohos.contactsdat", "nfo('AceApplication onCreate');\n    },\n    onDestroy() {\n     ", "nfo('AceApplication onDestroy');\n    }\n};\n", "ish')\n\n            const core = Core.getInstance()\n           ", "xport default {\n    onCreate() {\n        console.info('AceAppl", "ll(async function (done) {\n        let maxnum = 10;\n        le", "t data = await missionManager.getMissionInfos(\"\", maxnum);\n   ", "                action: \"action1\",\n                    paramet", "kFifthScene', function () {\n    console.info('----ActsAmsCallB", "how() {\n        if (once) {\n            once = false\n         ", "Create() {\n        console.info('AceApplication onCreate');\n  ", "estroy() {\n        console.info('AceApplication onDestroy');\n ", "sionManager.getMissionInfos(\"\", maxnum);\n        console.log('", "foreAll(async function (done) {\n        let maxnum = 10;\n     ", "world');\n    },\n    onShow() {\n        if (once) {\n           ", "once) {\n            once = false\n            console.info('onS", "nReady() {\n        console.info('onReady');\n    },\n}\n\n", "itle: ''\n    },\n    onInit() {\n        this.title = this.$t('s", "getDefaultService('config')\n            configService.setConfi", "os.application.missionManager'\nimport appManager from \"@ohos.a", "e.info('AceApplication onCreate');\n    },\n    onDestroy() {\n  ", "ui\",\n    \"com.ohos.contacts\",\n    \"com.ohos.mms\",\n    \"com.oho", "rom '@ohos.application.missionManager'\nimport appManager from "], "files": ["List.test.js", "Utils.ets", "getHapModuleInfoJsunit.test.ets", "FormFuzzArray.test.js", "ContextJsunit.test.ets", "FormsOneAndOneJsunit.test.js", "ActsGetWantAllTest.js", "coverApiTest.js", "LockMission.test.js", "ActsProcessManageJsTest.test.js", "getAbilityInfoJsunit2.test.ets", "getParam.js", "FormFuzzString.test.js", "JSMyapplicationJsunit.test.js", "taskSwitchJsunit.test.js", "app.js", "MissionManagerTest.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "ActsAbilityLifecycleStateNewTest.test.js", "amsMissionSnapshotTest.test.js", "getApplicationContextJsunit.test.ets", "service.js", "MangerAbilityJsunit.test.js", "LockNew.js", "FormFuzzFunction.test.js", "startFULL.test.js", "getHapModuleInfoJsunit_app1.test.ets", "ActsDataAbilityJsTest.test.js", "DataUriUtilsJsSt.test.js", "ActsAbilityDelegatorCaseTest.test.js", "FeatureAbilityDistribute.test.js", "entry2.test.js", "ActsKillProcessTest.test.js", "index.js", "app.ets", "second.js", "FormFuzzNull.test.js", "MissionManager.test.js", "index.ets", "addContextAndAbilityJsunit.test.ets", "Getactive.test.js", "ActsStServiceAbilityClientCaseTest.test.js", "FormFuzzNum.test.js", "FeatureAbilityJsunit.test.js", "FormsOneAndTwoJsunit.test.js", "FormFuzzUndefined.test.js", "FormFuzzObject.test.js", "FormFuzzBool.test.js", "FormsZeroAndOneJsunit.test.js", "ContextJsunit.test.js", "FormsZeroJsunit.test.js", "List.test.ets", "AbilityDisableTest.js", "getAppVersionInfoJsunit.test.ets", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "off", "api_method_all": "off(type: 'dataChange', uri: string, callback?: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 9, "since": 7, "api_used": "\u662f", "lines": ["           DAHelper.off(\"dataChange\", dataAbilityUri, onAsyncCa", ";\n\n        DAHelper.off(\"dataChange\", dataAbilityUri, onAsyncCa", "\n        predicates.offsetAs(1);\n        console.debug(\"=ACTS_A", "\n        predicates.offsetAs(1);\n\n        DAHelper.executeBatch", "\n        predicates.offsetAs(1);\n        await DAHelper.query(\n"], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "getType", "api_method_all": "getType(uri: string, callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["=ACTS_AGetType_0200 getType AsyncCallback catch(err)====>:' + err);", "ACTS_AOpenFile_0700 getType AsyncCallback catch(err)====>:' + err);", "     await DAHelper.getType(\n            dataAbilityUri,\n          "], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "getType", "api_method_all": "getType(uri: string): Promise<string>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "getFileTypes", "api_method_all": "getFileTypes(uri: string, mimeTypeFilter: string, callback: AsyncCallback<Array<string>>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["log('featureAbility getFileTypes getDataAbilityHelper ====>: ' + DAHelpe"], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "getFileTypes", "api_method_all": "getFileTypes(uri: string, mimeTypeFilter: string): Promise<Array<string>>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "normalizeUri", "api_method_all": "normalizeUri(uri: string, callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 12, "since": 7, "api_used": "\u662f", "lines": ["onsole.log('ACTS_ADenormalizeUri_0200====<begin');\n    let ret = false;\n", "\n        DAHelper.denormalizeUri(\n            dataAbilityUri,\n          ", "onsole.log('ACTS_ADenormalizeUri_0200====<end catch');\n        done();\n ", " {\n        DAHelper.normalizeUri(\n            dataAbilityUri,\n          ", " }\n})\n\n\nit('ACTS_ADenormalizeUri_0200', 0, async function (done) {\n    c", "log('featureAbility normalizeUri getDataAbilityHelper ====>: ' + DAHelpe", "ole.error('=ACTS_ADenormalizeUri_0200 denormalizeUri AsyncCallback catch", "onsole.log('ACTS_ADenormalizeUri_0200====<end');\n                done();", "_ANormalizeUri_0200 normalizeUri AsyncCallback catch(err)====>:' + err);", "ole.debug(\"=ACTS_ADenormalizeUri_0200 err,data=======>\"\n                ", "normalizeUri_0200 denormalizeUri AsyncCallback catch(err)====>:' + err);", "g('featureAbility DenormalizeUri getDataAbilityHelper ====>: ' + DAHelpe"], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "normalizeUri", "api_method_all": "normalizeUri(uri: string): Promise<string>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "denormalizeUri", "api_method_all": "denormalizeUri(uri: string, callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["DenormalizeUri_0200 denormalizeUri AsyncCallback catch(err)====>:' + err);", " {\n        DAHelper.denormalizeUri(\n            dataAbilityUri,\n          "], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "denormalizeUri", "api_method_all": "denormalizeUri(uri: string): Promise<string>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "notifyChange", "api_method_all": "notifyChange(uri: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["           DAHelper.notifyChange(\n                dataAbilityUri,\n      "], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "notifyChange", "api_method_all": "notifyChange(uri: string): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "insert", "api_method_all": "insert(uri: string, valuesBucket: rdb.ValuesBucket, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["     await DAHelper.insert(dataAbilityUri, valueBucket,\n          "], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "insert", "api_method_all": "insert(uri: string, valuesBucket: rdb.ValuesBucket): Promise<number>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["ll(dataAbilityUri, 'insert', '', pacMap).then((data) => {\n        "], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "batchInsert", "api_method_all": "batchInsert(uri: string, valuesBuckets: Array<rdb.ValuesBucket>, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["     await DAHelper.batchInsert(\n            dataAbilityUri,\n          "], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "batchInsert", "api_method_all": "batchInsert(uri: string, valuesBuckets: Array<rdb.ValuesBucket>): Promise<number>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "delete", "api_method_all": "delete(uri: string, predicates: dataAbility.DataAbilityPredicates, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 111, "since": 7, "api_used": "\u662f", "lines": ["e.log('dataUriUtils deleteIdSync_test start3 successful ');\n\n     ", "ction_0200_callback deleteForm end\");\n            done();\n        ", "Array_0200_callback deleteForm formId typeof:\" + typeof(formId));\n", "tBool_0200_callback deleteForm formId typeof:\" + typeof(formId));\n", "e.log('dataUriUtils deleteIdSync_test start4 successful ');\n\n     ", "stBool_0200_promise deleteForm formId typeof:\" + typeof(formId));\n", "tBool_0200_callback deleteForm end\");\n            done();\n        ", "        formManager.deleteForm(\n                    formId,\n      ", "nction_0200_promise deleteForm begin\");\n    \n            var formI", "e.log('dataUriUtils deleteIdSync start4 ');\n        var result = d", "e.log('dataUriUtils deleteIdSync_test start1 successful ');\n\n     ", "ge.indexOf(\"type of deleteForm is incorrect\") > -1).assertTrue();\n", "Array_0200_callback deleteForm end\");\n            done();\n        ", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils\");\n        c", "     await DAHelper.delete(\n            dataAbilityUri,\n          ", "l(await formManager.deleteForm(formId));\n                console.l", "tArray_0200_promise deleteForm end\");\n            done();\n        ", "e.log('dataUriUtils deleteIdSync start1 ');\n        var result = d", "tBool_0200_callback deleteForm begin\");\n    \n            var formI", "stBool_0200_promise deleteForm end\");\n            done();\n        ", "ction_0200_callback deleteForm begin\");\n    \n            var formI", "tArray_0200_promise deleteForm formId typeof:\" + typeof(formId));\n", "e.log('dataUriUtils deleteIdSync start5 ');\n        var result = d", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils/1122\");\n    ", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils/-1\");\n      ", "Array_0200_callback deleteForm begin\");\n    \n            var formI", "e.log('dataUriUtils deleteIdSync URI : ' + result);\n\n        expec", "e.log('dataUriUtils deleteIdSync start2 ');\n        var result = d", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils1122\");\n     ", "tArray_0200_promise deleteForm begin\");\n    \n            var formI", "ll(dataAbilityUri, 'delete', arg, pacMap, (err, data) => {\n       ", "e.log('dataUriUtils deleteIdSync start3 ');\n        var result = d", "ction_0200_callback deleteForm formId typeof:\" + typeof(formId));\n", "nction_0200_promise deleteForm formId typeof:\" + typeof(formId));\n", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils/1122/2211\");", "e.log('dataUriUtils deleteIdSync_test start2 successful ');\n\n     ", "stBool_0200_promise deleteForm begin\");\n    \n            var formI", "e.log('dataUriUtils deleteIdSync_test start5 successful ');\n\n     "], "files": ["FormFuzzArray.test.js", "FormFuzzFunction.test.js", "FormFuzzString.test.js", "FormFuzzNum.test.js", "DataUriUtilsJsSt.test.js", "ActsDataAbilityJsTest.test.js", "FormFuzzUndefined.test.js", "FormFuzzObject.test.js", "FormFuzzBool.test.js", "FormFuzzNull.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "delete", "api_method_all": "delete(uri: string, predicates?: dataAbility.DataAbilityPredicates): Promise<number>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["        formManager.deleteForm(formId).then((err) => {\n           "], "files": ["FormFuzzString.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "delete", "api_method_all": "delete(uri: string, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 111, "since": 7, "api_used": "\u662f", "lines": ["e.log('dataUriUtils deleteIdSync_test start3 successful ');\n\n     ", "ction_0200_callback deleteForm end\");\n            done();\n        ", "Array_0200_callback deleteForm formId typeof:\" + typeof(formId));\n", "tBool_0200_callback deleteForm formId typeof:\" + typeof(formId));\n", "e.log('dataUriUtils deleteIdSync_test start4 successful ');\n\n     ", "stBool_0200_promise deleteForm formId typeof:\" + typeof(formId));\n", "tBool_0200_callback deleteForm end\");\n            done();\n        ", "        formManager.deleteForm(\n                    formId,\n      ", "nction_0200_promise deleteForm begin\");\n    \n            var formI", "e.log('dataUriUtils deleteIdSync start4 ');\n        var result = d", "e.log('dataUriUtils deleteIdSync_test start1 successful ');\n\n     ", "ge.indexOf(\"type of deleteForm is incorrect\") > -1).assertTrue();\n", "Array_0200_callback deleteForm end\");\n            done();\n        ", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils\");\n        c", "     await DAHelper.delete(\n            dataAbilityUri,\n          ", "l(await formManager.deleteForm(formId));\n                console.l", "tArray_0200_promise deleteForm end\");\n            done();\n        ", "e.log('dataUriUtils deleteIdSync start1 ');\n        var result = d", "tBool_0200_callback deleteForm begin\");\n    \n            var formI", "stBool_0200_promise deleteForm end\");\n            done();\n        ", "ction_0200_callback deleteForm begin\");\n    \n            var formI", "tArray_0200_promise deleteForm formId typeof:\" + typeof(formId));\n", "e.log('dataUriUtils deleteIdSync start5 ');\n        var result = d", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils/1122\");\n    ", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils/-1\");\n      ", "Array_0200_callback deleteForm begin\");\n    \n            var formI", "e.log('dataUriUtils deleteIdSync URI : ' + result);\n\n        expec", "e.log('dataUriUtils deleteIdSync start2 ');\n        var result = d", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils1122\");\n     ", "tArray_0200_promise deleteForm begin\");\n    \n            var formI", "ll(dataAbilityUri, 'delete', arg, pacMap, (err, data) => {\n       ", "e.log('dataUriUtils deleteIdSync start3 ');\n        var result = d", "ction_0200_callback deleteForm formId typeof:\" + typeof(formId));\n", "nction_0200_promise deleteForm formId typeof:\" + typeof(formId));\n", "sult = dataUriUtils.deleteIdSync(\"com.ix.dataUriUtils/1122/2211\");", "e.log('dataUriUtils deleteIdSync_test start2 successful ');\n\n     ", "stBool_0200_promise deleteForm begin\");\n    \n            var formI", "e.log('dataUriUtils deleteIdSync_test start5 successful ');\n\n     "], "files": ["FormFuzzArray.test.js", "FormFuzzFunction.test.js", "FormFuzzString.test.js", "FormFuzzNum.test.js", "DataUriUtilsJsSt.test.js", "ActsDataAbilityJsTest.test.js", "FormFuzzUndefined.test.js", "FormFuzzObject.test.js", "FormFuzzBool.test.js", "FormFuzzNull.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "update", "api_method_all": "update(uri: string, valuesBucket: rdb.ValuesBucket, predicates: dataAbility.DataAbilityPredicates, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 4, "api_level": 21, "api_used_count": 66, "since": 7, "api_used": "\u662f", "lines": ["    expect(dataB[0].updateEnabled).assertEqual(1);\n            exp", "ll(dataAbilityUri, 'update', arg, pacMap, (err, data) => {\n       ", "e.log('dataUriUtils updateIdSync start1 ');\n        var idint = 11", "e.log('dataUriUtils updateIdSync_test start3 successful ');\n\n     ", "e.log('updateIdSync updateIdSync URI : ' + result);\n        expect", "e.log('dataUriUtils updateIdSync_test start2 successful ');\n\n     ", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils\",idint);\n   ", "e.log('dataUriUtils updateIdSync start666 ');\n\n        var result ", "e.log('dataUriUtils updateIdSync start4 ');\n        var idint = 55", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils/\",idint)\n   ", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils/123456789011", "e.log('dataUriUtils updateIdSync start2 ');\n        var idint = 11", "       console.log('updateIdSync updateIdSync URI : ' + result);\n ", "    expect(dataB[0].updateDuration).assertEqual(1);\n              ", "     );\n    },\n\n    updateData(obj) {\n        console.log('formSys", "    expect(dataB[0].updateEnabled).assertEqual(1);\n               ", "e.log('updateIdSync updateIdSync URI : ' + result);\n\n        expec", "e.log('dataUriUtils updateIdSync start5 ');\n\n        var idint = 0", "     expect(data[i].updateEnabled).assertEqual(1);\n               ", "     abilityManager.updateConfiguration(Configuration)\n           ", "       console.log('updateIdSync updateIdSync URI : ' + result);\n\n", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils/1122\",idint)", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils/-1\",idint)\n ", "e.log('dataUriUtils updateIdSync_test start1 successful ');\n\n     ", "     await DAHelper.update(\n            dataAbilityUri,\n          ", "e.log('dataUriUtils updateIdSync_test start4 successful ');\n\n     ", " expect(datainfo[i].updateDuration).assertEqual(1);\n              ", "    expect(dataB[0].updateDuration).assertEqual(1);\n            ex", "y_CoverApi_0800 --- updateConfiguration \" + JSON.stringify(data));", "     expect(data[i].updateDuration).assertEqual(1);\n              ", " expect(datainfo[i].updateEnabled).assertEqual(1);\n               ", "e.log('dataUriUtils updateIdSync start3 ');\n        var idint = 33"], "files": ["FormsOneAndTwoJsunit.test.js", "DataUriUtilsJsSt.test.js", "ActsDataAbilityJsTest.test.js", "FormsOneAndOneJsunit.test.js", "FormsZeroAndOneJsunit.test.js", "app.js", "coverApiTest.js", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "update", "api_method_all": "update(uri: string, valuesBucket: rdb.ValuesBucket, predicates?: dataAbility.DataAbilityPredicates): Promise<number>;", "api_type": "Promise", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "update", "api_method_all": "update(uri: string, valuesBucket: rdb.ValuesBucket, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 66, "since": 7, "api_used": "\u662f", "lines": ["    expect(dataB[0].updateEnabled).assertEqual(1);\n            exp", "ll(dataAbilityUri, 'update', arg, pacMap, (err, data) => {\n       ", "e.log('dataUriUtils updateIdSync start1 ');\n        var idint = 11", "e.log('dataUriUtils updateIdSync_test start3 successful ');\n\n     ", "e.log('updateIdSync updateIdSync URI : ' + result);\n        expect", "e.log('dataUriUtils updateIdSync_test start2 successful ');\n\n     ", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils\",idint);\n   ", "e.log('dataUriUtils updateIdSync start666 ');\n\n        var result ", "e.log('dataUriUtils updateIdSync start4 ');\n        var idint = 55", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils/\",idint)\n   ", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils/123456789011", "e.log('dataUriUtils updateIdSync start2 ');\n        var idint = 11", "       console.log('updateIdSync updateIdSync URI : ' + result);\n ", "    expect(dataB[0].updateDuration).assertEqual(1);\n              ", "     );\n    },\n\n    updateData(obj) {\n        console.log('formSys", "    expect(dataB[0].updateEnabled).assertEqual(1);\n               ", "e.log('updateIdSync updateIdSync URI : ' + result);\n\n        expec", "e.log('dataUriUtils updateIdSync start5 ');\n\n        var idint = 0", "     expect(data[i].updateEnabled).assertEqual(1);\n               ", "     abilityManager.updateConfiguration(Configuration)\n           ", "       console.log('updateIdSync updateIdSync URI : ' + result);\n\n", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils/1122\",idint)", "sult = dataUriUtils.updateIdSync(\"com.ix.dataUriUtils/-1\",idint)\n ", "e.log('dataUriUtils updateIdSync_test start1 successful ');\n\n     ", "     await DAHelper.update(\n            dataAbilityUri,\n          ", "e.log('dataUriUtils updateIdSync_test start4 successful ');\n\n     ", " expect(datainfo[i].updateDuration).assertEqual(1);\n              ", "    expect(dataB[0].updateDuration).assertEqual(1);\n            ex", "y_CoverApi_0800 --- updateConfiguration \" + JSON.stringify(data));", "     expect(data[i].updateDuration).assertEqual(1);\n              ", " expect(datainfo[i].updateEnabled).assertEqual(1);\n               ", "e.log('dataUriUtils updateIdSync start3 ');\n        var idint = 33"], "files": ["FormsOneAndTwoJsunit.test.js", "DataUriUtilsJsSt.test.js", "ActsDataAbilityJsTest.test.js", "FormsOneAndOneJsunit.test.js", "FormsZeroAndOneJsunit.test.js", "app.js", "coverApiTest.js", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "query", "api_method_all": "query(uri: string, columns: Array<string>, predicates: dataAbility.DataAbilityPredicates, callback: AsyncCallback<ResultSet>): void;", "api_type": "callback", "api_args_count": 4, "api_level": 21, "api_used_count": 167, "since": 7, "api_used": "\u662f", "lines": ["SUB_AA_OpenHarmony_EqueryAbilityByWant_0300\", 0, async function (", "     await DAHelper.query(\n            dataAbilityUri,\n          ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200 queryAbilityByWant er", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400 registerId  : ' + JSO", "mmand_Callback_0100 query string i = ' + i);\n                expe", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0100-------------------\");", "uration information query interface of the specified module \n    ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0100\", 0, async function (", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0300 getapplicationInfo er", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0300-------------------\");", "(\"=ACTS_AQuery_0400 query err,data=======>\"\n                    +", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400 registerId  : ' + typ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200\", 0, async function (", "      bundleManager.queryAbilityByWant(want,bundleFlags,userId,(e", "ll(dataAbilityUri, 'query', arg, pacMap, (err, data) => {\n       ", "uration information query interface of the specified package \n   ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400\", 0, async function (", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400-------------\");\n     ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200-------------------\");", "yAbilityByWant_0200 queryAbilityByWant errCode : '\n              ", "mmand_Callback_0200 query string i = ' + i);\n                expe", "nHarmony_Clear_0100 queryAbilityByWant errCode : '\n              "], "files": ["FormFuzzArray.test.js", "FormFuzzFunction.test.js", "FormFuzzString.test.js", "FormFuzzNum.test.js", "FormsOneAndTwoJsunit.test.js", "ActsDataAbilityJsTest.test.js", "FormFuzzUndefined.test.js", "ActsAbilityDelegatorCaseTest.test.js", "FormFuzzBool.test.js", "FormFuzzNull.test.js", "FormFuzzObject.test.js", "AbilityDisableTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "query", "api_method_all": "query(uri: string, callback: AsyncCallback<ResultSet>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 167, "since": 7, "api_used": "\u662f", "lines": ["SUB_AA_OpenHarmony_EqueryAbilityByWant_0300\", 0, async function (", "     await DAHelper.query(\n            dataAbilityUri,\n          ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200 queryAbilityByWant er", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400 registerId  : ' + JSO", "mmand_Callback_0100 query string i = ' + i);\n                expe", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0100-------------------\");", "uration information query interface of the specified module \n    ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0100\", 0, async function (", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0300 getapplicationInfo er", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0300-------------------\");", "(\"=ACTS_AQuery_0400 query err,data=======>\"\n                    +", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400 registerId  : ' + typ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200\", 0, async function (", "      bundleManager.queryAbilityByWant(want,bundleFlags,userId,(e", "ll(dataAbilityUri, 'query', arg, pacMap, (err, data) => {\n       ", "uration information query interface of the specified package \n   ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400\", 0, async function (", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400-------------\");\n     ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200-------------------\");", "yAbilityByWant_0200 queryAbilityByWant errCode : '\n              ", "mmand_Callback_0200 query string i = ' + i);\n                expe", "nHarmony_Clear_0100 queryAbilityByWant errCode : '\n              "], "files": ["FormFuzzArray.test.js", "FormFuzzFunction.test.js", "FormFuzzString.test.js", "FormFuzzNum.test.js", "FormsOneAndTwoJsunit.test.js", "ActsDataAbilityJsTest.test.js", "FormFuzzUndefined.test.js", "ActsAbilityDelegatorCaseTest.test.js", "FormFuzzBool.test.js", "FormFuzzNull.test.js", "FormFuzzObject.test.js", "AbilityDisableTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "query", "api_method_all": "query(uri: string, columns: Array<string>, callback: AsyncCallback<ResultSet>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 167, "since": 7, "api_used": "\u662f", "lines": ["SUB_AA_OpenHarmony_EqueryAbilityByWant_0300\", 0, async function (", "     await DAHelper.query(\n            dataAbilityUri,\n          ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200 queryAbilityByWant er", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400 registerId  : ' + JSO", "mmand_Callback_0100 query string i = ' + i);\n                expe", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0100-------------------\");", "uration information query interface of the specified module \n    ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0100\", 0, async function (", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0300 getapplicationInfo er", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0300-------------------\");", "(\"=ACTS_AQuery_0400 query err,data=======>\"\n                    +", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400 registerId  : ' + typ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200\", 0, async function (", "      bundleManager.queryAbilityByWant(want,bundleFlags,userId,(e", "ll(dataAbilityUri, 'query', arg, pacMap, (err, data) => {\n       ", "uration information query interface of the specified package \n   ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400\", 0, async function (", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400-------------\");\n     ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200-------------------\");", "yAbilityByWant_0200 queryAbilityByWant errCode : '\n              ", "mmand_Callback_0200 query string i = ' + i);\n                expe", "nHarmony_Clear_0100 queryAbilityByWant errCode : '\n              "], "files": ["FormFuzzArray.test.js", "FormFuzzFunction.test.js", "FormFuzzString.test.js", "FormFuzzNum.test.js", "FormsOneAndTwoJsunit.test.js", "ActsDataAbilityJsTest.test.js", "FormFuzzUndefined.test.js", "ActsAbilityDelegatorCaseTest.test.js", "FormFuzzBool.test.js", "FormFuzzNull.test.js", "FormFuzzObject.test.js", "AbilityDisableTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "query", "api_method_all": "query(uri: string, predicates: dataAbility.DataAbilityPredicates, callback: AsyncCallback<ResultSet>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 167, "since": 7, "api_used": "\u662f", "lines": ["SUB_AA_OpenHarmony_EqueryAbilityByWant_0300\", 0, async function (", "     await DAHelper.query(\n            dataAbilityUri,\n          ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200 queryAbilityByWant er", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400 registerId  : ' + JSO", "mmand_Callback_0100 query string i = ' + i);\n                expe", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0100-------------------\");", "uration information query interface of the specified module \n    ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0100\", 0, async function (", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0300 getapplicationInfo er", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0300-------------------\");", "(\"=ACTS_AQuery_0400 query err,data=======>\"\n                    +", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400 registerId  : ' + typ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200\", 0, async function (", "      bundleManager.queryAbilityByWant(want,bundleFlags,userId,(e", "ll(dataAbilityUri, 'query', arg, pacMap, (err, data) => {\n       ", "uration information query interface of the specified package \n   ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400\", 0, async function (", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0400-------------\");\n     ", "SUB_AA_OpenHarmony_EqueryAbilityByWant_0200-------------------\");", "yAbilityByWant_0200 queryAbilityByWant errCode : '\n              ", "mmand_Callback_0200 query string i = ' + i);\n                expe", "nHarmony_Clear_0100 queryAbilityByWant errCode : '\n              "], "files": ["FormFuzzArray.test.js", "FormFuzzFunction.test.js", "FormFuzzString.test.js", "FormFuzzNum.test.js", "FormsOneAndTwoJsunit.test.js", "ActsDataAbilityJsTest.test.js", "FormFuzzUndefined.test.js", "ActsAbilityDelegatorCaseTest.test.js", "FormFuzzBool.test.js", "FormFuzzNull.test.js", "FormFuzzObject.test.js", "AbilityDisableTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "query", "api_method_all": "query(uri: string, columns?: Array<string>, predicates?: dataAbility.DataAbilityPredicates): Promise<ResultSet>;", "api_type": "Promise", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "call", "api_method_all": "call(uri: string, method: string, arg: string, extras: PacMap, callback: AsyncCallback<PacMap>): void;", "api_type": "callback", "api_args_count": 5, "api_level": 21, "api_used_count": 2049, "since": 7, "api_used": "\u662f", "lines": ["fo(TAG_TEST_0400 + 'callBack START');\n            try {\n        ", "'com.example.actsamscallbacksecondscene') {\n                cons", "\"com.example.actsamscallbackfourthscene.MainAbility\"\n]\n\nlet bund", "\"com.example.actsamscallbacksecondscene\"\n]\n\ndescribe('ActsAmsCal", "o(TAG_TEST_0600 + ' callBack error is: ' + JSON.stringify(error)", "\"com.example.actsamscallbackfourthscene\"\n]\n\ndescribe('ActsAmsCal", "'com.example.actsamscallbackfourthscene') {\n                cons", "\"com.example.actsamscallbackfifthscene.MainAbility\"\n]\n\nlet bundl", "o(TAG_TEST_0200 + ' callBack succeeded. data is:' + JSON.stringi", "ity\",\n    \"com.ohos.callui.ServiceAbility\",\n    \"com.example.Sim", "('disconnectAbility_callback')\n        .fontSize(40)\n        .he", "'com.example.actsamscallbackthirdscene') {\n                conso", "\"com.example.actsamscallbacksecondscene.MainAbility\"\n]\n\nlet bund", "'com.example.actsamscallbackfourthscene.MainAbility' &&\n        ", "\"com.example.actsamscallbackfirstscene\"\n]\n\ndescribe('ActsAmsCall", "fo(TAG_TEST_0300 + 'callBack START');\n            var startTime ", "o(TAG_TEST_0800 + ' callBack error is:' + error);\n              ", "\"com.example.actsamscallbackfirstscene.MainAbility\"\n]\n\nvar bundl", "\"com.example.actsamscallbackfifthscene\"\n]\n\ndescribe('ActsAmsCall", "test  end ========> callback \")\n                done()\n         ", "fo(TAG_TEST_0800 + 'callBack START');\n            var startTime ", "fo(TAG_TEST_0200 + 'callBack START');\n            try {\n        ", "fo(TAG_TEST_0600 + 'callBack START');\n            var startTime ", "o(TAG_TEST_0600 + ' callBack data is:' + JSON.stringify(data));\n", "\"com.example.actsamscallbackthirdscene\"\n]\ndescribe('ActsAmsCallB", "'com.example.actsamscallbackfirstscene') {\n                conso", "'com.example.actsamscallbackfifthscene') {\n                conso", "o(TAG_TEST_0800 + ' callBack data is:' + JSON.stringify(data));\n", "\"com.example.actsamscallbackthirdscene.MainAbility\"\n]\n\nlet bundl", "mui\",\n    \"com.ohos.callui\",\n    \"com.ohos.contacts\",\n    \"com.o", "o(TAG_TEST_0400 + ' callBack succeeded. data is:' + JSON.stringi"], "files": ["FormFuzzArray.test.js", "getHapModuleInfoJsunit.test.ets", "ContextJsunit.test.ets", "FormsOneAndOneJsunit.test.js", "ActsProcessManageJsTest.test.js", "getAbilityInfoJsunit2.test.ets", "FormFuzzString.test.js", "taskSwitchJsunit.test.js", "app.js", "getAbilityInfoJsunit.test.ets", "amsMissionSnapshotTest.test.js", "MangerAbilityJsunit.test.js", "FormFuzzFunction.test.js", "startFULL.test.js", "ActsDataAbilityJsTest.test.js", "ActsAbilityDelegatorCaseTest.test.js", "FormFuzzNull.test.js", "index.js", "index.ets", "addContextAndAbilityJsunit.test.ets", "ActsStServiceAbilityClientCaseTest.test.js", "FormFuzzNum.test.js", "FeatureAbilityJsunit.test.js", "FormsOneAndTwoJsunit.test.js", "FormFuzzUndefined.test.js", "FormFuzzObject.test.js", "FormFuzzBool.test.js", "FormsZeroAndOneJsunit.test.js", "ContextJsunit.test.js", "FormsZeroJsunit.test.js", "getAppVersionInfoJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "call", "api_method_all": "call(uri: string, method: string, arg: string, extras: PacMap): Promise<PacMap>;", "api_type": "Promise", "api_args_count": 4, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "executeBatch", "api_method_all": "executeBatch(uri: string, operations: Array<DataAbilityOperation>, callback: AsyncCallback<Array<DataAbilityResult>>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["teBatch_Insert_0400 executeBatch err,data====>\"\n                    + (\"", " {\n        DAHelper.executeBatch(dataAbilityUri,\n            [\n         ", "teBatch_Update_0400 executeBatch err,data====>\"\n                    + (\"", "teBatch_Assert_0400 executeBatch err,data====>\"\n                    + (\"", ";\n\n        DAHelper.executeBatch(dataAbilityUri,\n            [\n         ", "teBatch_Delete_0400 executeBatch err,data====>\"\n                    + (\""], "files": ["ActsDataAbilityJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DataAbilityHelper", "api_method_name": "executeBatch", "api_method_all": "executeBatch(uri: string, operations: Array<DataAbilityOperation>): Promise<Array<DataAbilityResult>>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PacMap", "api_method_all": "export interface PacMap {\r\n  \r\n    \r\n     [key: string]: number | string | boolean | Array<string | number | boolean> | null;\r\n}", "api_method_name": "PacMap", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PacMap", "api_method_name": "key", "api_method_all": "[key: string]: number | string | boolean | Array<string | number | boolean> | null", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 405, "since": 0, "api_used": "\u662f", "lines": ["                  mykey7: true,\n           ", "              listofkey.push(reslist[i+1])\n", ")\n        var listofkey = [];\n        for (", "                  mykey3: \"xxxxxxxxxxxxxxxx", "                  mykey6: [\"aaaaaa\", \"bbbbb", "                  mykey4: [1, 15],\n        ", "           for (var key in data.parameters)", "              uri: \"key={true,true,false}\"\n", "                  mykey2: \"[1, 2, 3]\",\n    ", "                  mykey0: 1,\n              ", "parameters[key] == \"key={true,true,false}\")", "                  mykey3: \"str\",\n          ", "ect(data.parameters[key] == \"MIMETYPE\").ass", "                  mykey0: 1111,\n           ", "ect(data.parameters[key] == \"key={true,true", "                  mykey1: [1, 2, 3],\n      ", " + \"data.parameters[key] is :\" + data.param", "    if (callback == key) {\n                ", "              uri: \"key={true,true,false}\",", "\" + data.parameters[key])\n                }", "                  mykey5: [false, true, fal", "SON.stringify(listofkey))\n        return li", "       return listofkey\n    }\n\n    function", "rocessData(reslist, key) {\n        console."], "files": ["MangerAbilityJsunit.test.js", "startFULL.test.js", "FeatureAbilityJsunit.test.js", "ActsGetWantAllTest.js", "index.js", "ApplicationInfoJsunit.test.js"], "is_white": " ", "desc": " "}]}