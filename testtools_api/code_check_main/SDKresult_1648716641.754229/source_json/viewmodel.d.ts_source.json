{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\common\\full\\viewmodel", "api": [{"api_class_name": "FocusParamObj", "api_method_all": "export interface FocusParamObj {\n  \n  focus: boolean;\n}", "api_method_name": "FocusParamObj", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 3, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "FocusParamObj", "api_method_name": "focus", "api_method_all": "focus: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1260, "since": 3, "api_used": "\u662f", "lines": ["console.error(\"push focus page error:\" + err)", "t.test.ets';\nimport focusJsunit from './Focus", " '#87CEFA'\n  @State focusable: boolean = fals", "pNone,\n             focusablePropTrue : this.", "ue : null,\n         focusablePropFalse : null", "  console.info(\"get focus state pages.name:\" ", "le = eventData.data.focusable;\n      }\n    }\n", "st ATTRS_FOCUSED = 'focused'\nconst ATTRS_SCRO", "      console.info(\"focus page state change c", "ablePropTrue : this.focusablePropTrue,\n      ", " console.info(\"push focus page result:\" + JSO", "  console.info(\"get focus state pages:\" + JSO", "      console.info('focusTest_0100 START');\n ", "ne : null,\n         focusablePropTrue : null,", ");\n    });\n\n    it('focusTest_0100', 0, async", "ull) {\n        this.focusable = eventData.dat", "ayStyle({\n          focusedDayColor: Color.Re", "lor.Blue,\n          focusedAreaRadius: 20\n   ", "rd button cannot be focused'\n  @State oneButt", "s));\n        if (!(\"focus\" == pages.name)) {\n", "    .focusable(this.focusable)\n        .onFoc", "      console.info(\"focusTest_0100 start to p", "      console.info('focusTest_0100 END');\n   ", "se : null,\n         focusablePropNone : null,", " ATTRS_FOCUSABLE = 'focusable'\nconst ATTRS_CH", "      console.info(\"focus after each called\")", "\n  basicJsunit();\n  focusJsunit();\n  textArea", "r.Orange,\n          focusedAreaBackgroundColo", " if (eventData.data.focusable != null) {\n    ", "{\n    console.info('focus page show called');", "rt default function focusJsunit() {\n  describ", "      console.info(\"focus beforeEach start\");", "ata: {\n            \"focusable\": true\n        ", "        uri: 'pages/focus',\n      }\n      try", "  expect(obj.$attrs.focusable).assertEqual(tr", "       console.log(\"focusTest_0100 change com", "olor.Red,\n          focusedLunarColor: Color.", "lor.Black)\n        .focusable(this.focusable)"], "files": ["ratingProps.test.js", "listItemGroupProps.test.js", "formProps.test.js", "focus.ets", "tabContentProps.test.js", "marqueeProps.test.js", "textProps.test.js", "imageAnimatorProps.test.js", "buttonProps.test.js", "toolbarProps.test.js", "tabsProps.test.js", "pickerViewProps.test.js", "qrcodeProps.test.js", "stackProps.test.js", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "TouchAbleJsunit.test.ets", "Constants.ets", "refreshProps.test.js", "listItemProps.test.js", "searchProps.test.js", "chartProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "canvasProps.test.js", "sliderProps.test.js", "swiperProps.test.js", "toolbarItemProps.test.js", "videoProps.test.js", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "optionProps.test.js", "badgeProps.test.js", "pieceProps.test.js", "dialogProps.test.js", "imageProps.test.js", "listProps.test.js", "labelProps.test.js", "pickerProps.test.js", "progressProps.test.js", "selectProps.test.js", "textareaProps.test.js", "gridColProps.test.js", "Calendar.ets", "List.test.ets", "gridContainerProps.test.js", "stepperProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "RectObj", "api_method_all": "export interface RectObj {\n  \n  width: number;\n  \n  height: number;\n  \n  left: number;\n  \n  top: number;\n}", "api_method_name": "RectObj", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "RectObj", "api_method_name": "width", "api_method_all": "width: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1772, "since": 6, "api_used": "\u662f", "lines": ["temsColumn\")\n      .width('90%')\n      .borde", "thValue}`)\n        .width(200)\n        .heigh", ");\n        })\n    }.width('100%').height('100", "Stretch)\n          .width('33%')\n          .h", "s.alignItems)\n    }.width('100%').padding({ t", ")\n        }\n      }.width('90%').key('gridCon", "gnSelf,height:100').width('34%').height(100)\n", "hrink(2)\n          .width('40%')\n          .h", "ull) {\n        this.width = eventData.data.wi", "(\"img_width=\" + img.width);\n    console.log(\"", "blurValue)\n        .width('90%')\n        .hei", "s/bg.jpg\");\n    let width = img.width;\n    le", "ign.Center)\n      }.width('90%').height(120).", "le.log(\"imagebitmap_width=\" + width);\n    con", "fontColor(0xCCCCCC).width('90%')\n      Column", "pse().width(`${this.width}`).height(`${this.h", "fontColor(0xCCCCCC).width('90%')\n      Flex({", "fontColor(0xCCCCCC).width('90%')\n      Text()", "Shrink')\n          .width('40%')\n          .h", "fontColor(0xCCCCCC).width('90%')\n      Text('", "eExample {\n  @State width: string = \"200px\";\n", "agebitmap_width=\" + width);\n    console.log(\"", "lor(0xAFEEEE)\n    }.width('100%').margin({ to", "xBasis\")\n          .width('60%')\n          .h", "    let width = img.width;\n    let height = i", "%')\n      .border({ width: 1 })\n      .alignI", "enabled)\n    }\n    .width('100%')\n    .paddin", "t: 30 })\n    }\n    .width('100%').height('100", "sole.log(\"imageData_width=\" + imageData.width", "}\n    }.padding(30).width('100%')\n  }\n}", "Shrink\")\n          .width('50%')\n          .h", "    Text()\n        .width('90%')\n        .hei", " .height(200)\n    }.width('100%').margin({ to", "ey('ellipse')\n    }.width('100%').height('100", ") {\n      Ellipse().width(`${this.width}`).he", " {\n        Column().width('50%').height(30).b", "ckgroundImageSize({ width: 1200, height: 160 ", " if (eventData.data.width != null) {\n        ", "   console.log(\"img_width=\" + img.width);\n   ", ".key('flex')\n      .width('90%')\n      .heigh", "ignSelf,height:80').width('33%').height(80)\n ", "s.context)\n        .width('100%').height('40%", "width=\" + imageData.width);\n    console.log(\"", "fontColor(0xCCCCCC).width('90%')\n      Flex()", "th = eventData.data.width;\n      }\n      if (", "E)\n        Column().width('50%').height(30).b"], "files": ["pageTransition2.ets", "ohosPrompt.ets", "systemRouterA.ets", "pathProps.test.js", "dividerProps.test.js", "video.ets", "Navigator.ets", "longPressGesture.ets", "canvas2.ets", "placement.ets", "playMode.ets", "Qrcode.ets", "Row.ets", "Navigation.ets", "imageFit.ets", "PathJsunit.test.ets", "Span.ets", "polylineProps.test.js", "Progress.ets", "column.ets", "Panel.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "toolbarItemProps.test.js", "marquee.ets", "Rating.ets", "enumsLineCapStyle.ets", "mediaquery.test.js", "Swiper.ets", "Divider.ets", "border.ets", "ResponseRegion.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "transition.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "polyline.ets", "focus.ets", "touch.ets", "circleProps.test.js", "ListItem.ets", "background.ets", "Slider.ets", "Text.ets", "Counter.ets", "gauge.ets", "enumsVerticalAlign.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "TextJsunit.test.ets", "sideBar.ets", "toggle.ets", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "canvasProps.test.js", "positionSetting.ets", "TextArea.ets", "animatorOption.ets", "tapGesture.ets", "shapeClipping.ets", "flexDirection.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "PanGesture.ets", "stepper.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "image.ets", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "stepperProps.test.js", "ratingProps.test.js", "flex.ets", "sharedTransition2.ets", "Shape.ets", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "Polyline.ets", "Stepper.ets", "gridPage.ets", "enumsImage.ets", "enable.ets", "PieceCode.ets", "polygon.ets", "badge.ets", "lineProps.test.js", "qrcodeProps.test.js", "textStyle.ets", "imageEffects.ets", "ohosRouterB.ets", "ColumnSplit.ets", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "videoProps.test.js", "enumsItemAlign.ets", "list.ets", "colorGradient.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "dragEvent.ets", "QrcodeJsunit.test.ets", "Video.ets", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "selectProps.test.js", "grid.ets", "Button.ets", "Polygon.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "mouseEvent.ets", "canvas.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "bindContextMenu.ets", "CircleJsunit.test.ets", "Rect.ets", "divProps.test.js", "divider.ets", "ScrollBar.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "appear.ets", "Constants.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "Path.ets", "enumsFlexAlign.ets", "fillMode.ets", "line.ets", "curves.ets", "priorityGesture.ets", "DataPanel.ets", "ellipseProps.test.js", "FormComponentPage.ets", "Grid.ets", "touchAble.ets", "pageTransition.ets", "visibility.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "polygonProps.test.js", "sliderProps.test.js", "RowJsunit.test.ets", "inputProps.test.js", "index.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "parallelGesture.ets", "timeStamp.ets", "Toggle.ets", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "enumsHorizontalAlign.ets", "panel.ets", "rectProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "RectObj", "api_method_name": "height", "api_method_all": "height: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1455, "since": 6, "api_used": "\u662f", "lines": [" if (eventData.data.height != null) {\n        ", "     .width('100%').height('40%').backgroundCo", "    }.width('100%').height('100%')\n  }\n}", "\"img_height=\" + img.height);\n  }\n}", "\n    .width('100%').height('100%').margin({ to", "width(200)\n        .height(200)\n    }.width('1", ".gridSpan)\n        .height(\"100%\")\n        .ba", "        })\n        .height(\"100%\")\n        .ba", "th(`${this.width}`).height(`${this.height}`).k", "   let height = img.height;\n    this.context.i", ":100').width('34%').height(100)\n          .bac", " img.width;\n    let height = img.height;\n    t", "dth('90%')\n        .height(40)\n        .fontSi", "   console.log(\"img_height=\" + img.height);\n  ", "sole.log(\"imageData_height=\" + imageData.heigh", "     }.width('90%').height(120).padding(10).ba", "ull) {\n        this.height = eventData.data.he", "h('50%')\n          .height(100)\n          .lin", "dth('90%')\n        .height(40)\n        .shadow", "eight=\" + imageData.height);\n  }\n\n  testImage(", "s('100')\n          .height(100)\n          .lin", "dth('90%')\n        .height(40)\n        .graysc", "h('33%')\n          .height(80)\n          .line", "le.log(\"imagebitmap_height=\" + height);\n  }\n\n ", "h('60%')\n          .height(100)\n          .lin", "= \"200px\";\n  @State height: string = \"200px\";\n", "h}`).height(`${this.height}`).key('ellipse')\n ", " Text('no alignSelf,height:80').width('33%').h", "xGrow(1)\n          .height(100)\n          .lin", "ht = eventData.data.height;\n      }\n    }\n  }\n", "gebitmap_height=\" + height);\n  }\n\n  testOffscr", "xGrow(2)\n          .height(100)\n          .lin", "lumn().width('50%').height(30).backgroundColor", "h('40%')\n          .height(100)\n          .lin", "Size({ width: 1200, height: 160 })\n        .ke", "    })\n            .height(50)\n            .ba", "width('90%')\n      .height(120)\n      .padding", "   })\n\n            .height(50)\n            .ba", "ridOffset)\n        .height(\"100%\")\n        .ba", "an')\n      }\n      .height(200)\n    }\n    .bac", " Text('no alignSelf,height:100').width('34%').", "t:80').width('33%').height(80)\n          .back", "    }.width('100%').height('100%')\n  }\n\n  test"], "files": ["pageTransition2.ets", "ohosPrompt.ets", "systemRouterA.ets", "dividerProps.test.js", "video.ets", "Navigator.ets", "longPressGesture.ets", "canvas2.ets", "placement.ets", "playMode.ets", "Qrcode.ets", "Row.ets", "Navigation.ets", "imageFit.ets", "PathJsunit.test.ets", "Span.ets", "Progress.ets", "column.ets", "Panel.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "toolbarItemProps.test.js", "marquee.ets", "Rating.ets", "enumsLineCapStyle.ets", "mediaquery.test.js", "Swiper.ets", "Divider.ets", "border.ets", "ResponseRegion.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "transition.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "polyline.ets", "focus.ets", "touch.ets", "ListItem.ets", "background.ets", "Slider.ets", "Text.ets", "Counter.ets", "gauge.ets", "enumsVerticalAlign.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "TextJsunit.test.ets", "sideBar.ets", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "canvasProps.test.js", "positionSetting.ets", "TextArea.ets", "animatorOption.ets", "tapGesture.ets", "shapeClipping.ets", "flexDirection.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "PanGesture.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "image.ets", "row.ets", "FlexDirectionJsunit.test.ets", "Marquee.ets", "stepperProps.test.js", "ratingProps.test.js", "flex.ets", "sharedTransition2.ets", "Shape.ets", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enumsImage.ets", "PieceCode.ets", "polygon.ets", "badge.ets", "qrcodeProps.test.js", "imageEffects.ets", "ohosRouterB.ets", "ColumnSplit.ets", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "videoProps.test.js", "enumsItemAlign.ets", "list.ets", "colorGradient.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "QrcodeJsunit.test.ets", "Video.ets", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "selectProps.test.js", "grid.ets", "Button.ets", "Polygon.ets", "fontWeight.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "canvas.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "bindContextMenu.ets", "CircleJsunit.test.ets", "Rect.ets", "divProps.test.js", "divider.ets", "ScrollBar.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "Constants.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "Path.ets", "enumsFlexAlign.ets", "fillMode.ets", "line.ets", "curves.ets", "priorityGesture.ets", "DataPanel.ets", "FormComponentPage.ets", "Grid.ets", "touchAble.ets", "pageTransition.ets", "visibility.ets", "AlertDialog.ets", "sliderProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "inputProps.test.js", "index.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "parallelGesture.ets", "timeStamp.ets", "Toggle.ets", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "Calendar.ets", "panelProps.test.js", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "enumsHorizontalAlign.ets", "panel.ets", "rectProps.test.js", "overlay.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "RectObj", "api_method_name": "left", "api_method_all": "left: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 341, "since": 6, "api_used": "\u662f", "lines": ["One.right - rectOne.left) / 2;\n      let upY", "Style = ButtonStyle.left\n  @State iconsValue", "top: 30, right: 30, left: 30 })\n  }\n}", " (rect.right - rect.left) / 2;\n      let dow", "RGIN_LEFT = 'margin-left'\nconst ATTRS_BACKGR", "\n        .padding({ left: 5 })\n        .key(", "margin({ right: 30, left: 30 })\n    }\n    .w", "nfo);\n    this.rect_left = JSON.parse('[' + ", "          }.margin({left: 10, right: 10})\n  ", "}).margin({ top: 5, left: 20 })\n    }.width(", " (rect.right - rect.left);\n      let upY = r", "ct_value = {\n      \"left\": this.rect_left, \"", "  \"left\": this.rect_left, \"top\": this.rect_t", "5)\n      .padding({ left: 12 })\n    }.backgr", "0xFF0000).padding({ left: 20 })\n        .onC", "   let downX = rect.left + (rect.right - rec", "top: 0,\n            left: 0\n          }\n    ", "ontSize(20).margin({left:10})\n          }.ma", "top: 0,\n            left: 0\n          },\n   ", "350)\n    .padding({ left: 35, right: 35, top", "ight(400).padding({ left: 35, right: 35, top", "  let upX = rectOne.left + (rectOne.right - ", "ils {\n  static rect_left;\n  static rect_top;"], "files": ["Utils.ets", "marqueeProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "SourceTypeJsunit.test.ets", "canvas.ets", "Text.ets", "Navigation.ets", "divider.ets", "imageEffects.ets", "PanGestureJsunit.test.ets", "popupProps.test.js", "AlphabetIndexer.ets", "Constants.ets", "scrollCode.ets", "sideBar.ets", "animationStatus.ets", "toggle.ets", "Panel.ets", "Sidebar.ets", "fillMode.ets", "navigation.ets", "Scroll.ets", "text.ets", "FormComponentPage.ets", "TapGesture.test.ets", "list.ets", "List.ets", "ResponseRegionJsunit.test.ets", "index.js", "areaChange.ets", "edgeEffect.ets", "calendar.ets", "PriorityGestureJsunit.test.ets", "scrollBar.ets", "lazyForEach.ets", "Toggle.ets", "image.ets", "Calendar.ets", "fontWeight.ets", "sharedTransition.ets", "imageAnimator.ets", "ScrollBar.ets", "bindPopup.ets", "panel.ets", "button.ets", "span.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "RectObj", "api_method_name": "top", "api_method_all": "top: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 607, "since": 6, "api_used": "\u662f", "lines": ["\n        }.margin({ top: 25 }).border({ wid", "th('100%').margin({ top: 5 })\n  }\n}\n", "t('100%').padding({ top: 5 })\n  }\n}\n", "')[0]\n    this.rect_top = JSON.parse('[' + ", "th('100%').margin({ top: 5 })\n  }\n  onPageS", " = AnimationStatus.Stopped\n          this.f", "00%')\n    .margin({ top: 5 })\n  }\n}", "          .margin({ top: 250 })\n      }\n   ", "})\n        Button('stop').key('button2').wi", "0%')\n    .padding({ top: 5 })\n  }\n}", "ontainer').margin({ top: 300 })\n    }\n  }\n}", "       }\n          stopPropagation: () => {", "          .margin({ top: 250 })\n          .", "ARGIN_TOP = 'margin-top'\nconst ATTRS_BORDER", ")\n        .margin({ top: 5 })\n        .key(", "\": this.rect_left, \"top\": this.rect_top, \"r", " }\n      .padding({ top: 50 })\n      .width", "        }).margin({ top: 5, left: 20 })\n   ", "ity\")\n        Text('top start')\n          .", "ht('100%').margin({ top: 30 })\n  }\n}", "%')\n    }.padding({ top: 20 })\n  }\n}", "th('100%').margin({ top: 20 })\n  }\n\n  onPag", "left;\n  static rect_top;\n  static rect_righ", "t, \"top\": this.rect_top, \"right\": this.rect", "0%')\n    .padding({ top: 5 })\n  }\n}\n", "0xDCDCDC).padding({ top: 5 })\n  }\n}", "0)\n        .margin({top:100})\n        .onSt", "t('100%').padding({ top: 5 })\n  }\n}", "   }\n    }.margin({ top: 5 })\n  }\n\n  onPage", "0xDCDCDC).padding({ top: 5 })\n  }\n\n   onPag", "th('100%').margin({ top: 5 })\n  }\n}", "f3f5)\n    .margin({ top: 10 })\n    .key('gr", "     console.info('stopPropagation')\n      ", "t: 200,\n            top: 0,\n            lef", "h('100%').padding({ top: 5 })\n  }\n}", "th('100%').margin({ top: 300 })\n  }\n}\n\n", "  .indicatorStyle({ top: 20, right: 20, siz"], "files": ["systemRouterA.ets", "configuration.ets", "video.ets", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "playMode.ets", "Navigation.ets", "imageFit.ets", "richText.ets", "column.ets", "Panel.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "TapGesture.test.ets", "enumsLineCapStyle.ets", "Swiper.ets", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "scrollBar.ets", "transition.ets", "systemPrompt.ets", "gridSettings.ets", "transForm.ets", "path.ets", "Column.ets", "scrollCode.ets", "button.ets", "polyline.ets", "focus.ets", "VideoJsunit.test.ets", "touch.ets", "ListItem.ets", "background.ets", "SourceTypeJsunit.test.ets", "Text.ets", "PanGestureJsunit.test.ets", "gauge.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "Sidebar.ets", "customDialogController.ets", "text.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "flexDirection.ets", "shapeClipping.ets", "edgeEffect.ets", "stepper.ets", "shape.ets", "image.ets", "loadingProgress.ets", "flex.ets", "Shape.ets", "Utils.ets", "gridContainer.ets", "Tab.ets", "Polyline.ets", "Stepper.ets", "gridPage.ets", "enumsImage.ets", "enable.ets", "PieceCode.ets", "polygon.ets", "badge.ets", "textStyle.ets", "imageEffects.ets", "popupProps.test.js", "textClock.ets", "tabs.ets", "videoProps.test.js", "list.ets", "colorGradient.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "flexWrap.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "dragEvent.ets", "circle.ets", "listItem.ets", "grid.ets", "Polygon.ets", "fontWeight.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "buttonProps.test.js", "animate.ets", "Flex.ets", "AnimationStatusJsunit.test.ets", "direction2.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "Rect.ets", "divider.ets", "radio.ets", "ImageAnimatorJsunit.test.ets", "Constants.ets", "animationStatus.ets", "Path.ets", "fillMode.ets", "line.ets", "curves.ets", "FormComponentPage.ets", "Grid.ets", "visibility.ets", "progress.ets", "swiperProps.test.js", "WebPage.ets", "index.js", "areaChange.ets", "ohosRouterA.ets", "GridItem.ets", "slider.ets", "aboutToDisappear.ets", "Calendar.ets", "ScrollBar.ets", "panel.ets", "overlay.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ContextAttrOptions", "api_method_all": "export interface ContextAttrOptions {\n  \n  antialias: boolean;\n}", "api_method_name": "ContextAttrOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ContextAttrOptions", "api_method_name": "antialias", "api_method_all": "antialias: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": [".getContext('2d', { antialias: true });\n        c"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_all": "export interface AnimateStyle {\n  \n  width: number;\n  \n  height: number;\n  \n  left: number;\n  \n  top: number;\n  \n  right: number;\n  \n  bottom: number;\n  \n  backgroundColor: string;\n  \n  opacity: number;\n  \n  backgroundPosition: string;\n  \n  transformOrigin: string;\n  \n  transform: \"none\" | TransformObject;\n  \n  offset?: number;\n}", "api_method_name": "AnimateStyle", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_name": "width", "api_method_all": "width: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1772, "since": 6, "api_used": "\u662f", "lines": ["temsColumn\")\n      .width('90%')\n      .borde", "thValue}`)\n        .width(200)\n        .heigh", ");\n        })\n    }.width('100%').height('100", "Stretch)\n          .width('33%')\n          .h", "s.alignItems)\n    }.width('100%').padding({ t", ")\n        }\n      }.width('90%').key('gridCon", "gnSelf,height:100').width('34%').height(100)\n", "hrink(2)\n          .width('40%')\n          .h", "ull) {\n        this.width = eventData.data.wi", "(\"img_width=\" + img.width);\n    console.log(\"", "blurValue)\n        .width('90%')\n        .hei", "s/bg.jpg\");\n    let width = img.width;\n    le", "ign.Center)\n      }.width('90%').height(120).", "le.log(\"imagebitmap_width=\" + width);\n    con", "fontColor(0xCCCCCC).width('90%')\n      Column", "pse().width(`${this.width}`).height(`${this.h", "fontColor(0xCCCCCC).width('90%')\n      Flex({", "fontColor(0xCCCCCC).width('90%')\n      Text()", "Shrink')\n          .width('40%')\n          .h", "fontColor(0xCCCCCC).width('90%')\n      Text('", "eExample {\n  @State width: string = \"200px\";\n", "agebitmap_width=\" + width);\n    console.log(\"", "lor(0xAFEEEE)\n    }.width('100%').margin({ to", "xBasis\")\n          .width('60%')\n          .h", "    let width = img.width;\n    let height = i", "%')\n      .border({ width: 1 })\n      .alignI", "enabled)\n    }\n    .width('100%')\n    .paddin", "t: 30 })\n    }\n    .width('100%').height('100", "sole.log(\"imageData_width=\" + imageData.width", "}\n    }.padding(30).width('100%')\n  }\n}", "Shrink\")\n          .width('50%')\n          .h", "    Text()\n        .width('90%')\n        .hei", " .height(200)\n    }.width('100%').margin({ to", "ey('ellipse')\n    }.width('100%').height('100", ") {\n      Ellipse().width(`${this.width}`).he", " {\n        Column().width('50%').height(30).b", "ckgroundImageSize({ width: 1200, height: 160 ", " if (eventData.data.width != null) {\n        ", "   console.log(\"img_width=\" + img.width);\n   ", ".key('flex')\n      .width('90%')\n      .heigh", "ignSelf,height:80').width('33%').height(80)\n ", "s.context)\n        .width('100%').height('40%", "width=\" + imageData.width);\n    console.log(\"", "fontColor(0xCCCCCC).width('90%')\n      Flex()", "th = eventData.data.width;\n      }\n      if (", "E)\n        Column().width('50%').height(30).b"], "files": ["pageTransition2.ets", "ohosPrompt.ets", "systemRouterA.ets", "pathProps.test.js", "dividerProps.test.js", "video.ets", "Navigator.ets", "longPressGesture.ets", "canvas2.ets", "placement.ets", "playMode.ets", "Qrcode.ets", "Row.ets", "Navigation.ets", "imageFit.ets", "PathJsunit.test.ets", "Span.ets", "polylineProps.test.js", "Progress.ets", "column.ets", "Panel.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "toolbarItemProps.test.js", "marquee.ets", "Rating.ets", "enumsLineCapStyle.ets", "mediaquery.test.js", "Swiper.ets", "Divider.ets", "border.ets", "ResponseRegion.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "transition.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "polyline.ets", "focus.ets", "touch.ets", "circleProps.test.js", "ListItem.ets", "background.ets", "Slider.ets", "Text.ets", "Counter.ets", "gauge.ets", "enumsVerticalAlign.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "TextJsunit.test.ets", "sideBar.ets", "toggle.ets", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "canvasProps.test.js", "positionSetting.ets", "TextArea.ets", "animatorOption.ets", "tapGesture.ets", "shapeClipping.ets", "flexDirection.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "PanGesture.ets", "stepper.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "image.ets", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "stepperProps.test.js", "ratingProps.test.js", "flex.ets", "sharedTransition2.ets", "Shape.ets", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "Polyline.ets", "Stepper.ets", "gridPage.ets", "enumsImage.ets", "enable.ets", "PieceCode.ets", "polygon.ets", "badge.ets", "lineProps.test.js", "qrcodeProps.test.js", "textStyle.ets", "imageEffects.ets", "ohosRouterB.ets", "ColumnSplit.ets", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "videoProps.test.js", "enumsItemAlign.ets", "list.ets", "colorGradient.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "dragEvent.ets", "QrcodeJsunit.test.ets", "Video.ets", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "selectProps.test.js", "grid.ets", "Button.ets", "Polygon.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "mouseEvent.ets", "canvas.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "bindContextMenu.ets", "CircleJsunit.test.ets", "Rect.ets", "divProps.test.js", "divider.ets", "ScrollBar.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "appear.ets", "Constants.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "Path.ets", "enumsFlexAlign.ets", "fillMode.ets", "line.ets", "curves.ets", "priorityGesture.ets", "DataPanel.ets", "ellipseProps.test.js", "FormComponentPage.ets", "Grid.ets", "touchAble.ets", "pageTransition.ets", "visibility.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "polygonProps.test.js", "sliderProps.test.js", "RowJsunit.test.ets", "inputProps.test.js", "index.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "parallelGesture.ets", "timeStamp.ets", "Toggle.ets", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "enumsHorizontalAlign.ets", "panel.ets", "rectProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_name": "height", "api_method_all": "height: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1455, "since": 6, "api_used": "\u662f", "lines": [" if (eventData.data.height != null) {\n        ", "     .width('100%').height('40%').backgroundCo", "    }.width('100%').height('100%')\n  }\n}", "\"img_height=\" + img.height);\n  }\n}", "\n    .width('100%').height('100%').margin({ to", "width(200)\n        .height(200)\n    }.width('1", ".gridSpan)\n        .height(\"100%\")\n        .ba", "        })\n        .height(\"100%\")\n        .ba", "th(`${this.width}`).height(`${this.height}`).k", "   let height = img.height;\n    this.context.i", ":100').width('34%').height(100)\n          .bac", " img.width;\n    let height = img.height;\n    t", "dth('90%')\n        .height(40)\n        .fontSi", "   console.log(\"img_height=\" + img.height);\n  ", "sole.log(\"imageData_height=\" + imageData.heigh", "     }.width('90%').height(120).padding(10).ba", "ull) {\n        this.height = eventData.data.he", "h('50%')\n          .height(100)\n          .lin", "dth('90%')\n        .height(40)\n        .shadow", "eight=\" + imageData.height);\n  }\n\n  testImage(", "s('100')\n          .height(100)\n          .lin", "dth('90%')\n        .height(40)\n        .graysc", "h('33%')\n          .height(80)\n          .line", "le.log(\"imagebitmap_height=\" + height);\n  }\n\n ", "h('60%')\n          .height(100)\n          .lin", "= \"200px\";\n  @State height: string = \"200px\";\n", "h}`).height(`${this.height}`).key('ellipse')\n ", " Text('no alignSelf,height:80').width('33%').h", "xGrow(1)\n          .height(100)\n          .lin", "ht = eventData.data.height;\n      }\n    }\n  }\n", "gebitmap_height=\" + height);\n  }\n\n  testOffscr", "xGrow(2)\n          .height(100)\n          .lin", "lumn().width('50%').height(30).backgroundColor", "h('40%')\n          .height(100)\n          .lin", "Size({ width: 1200, height: 160 })\n        .ke", "    })\n            .height(50)\n            .ba", "width('90%')\n      .height(120)\n      .padding", "   })\n\n            .height(50)\n            .ba", "ridOffset)\n        .height(\"100%\")\n        .ba", "an')\n      }\n      .height(200)\n    }\n    .bac", " Text('no alignSelf,height:100').width('34%').", "t:80').width('33%').height(80)\n          .back", "    }.width('100%').height('100%')\n  }\n\n  test"], "files": ["pageTransition2.ets", "ohosPrompt.ets", "systemRouterA.ets", "dividerProps.test.js", "video.ets", "Navigator.ets", "longPressGesture.ets", "canvas2.ets", "placement.ets", "playMode.ets", "Qrcode.ets", "Row.ets", "Navigation.ets", "imageFit.ets", "PathJsunit.test.ets", "Span.ets", "Progress.ets", "column.ets", "Panel.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "toolbarItemProps.test.js", "marquee.ets", "Rating.ets", "enumsLineCapStyle.ets", "mediaquery.test.js", "Swiper.ets", "Divider.ets", "border.ets", "ResponseRegion.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "transition.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "polyline.ets", "focus.ets", "touch.ets", "ListItem.ets", "background.ets", "Slider.ets", "Text.ets", "Counter.ets", "gauge.ets", "enumsVerticalAlign.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "TextJsunit.test.ets", "sideBar.ets", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "canvasProps.test.js", "positionSetting.ets", "TextArea.ets", "animatorOption.ets", "tapGesture.ets", "shapeClipping.ets", "flexDirection.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "PanGesture.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "image.ets", "row.ets", "FlexDirectionJsunit.test.ets", "Marquee.ets", "stepperProps.test.js", "ratingProps.test.js", "flex.ets", "sharedTransition2.ets", "Shape.ets", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enumsImage.ets", "PieceCode.ets", "polygon.ets", "badge.ets", "qrcodeProps.test.js", "imageEffects.ets", "ohosRouterB.ets", "ColumnSplit.ets", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "videoProps.test.js", "enumsItemAlign.ets", "list.ets", "colorGradient.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "QrcodeJsunit.test.ets", "Video.ets", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "selectProps.test.js", "grid.ets", "Button.ets", "Polygon.ets", "fontWeight.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "canvas.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "bindContextMenu.ets", "CircleJsunit.test.ets", "Rect.ets", "divProps.test.js", "divider.ets", "ScrollBar.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "Constants.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "Path.ets", "enumsFlexAlign.ets", "fillMode.ets", "line.ets", "curves.ets", "priorityGesture.ets", "DataPanel.ets", "FormComponentPage.ets", "Grid.ets", "touchAble.ets", "pageTransition.ets", "visibility.ets", "AlertDialog.ets", "sliderProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "inputProps.test.js", "index.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "parallelGesture.ets", "timeStamp.ets", "Toggle.ets", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "Calendar.ets", "panelProps.test.js", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "enumsHorizontalAlign.ets", "panel.ets", "rectProps.test.js", "overlay.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_name": "left", "api_method_all": "left: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 341, "since": 6, "api_used": "\u662f", "lines": ["One.right - rectOne.left) / 2;\n      let upY", "Style = ButtonStyle.left\n  @State iconsValue", "top: 30, right: 30, left: 30 })\n  }\n}", " (rect.right - rect.left) / 2;\n      let dow", "RGIN_LEFT = 'margin-left'\nconst ATTRS_BACKGR", "\n        .padding({ left: 5 })\n        .key(", "margin({ right: 30, left: 30 })\n    }\n    .w", "nfo);\n    this.rect_left = JSON.parse('[' + ", "          }.margin({left: 10, right: 10})\n  ", "}).margin({ top: 5, left: 20 })\n    }.width(", " (rect.right - rect.left);\n      let upY = r", "ct_value = {\n      \"left\": this.rect_left, \"", "  \"left\": this.rect_left, \"top\": this.rect_t", "5)\n      .padding({ left: 12 })\n    }.backgr", "0xFF0000).padding({ left: 20 })\n        .onC", "   let downX = rect.left + (rect.right - rec", "top: 0,\n            left: 0\n          }\n    ", "ontSize(20).margin({left:10})\n          }.ma", "top: 0,\n            left: 0\n          },\n   ", "350)\n    .padding({ left: 35, right: 35, top", "ight(400).padding({ left: 35, right: 35, top", "  let upX = rectOne.left + (rectOne.right - ", "ils {\n  static rect_left;\n  static rect_top;"], "files": ["Utils.ets", "marqueeProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "SourceTypeJsunit.test.ets", "canvas.ets", "Text.ets", "Navigation.ets", "divider.ets", "imageEffects.ets", "PanGestureJsunit.test.ets", "popupProps.test.js", "AlphabetIndexer.ets", "Constants.ets", "scrollCode.ets", "sideBar.ets", "animationStatus.ets", "toggle.ets", "Panel.ets", "Sidebar.ets", "fillMode.ets", "navigation.ets", "Scroll.ets", "text.ets", "FormComponentPage.ets", "TapGesture.test.ets", "list.ets", "List.ets", "ResponseRegionJsunit.test.ets", "index.js", "areaChange.ets", "edgeEffect.ets", "calendar.ets", "PriorityGestureJsunit.test.ets", "scrollBar.ets", "lazyForEach.ets", "Toggle.ets", "image.ets", "Calendar.ets", "fontWeight.ets", "sharedTransition.ets", "imageAnimator.ets", "ScrollBar.ets", "bindPopup.ets", "panel.ets", "button.ets", "span.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_name": "top", "api_method_all": "top: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 607, "since": 6, "api_used": "\u662f", "lines": ["\n        }.margin({ top: 25 }).border({ wid", "th('100%').margin({ top: 5 })\n  }\n}\n", "t('100%').padding({ top: 5 })\n  }\n}\n", "')[0]\n    this.rect_top = JSON.parse('[' + ", "th('100%').margin({ top: 5 })\n  }\n  onPageS", " = AnimationStatus.Stopped\n          this.f", "00%')\n    .margin({ top: 5 })\n  }\n}", "          .margin({ top: 250 })\n      }\n   ", "})\n        Button('stop').key('button2').wi", "0%')\n    .padding({ top: 5 })\n  }\n}", "ontainer').margin({ top: 300 })\n    }\n  }\n}", "       }\n          stopPropagation: () => {", "          .margin({ top: 250 })\n          .", "ARGIN_TOP = 'margin-top'\nconst ATTRS_BORDER", ")\n        .margin({ top: 5 })\n        .key(", "\": this.rect_left, \"top\": this.rect_top, \"r", " }\n      .padding({ top: 50 })\n      .width", "        }).margin({ top: 5, left: 20 })\n   ", "ity\")\n        Text('top start')\n          .", "ht('100%').margin({ top: 30 })\n  }\n}", "%')\n    }.padding({ top: 20 })\n  }\n}", "th('100%').margin({ top: 20 })\n  }\n\n  onPag", "left;\n  static rect_top;\n  static rect_righ", "t, \"top\": this.rect_top, \"right\": this.rect", "0%')\n    .padding({ top: 5 })\n  }\n}\n", "0xDCDCDC).padding({ top: 5 })\n  }\n}", "0)\n        .margin({top:100})\n        .onSt", "t('100%').padding({ top: 5 })\n  }\n}", "   }\n    }.margin({ top: 5 })\n  }\n\n  onPage", "0xDCDCDC).padding({ top: 5 })\n  }\n\n   onPag", "th('100%').margin({ top: 5 })\n  }\n}", "f3f5)\n    .margin({ top: 10 })\n    .key('gr", "     console.info('stopPropagation')\n      ", "t: 200,\n            top: 0,\n            lef", "h('100%').padding({ top: 5 })\n  }\n}", "th('100%').margin({ top: 300 })\n  }\n}\n\n", "  .indicatorStyle({ top: 20, right: 20, siz"], "files": ["systemRouterA.ets", "configuration.ets", "video.ets", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "playMode.ets", "Navigation.ets", "imageFit.ets", "richText.ets", "column.ets", "Panel.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "TapGesture.test.ets", "enumsLineCapStyle.ets", "Swiper.ets", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "scrollBar.ets", "transition.ets", "systemPrompt.ets", "gridSettings.ets", "transForm.ets", "path.ets", "Column.ets", "scrollCode.ets", "button.ets", "polyline.ets", "focus.ets", "VideoJsunit.test.ets", "touch.ets", "ListItem.ets", "background.ets", "SourceTypeJsunit.test.ets", "Text.ets", "PanGestureJsunit.test.ets", "gauge.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "Sidebar.ets", "customDialogController.ets", "text.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "flexDirection.ets", "shapeClipping.ets", "edgeEffect.ets", "stepper.ets", "shape.ets", "image.ets", "loadingProgress.ets", "flex.ets", "Shape.ets", "Utils.ets", "gridContainer.ets", "Tab.ets", "Polyline.ets", "Stepper.ets", "gridPage.ets", "enumsImage.ets", "enable.ets", "PieceCode.ets", "polygon.ets", "badge.ets", "textStyle.ets", "imageEffects.ets", "popupProps.test.js", "textClock.ets", "tabs.ets", "videoProps.test.js", "list.ets", "colorGradient.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "flexWrap.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "dragEvent.ets", "circle.ets", "listItem.ets", "grid.ets", "Polygon.ets", "fontWeight.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "buttonProps.test.js", "animate.ets", "Flex.ets", "AnimationStatusJsunit.test.ets", "direction2.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "Rect.ets", "divider.ets", "radio.ets", "ImageAnimatorJsunit.test.ets", "Constants.ets", "animationStatus.ets", "Path.ets", "fillMode.ets", "line.ets", "curves.ets", "FormComponentPage.ets", "Grid.ets", "visibility.ets", "progress.ets", "swiperProps.test.js", "WebPage.ets", "index.js", "areaChange.ets", "ohosRouterA.ets", "GridItem.ets", "slider.ets", "aboutToDisappear.ets", "Calendar.ets", "ScrollBar.ets", "panel.ets", "overlay.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_name": "right", "api_method_all": "right: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 132, "since": 4, "api_used": "\u662f", "lines": ["ta: {\n            \"brightnessValue\": \"15\"\n   ", "One.left + (rectOne.right - rectOne.left) / 2", "_top;\n  static rect_right;\n  static rect_bott", "padding({ left: 35, right: 35, top: 35 })\n  }", "ta: {\n            \"brightnessValue\": 'error'\n", "('90%').height(40).brightness(this.brightness", ".padding({ top: 30, right: 30, left: 30 })\n  ", "')[1]\n    this.rect_right = JSON.parse('[' + ", "0).brightness(this.brightnessValue).key('cent", "}.margin({left: 10, right: 10})\n        }\n   ", "pect(objNew.$attrs.brightness).assertEqual(21", "ow4')\n\n      Text('brightness').fontSize(15).", "  let upX = rectOne.right + (rect.right - rec", "pect(objNew.$attrs.brightness).assertEqual(0.", "ll) {\n        this.brightnessValue = eventDat", "idth(360).padding({ right: 10, top: 10 })\n  }", "ring= 10;\n  @State brightnessValue: string= 2", ")\n        .margin({ right: 30, left: 30 })\n  ", "ctOne.right + (rect.right - rect.left);\n     ", "e = eventData.data.brightnessValue;\n      }\n ", "if (eventData.data.brightnessValue != null) {", "pect(objNew.$attrs.brightness).assertEqual(-2", " expect(obj.$attrs.brightness).assertEqual(20", "p\": this.rect_top, \"right\": this.rect_right, ", "pect(objNew.$attrs.brightness).assertEqual(15", "TTRS_BRIGHTNESS = 'brightness'\nconst ATTRS_BA", "ta: {\n            \"brightnessValue\": 0x7FFFFF", " \"right\": this.rect_right, \"bottom\": this.rec", "= rect.left + (rect.right - rect.left) / 2;\n ", "ta: {\n            \"brightnessValue\": 0x800000", "GIN_RIGHT = 'margin-right'\nconst ATTRS_CONSTR", "torStyle({ top: 20, right: 20, size: 2, color"], "files": ["Utils.ets", "ImageEffectsJsunit.test.ets", "marqueeProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "SourceTypeJsunit.test.ets", "canvas.ets", "Text.ets", "divider.ets", "imageFit.ets", "imageEffects.ets", "PanGestureJsunit.test.ets", "popupProps.test.js", "swiper.ets", "Constants.ets", "toggle.ets", "Scroll.ets", "text.ets", "FormComponentPage.ets", "WebPage.ets", "TapGesture.test.ets", "ResponseRegionJsunit.test.ets", "index.js", "areaChange.ets", "badgeProps.test.js", "calendar.ets", "PriorityGestureJsunit.test.ets", "lazyForEach.ets", "Toggle.ets", "image.ets", "Calendar.ets", "fontWeight.ets", "button.ets", "span.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_name": "bottom", "api_method_all": "bottom: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 95, "since": 4, "api_used": "\u662f", "lines": [").margin({ top: 10, bottom: 10 })\n      Image(", ".padding({ top: 10, bottom: 10 }).margin(10)\n\n", "\"bottom\": this.rect_bottom\n    }\n  }\n\n  static", "ntSize(16).margin({ bottom: 10 })\n      Flex({", "r(0x317aff).margin({bottom:20})\n        .key('", "IN_BOTTOM = 'margin-bottom'\nconst ATTRS_BORDER", ": this.rect_right, \"bottom\": this.rect_bottom\n", " = rect.top + (rect.bottom - rect.top) / 2;\n  ", "tOne.bottom + (rect.bottom - rect.top);\n      ", "r(0x317aff).margin({bottom:50}).key('button')\n", ")\n        .margin({ bottom: 10 })\n        .onC", ")\n        .margin({ bottom: 40 })\n        .onS", "  let upY = rectOne.bottom + (rect.bottom - re", ")\n        .margin({ bottom: 10 })\n        .key", "')[0]\n    this.rect_bottom = JSON.parse('[' + ", "tOne.top + (rectOne.bottom - rectOne.top) / 2;", ")\n        .margin({ bottom: 20 })\n    }\n    .w", "d)\n      }.margin({ bottom: 10 })\n    }\n  }\n}\n", ")\n        .margin({ bottom: 20 })\n        .key", "ight;\n  static rect_bottom;\n  static rect_valu"], "files": ["animate.ets", "Utils.ets", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "playMode.ets", "SourceTypeJsunit.test.ets", "canvas.ets", "ohosMatrix4.ets", "Text.ets", "PanGestureJsunit.test.ets", "Stack.ets", "Constants.ets", "customDialogController.ets", "CustomDialog.ets", "FormComponentPage.ets", "textClock.ets", "geometryTransition.ets", "TapGesture.test.ets", "marquee.ets", "ResponseRegionJsunit.test.ets", "dragEvent2.ets", "index.js", "dragEvent.ets", "PriorityGestureJsunit.test.ets", "transition.ets", "transForm.ets", "Calendar.ets", "Marquee.ets", "buttonProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_name": "backgroundColor", "api_method_all": "backgroundColor: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 627, "since": 4, "api_used": "\u662f", "lines": ["', height: '60%' }).backgroundColor(0xbbb2cb)\n         ", "  if(eventData.data.backgroundColor != null) {\n        ", "ter)\n              .backgroundColor(0xbbb2cb)\n         ", "', height: '80%' }).backgroundColor(0xd2cab3).align(Ali", "_BACKGROUNDCOLOR = 'backgroundColor'\nconst ATTRS_ALIGNS", "00%').height('40%').backgroundColor('#00ffff')\n        ", "ight(70)\n          .backgroundColor(0xF5DEB3)\n         ", "ht(50)\n            .backgroundColor(0x4582B4)\n         ", "h('50%').height(30).backgroundColor(0x00FFFF)\n      }\n ", "ht(120).padding(10).backgroundColor(0xAFEEEE)\n\n      Te", "n('Touch')\n        .backgroundColor(0x2788D9)\n        .", "ight(80)\n          .backgroundColor(0xF5DEB3).textAlign", "ght(100)\n          .backgroundColor(0xF5DEB3).textAlign", "ht(\"100%\")\n        .backgroundColor(0x66bbb2cb)\n       ", "y('text1')\n        .backgroundColor(Color.Green)\n      ", "led(false)\n        .backgroundColor(0x317aff)\n        .", "h('50%').height(30).backgroundColor(0xAFEEEE)\n        C", "(item)\n            .backgroundColor(0xbbb2cb)\n         ", "ight: 100 })\n      .backgroundColor(0xd2cab3)\n      .cl", "0)\n                .backgroundColor(0xFFFFFF)\n         ", "0%').height('100%').backgroundColor(0xDCDCDC).padding({", "ight.Bold)\n        .backgroundColor(Color.Black)\n      ", "ght(200)\n    }\n    .backgroundColor(0xf1f3f5)\n    .marg", "ntSize(16)\n        .backgroundColor(0xF9CF93)\n        .", "Index].size)\n      .backgroundColor(0xd2cab3)\n    }.pad", "ight(70)\n          .backgroundColor(0xD2B48C)\n         ", "       }).margin(3).backgroundColor(0x2788D9)\n      if ", "tem)\n              .backgroundColor(0xbbb2cb)\n         ", "'50%' })\n          .backgroundColor(0xc1cbac)\n         ", "'enabled')\n        .backgroundColor(0x317aff)\n        .", ".padding(10)\n      .backgroundColor(0xAFEEEE)\n    }.wid", "ht(50)\n            .backgroundColor(0x00BFFF)\n         ", "ight: 165 })\n      .backgroundColor(0xd2cab3)\n\n      Te", "t(160)\n            .backgroundColor(0xAFEEEE)\n         ", "ht(\"100%\")\n        .backgroundColor(0x66b6c5d1)\n       ", "ight(80)\n          .backgroundColor(0xAFEEEE)\n         ", "ht(50)\n            .backgroundColor(0x4682B4)\n         "], "files": ["ohosPrompt.ets", "systemRouterA.ets", "configuration.ets", "canvas2.ets", "placement.ets", "playMode.ets", "Qrcode.ets", "Navigation.ets", "column.ets", "Panel.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "marquee.ets", "Swiper.ets", "ResponseRegion.ets", "scrollBar.ets", "transition.ets", "systemPrompt.ets", "gridSettings.ets", "transForm.ets", "Column.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "focus.ets", "touch.ets", "ListItem.ets", "background.ets", "Text.ets", "Stack.ets", "enumsVerticalAlign.ets", "TextJsunit.test.ets", "swiper.ets", "sideBar.ets", "Badge.ets", "Scroll.ets", "customDialogController.ets", "positionSetting.ets", "animatorOption.ets", "flexDirection.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "row.ets", "FlexDirectionJsunit.test.ets", "Marquee.ets", "flex.ets", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "gridPage.ets", "enable.ets", "badge.ets", "imageEffects.ets", "ColumnSplit.ets", "tabs.ets", "layoutConstraints.ets", "enumsItemAlign.ets", "list.ets", "BackgroundJsunit.test.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "flexWrap.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "dragEvent.ets", "QrcodeJsunit.test.ets", "listItem.ets", "grid.ets", "Button.ets", "imageAnimator.ets", "bindPopup.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "global.ets", "Flex.ets", "direction2.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "divider.ets", "appear.ets", "Constants.ets", "animationStatus.ets", "zIndex.ets", "enumsFlexAlign.ets", "fillMode.ets", "curves.ets", "FormComponentPage.ets", "Grid.ets", "visibility.ets", "AlertDialog.ets", "LoadingProgressJsunit.test.ets", "index.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "timeStamp.ets", "motionPath.ets", "ScrollBar.ets", "enumsHorizontalAlign.ets", "panel.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_name": "opacity", "api_method_all": "opacity: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 532, "since": 4, "api_used": "\u662f", "lines": ["ale }).opacity(this.opacity)\n  }\n  pageTransiti", "pacityValue}`).key(\"opacity\")\n        Text('top", "%').opacity(`${this.opacityValue}`).key(\"opacit", " if (eventData.data.opacity != null) {\n        ", "xpect(objNew.$attrs.opacity).assertEqual(2);\n  ", "({ x: this.scale }).opacity(this.opacity)\n  }\n ", "      .opacity(this.opacity)\n        .onClick((", ".0 }, opacity: this.opacity })\n      }\n    }.he", "eInt(eventData.data.opacity);\n      }\n    }\n  }", "ale,\n              \"opacity\" : this.opacity,\n  ", " getInspectorByKey('opacity');\n      let obj = ", "(0x317aff)\n        .opacity(0.4)\n      Button(t", "ue = eventData.data.opacityValue;\n      }\n    }", "le = 1\n        this.opacity = progress\n      })", "ogress\n        this.opacity = 1\n      })\n  }\n\n ", " getInspectorByKey('opacity');\n      let objNew", "number = 1\n  @State opacity: number = 1\n  @Stat", "ale }).opacity(this.opacity)\n  }\n\n  pageTransit", "st ATTRS_OPACITY = 'opacity'\nconst ATTRS_DIRECT", "0}) {\n        Text('opacity(1)').fontSize(20).f", "  expect(obj.$attrs.opacity).assertEqual(1);\n  ", "   \"opacity\" : this.opacity,\n              \"typ", "ata: {\n            \"opacityValue\": \"0.7\"\n      ", "Black).width('90%').opacity(`${this.opacityValu", " if (eventData.data.opacityValue) {\n        thi", ".0 }, opacity: this.opacity })\n        .key('bu", "ata: {\n            \"opacity\": 'a',\n          }\n", ", y: 1.0, z: 1.0 }, opacity: this.opacity })\n  ", "0, y: 15};\n  @State opacityValue: string = 1;\n\n", "xpect(objNew.$attrs.opacity).assertEqual(0.7);\n", "xpect(objNew.$attrs.opacity).assertEqual(null);", "g = \"show\"\n  @State opacity: number = 1\n  @Stat", "('button')\n        .opacity(this.opacity)\n     ", "ull) {\n        this.opacity = parseInt(eventDat", "ata: {\n            \"opacity\": 2,\n          }\n  ", "{ x: 1.0, y: 0.0 }, opacity: this.opacity })\n  ", "({ x: this.scale }).opacity(this.opacity)\n  }\n\n", "lue) {\n        this.opacityValue = eventData.da"], "files": ["pageTransition2.ets", "pathProps.test.js", "circleProps.test.js", "enable.ets", "Text.ets", "lineProps.test.js", "TextJsunit.test.ets", "Constants.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "ellipseProps.test.js", "listItemProps.test.js", "TransitionJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "polygonProps.test.js", "positionSetting.ets", "index.js", "PageTransitionJsunit.test.ets", "tspanProps.test.js", "svgProps.test.js", "transition.ets", "svgTextProps.test.js", "textPathProps.test.js", "sharedTransition.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_name": "backgroundPosition", "api_method_all": "backgroundPosition: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 123, "since": 4, "api_used": "\u662f", "lines": [":'#ffff00',\n        backgroundPosition:'0px',\n        tran", "olor:'#ff0000',\n    backgroundPosition:'10px 20px',\n    tr", ":'#ff0000',\n        backgroundPosition:'10px 20px',\n      ", ":'#ff00ff',\n        backgroundPosition:'15px 25px',\n      ", "olor:'#ff00ff',\n    backgroundPosition:'15px 25px',\n    tr", "olor:'#ffff00',\n    backgroundPosition:'0px',\n    transfor"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_name": "transformOrigin", "api_method_all": "transformOrigin: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 123, "since": 4, "api_used": "\u662f", "lines": ["on:'10px 20px',\n    transformOrigin:'left top'\n  },\n  {", "10px 20px',\n        transformOrigin:'left top'\n    },\n ", "tion:'0px',\n        transformOrigin:'center center'\n   ", "Position:'0px',\n    transformOrigin:'center center'\n  }", "15px 25px',\n        transformOrigin:'center top'\n    },", "on:'15px 25px',\n    transformOrigin:'center top'\n  },\n "], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_name": "transform", "api_method_all": "transform: \"none\" | TransformObject", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 353, "since": 4, "api_used": "\u662f", "lines": ["h.PI / 180);\n  }\n\n  transform() {\n    this.contex", "\n              this.transform();\n              th", "ransformProp : this.transformProp,\n            id", "e('/images/bg.jpg').transform(this.matrix4)\n     ", ", z: 30 })\n  @State transformValue: object= Matri", "op = this.$element(\"transformProp\").getInspector(", "e('/images/bg.jpg').transform(this.matrix6)\n     ", ".info(\"[canvas] get transform----\" + data);\n  }\n\n", "rop : null,\n        transformProp : null,\n       ", "  expect(obj.$attrs.transform.type)\n        .asse", "15px 25px',\n        transformOrigin:'center top'\n", ");\n    this.context.transform(1, 0.1, 0.01, 1, 10", "tion:'0px',\n        transformOrigin:'center cente", "  expect(obj.$attrs.transform.matrix)\n      .asse", ", y: 0.5 }\n  @State transformValue: object= Matri", "e('/images/bg.jpg').transform(this.matrix5)\n     ", "thProp,\n            transformProp : this.transfor", "  expect(obj.$attrs.transform.matrix)\n        .as", "(0xAFEEEE)\n        .transform(Matrix4.identity().", "ctor()\n        this.transformProp = this.$element", "ngify(objNew.$attrs.transform)).assertEqual('{}')", "s = [\n    {\n        transform: {\n            tran", " Matrix4.identity().transformPoint([100, 10])\n  @", "padding(5)\n        .transform(this.matrix2.combin", "    .translate(this.transformValue)\n        .widt", "   },\n    {\n        transform: {\n            tran", "10px 20px',\n        transformOrigin:'left top'\n  "], "files": ["pathProps.test.js", "rectProps.test.js", "svgProps.test.js", "polygonProps.test.js", "circleProps.test.js", "polylineProps.test.js", "transForm.ets", "OhosMatrix4Jsunit.test.ets", "ellipseProps.test.js", "index.js", "canvas.ets", "ohosMatrix4.ets", "lineProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateStyle", "api_method_name": "offset", "api_method_all": "offset?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 372, "since": 4, "api_used": "\u662f", "lines": ["     xs: { span: 2, offset: 6 },\n             ", " color: Color.Gray, offsetX: 5, offsetY: 5 }\n ", "ffsetX: 0x80000000, offsetY: 0x80000000 };\n   ", "rror',\n            \"offset\": 'error'\n         ", "n\": 1,\n            \"offset\": 2\n          }\n   ", "00000,\n            \"offset\": 0x80000000\n      ", "ttrs.useSizeType.sm.offset).assertEqual(0x7FFF", "     xs: { span: 1, offset: 0 }, sm: { span: t", "     lg: { span: 2, offset: 2 }\n            })", "bjNew.$attrs.shadow.offsetY).assertEqual(\"10.0", "     sm: { span: 6, offset: 2 },\n             ", "ttrs.useSizeType.sm.offset).assertEqual(-21474", "     xs: { span: 2, offset: 10 },\n            ", "     xs: { span: 6, offset: 0 },\n             ", "     md: { span: 2, offset: 2 },\n             ", "ttrs.useSizeType.sm.offset).assertEqual(2);\n  ", " color: 0x80000000, offsetX: 0x80000000, offse", "     sm: { span: 2, offset: 8 },\n             ", "     md: { span: 6, offset: 4 },\n             ", "et = eventData.data.offset;\n      } else if (e", " span: this.smSpan, offset: this.smOffset },\n ", "     lg: { span: 2, offset: 4 }\n            })", "FFFFF,\n            \"offset\": 0x7FFFFFFF\n      ", "r.Gray, offsetX: 5, offsetY: 5 }\n  @State gray", "ttrs.useSizeType.sm.offset).assertEqual(1);\n  ", "ttrs.useSizeType.sm.offset).assertEqual(0);\n  ", "bjNew.$attrs.shadow.offsetY).assertEqual(\"2147", ".Gray, offsetX: 10, offsetY: 10\n      };\n     ", "ffsetX: 0x7FFFFFFF, offsetY: 0x7FFFFFFF };\n   ", "     xs: { span: 2, offset: 8 },\n             ", "     md: { span: 2, offset: 10 },\n            ", "     sm: { span: 2, offset: 0 },\n             ", "gCallBack);\n    let offsetChangeEvent = {\n    ", "gn: this.alignment, offset: { x: this.x, y: th", "     md: { span: 5, offset: 1 }, lg: { span: 7", " color: Color.Gray, offsetX: 10, offsetY: 10\n ", "bjNew.$attrs.shadow.offsetX).assertEqual(\"10.0", " color: 0x7FFFFFFF, offsetX: 0x7FFFFFFF, offse", "t(obj.$attrs.shadow.offsetY).assertEqual(\"5.00", "     lg: { span: 6, offset: 6 }\n            })", "bjNew.$attrs.shadow.offsetX).assertEqual(\"2147", "     md: { span: 2, offset: 0 },\n             ", "1 }, lg: { span: 7, offset: 2 }\n        })\n   ", "  events_emitter.on(offsetChangeEvent, this.st", "     sm: { span: 2, offset: 10 },\n            ", ": Alignment.Bottom, offset: { x: 0, y: 20 } })", "     lg: { span: 2, offset: 0 }\n            })", "t(obj.$attrs.shadow.offsetX).assertEqual(\"5.00"], "files": ["Shape.ets", "panDirection.ets", "pathProps.test.js", "ImageEffectsJsunit.test.ets", "gridContainer.ets", "circleProps.test.js", "Text.ets", "lineProps.test.js", "imageFit.ets", "imageEffects.ets", "TextJsunit.test.ets", "popupProps.test.js", "Constants.ets", "polylineProps.test.js", "refreshProps.test.js", "PositionSettingJsunit.test.ets", "Scroll.ets", "customDialogController.ets", "CustomDialog.ets", "ellipseProps.test.js", "touchAble.ets", "polygonProps.test.js", "positionSetting.ets", "GridContainer.ets", "enumsLineCapStyle.ets", "GridSettingsJsunit.test.ets", "index.js", "OverlayJsunit.test.ets", "PanGesture.ets", "svgProps.test.js", "shape.ets", "listProps.test.js", "gridSettings.ets", "gridColProps.test.js", "textPathProps.test.js", "gestureMode.ets", "refresh.ets", "motionPath.ets", "rectProps.test.js", "overlay.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_all": "export interface TransformObject {\n  \n  matrix(scaleX: number, skewX: number, skewY: number, scaleY: number, translateX: number, translateY: number): void;\n  \n  matrix3d(\n    n00: number,\n    n01: number,\n    n02: number,\n    n03: number,\n    n10: number,\n    n11: number,\n    n12: number,\n    n13: number,\n    n20: number,\n    n21: number,\n    n22: number,\n    n23: number,\n    n30: number,\n    n31: number,\n    n32: number,\n    n33: number,\n  ): void;\n  \n  translate(x: number, y: number): void;\n  \n  translate3d(x: number, y: number, z: number): void;\n  \n  translateX(x: number): void;\n  \n  translateY(y: number): void;\n  \n  translateZ(z: number): void;\n  \n  scale(x: number, y: number): void;\n  \n  scale3d(x: number, y: number, z: number): void;\n  \n  scaleX(x: number): void;\n  \n  scaleY(y: number): void;\n  \n  scaleZ(z: number): void;\n  \n  rotate(angle: number): void;\n  \n  rotate3d(x: number, y: number, z: number, angle: number): void;\n  \n  rotateX(angle: number): void;\n  \n  rotateY(angle: number): void;\n  \n  rotateZ(angle: number): void;\n  \n  skew(xAngle: number, yAngle: number): void;\n  \n  skewX(angle: number): void;\n  \n  skewY(angle: number): void;\n  \n  perspective(verticalDistance: number): void;\n}", "api_method_name": "TransformObject", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "matrix", "api_method_all": "matrix(scaleX: number, skewX: number, skewY: number, scaleY: number, translateX: number, translateY: number): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 41, "since": 6, "api_used": "\u662f", "lines": ["ata: {\n            \"matrix2\": JSON.stringify(m", "x2\": JSON.stringify(matrix2),\n            \"mat", "Matrix4 from '@ohos.matrix4'\nimport prompt fro", "nterY:50})\n  @State matrix6: object = Matrix4.", "y()));\n        this.matrix2 = Matrix4.identity", " }).copy()\n  @State matrix4: object = Matrix4.", "late(eventData.data.matrix2)\n          .copy()", "[100, 10])\n  @State matrix2: object = Matrix4.", " console.info(\"this.matrix value is not\");\n   ", " if (eventData.data.matrix2 != null && eventDa", "Matrix4 from '@ohos.matrix4'\n\n@Entry\n@Componen", " }).copy()\n  @State matrix3: object = Matrix4.", "cale(eventData.data.matrix3).copy();\n      } e", "late(eventData.data.matrix2).copy();\n        c", ", z: 30 })\n  @State matrix1: object= Matrix4.i", " console.info(\"this.matrix2 value is\" + Matrix", " console.info(\"this.matrix3 value is\");\n      ", "l && eventData.data.matrix3 != null) {\n       ", "bj.$attrs.transform.matrix)\n        .assertEqu", "pg').transform(this.matrix4)\n        .padding(", "bj.$attrs.transform.matrix)\n      .assertNotNu", "JSON.stringify(this.matrix1), duration: 200 })", "pect(eventData.data.matrix1).assertEqual(\"[100", "ep(1000);\n      let matrix2 = {\n        x: 400", "atrix2.combine(this.matrix3))\n        .width(\"", "angle:30})\n  @State matrix5: object = Matrix4.", "late(eventData.data.matrix2).copy()));\n       ", " is\");\n        this.matrix3 = Matrix4.identity", "pg').transform(this.matrix5)\n        .padding(", " {\n                \"matrix1\": \"[100, 10]\",\n   ", "rix2),\n            \"matrix3\": JSON.stringify(m", "pg').transform(this.matrix6)\n        .width(\"4", "    .transform(this.matrix2.combine(this.matri", "      .assertEqual('matrix')\n      expect(obj.", "0\n      }\n      let matrix3 = {\n        x: 2\n ", "x3\": JSON.stringify(matrix3)\n          }\n     "], "files": ["ohosPrompt.ets", "transForm.ets", "OhosMatrix4Jsunit.test.ets", "OhosPromptJsunit.test.ets", "ohosMatrix4.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "matrix3d", "api_method_all": "matrix3d(\n    n00: number,\n    n01: number,\n    n02: number,\n    n03: number,\n    n10: number,\n    n11: number,\n    n12: number,\n    n13: number,\n    n20: number,\n    n21: number,\n    n22: number,\n    n23: number,\n    n30: number,\n    n31: number,\n    n32: number,\n    n33: number,\n  ): void;", "api_type": "", "api_args_count": 16, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "translate", "api_method_all": "translate(x: number, y: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 280, "since": 6, "api_used": "\u662f", "lines": ["(Matrix4.identity().translate(eventData.data.matr", "     Row()\n        .translate(this.transformValue", "form: {\n            translate: '-120px',\n        ", "tate')\n\n      Text('translate').width('10%').font", "entity()\n          .translate(eventData.data.matr", "form: {\n            translateX: '100px',\n        ", " Matrix4.identity().translate({ x: 300 }).copy()\n", "'gestureMode')\n    .translate({ x: this.offsetX, ", "('PanGesture')\n    .translate({ x: this.offsetX, ", "Transform();\n  }\n\n  translate() {\n    this.contex", " Matrix4.identity().translate({x:100, y:200, z:30", "e: 300\n  }\n  @State translateValue: object= { x: ", " Matrix4.identity().translate(eventData.data.matr", " }).margin(80)\n    .translate({ x: this.offsetX, ", ");\n    this.context.translate(50, 50);\n    this.c", "tate')\n\n      Text('translate').width('90%').font", "100px',\n            translateY: '0px',\n          ", " '0px',\n            translateZ: '20px',\n         ", "form: {\n            translateX: '0px',\n          ", "(Matrix4.identity().translate({ x: 100, y: 100, z", " Matrix4.identity().translate({ x: 100, y: 100, z", "\n              this.translate();\n              th", " '0px',\n            translateY: '5px',\n          "], "files": ["animateTransformProps.test.js", "PanGesture.ets", "panDirection.ets", "pathProps.test.js", "rectProps.test.js", "svgProps.test.js", "polygonProps.test.js", "circleProps.test.js", "polylineProps.test.js", "transForm.ets", "ellipseProps.test.js", "gestureMode.ets", "index.js", "canvas.ets", "ohosMatrix4.ets", "lineProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "translate3d", "api_method_all": "translate3d(x: number, y: number, z: number): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "translateX", "api_method_all": "translateX(x: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 82, "since": 6, "api_used": "\u662f", "lines": [" transform: {\n      translateX: '100px',\n      tra", "form: {\n            translateX: '0px',\n           ", " transform: {\n      translateX: '0px',\n      trans", "form: {\n            translateX: '100px',\n         "], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "translateY", "api_method_all": "translateY(y: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 82, "since": 6, "api_used": "\u662f", "lines": ["teX: '100px',\n      translateY: '0px',\n      trans", "100px',\n            translateY: '0px',\n           ", "lateX: '0px',\n      translateY: '5px',\n      rotat", " '0px',\n            translateY: '5px',\n           "], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "translateZ", "api_method_all": "translateZ(z: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 41, "since": 6, "api_used": "\u662f", "lines": [" '0px',\n            translateZ: '20px',\n          ", "lateY: '0px',\n      translateZ: '20px',\n      rota"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "scale", "api_method_all": "scale(x: number, y: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 1026, "since": 6, "api_used": "\u662f", "lines": ["(eventData.data.grayscaleValue != null) {\n   ", "RS_GRAYSCALE = 'grayscale'\nconst ATTRS_BLUR =", "  expect(obj.$attrs.scale.y).assertEqual('0.5", "   }\n      })\n    }.scale({ x: this.scale }).", "')\n\n      Text('grayscale').fontSize(15).font", "        .scale(this.scaleValue)\n        .widt", "ep(1000);\n      let scaleValue = { x: 1, y: 1", " eventData.data.grayscaleValue;\n      }\n     ", " Matrix4.identity().scale({ x: 3 }).copy()\n  ", "Y: 5 }\n  @State grayscaleValue: string= 10;\n ", "xpect(objNew.$attrs.scale.y).assertEqual('1.0", ".transitionTypeOne, scale: { x: 0, y: 1.0, z:", "  }.scale({ x: this.scale }).opacity(this.opa", "     \"scale\" : this.scale,\n              \"opa", "context.filter('grayscale(50%)');\n    this.co", "00, y: 5 }\n  @State scaleValue: object= { x: ", "arse(eventData.data.scaleValue);\n      }\n    ", " Matrix4.identity().scale(eventData.data.matr", "ue\": JSON.stringify(scaleValue)\n          }\n ", "  expect(obj.$attrs.scale.x).assertEqual('2.0", "ull) {\n        this.scaleValue = JSON.parse(e", "ata: {\n            \"scaleValue\": JSON.stringi", "ep(1000);\n      let scaleValue = {\n        x:", "xpect(objNew.$attrs.scale.x).assertEqual('1.0", "ate2')\n\n      Text('scale').width('90%').font", "nExample {\n  @State scale: number = 1\n  @Stat", ".transitionTypeTwo, scale: { x: 1.0, y: 0.0 }", "ayscale(`${this.grayscaleValue}`)\n        .ke", " if (eventData.data.scaleValue != null) {\n   ", "     Row()\n        .scale(this.scaleValue)\n  ", " {\n        this.grayscaleValue = eventData.da", "Example1 {\n  @State scale: number = 1\n  @Stat", "pect(obj.$attrs.grayscale).assertEqual(0);\n  ", "ht(40)\n        .grayscale(`${this.grayscaleVa", "a: {\n              \"scale\" : this.scale,\n    ", " Matrix4.identity().scale({x:5, y:1, z:1, cen"], "files": ["pageTransition2.ets", "pathProps.test.js", "circleProps.test.js", "OhosMatrix4Jsunit.test.ets", "canvas.ets", "ohosMatrix4.ets", "lineProps.test.js", "imageEffects.ets", "Constants.ets", "polylineProps.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "polygonProps.test.js", "index.js", "PageTransitionJsunit.test.ets", "animateTransformProps.test.js", "svgProps.test.js", "progressProps.test.js", "transition.ets", "transForm.ets", "sharedTransition.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "scale3d", "api_method_all": "scale3d(x: number, y: number, z: number): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "scaleX", "api_method_all": "scaleX(x: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 82, "since": 6, "api_used": "\u662f", "lines": ["30deg',\n            scaleX:1,\n            scal", "10deg',\n            scaleX:0.5,\n            sc", "ateY:'10deg',\n      scaleX:0.5,\n      scaleY:0", "ateZ:'30deg',\n      scaleX:1,\n      scaleY:1,\n"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "scaleY", "api_method_all": "scaleY(y: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 82, "since": 6, "api_used": "\u662f", "lines": ["eX:0.5,\n            scaleY:0.7,\n            sk", "aleX:1,\n            scaleY:1,\n            scal", "  scaleX:0.5,\n      scaleY:0.7,\n      skewX:'2", "    scaleX:1,\n      scaleY:1,\n      scaleZ:2,\n"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "scaleZ", "api_method_all": "scaleZ(z: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 41, "since": 6, "api_used": "\u662f", "lines": ["aleY:1,\n            scaleZ:2,\n            skew", "    scaleY:1,\n      scaleZ:2,\n      skewX:'0',"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "rotate", "api_method_all": "rotate(angle: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 392, "since": 4, "api_used": "\u662f", "lines": [" getInspectorByKey('rotate9');\n      let obj =", "  expect(obj.$attrs.rotate.angle).assertEqual(", "  expect(obj.$attrs.rotate.centerY).assertEqua", "(100)\n        .key('rotate8')\n      Image('/im", "xpect(objNew.$attrs.rotate.x).assertEqual('2.0", " getInspectorByKey('rotate');\n      let obj = ", "10 })\n        .key('rotate2')\n\n      Text('sca", " getInspectorByKey('rotate8');\n      let obj =", "  expect(obj.$attrs.rotate.z).assertEqual('1.0", "sMatrix4 {\n  @State rotateValue: object= {\n   ", "EEEE)\n        .key('rotate3')\n\n      Text('Mat", "xpect(objNew.$attrs.rotate.centerX).assertEqua", "(100)\n        .key('rotate7')\n      Image('/im", " getInspectorByKey('rotate');\n      let objNew", "ify(sendEventByKey('rotate5', 10, \"\")));\n     ", "0 }))\n        .key('rotate4')\n    }.width('100", "xpect(objNew.$attrs.rotate.y).assertEqual('2.0", " if (eventData.data.rotateValue != null) {\n   ", "       .rotate(this.rotateValue)\n        .widt", " 5 })\n        .key('rotate6')\n      Image('/im", "ull) {\n        this.rotateValue = JSON.parse(e", "umn() {\n      Text('rotate').width('90%').font", " getInspectorByKey('rotate6');\n      let objNe", "     Row()\n        .rotate(this.rotateValue)\n ", "arse(eventData.data.rotateValue);\n      }\n    ", "EEEE)\n        .key('rotate')\n\n      Text('tran", " getInspectorByKey('rotate3');\n      let objNe", "mExample {\n  @State rotateValue: object= {\n   ", "0 }))\n        .key('rotate4')\n      Button(\"ge", "ep(1000);\n      let rotateValue = {x: 2, y: 2,", "ata: {\n            \"rotateValue\": JSON.stringi", "ue\": JSON.stringify(rotateValue)\n          }\n ", "xpect(objNew.$attrs.rotate.centerY).assertEqua", "xpect(objNew.$attrs.rotate.z).assertEqual('2.0", "  expect(obj.$attrs.rotate.y).assertEqual('1.0", "  expect(obj.$attrs.rotate.x).assertEqual('1.0", "  expect(obj.$attrs.rotate.centerX).assertEqua", " Matrix4.identity().rotate({x:1, y:1, z:2, ang", "(100)\n        .key('rotate9')\n    }.width('100", " getInspectorByKey('rotate7');\n      let obj =", "olor(0x2788D9).key('rotate5')\n      Image('/im", "umn() {\n      Text('rotate').width('10%').font"], "files": ["ohosPrompt.ets", "pathProps.test.js", "circleProps.test.js", "OhosMatrix4Jsunit.test.ets", "canvas.ets", "ohosMatrix4.ets", "lineProps.test.js", "polylineProps.test.js", "OhosPromptJsunit.test.ets", "ellipseProps.test.js", "TransFormJsunit.test.ets", "polygonProps.test.js", "index.js", "animateTransformProps.test.js", "tspanProps.test.js", "svgProps.test.js", "animateMotionProps.test.js", "svgTextProps.test.js", "transForm.ets", "motionPath.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "rotate3d", "api_method_all": "rotate3d(x: number, y: number, z: number, angle: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "rotateX", "api_method_all": "rotateX(angle: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 82, "since": 4, "api_used": "\u662f", "lines": [" '5px',\n            rotateX:'10deg',\n          ", "'20px',\n            rotateX:'0deg',\n           ", "lateY: '5px',\n      rotateX:'10deg',\n      rota", "ateZ: '20px',\n      rotateX:'0deg',\n      rotat"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "rotateY", "api_method_all": "rotateY(angle: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 82, "since": 4, "api_used": "\u662f", "lines": ["ateX:'10deg',\n      rotateY:'10deg',\n      scal", "tateX:'0deg',\n      rotateY:'0deg',\n      rotat", "10deg',\n            rotateY:'10deg',\n          ", "'0deg',\n            rotateY:'0deg',\n           "], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "rotateZ", "api_method_all": "rotateZ(angle: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 41, "since": 6, "api_used": "\u662f", "lines": ["tateY:'0deg',\n      rotateZ:'30deg',\n      scal", "'0deg',\n            rotateZ:'30deg',\n          "], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "skew", "api_method_all": "skew(xAngle: number, yAngle: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 265, "since": 6, "api_used": "\u662f", "lines": ["le:0.2,\n            skew:'40deg'\n        },\n", "eY:0.7,\n            skewX:'22deg',\n         ", "wY:'0',\n            skewZ:'30deg'\n        },", "  scaleY:0.7,\n      skewX:'22deg',\n      ske", "wX:'0',\n            skewY:'0',\n            s", "aleZ:2,\n            skewX:'0',\n            s", "   scale:0.2,\n      skew:'40deg'\n    },\n    ", "22deg',\n            skewY:'30deg'\n        },", "kewX:'22deg',\n      skewY:'30deg'\n    },\n   ", "    scaleZ:2,\n      skewX:'0',\n      skewY:'", "   skewY:'0',\n      skewZ:'30deg'\n    },\n   ", "   skewX:'0',\n      skewY:'0',\n      skewZ:'"], "files": ["animateTransformProps.test.js", "pathProps.test.js", "rectProps.test.js", "svgProps.test.js", "polygonProps.test.js", "circleProps.test.js", "polylineProps.test.js", "index.js", "ellipseProps.test.js", "lineProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "skewX", "api_method_all": "skewX(angle: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 91, "since": 6, "api_used": "\u662f", "lines": ["  scaleY:0.7,\n      skewX:'22deg',\n      skew", "aleZ:2,\n            skewX:'0',\n            sk", "    scaleZ:2,\n      skewX:'0',\n      skewY:'0", "eY:0.7,\n            skewX:'22deg',\n          "], "files": ["animateTransformProps.test.js", "pathProps.test.js", "rectProps.test.js", "svgProps.test.js", "polygonProps.test.js", "circleProps.test.js", "polylineProps.test.js", "index.js", "ellipseProps.test.js", "lineProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "skewY", "api_method_all": "skewY(angle: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 91, "since": 6, "api_used": "\u662f", "lines": ["22deg',\n            skewY:'30deg'\n        },\n", "kewX:'22deg',\n      skewY:'30deg'\n    },\n    ", "wX:'0',\n            skewY:'0',\n            sk", "   skewX:'0',\n      skewY:'0',\n      skewZ:'3"], "files": ["animateTransformProps.test.js", "pathProps.test.js", "rectProps.test.js", "svgProps.test.js", "polygonProps.test.js", "circleProps.test.js", "polylineProps.test.js", "index.js", "ellipseProps.test.js", "lineProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TransformObject", "api_method_name": "perspective", "api_method_all": "perspective(verticalDistance: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateOptions", "api_method_all": "export interface AnimateOptions {\n  \n  duration: number;\n\n  \n  easing: string;\n\n  \n  delay: number;\n\n  \n  iterations: number | string;\n\n  \n  direction: \"normal\" | \"reverse\" | \"alternate\" | \"alternate-reverse\";\n\n  \n  fill: \"none\" | \"forwards\" | \"backwards\" | \"both\";\n}", "api_method_name": "AnimateOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateOptions", "api_method_name": "duration", "api_method_all": "duration: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 240, "since": 4, "api_used": "\u662f", "lines": ["reateAnimator({\n    duration: 3000,\n    fill: 'f", "ata: {\n            \"duration\": \"nan\"\n          }", "xpect(objNew.$attrs.duration).assertEqual('500.0", "ull) {\n        this.duration = parseInt(eventDat", "he text is hidden', duration: 2000 })\n          ", "nsole.info(\"button6 duration value is : \" + this", "value is : \" + this.duration)\n          animateT", "xpect(objNew.$attrs.duration).assertEqual('nan')", "ata: {\n            \"duration\": \"500\"\n          }", "        animateTo({ duration: this.duration }, (", "To({ duration: this.duration }, () => {\n        ", "gify(this.matrix1), duration: 200 })\n          t", "nsole.info(\"button6 duration test animateTo STAR", " if (eventData.data.duration != null) {\n        ", "3.jpg',\n            duration: 500,\n            w", "ssage: \"sucessful\", duration: 200 })\n          t", "     .duration(this.duration)\n      .vertical(th", "s = {\n              duration: 5000,\n            ", "        animateTo({ duration: 1000 }, () => {\n  ", "nsole.info(\"button1 duration test animateTo STAR", "nsole.info(\"button1 duration value is : \" + this", " {\n                \"duration\": this.duration,\n  ", "an = false\n  @State duration: number = 100\n  @St", "2.jpg',\n            duration: 500,\n            w", "options = {\n        duration: 2000,\n        iter", "   \"duration\": this.duration,\n              }\n  ", "  expect(obj.$attrs.duration).assertEqual('1000.", "4.jpg',\n            duration: 500,\n            w", "nsole.info(\"button7 duration test animateTo STAR", "eInt(eventData.data.duration);\n      }\n      if ", "an = false\n  @State duration: number = 1000\n  @S", "nsole.info(\"button7 duration value is : \" + this", "The text is shown', duration: 2000 })\n          ", "p(this.loop)\n      .duration(this.duration)\n    ", "1.jpg',\n            duration: 500,\n            w"], "files": ["animate.ets", "pageTransition2.ets", "ohosPrompt.ets", "imageAnimatorProps.test.js", "ohosMatrix4.ets", "swiper.ets", "appear.ets", "animationStatus.ets", "fillMode.ets", "curves.ets", "chartProps.test.js", "SharedTransitionJsunit.test.ets", "pageTransition.ets", "geometryTransition.ets", "swiperProps.test.js", "AnimateJsunit.test.ets", "animatorOption.ets", "index.js", "SwiperJsunit.test.ets", "Swiper.ets", "basicabilityapi.test.js", "transition.ets", "sharedTransition.ets", "motionPath.ets", "imageAnimator.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateOptions", "api_method_name": "easing", "api_method_all": "easing: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 41, "since": 4, "api_used": "\u662f", "lines": ["duration: 1500,\n    easing: 'friction',\n    de", "  duration: 1500,\n  easing: 'friction',\n  dela"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateOptions", "api_method_name": "delay", "api_method_all": "delay: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 59, "since": 4, "api_used": "\u662f", "lines": [" 2000,\n            \"delay\": 5,\n            \"t", "\n                  \"delay\": this.delay,\n     ", "(indexEventOne.data.delay).assertEqual(5);\n  ", "ion: this.duration, delay: this.delay, type: ", "ber = 1000\n  @State delay: number = 0\n  @Stat", "ull) {\n        this.delay = eventData.data.de", " if (eventData.data.delay != null) {\n        ", "sing: 'friction',\n  delay: 100,\n  fill: 'forw", "      \"delay\": this.delay,\n                  ", "ay = eventData.data.delay;\n      }\n      if (", "ration, delay: this.delay, type: this.type })", "ng: 'friction',\n    delay: 100,\n    fill: 'fo"], "files": ["SharedTransitionJsunit.test.ets", "sharedTransition.ets", "basicabilityapi.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateOptions", "api_method_name": "iterations", "api_method_all": "iterations: number | string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 64, "since": 4, "api_used": "\u662f", "lines": ["=> {\n          this.iterations = -1\n        })\n   ", " {\n                \"iterations\": this.iterations\n ", "an = false\n  @State iterations: number = 1\n  @Stat", "        animateTo({ iterations: this.iteration }, ", "de).iterations(this.iterations).width(325).height(", "n = false;\n  @State iterations: number = 1;\n\n  bui", "ect(indexEvent.data.iterations).assertEqual(1);\n  ", "Mode(FillMode.None).iterations(this.iterations).wi", "ll: 'forwards',\n    iterations: 2,\n    direction: ", "ne).iterations(this.iterations).width(325).height(", "Mode(this.fillMode).iterations(this.iterations).wi", "fill: 'forwards',\n  iterations: 2,\n  direction: 'n", "=> {\n          this.iterations = 1\n          try {", " \"iterations\": this.iterations\n              }\n   ", "=> {\n          this.iterations = 1\n        })\n    ", "=> {\n          this.iterations = -1\n          try ", " {\n                \"iterations\": this.iteration,\n ", "nsole.info(\"button3 iterations test animateTo STAR", "tion: 2000,\n        iterations: 1,\n        directi", "5000,\n              iterations: 2,\n              b"], "files": ["animate.ets", "ImageAnimatorJsunit.test.ets", "animationStatus.ets", "imageAnimator.ets", "animatorOption.ets", "index.js", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateOptions", "api_method_name": "direction", "api_method_all": "direction: \"normal\" | \"reverse\" | \"alternate\" | \"alternate-reverse\"", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 596, "since": 6, "api_used": "\u662f", "lines": ["lder() {\n    Flex({ direction: FlexDirection.Colu", "on = eventData.data.direction;\n        console.lo", "ata: {\n            \"direction\": Direction.Ltr\n   ", "ll: 'forwards',\n    direction: \"normal\",\n    begi", " if (eventData.data.direction != null) {\n        ", "uild() {\n    Flex({ direction: FlexDirection.Colu", " angle: 80,\n        direction: GradientDirection.", "ion: \" + obj.$attrs.direction);\n      expect(obj.", "'90%')\n      Flex({ direction: FlexDirection.Row,", "  expect(obj.$attrs.direction).assertEqual('Direc", ".$attrs.constructor.direction).assertEqual('FlexD", " {\n    Flex({\n      direction: FlexDirection.Colu", "    .direction(this.direction)\n        .key('rowD", "gin(5)\n      Flex({ direction: FlexDirection.Row,", "dth('90%')\n        .direction(this.direction)\n   ", "  events_emitter.on(directionChangeEvent, this.st", "    Text('slider in direction set').fontSize(9).f", "   Text('slider out direction set').fontSize(9).f", ".InSet,\n            direction: this.decorationVal", ".TopStart;\n  @State direction: Direction = Direct", "gn')\n\n        Text('direction').fontSize(20).font", "ction value\" + this.direction);\n      }\n    }\n  }", "'90%')\n      Flex({ direction: FlexDirection.Row ", "xExample {\n  @State direction: FlexDirection = Fl", "umber = 3;\n  @State direction: Axis = Axis.Horizo", "weekStyle)\n        .direction(this.direction)\n   ", "uild() {\n    Flex({ direction: FlexDirection.Row,", "OutSet,\n            direction: Axis.Vertical\n    ", " ATTRS_DIRECTION = 'direction'\nconst ATTRS_ALIGN ", "\n    angle: 90,\n    direction: GradientDirection.", "rations: 1,\n        direction: 'alternate',\n     ", " if (eventData.data.direction) {\n        this.dir", "CallBack);\n\n    let directionChangeEvent = {\n    ", "ion) {\n        this.direction = eventData.data.di", "ull) {\n        this.direction = eventData.data.di", "on = eventData.data.direction;\n      } else if (e", ".log(\"Calendar page direction value\" + this.direc", "    .direction(this.direction)\n        .backgroun", "ttrs.linearGradient.direction).assertEqual('Gradi"], "files": ["systemRouterA.ets", "longPressGesture.ets", "canvas2.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "Qrcode.ets", "imageFit.ets", "Span.ets", "richText.ets", "Progress.ets", "PositionSettingJsunit.test.ets", "geometryTransition.ets", "marquee.ets", "Rating.ets", "Divider.ets", "scrollBar.ets", "CalendarJsunit.test.ets", "transition.ets", "Image.ets", "List.test.ets", "button.ets", "touch.ets", "DirectionJsunit.test.ets", "Slider.ets", "Text.ets", "Counter.ets", "Stack.ets", "bindMenu.ets", "TextJsunit.test.ets", "Blank.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "ScrollerBarJsunit.test.ets", "text.ets", "positionSetting.ets", "animatorOption.ets", "tapGesture.ets", "FlexJsunit.test.ets", "flexDirection.ets", "index.ets", "systemRouterB.ets", "PanGesture.ets", "image.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "flex.ets", "marqueeProps.test.js", "PatternLock.ets", "textPickerDialog.ets", "gridPage.ets", "AlphabetIndexer.ets", "ohosRouterB.ets", "ColumnSplit.ets", "textClock.ets", "videoProps.test.js", "BackgroundJsunit.test.ets", "AppStorage.ets", "GridContainer.ets", "dragEvent2.ets", "flexWrap.ets", "direction.ets", "gradientDirection.ets", "calendar.ets", "dragEvent.ets", "Button.ets", "fontWeight.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "canvas.ets", "bindContextMenu.ets", "divider.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "Constants.ets", "rating.ets", "GradientDirectionJsunit.test.ets", "DataPanel.ets", "FormComponentPage.ets", "RowJsunit.test.ets", "index.js", "ohosRouterA.ets", "Link.ets", "slider.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "gestureMode.ets", "ScrollBar.ets", "Badge.ets", "colorGradient.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimateOptions", "api_method_name": "fill", "api_method_all": "fill: \"none\" | \"forwards\" | \"backwards\" | \"both\"", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1166, "since": 4, "api_used": "\u662f", "lines": [");\n    });\n\n    it('fillModeTest_0200', 0, a", "pped\n          this.fillMode = FillMode.None", "   \"fillMode\": this.fillMode\n              }", "      console.info(\"fillModeTest_0300 get st", "s));\n        if (!('fillMode' == pages.name)", "        uri: 'pages/fillMode',\n      }\n     ", "      console.info(\"fillModeTest_0200 click ", "preDecode)\n        .fillMode(this.fillMode).", " {\n                \"fillMode\": this.fillMode", "      console.info('fillModeTest_0200 START'", "nfo('beforeEach get fillMode state pages:' +", "      console.info('fillModeTest_0200 END');", "ning\n          this.fillMode = FillMode.Back", ");\n    });\n\n    it('fillModeTest_0100', 0, a", "      console.info(\"fillModeTest_0200 get st", "    Rect()\n        .fill(Color.Gray)\n       ", "      console.info('fillModeTest_0300 START'", "used\n          this.fillMode = FillMode.Both", "      console.info(\"fillModeTest_0100 get st", "      console.info('fillModeTest beforeEach ", "      console.info('fillModeTest_0100 END');", "or('beforeEach push fillMode page error:' + ", "number = 0\n  @State fillMode: FillMode = Fil", "ect(indexEvent.data.fillMode).assertEqual(Fi", "     .fillMode(this.fillMode).iterations(thi", "      console.info(\"fillModeTest_0100 click ", "      console.info('fillMode test after each", "      console.info('fillModeTest_0100 START'", "t.test.ets';\nimport fillModeJsunit from './F", "   Text('background fill the box(Cover)').fo", "rt default function fillModeJsunit(){\n  desc", "      console.info(\"fillModeTest_0200 on eve", " Ellipse()\n        .fill(Color.Pink)\n       ", "fo('beforeEach push fillMode page result:' +", "      console.info(\"fillModeTest_0300 on eve", "y\n@Component\nstruct fillModeExample {\n  @Sta", "      console.info(\"fillModeTest_0300 click ", "      console.info('fillModeTest_0300 END');", "   Text('background fill the box(Contain)').", "nfo('beforeEach get fillMode state pages.nam", ");\n    });\n\n    it('fillModeTest_0300', 0, a", "unit(){\n  describe('fillModeTest', function ", "  selectJsunit();\n  fillModeJsunit();\n  enum", "      console.info(\"fillModeTest_0100 on eve"], "files": ["ImageJsunit.test.ets", "Shape.ets", "pathProps.test.js", "circleProps.test.js", "imageAnimatorProps.test.js", "background.ets", "canvas2.ets", "ShapeJsunit.test.ets", "canvas.ets", "ImageAnimatorJsunit.test.ets", "polylineProps.test.js", "animationStatus.ets", "fillMode.ets", "ellipseProps.test.js", "GestureModeJsunit.test.ets", "touchAble.ets", "polygonProps.test.js", "animatorOption.ets", "enumsLineCapStyle.ets", "index.js", "backgroundAndSizeSetting.ets", "animateTransformProps.test.js", "tspanProps.test.js", "svgProps.test.js", "FillModeJsunit.test.ets", "shape.ets", "animateMotionProps.test.js", "Image.ets", "svgTextProps.test.js", "textPathProps.test.js", "imageAnimator.ets", "List.test.ets", "rectProps.test.js", "animateProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_all": "export interface AnimationResult {\n  \n  finished: boolean;\n  \n  pending: boolean;\n  \n  playstate: string;\n  \n  startTime: number;\n  \n  play(): void;\n  \n  finish(): void;\n  \n  pause(): void;\n  \n  cancel(): void;\n  \n  reverse(): void;\n  \n  onstart: () => void;\n  \n  onfinish: () => void;\n  \n  oncancel: () => void;\n  \n  onrepeat: () => void;\n}", "api_method_name": "AnimationResult", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "play", "api_method_all": "play(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 207, "since": 4, "api_used": "\u662f", "lines": [" {\n                \"playMode\": this.playMode", "  console.info(\"get playMode state pages.nam", "displayMode(this.displayMode)\n      .display", "xpect(obj.$attrs.displayPriority).assertEqua", "      console.info(\"playMode beforeEach star", "tConstraints003] displayPriority: \" + obj.$a", "rt default function playModeJsunit(){\n  desc", "console.error(\"push playMode page error:\" + ", " (eventData.data.displayPriority) {\n        ", "      console.info(\"playModeTest_0100 click ", "      console.info('playModeTest_0100 START'", "      console.info(\"playModeTest_0100 get st", "tConstraints004] displayPriority: \" + obj.$a", "b3)\n\n      Text('displayPriority 4').fontSiz", "=> {\n          this.playMode = PlayMode.Alte", "unit(){\n  describe('playModeTest', function ", "playMode)\n      .displayCount(this.displayCo", "     this.animation.play();\n    });\n  }\n\n  b", "SPLAYPRIORITY = 'displayPriority'\nconst ATTR", "     this.animation.play();\n          });\n  ", ");\n    });\n\n    it('playModeTest_0100', 0, a", "ber = 1\n  @State displayCount: number = 3\n  ", ": \" + obj.$attrs.displayPriority);\n      exp", ": number = SwiperDisplayMode.AutoLinear\n  @S", "      console.info(\"playMode after each call", "ber = 3\n  @State displayMode: number = Swipe", "temSpace)\n      .displayMode(this.displayMod", "t.test.ets';\nimport playModeJsunit from './P", "  console.info(\"get playMode state pages:\" +", "{\n          Button('play').borderRadius(8).b", "tInspectorByKey('displayPriority');\n      co", "s));\n        if (!(\"playMode\" == pages.name)", ": {\n            \"displayPriority\": 5\n       ", " console.info(\"push playMode page result:\" +", "   \"playMode\": this.playMode,\n              ", "      console.info(\"playModeTest_0100 on eve", ")\n              .displayPriority(item.priori", "ept(indexEvent.data.playMode).assertEqual(Pl", "= eventData.data.displayPriority;\n        th", "        uri: 'pages/playMode',\n      }\n     ", "eExample {\n  @State playMode:PlayMode = Play", "CapStyleJsunit();\n  playModeJsunit();\n  Gest", "isplayCount(this.displayCount)\n      .effect", "           .key('displayPriority')\n         "], "files": ["animate.ets", "index.js", "videoProps.test.js", "layoutConstraints.ets", "PlayModeJsunit.test.ets", "swiperProps.test.js", "swiper.ets", "AnimateJsunit.test.ets", "Constants.ets", "LayoutConstraintsJsunit.test.ets", "animatorOption.ets", "playMode.ets", "List.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "finish", "api_method_all": "finish(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 93, "since": 4, "api_used": "\u662f", "lines": ["y()\n    animation.onfinish = function(){\n     ", "     this.animation.finish();\n          });\n  ", ": 'The animation is finished.'\n      });\n    }", "   this.animation.onfinish(() => {\n           ", ": 'The animation is finished.'\n            });", "          message: 'finish'\n              })\n ", " })\n        Button('finishAnimation')\n        ", "        animation.onfinish = function(){\n     ", "    console.info('Onfinish current action stat", ";\n          Button('finish').borderRadius(8).b", "is.swiperController.finishAnimation()\n        ", "    console.info(\"Onfinish start to emit actio", "    console.info(\"Onfinish emit action state e"], "files": ["Swiper.ets", "marquee.ets", "animatorOption.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "pause", "api_method_all": "pause(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 56, "since": 4, "api_used": "\u662f", "lines": ["s.myVideoController.pause();\n        });\n    ", "s.myTimerController.pause();\n        });\n    ", "     this.animation.pause();\n          });\n  ", "          animation.pause()\n        }, 1000)\n", "     });\n    },\n    pause(){\n\n        prompt.", "{\n          Button('pause').borderRadius(8).b", "})\n\n        Button('pause').key('button2').wi", "> {\n      animation.pause()\n    }, 1000)\n\n   ", " })\n        Button('pause').key('button1').wi", "this.$refs.animator.pause();\n    },\n    handl", "});\n        Button(\"pause\").onClick(() => {\n "], "files": ["Video.ets", "video.ets", "textTimer.ets", "animationStatus.ets", "imageAnimator.ets", "animatorOption.ets", "index.js", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "cancel", "api_method_all": "cancel(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 170, "since": 4, "api_used": "\u662f", "lines": ["()\n            this.cancel()\n          }).back", "     },\n            cancel: function() {\n     ", "is.onAccept }),\n    cancel: this.existApp,\n   ", ") {\n        Button('cancel')\n          .onClic", "        animation.oncancel = function(){\n     ", "          animation.cancel()\n        }, 1500)\n", "{\n          Button('cancel').borderRadius(8).b", "mDialogController\n  cancel: () => void\n  confi", "       },\n          cancel: function() {\n     ", "g('sequence gesture canceled')\n      })\n    )\n", "     },\n            cancel: () => {\n          ", "onsole.info('dialog cancel callback');\n       ", "            value: 'cancel',\n                 ", "this.currentTest = 'cancel'\n            }\n    ", ": 'The animation is canceled.'\n            });", "console.log('dialog cancel callback');\n       ", " },\n                cancel: () => {\n          ", "stomDialogExample({ cancel: this.onCancel, con", "     this.animation.cancel();\n          });\n  ", "ture current action cancel\");\n      })\n    )\n "], "files": ["index.js", "ohosPrompt.ets", "AlertDialog.ets", "WebPage.ets", "systemPrompt.ets", "longPressGesture.ets", "animatorOption.ets", "gestureMode.ets", "basicabilityapi.test.js", "customDialogController.ets", "CustomDialog.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "reverse", "api_method_all": "reverse(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 70, "since": 6, "api_used": "\u662f", "lines": ["          animation.reverse()\n        }, 500)\n\n", "state).reverse(this.reverse).fixedSize(this.fix", ") {\n        Button('reverse').key('button3').wi", "s.Initial;\n  @State reverse: boolean = false;\n ", "state).reverse(this.reverse).fixedSize(false).p", "lMode.None\n  @State reverse: boolean = false\n  ", "     this.animation.reverse();\n          });\n  ", "> {\n      animation.reverse()\n    }, 500)\n\n    ", ") {\n        Button('reverse').width(100).paddin", ";\n          Button('reverse').borderRadius(8).b", "his.reverse = !this.reverse\n        })\n        ", "his.reverse = !this.reverse\n          try {\n   ", "=> {\n          this.reverse = !this.reverse\n   ", " .state(this.state).reverse(this.reverse).fixed", "rizontal,\n          reverse: false,\n          s"], "files": ["index.js", "animateMotionProps.test.js", "imageAnimatorProps.test.js", "animationStatus.ets", "imageAnimator.ets", "Slider.ets", "animatorOption.ets", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "onstart", "api_method_all": "onstart: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "onfinish", "api_method_all": "onfinish: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 42, "since": 4, "api_used": "\u662f", "lines": [")\n        animation.onfinish = function(){\n     ", ";\n    },\n    animationfinish(event){\n        pro", "   message: 'animationfinish'\n        });\n    },", "     this.animation.onfinish(() => {\n           ", "lay()\n    animation.onfinish = function(){\n     "], "files": ["animatorOption.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "oncancel", "api_method_all": "oncancel: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 49, "since": 4, "api_used": "\u662f", "lines": ["ected })\n  },\n  textoncancel(e) {\n    prompt.sho", " message:\"text: textoncancel\" })\n  },\n  dateonch", "e.day })\n  },\n  dateoncancel() {\n    prompt.show", "  };\n\n    animation.oncancel = function(){\n     ", " message:\"date: dateoncancel\" })\n  },\n  timeonch", "({ message:\"datetimeoncancel\" })\n  },\n  multitex", "\n\n        animation.oncancel = function(){\n     ", "e })\n  },\n  datetimeoncancel() {\n    prompt.show", " })\n  },\n  multitextoncancel() {\n    prompt.show", "{ message:\"multitextoncancel\" })\n  },\n  columnch", "oast({ message:\"timeoncancel\" })\n  },\n  datetime", "te })\n    }},\n  timeoncancel() {\n    prompt.show"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "onrepeat", "api_method_all": "onrepeat: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 40, "since": 4, "api_used": "\u662f", "lines": ["\n    this.animation.onrepeat(() => {\n      var r", "\n\n        animation.onrepeat = function(){\n     ", "  };\n\n    animation.onrepeat = function(){\n     "], "files": ["animatorOption.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "finished", "api_method_all": "finished: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 39, "since": 4, "api_used": "\u662f", "lines": [": 'The animation is finished.'\n            });\n ", ": 'The animation is finished.'\n      });\n    };\n"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "pending", "api_method_all": "pending: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 4, "api_used": "\u662f", "lines": ["      console.info('pendingIndex:' + pendingInd", "dex = {\n            pendingIndex: e.pendingInde", "ous((index: number, pendingIndex: number) => {\n", "o('pendingIndex:' + pendingIndex)\n    })\n    .o", "ext((index: number, pendingIndex: number) => {\n", "    pendingIndex: e.pendingIndex\n        }\n    ", "o('pendingIndex:' + pendingIndex)\n    })\n    .a"], "files": ["index.js", "Stepper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "playstate", "api_method_all": "playstate: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationResult", "api_method_name": "startTime", "api_method_all": "startTime: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Element", "api_method_all": "export interface Element {\n  \n  focus(obj?: FocusParamObj): void;\n\n  \n  rotation(obj?: FocusParamObj): void;\n\n  \n  animate(keyframes: Array<AnimateStyle>, options: AnimateOptions): AnimationResult;\n\n  \n  getBoundingClientRect(): RectObj;\n\n  \n  getInspector(): string;\n\n  \n  createIntersectionObserver(param: { ratios: Array<number> }): observer;\n\n  \n  addChild(child: Element): void;\n\n  \n  setAttribute(name: string, value: string): void;\n\n  \n  setStyle(name: string, value: string): boolean;\n}", "api_method_name": "Element", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Element", "api_method_name": "focus", "api_method_all": "focus(obj?: FocusParamObj): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 1260, "since": 3, "api_used": "\u662f", "lines": ["console.error(\"push focus page error:\" + err)", "t.test.ets';\nimport focusJsunit from './Focus", " '#87CEFA'\n  @State focusable: boolean = fals", "pNone,\n             focusablePropTrue : this.", "ue : null,\n         focusablePropFalse : null", "  console.info(\"get focus state pages.name:\" ", "le = eventData.data.focusable;\n      }\n    }\n", "st ATTRS_FOCUSED = 'focused'\nconst ATTRS_SCRO", "      console.info(\"focus page state change c", "ablePropTrue : this.focusablePropTrue,\n      ", " console.info(\"push focus page result:\" + JSO", "  console.info(\"get focus state pages:\" + JSO", "      console.info('focusTest_0100 START');\n ", "ne : null,\n         focusablePropTrue : null,", ");\n    });\n\n    it('focusTest_0100', 0, async", "ull) {\n        this.focusable = eventData.dat", "ayStyle({\n          focusedDayColor: Color.Re", "lor.Blue,\n          focusedAreaRadius: 20\n   ", "rd button cannot be focused'\n  @State oneButt", "s));\n        if (!(\"focus\" == pages.name)) {\n", "    .focusable(this.focusable)\n        .onFoc", "      console.info(\"focusTest_0100 start to p", "      console.info('focusTest_0100 END');\n   ", "se : null,\n         focusablePropNone : null,", " ATTRS_FOCUSABLE = 'focusable'\nconst ATTRS_CH", "      console.info(\"focus after each called\")", "\n  basicJsunit();\n  focusJsunit();\n  textArea", "r.Orange,\n          focusedAreaBackgroundColo", " if (eventData.data.focusable != null) {\n    ", "{\n    console.info('focus page show called');", "rt default function focusJsunit() {\n  describ", "      console.info(\"focus beforeEach start\");", "ata: {\n            \"focusable\": true\n        ", "        uri: 'pages/focus',\n      }\n      try", "  expect(obj.$attrs.focusable).assertEqual(tr", "       console.log(\"focusTest_0100 change com", "olor.Red,\n          focusedLunarColor: Color.", "lor.Black)\n        .focusable(this.focusable)"], "files": ["ratingProps.test.js", "listItemGroupProps.test.js", "formProps.test.js", "focus.ets", "tabContentProps.test.js", "marqueeProps.test.js", "textProps.test.js", "imageAnimatorProps.test.js", "buttonProps.test.js", "toolbarProps.test.js", "tabsProps.test.js", "pickerViewProps.test.js", "qrcodeProps.test.js", "stackProps.test.js", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "TouchAbleJsunit.test.ets", "Constants.ets", "refreshProps.test.js", "listItemProps.test.js", "searchProps.test.js", "chartProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "canvasProps.test.js", "sliderProps.test.js", "swiperProps.test.js", "toolbarItemProps.test.js", "videoProps.test.js", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "optionProps.test.js", "badgeProps.test.js", "pieceProps.test.js", "dialogProps.test.js", "imageProps.test.js", "listProps.test.js", "labelProps.test.js", "pickerProps.test.js", "progressProps.test.js", "selectProps.test.js", "textareaProps.test.js", "gridColProps.test.js", "Calendar.ets", "List.test.ets", "gridContainerProps.test.js", "stepperProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Element", "api_method_name": "rotation", "api_method_all": "rotation(obj?: FocusParamObj): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 2, "since": 4, "api_used": "\u662f", "lines": ["          message: 'rotation'\n        });\n    },", "     });\n    },\n    rotationTest(event){\n       "], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Element", "api_method_name": "animate", "api_method_all": "animate(keyframes: Array<AnimateStyle>, options: AnimateOptions): AnimationResult;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 275, "since": 4, "api_used": "\u662f", "lines": ["sole.info(\"button10 animateTo START\")\n         ", "ton12 duration test animateTo START\")\n         ", "nsole.info(\"button3 animateTo START\")\n         ", "is.curve)\n          animateTo({ curve: this.cur", "nsole.info(\"button5 animateTo START\")\n         ", "duration)\n          animateTo({ duration: this.", "sole.info(\"button12 animateTo START\")\n         ", "ton11 duration test animateTo START\")\n         ", "      console.info(\"animate page state change c", "\"button2 curve test animateTo START\")\n         ", "nsole.info(\"button9 animateTo START\")\n         ", "playmode)\n          animateTo({ PlayMode: this.", "\"button4 tempo test animateTo START\")\n         ", "nsole.info(\"button6 animateTo START\")\n         ", "        }\n          animateTo({ duration: 1000 ", "nsole.info(\"button4 animateTo START\")\n         ", "tton9 duration test animateTo START\")\n         ", "sole.info(\"button13 animateTo START\")\n         ", "tton5 playMode test animateTo START\")\n         ", "nsole.info(\"button1 animateTo START\")\n         ", "tton1 duration test animateTo START\")\n         ", "teration)\n          animateTo({ iterations: thi", "on3 iterations test animateTo START\")\n         ", "duration)\n          animateTo({ tempo: this.tem", "        }\n          animateTo({ duration: 4000,", "ton13 duration test animateTo START\")\n         ", "ton15 duration test animateTo START\")\n         ", "nsole.info(\"button8 animateTo START\")\n         ", "ton14 duration test animateTo START\")\n         ", "tton6 duration test animateTo START\")\n         ", "        }\n          animateTo({ duration: 3000 ", "tton7 duration test animateTo START\")\n         ", "sole.info(\"button14 animateTo START\")\n         ", "nsole.info(\"button2 animateTo START\")\n         ", "tton8 duration test animateTo START\")\n         ", "ton10 duration test animateTo START\")\n         ", "nsole.info(\"button7 animateTo START\")\n         ", "{\n    console.info('animate page show called');", "sole.info(\"button11 animateTo START\")\n         ", "sole.info(\"button15 animateTo START\")\n         "], "files": ["animate.ets", "animateTransformProps.test.js", "List.test.js", "geometryTransition.ets", "animateMotionProps.test.js", "transition.ets", "AnimateJsunit.test.ets", "commonComponentJsApi.test.js", "motionPath.ets", "index.js", "List.test.ets", "animateProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Element", "api_method_name": "getBoundingClientRect", "api_method_all": "getBoundingClientRect(): RectObj;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 39, "since": 6, "api_used": "\u662f", "lines": ["ar rect = function1.getBoundingClientRect();\n    var width = ", "ar rect = function1.getBoundingClientRect();\n        var widt"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Element", "api_method_name": "getInspector", "api_method_all": "getInspector(): string;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 3198, "since": 8, "api_used": "\u662f", "lines": ["      let strJson = getInspectorByKey('flexGrow');\n ", "      let strJson = getInspectorByKey('flexShrink');", "      let strJson = getInspectorByKey('flex');\n     ", "      let strJson = getInspectorByKey('gauge');\n    ", "      let strJson = getInspectorByKey('gridOffset');", "   let strJsonNew = getInspectorByKey('enabled');\n  ", "   let strJsonNew = getInspectorByKey('gauge');\n    ", "      let strJson = getInspectorByKey('flexBasis');\n", "      let strJson = getInspectorByKey('alignItemsCol", "      let strJson = getInspectorByKey('gridRow');\n  ", "      let strJson = getInspectorByKey('gridSpan');\n ", "      let strJson = getInspectorByKey('enabled');\n  ", "      let strJson = getInspectorByKey('alignSelf');\n", "      let strJson = getInspectorByKey('gridContainer", "      let strJson = getInspectorByKey('ellipse');\n  "], "files": ["ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "CounterJsunit.test.ets", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "ScrollBarJsunit.test.ets", "ColumnSplitJsunit.test.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "TextStyleJsunit.test.ets", "TextClockJsunit.test.ets", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "RichTextJsunit.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "FlexWrapJsunit.test.ets", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "ScrollerBarJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "TransitionJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "VisibilityJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "GridItem.test.ets", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "ColorGradientJsunit.test.ets", "MotionPathJsunit.test.ets", "Utils.ets", "ShapeJsunit.test.ets", "ToggleJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "ScrollJsunit.test.ets", "BackgroundAndSizeSettingJsunit.test.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "CircleJsunit.test.ets", "GradientDirectionJsunit.test.ets", "TransFormJsunit.test.ets", "GestureModeJsunit.test.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CheckboxJsunit.test.ets", "TextTimerJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "GridSettingsJsunit.test.ets", "index.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Element", "api_method_name": "createIntersectionObserver", "api_method_all": "createIntersectionObserver(param: { ratios: Array<number> }): observer;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 39, "since": 6, "api_used": "\u662f", "lines": ["bserver = function2.createIntersectionObserver({\n            ratio", "bserver = function2.createIntersectionObserver({\n      ratios: [0."], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Element", "api_method_name": "addChild", "api_method_all": "addChild(child: Element): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Element", "api_method_name": "setAttribute", "api_method_all": "setAttribute(name: string, value: string): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Element", "api_method_name": "setStyle", "api_method_all": "setStyle(name: string, value: string): boolean;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "observer", "api_method_all": "export interface observer {\n  \n  observe(callback: string): void;\n\n  \n  unobserve(): void;\n}", "api_method_name": "observer", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 156, "since": 6, "api_used": "\u662f", "lines": [" number\n    });\n    observer.observe((isVisible,", "        });\n        observer.observe((isVisible,", "ction2;\n        let observer = function2.createI", "unction2');\n    let observer = function2.createI", "    });\n    })\n\n    observer.unobserve()\n  },\n\n ", "        })\n\n        observer.unobserve()\n    },\n", "message: 'function2 observer:\\n' + 'isVisible--'", "ion2');\n        let observer = function2.createI"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "observer", "api_method_name": "observe", "api_method_all": "observe(callback: string): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 234, "since": 6, "api_used": "\u662f", "lines": ["        })\n\n        observer.unobserve()\n    },\n\n    functionTest3(", "        });\n        observer.observe((isVisible, ratio)=> {\n       ", "ion2');\n        let observer = function2.createIntersectionObserver", ");\n        observer.observe((isVisible, ratio)=> {\n            cons", "ction2;\n        let observer = function2.createIntersectionObserver", "message: 'function2 observer:\\n' + 'isVisible--' + isVisible + ',ra", "\n        observer.unobserve()\n    },\n\n    functionTest3(event){\n   "], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "observer", "api_method_name": "unobserve", "api_method_all": "unobserve(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 39, "since": 6, "api_used": "\u662f", "lines": [")\n\n        observer.unobserve()\n    },\n\n    funct", "   })\n\n    observer.unobserve()\n  },\n\n  functionT", ")\n\n        observer.unobserve()\n    },\n    functi"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationElement", "api_method_all": "export interface AnimationElement extends Element {\n  \n  play(): void;\n  \n  finish(): void;\n  \n  pause(): void;\n  \n  cancel(): void;\n  \n  reverse(): void;\n}", "api_method_name": "AnimationElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationElement", "api_method_name": "play", "api_method_all": "play(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 207, "since": 4, "api_used": "\u662f", "lines": [" {\n                \"playMode\": this.playMode", "  console.info(\"get playMode state pages.nam", "displayMode(this.displayMode)\n      .display", "xpect(obj.$attrs.displayPriority).assertEqua", "      console.info(\"playMode beforeEach star", "tConstraints003] displayPriority: \" + obj.$a", "rt default function playModeJsunit(){\n  desc", "console.error(\"push playMode page error:\" + ", " (eventData.data.displayPriority) {\n        ", "      console.info(\"playModeTest_0100 click ", "      console.info('playModeTest_0100 START'", "      console.info(\"playModeTest_0100 get st", "tConstraints004] displayPriority: \" + obj.$a", "b3)\n\n      Text('displayPriority 4').fontSiz", "=> {\n          this.playMode = PlayMode.Alte", "unit(){\n  describe('playModeTest', function ", "playMode)\n      .displayCount(this.displayCo", "     this.animation.play();\n    });\n  }\n\n  b", "SPLAYPRIORITY = 'displayPriority'\nconst ATTR", "     this.animation.play();\n          });\n  ", ");\n    });\n\n    it('playModeTest_0100', 0, a", "ber = 1\n  @State displayCount: number = 3\n  ", ": \" + obj.$attrs.displayPriority);\n      exp", ": number = SwiperDisplayMode.AutoLinear\n  @S", "      console.info(\"playMode after each call", "ber = 3\n  @State displayMode: number = Swipe", "temSpace)\n      .displayMode(this.displayMod", "t.test.ets';\nimport playModeJsunit from './P", "  console.info(\"get playMode state pages:\" +", "{\n          Button('play').borderRadius(8).b", "tInspectorByKey('displayPriority');\n      co", "s));\n        if (!(\"playMode\" == pages.name)", ": {\n            \"displayPriority\": 5\n       ", " console.info(\"push playMode page result:\" +", "   \"playMode\": this.playMode,\n              ", "      console.info(\"playModeTest_0100 on eve", ")\n              .displayPriority(item.priori", "ept(indexEvent.data.playMode).assertEqual(Pl", "= eventData.data.displayPriority;\n        th", "        uri: 'pages/playMode',\n      }\n     ", "eExample {\n  @State playMode:PlayMode = Play", "CapStyleJsunit();\n  playModeJsunit();\n  Gest", "isplayCount(this.displayCount)\n      .effect", "           .key('displayPriority')\n         "], "files": ["animate.ets", "index.js", "videoProps.test.js", "layoutConstraints.ets", "PlayModeJsunit.test.ets", "swiperProps.test.js", "swiper.ets", "AnimateJsunit.test.ets", "Constants.ets", "LayoutConstraintsJsunit.test.ets", "animatorOption.ets", "playMode.ets", "List.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationElement", "api_method_name": "finish", "api_method_all": "finish(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 93, "since": 4, "api_used": "\u662f", "lines": ["y()\n    animation.onfinish = function(){\n     ", "     this.animation.finish();\n          });\n  ", ": 'The animation is finished.'\n      });\n    }", "   this.animation.onfinish(() => {\n           ", ": 'The animation is finished.'\n            });", "          message: 'finish'\n              })\n ", " })\n        Button('finishAnimation')\n        ", "        animation.onfinish = function(){\n     ", "    console.info('Onfinish current action stat", ";\n          Button('finish').borderRadius(8).b", "is.swiperController.finishAnimation()\n        ", "    console.info(\"Onfinish start to emit actio", "    console.info(\"Onfinish emit action state e"], "files": ["Swiper.ets", "marquee.ets", "animatorOption.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationElement", "api_method_name": "pause", "api_method_all": "pause(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 56, "since": 4, "api_used": "\u662f", "lines": ["s.myVideoController.pause();\n        });\n    ", "s.myTimerController.pause();\n        });\n    ", "     this.animation.pause();\n          });\n  ", "          animation.pause()\n        }, 1000)\n", "     });\n    },\n    pause(){\n\n        prompt.", "{\n          Button('pause').borderRadius(8).b", "})\n\n        Button('pause').key('button2').wi", "> {\n      animation.pause()\n    }, 1000)\n\n   ", " })\n        Button('pause').key('button1').wi", "this.$refs.animator.pause();\n    },\n    handl", "});\n        Button(\"pause\").onClick(() => {\n "], "files": ["Video.ets", "video.ets", "textTimer.ets", "animationStatus.ets", "imageAnimator.ets", "animatorOption.ets", "index.js", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationElement", "api_method_name": "cancel", "api_method_all": "cancel(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 170, "since": 4, "api_used": "\u662f", "lines": ["()\n            this.cancel()\n          }).back", "     },\n            cancel: function() {\n     ", "is.onAccept }),\n    cancel: this.existApp,\n   ", ") {\n        Button('cancel')\n          .onClic", "        animation.oncancel = function(){\n     ", "          animation.cancel()\n        }, 1500)\n", "{\n          Button('cancel').borderRadius(8).b", "mDialogController\n  cancel: () => void\n  confi", "       },\n          cancel: function() {\n     ", "g('sequence gesture canceled')\n      })\n    )\n", "     },\n            cancel: () => {\n          ", "onsole.info('dialog cancel callback');\n       ", "            value: 'cancel',\n                 ", "this.currentTest = 'cancel'\n            }\n    ", ": 'The animation is canceled.'\n            });", "console.log('dialog cancel callback');\n       ", " },\n                cancel: () => {\n          ", "stomDialogExample({ cancel: this.onCancel, con", "     this.animation.cancel();\n          });\n  ", "ture current action cancel\");\n      })\n    )\n "], "files": ["index.js", "ohosPrompt.ets", "AlertDialog.ets", "WebPage.ets", "systemPrompt.ets", "longPressGesture.ets", "animatorOption.ets", "gestureMode.ets", "basicabilityapi.test.js", "customDialogController.ets", "CustomDialog.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AnimationElement", "api_method_name": "reverse", "api_method_all": "reverse(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 70, "since": 6, "api_used": "\u662f", "lines": ["          animation.reverse()\n        }, 500)\n\n", "state).reverse(this.reverse).fixedSize(this.fix", ") {\n        Button('reverse').key('button3').wi", "s.Initial;\n  @State reverse: boolean = false;\n ", "state).reverse(this.reverse).fixedSize(false).p", "lMode.None\n  @State reverse: boolean = false\n  ", "     this.animation.reverse();\n          });\n  ", "> {\n      animation.reverse()\n    }, 500)\n\n    ", ") {\n        Button('reverse').width(100).paddin", ";\n          Button('reverse').borderRadius(8).b", "his.reverse = !this.reverse\n        })\n        ", "his.reverse = !this.reverse\n          try {\n   ", "=> {\n          this.reverse = !this.reverse\n   ", " .state(this.state).reverse(this.reverse).fixed", "rizontal,\n          reverse: false,\n          s"], "files": ["index.js", "animateMotionProps.test.js", "imageAnimatorProps.test.js", "animationStatus.ets", "imageAnimator.ets", "Slider.ets", "animatorOption.ets", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollParam", "api_method_all": "export interface ScrollParam {\n  \n  dx?: number;\n\n  \n  dy?: number;\n\n  \n  smooth?: boolean;\n}", "api_method_name": "ScrollParam", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollParam", "api_method_name": "dx", "api_method_all": "dx?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 95, "since": 4, "api_used": "\u662f", "lines": ["ge = this.$element(\"dxPropPercentage\").get", "ctor()\n        this.dxPropLength = this.$e", "ram = {\n            dx:60,\n            dy:", "opNone,\n            dxPropLength : this.dx", ",\"Study\"],\n        idx: \"\"\n    },\n    allc", "}\n}\n\nlet Offset = { dx: 5, dy: 5 }\n\n@Entry", "ne = this.$element(\"dxPropNone\").getInspec", "rg) {\n        this.idx = arg\n    },\n    al", "tage: null,\n        dxPropNone : null,\n   ", "  dxPropNone : this.dxPropNone,\n          ", "    offset: {\n      dx: 100,\n      dy: 100", "rollParam = {\n      dx:60,\n      dy:0,\n   ", "ctor()\n        this.dxPropPercentage = thi", "entage,\n            dxPropNone : this.dxPr", "gth : null,\n        dxPropPercentage: null", "dxPropLength : this.dxPropLength,\n        ", "Length,\n            dxPropPercentage: this", "ist[i].id === this.idx) {\n                ", "th = this.$element(\"dxPropLength\").getInsp", "one : null,\n        dxPropLength : null,\n ", "ctor()\n        this.dxPropNone = this.$ele", "ropPercentage: this.dxPropPercentage,\n    "], "files": ["tspanProps.test.js", "svgTextProps.test.js", "index.js", "customDialogController.ets", "CustomDialog.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollParam", "api_method_name": "dy", "api_method_all": "dy?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 103, "since": 4, "api_used": "\u662f", "lines": ["dyPropLength : this.dyPropLength,\n        ", "ne = this.$element(\"dyPropNone\").getInspec", "opNone,\n            dyPropLength : this.dy", "ctor()\n        this.dyPropLength = this.$e", " dx:60,\n            dy:0,\n            smoo", "fff')\n        .onReady(() => {\n          t", "  dyPropNone : this.dyPropNone,\n          ", "e> source:</pre></body></html>\",\n         ", "t Offset = { dx: 5, dy: 5 }\n\n@Entry\n@Compo", "one : null,\n        dyPropLength : null,\n ", "    data: \"<html><body bgcolor=\\\"white\\\">S", "ge = this.$element(\"dyPropPercentage\").get", "entage,\n            dyPropNone : this.dyPr", "opPercentage : this.dyPropPercentage,\n    ", "ctor()\n        this.dyPropPercentage = thi", "th = this.$element(\"dyPropLength\").getInsp", "age : null,\n        dyPropNone : null,\n   ", "gth : null,\n        dyPropPercentage : nul", "\n      dx:60,\n      dy:0,\n      smooth:tru", "ctor()\n        this.dyPropNone = this.$ele", "Length,\n            dyPropPercentage : thi", "     dx: 100,\n      dy: 100\n    },\n  })\n\n ", ")\n            .onReady(() => {\n           "], "files": ["tspanProps.test.js", "global.ets", "WebPage.ets", "svgTextProps.test.js", "canvas2.ets", "index.js", "mediaquery.test.js", "canvas.ets", "customDialogController.ets", "CustomDialog.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollParam", "api_method_name": "smooth", "api_method_all": "smooth?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 32, "since": 4, "api_used": "\u662f", "lines": ["  dy:0,\n            smooth:true\n        }\n    ", "                    smooth: true,\n            ", ",\n      dy:0,\n      smooth:true\n    }\n    func"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CurrentOffsetResultValue", "api_method_all": "export interface CurrentOffsetResultValue {\n  \n  x: number;\n\n  \n  y: number;\n}", "api_method_name": "CurrentOffsetResultValue", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "CurrentOffsetResultValue", "api_method_name": "x", "api_method_all": "x: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 20226, "since": 3, "api_used": "\u662f", "lines": ["", "= eventData.data.flexBasis;\n      }\n     ", "3).backgroundColor(0x2788D9)\n      if (th", "mponent\nstruct AreaExample {\n  @State val", "\n        })\n      Text('new area is: \\n' ", "f (eventData.data.text != null) {\n       ", "\n  build() {\n    Flex({ direction: FlexDi", "      Button(this.text)\n        .key('ena", "isShow) {\n        Text(this.myText)\n     ", " value: string = 'Text';\n  @State size: s", "ue)\n        .key('text1')\n        .backgr", "nent\nstruct EllipseExample {\n  @State wid", "t({ message: 'The text is shown', duratio", "nent\nstruct EnabledExample {\n  @State ena", "\n  build() {\n    Flex({ justifyContent: F", " Column() {\n      Text(this.value)\n      ", "State direction: FlexDirection = FlexDire", "Component\nstruct FlexExample {\n  @State d", " (eventData.data.flexBasis != null) {\n   ", "      Text(this.myText)\n          .onAppe", "t({ message: 'The text is hidden', durati", "ze)\n        .key('text2')\n        .margin", "ngeAppear = 'Hide Text'\n            conso", "idth: string = \"200px\";\n  @State height: ", "mponent\nstruct FlexExample {\n  @State dir", "myText: string = 'Text for onAppear'\n\n  o", "0).backgroundColor(0x00FFFF)\n      }\n    ", " justifyContent: FlexAlign.Center }) {\n  ", "ngeAppear = 'Show Text'\n            conso", "tSize(9).fontColor(0xCCCCCC).width('90%')", " Column() {\n      Text('alignItems').font", "l) {\n        this.text = eventData.data.t", "onent\nstruct AppearExample {\n  @State isS", "  .backgroundColor(0x317aff)\n        .ena", " = true;\n  @State text: string = \"enable\"", " (eventData.data.flexGrow != null) {\n    ", ") {\n        this.flexBasis = eventData.da", ") {\n        this.flexGrow = eventData.dat", "r: string = 'Hide Text'\n  private myText:", "0).backgroundColor(0xAFEEEE)\n        Colu", "  .backgroundColor(0x317aff)\n        .opa", " FlexDirection = FlexDirection.Row\n  priv", "e = this.value + 'Text'\n          try {\n ", "lex({ direction: FlexDirection.Row, align", "   console.info(\"Flex page state change c", " = eventData.data.text\n      }\n    }\n  }\n", "onent\nstruct ColumnExample {\n  @State ali", " justifyContent: FlexAlign.SpaceAround })", "Text'\n  private myText: string = 'Text fo", "ight: string = \"200px\";\n\n  onPageShow() {"], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageEffectsJsunit.test.ets", "ColumnSplitJsunit.test.ets", "Navigation.ets", "imageFit.ets", "ZIndexJsunit.test.ets", "checkboxGroup.ets", "sourceType.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "TapGesture.test.ets", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "border.ets", "ResponseRegion.ets", "FillModeJsunit.test.ets", "textArea.ets", "transition.ets", "gridSettings.ets", "Image.ets", "LongPressGesture.test.ets", "path.ets", "polyline.ets", "VideoJsunit.test.ets", "touch.ets", "SpanJsunit.test.ets", "PanelJsunit.test.ets", "sideBar.ets", "Prop.ets", "customDialogController.ets", "EnmusImageJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "VisibilityJsunit.test.ets", "TextArea.ets", "ResponseRegionJsunit.test.ets", "flexDirection.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "ListJsunit.test.ets", "gridContainerProps.test.js", "Select.ets", "flex.ets", "MotionPathJsunit.test.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enable.ets", "tabsProps.test.js", "lineProps.test.js", "AlphabetIndexer.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "videoProps.test.js", "enumsItemAlign.ets", "style.js", "DatePickerJsunit.test.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "StackJsunit.test.ets", "circle.ets", "animateMotionProps.test.js", "textareaProps.test.js", "span.ets", "NavigatorCode.ets", "patternLock.ets", "global.ets", "AnimationStatusJsunit.test.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "divProps.test.js", "divider.ets", "animationStatus.ets", "zIndex.ets", "enumsFlexAlign.ets", "ellipseProps.test.js", "FormComponentPage.ets", "chartProps.test.js", "sliderProps.test.js", "polygonProps.test.js", "inputProps.test.js", "SwiperJsunit.test.ets", "GridItem.ets", "imageProps.test.js", "select.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "gestureMode.ets", "refresh.ets", "ScrollBar.ets", "overlay.ets", "pathProps.test.js", "configuration.ets", "tabContentProps.test.js", "longPressGesture.ets", "Qrcode.ets", "Row.ets", "PathJsunit.test.ets", "Progress.ets", "column.ets", "Panel.ets", "CustomDialog.ets", "OhosRouterJsnuit.test.ets", "TextClockJsunit.test.ets", "enumsLineCapStyle.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "GeometryTransitionJsunit.test.ets", "ScrollCodeJsunit.test.ets", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "textInput.ets", "TouchJsunit.test.ets", "transForm.ets", "Column.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "SelectJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "ListItem.ets", "background.ets", "Slider.ets", "StepperJsunit.test.ets", "ButtonJsunit.test.ets", "enumsVerticalAlign.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "animatorOption.ets", "index.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "richtextProps.test.js", "PanGesture.ets", "shape.ets", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "imageAnimatorProps.test.js", "qrcodeProps.test.js", "GlobalJsunit.test.ets", "SystemRouterJsunit.test.ets", "stepperItemProps.test.js", "textClock.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "GridContainer.ets", "checkbox.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "grid.ets", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "bindPopup.ets", "buttonProps.test.js", "animateProps.test.js", "animate.ets", "List.test.js", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "RowSplit.ets", "pickerViewProps.test.js", "TextInput.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "curves.ets", "priorityGesture.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "CanvasJsunit.test.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "tabBarProps.test.js", "ColumnJsunit.test.ets", "parallelGesture.ets", "slider.ets", "panelProps.test.js", "motionPath.ets", "Badge.ets", "ColumnSplit.ets", "search.ets", "rectProps.test.js", "blank.ets", "pageTransition2.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "textProps.test.js", "DragEventJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "TextPickerJsunit.test.ets", "Span.ets", "CheckboxGroupJsunit.test.ets", "AppearJsunit.test.ets", "CommonJsunit.test.ets", "marquee.ets", "PieceJsunit.test.ets", "basicabilityapi.test.js", "badgeProps.test.js", "CalendarJsunit.test.ets", "systemPrompt.ets", "LinkJsunit.test.ets", "CurvesJsunit.test.ets", "DirectionJsunit.test.ets", "RadioJsunit.test.ets", "Stack.ets", "bindMenu.ets", "Sidebar.ets", "text.ets", "tapGesture.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "stepper.ets", "svgProps.test.js", "image.ets", "textPathProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "textPickerDialog.ets", "badge.ets", "imageEffects.ets", "popupProps.test.js", "tabs.ets", "dragEvent2.ets", "app.ets", "GaugeJsunit.test.ets", "BasicJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "Video.ets", "listItem.ets", "Button.ets", "ScrollJsunit.test.ets", "Polygon.ets", "panDirection.ets", "ContentStorage.test.ets", "direction2.ets", "BadgeJsunit.test.ets", "CircleJsunit.test.ets", "Rect.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "Constants.ets", "line.ets", "Grid.ets", "GestureModeJsunit.test.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "index.js", "tspanProps.test.js", "timeStamp.ets", "Toggle.ets", "Direction2Jsunit.test.ets", "panel.ets", "colorGradient.ets", "systemRouterA.ets", "CounterJsunit.test.ets", "dividerProps.test.js", "ListItemJsunit.test.ets", "Navigator.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "polylineProps.test.js", "richText.ets", "PositionSettingJsunit.test.ets", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "textTimer.ets", "Rating.ets", "Swiper.ets", "LineJsunit.test.ets", "DividerJsunit.test.ets", "Divider.ets", "RichTextJsunit.test.ets", "scrollBar.ets", "NavigatorCodeJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "focus.ets", "circleProps.test.js", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "stackProps.test.js", "Text.ets", "EdgeEffectJsunit.test.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "SystemAppJsunit.test.ets", "swiper.ets", "refreshProps.test.js", "Blank.ets", "ScrollerBarJsunit.test.ets", "TransitionJsunit.test.ets", "AreaChangeJsunit.test.ets", "PropJsunit.test.ets", "GridItem.test.ets", "labelProps.test.js", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "sharedTransition2.ets", "gridContainer.ets", "Tab.ets", "Stepper.ets", "ShapeJsunit.test.ets", "enumsImage.ets", "polygon.ets", "textStyle.ets", "SubscribaleAbstractJsunit.test.ets", "app.js", "listItemProps.test.js", "gridRowProps.test.js", "list.ets", "AppStorage.ets", "QrCode.ets", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "fontWeight.ets", "imageAnimator.ets", "BackgroundAndSizeSettingJsunit.test.ets", "Flex.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "switchProps.test.js", "radio.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "Path.ets", "fillMode.ets", "TransFormJsunit.test.ets", "DataPanel.ets", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "swiperProps.test.js", "TabsJsunit.test.ets", "LoadingProgressJsunit.test.ets", "GridSettingsJsunit.test.ets", "toggleProps.test.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "listProps.test.js", "progressProps.test.js", "Calendar.ets", "sharedTransition.ets", "enumsHorizontalAlign.ets", "BindPopupJsunit.test.ets", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CurrentOffsetResultValue", "api_method_name": "y", "api_method_all": "y: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 35614, "since": 4, "api_used": "\u662f", "lines": ["hos.emitter';\n\n@Entry\n@Component\nstruct E", "F)\n      }\n      .key(\"alignItemsColumn\")", "e is ${JSON.stringify(oldValue)} newvalue", "`${this.height}`).key('ellipse')\n    }.wi", "ohos.emitter'\n\n@Entry\n@Component\nstruct E", "ed:\" + JSON.stringify(eventData));\n      ", "Align.Center, justifyContent: FlexAlign.C", "d: 58,\n      priority: events_emitter.Eve", "size = JSON.stringify(newValue)\n         ", "d: 92,\n      priority: events_emitter.Eve", "te')\n  },\n  onDestroy() {\n    console.inf", "d: 93,\n      priority: events_emitter.Eve", "alled);\n          try {\n            var b", "e is ${JSON.stringify(newValue)}`)\n      ", "\n        Text(this.myText)\n          .onA", "eAppear)\n        .key('appear')\n        .", "Application onDestroy')\n  },\n}", "             priority: events_emitter.Eve", "r: \" + JSON.stringify(err.message))\n     ", "emitter.EventPriority.LOW\n            }\n ", "s.value)\n        .key('text1')\n        .b", " 'Text'\n          try {\n            var b", "hos.emitter';\n\n@Entry\n@Component\nstruct C", ": 192,\n      priority: events_emitter.Eve", "de Text'\n  private myText: string = 'Text", "ystem.prompt'\n\n@Entry\n@Preview\n@Component", "port prompt from '@system.prompt'\n\n@Entry", "hos.emitter';\n\n@Entry\n@Component\nstruct A", "emitter.EventPriority.LOW\n    }\n    event", "00 })\n            try {\n              var", "emitter.EventPriority.LOW\n              }", "is.size)\n        .key('text2')\n        .m", ": 907,\n      priority: events_emitter.Eve", ": 908,\n      priority: events_emitter.Eve"], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageEffectsJsunit.test.ets", "ColumnSplitJsunit.test.ets", "Navigation.ets", "imageFit.ets", "ZIndexJsunit.test.ets", "checkboxGroup.ets", "sourceType.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "TapGesture.test.ets", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "border.ets", "ResponseRegion.ets", "FillModeJsunit.test.ets", "textArea.ets", "transition.ets", "gridSettings.ets", "Image.ets", "LongPressGesture.test.ets", "path.ets", "polyline.ets", "VideoJsunit.test.ets", "touch.ets", "SpanJsunit.test.ets", "PanelJsunit.test.ets", "sideBar.ets", "Prop.ets", "customDialogController.ets", "EnmusImageJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "VisibilityJsunit.test.ets", "TextArea.ets", "ResponseRegionJsunit.test.ets", "flexDirection.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "ListJsunit.test.ets", "gridContainerProps.test.js", "Select.ets", "flex.ets", "MotionPathJsunit.test.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enable.ets", "tabsProps.test.js", "lineProps.test.js", "AlphabetIndexer.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "videoProps.test.js", "enumsItemAlign.ets", "DatePickerJsunit.test.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "StackJsunit.test.ets", "circle.ets", "animateMotionProps.test.js", "textareaProps.test.js", "span.ets", "NavigatorCode.ets", "patternLock.ets", "global.ets", "AnimationStatusJsunit.test.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "divProps.test.js", "divider.ets", "animationStatus.ets", "zIndex.ets", "enumsFlexAlign.ets", "ellipseProps.test.js", "FormComponentPage.ets", "chartProps.test.js", "sliderProps.test.js", "polygonProps.test.js", "inputProps.test.js", "SwiperJsunit.test.ets", "GridItem.ets", "imageProps.test.js", "select.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "gestureMode.ets", "refresh.ets", "ScrollBar.ets", "overlay.ets", "pathProps.test.js", "configuration.ets", "tabContentProps.test.js", "longPressGesture.ets", "Qrcode.ets", "Row.ets", "PathJsunit.test.ets", "Progress.ets", "column.ets", "Panel.ets", "CustomDialog.ets", "OhosRouterJsnuit.test.ets", "TextClockJsunit.test.ets", "enumsLineCapStyle.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "GeometryTransitionJsunit.test.ets", "ScrollCodeJsunit.test.ets", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "textInput.ets", "TouchJsunit.test.ets", "transForm.ets", "Column.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "SelectJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "ListItem.ets", "background.ets", "Slider.ets", "StepperJsunit.test.ets", "ButtonJsunit.test.ets", "enumsVerticalAlign.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "animatorOption.ets", "index.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "richtextProps.test.js", "PanGesture.ets", "shape.ets", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "imageAnimatorProps.test.js", "PieceCode.ets", "qrcodeProps.test.js", "GlobalJsunit.test.ets", "SystemRouterJsunit.test.ets", "stepperItemProps.test.js", "textClock.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "GridContainer.ets", "checkbox.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "grid.ets", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "bindPopup.ets", "buttonProps.test.js", "animateProps.test.js", "animate.ets", "List.test.js", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "RowSplit.ets", "pickerViewProps.test.js", "TextInput.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "curves.ets", "priorityGesture.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "CanvasJsunit.test.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "tabBarProps.test.js", "ColumnJsunit.test.ets", "parallelGesture.ets", "slider.ets", "panelProps.test.js", "motionPath.ets", "Badge.ets", "ColumnSplit.ets", "search.ets", "rectProps.test.js", "blank.ets", "pageTransition2.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "video.ets", "textProps.test.js", "DragEventJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "TextPickerJsunit.test.ets", "Span.ets", "CheckboxGroupJsunit.test.ets", "AppearJsunit.test.ets", "CommonJsunit.test.ets", "marquee.ets", "PieceJsunit.test.ets", "basicabilityapi.test.js", "badgeProps.test.js", "CalendarJsunit.test.ets", "systemPrompt.ets", "LinkJsunit.test.ets", "CurvesJsunit.test.ets", "DirectionJsunit.test.ets", "RadioJsunit.test.ets", "Stack.ets", "bindMenu.ets", "Sidebar.ets", "text.ets", "tapGesture.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "stepper.ets", "svgProps.test.js", "image.ets", "textPathProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "textPickerDialog.ets", "badge.ets", "imageEffects.ets", "popupProps.test.js", "tabs.ets", "dragEvent2.ets", "app.ets", "GaugeJsunit.test.ets", "BasicJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "Video.ets", "listItem.ets", "Button.ets", "ScrollJsunit.test.ets", "Polygon.ets", "panDirection.ets", "ContentStorage.test.ets", "direction2.ets", "BadgeJsunit.test.ets", "CircleJsunit.test.ets", "Rect.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "Constants.ets", "line.ets", "Grid.ets", "GestureModeJsunit.test.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "index.js", "tspanProps.test.js", "timeStamp.ets", "Toggle.ets", "Direction2Jsunit.test.ets", "panel.ets", "colorGradient.ets", "systemRouterA.ets", "CounterJsunit.test.ets", "dividerProps.test.js", "ListItemJsunit.test.ets", "Navigator.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "polylineProps.test.js", "richText.ets", "PositionSettingJsunit.test.ets", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "textTimer.ets", "Rating.ets", "Swiper.ets", "LineJsunit.test.ets", "DividerJsunit.test.ets", "Divider.ets", "RichTextJsunit.test.ets", "scrollBar.ets", "NavigatorCodeJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "focus.ets", "circleProps.test.js", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "stackProps.test.js", "Text.ets", "EdgeEffectJsunit.test.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "SystemAppJsunit.test.ets", "swiper.ets", "refreshProps.test.js", "Blank.ets", "ScrollerBarJsunit.test.ets", "TransitionJsunit.test.ets", "AreaChangeJsunit.test.ets", "PropJsunit.test.ets", "GridItem.test.ets", "labelProps.test.js", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "sharedTransition2.ets", "gridContainer.ets", "Tab.ets", "Stepper.ets", "ShapeJsunit.test.ets", "enumsImage.ets", "polygon.ets", "textStyle.ets", "SubscribaleAbstractJsunit.test.ets", "app.js", "listItemProps.test.js", "gridRowProps.test.js", "list.ets", "AppStorage.ets", "QrCode.ets", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "fontWeight.ets", "imageAnimator.ets", "BackgroundAndSizeSettingJsunit.test.ets", "Flex.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "switchProps.test.js", "radio.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "Path.ets", "fillMode.ets", "TransFormJsunit.test.ets", "DataPanel.ets", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "swiperProps.test.js", "TabsJsunit.test.ets", "LoadingProgressJsunit.test.ets", "GridSettingsJsunit.test.ets", "toggleProps.test.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "listProps.test.js", "progressProps.test.js", "Calendar.ets", "sharedTransition.ets", "enumsHorizontalAlign.ets", "BindPopupJsunit.test.ets", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ListScrollToOptions", "api_method_all": "export interface ListScrollToOptions {\n  \n  index: number;\n}", "api_method_name": "ListScrollToOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListScrollToOptions", "api_method_name": "index", "api_method_all": "index: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1502, "since": 4, "api_used": "\u662f", "lines": ["       console.info(index.toString())\n       ", "Source([])\n  @State index: number = 1\n  @Stat", "    this.arr.splice(index, 1)\n          conso", " if (eventData.data.index != null) {\n        ", "    let callback = (indexEvent) => {\n        ", ";\n      }\n      let indexEvent = {\n        ev", "t));\n        expect(indexEvent.data.value).as", "    Stepper({\n      index: this.currentIndex\n", "d} from \"deccjsunit/index.ets\";\nimport testsu", ")\n      .index(this.index)\n      .autoPlay(th", "this.currentIndex = index\n    })\n    .align(A", "  events_emitter.on(indexEvent, callback);\n  ", "ngth\n  }\n\n  getData(index: number): any {\n   ", "t} from \"deccjsunit/index.ets\"\nimport router ", "events_emitter.emit(indexEvent, eventData);\n ", "chedCount(2)\n      .index(this.index)\n      .", " \" + JSON.stringify(indexEvent));\n        exp", "ull) {\n        this.index = parseInt(eventDat", "eInt(eventData.data.index);\n      }\n      if ", "(prevIndex: number, index: number) => {\n     ", "nsole.info(this.arr[index] + 'Delete')\n      ", "t} from \"deccjsunit/index.ets\";\nimport router", "')\n      .onChange((index: number) => {\n     ", "     .onItemDelete((index: number) => {\n     ", "   return this.list[index]\n  }\n\n  registerDat", "      }\n        let indexEvent = {\n          "], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "Navigator.ets", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "Row.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "CommonJsunit.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "Swiper.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "systemPrompt.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "EnmusFlexAlignJsunit.test.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "SystemAppJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "sideBar.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "edgeEffect.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "stepper.ets", "svgProps.test.js", "labelProps.test.js", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "Select.ets", "ratingProps.test.js", "MotionPathJsunit.test.ets", "stepperProps.test.js", "marqueeProps.test.js", "Tab.ets", "imageAnimatorProps.test.js", "Stepper.ets", "textPickerDialog.ets", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "popupProps.test.js", "AlphabetIndexer.ets", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "tabs.ets", "BindMenuJsunit.test.ets", "videoProps.test.js", "list.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "DatePickerJsunit.test.ets", "BasicJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "calendar.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "animateMotionProps.test.js", "listItem.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "buttonProps.test.js", "animateProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "ContentStorage.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "AnimationStatusJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "pickerViewProps.test.js", "CircleJsunit.test.ets", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "Constants.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "Grid.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "WebPage.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "polygonProps.test.js", "swiperProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "GridItem.ets", "tspanProps.test.js", "imageProps.test.js", "select.ets", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ListElement", "api_method_all": "export interface ListElement extends Element {\n  \n  scrollTo(position: ListScrollToOptions): void;\n\n  \n  scrollBy(data: ScrollParam): void;\n\n  \n  scrollTop(param: { smooth: boolean }): void;\n\n  \n  scrollBottom(param: { smooth: boolean }): void;\n\n  \n  scrollPage(params: { reverse: boolean; smooth: boolean }): void;\n\n  \n  scrollArrow(params: { reverse: boolean; smooth: boolean }): void;\n\n  \n  collapseGroup(param: {\n    \n    groupid: string;\n  }): void;\n\n  \n  expandGroup(param: {\n    \n    groupid: string;\n  }): void;\n\n  \n  currentOffset(): CurrentOffsetResultValue;\n}", "api_method_name": "ListElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListElement", "api_method_name": "scrollTo", "api_method_all": "scrollTo(position: ListScrollToOptions): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 9, "since": 4, "api_used": "\u662f", "lines": ["      this.scroller.scrollTo({\n                x", " {\n                \"scrollToIndex\": 10,\n        ", "pect(eventData.data.scrollToIndex).assertEqual(1", "    });\n    },\n\n    scrollTouchUp() {\n        pr", "          message: 'scrollTop'\n        });\n    }", "    });\n    },\n\n    scrollTop() {\n        prompt", "      this.scroller.scrollToIndex(0)\n           ", "      this.scroller.scrollTo({ xOffset: 0, yOffs", "          message: 'scrollTouchUp'\n        });\n "], "files": ["scrollCode.ets", "index.js", "Scroll.ets", "ScrollCodeJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ListElement", "api_method_name": "scrollBy", "api_method_all": "scrollBy(data: ScrollParam): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 30, "since": 4, "api_used": "\u662f", "lines": ["    }\n    function4.scrollBy(scrollParam)\n  },\n\n", "}\n        function4.scrollBy(scrollParam)\n    },"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ListElement", "api_method_name": "scrollTop", "api_method_all": "scrollTop(param: { smooth: boolean }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 2, "since": 4, "api_used": "\u662f", "lines": ["    });\n    },\n\n    scrollTop() {\n        prompt.", "          message: 'scrollTop'\n        });\n    },"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ListElement", "api_method_name": "scrollBottom", "api_method_all": "scrollBottom(param: { smooth: boolean }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 2, "since": 4, "api_used": "\u662f", "lines": ["    });\n    },\n\n    scrollBottom() {\n        prompt.", "          message: 'scrollBottom'\n        });\n    },"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ListElement", "api_method_name": "scrollPage", "api_method_all": "scrollPage(params: { reverse: boolean; smooth: boolean }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 32, "since": 4, "api_used": "\u662f", "lines": ["True:null,\n         scrollPageFalse:null,\n        ", ",5,6,7,8],\n         scrollPageTrue:null,\n         ", "is.scrollPageFalse, scrollPageNone:this.scrollPage", "rs.id).assertEqual('scrollPageNone')\n        expec", "*/\n     it('testlistscrollPageFalse', 0, async fun", "ne = this.$element(\"scrollPageNone\").getInspector(", "c.name      testlistscrollPageTrue\n      * @tc.des", "nsole.info('testlistscrollPageNone START');\n      ", "nsole.info('testlistscrollPageFalse START');\n     ", "scrollPageTrue:this.scrollPageTrue,\n             s", "se(globalThis.value.scrollPageFalse);\n        cons", "rs.id).assertEqual('scrollPageFalse')\n        expe", "/\n      it('testlistscrollPageNone', 0, async func", "      this.scroller.scrollPage({ next: true })\n   ", "tor()\n         this.scrollPageNone = this.$element", "se = this.$element(\"scrollPageFalse\").getInspector", "      this.scroller.scrollPage({\n                n", "ue = this.$element(\"scrollPageTrue\").getInspector(", "eTrue,\n             scrollPageFalse:this.scrollPag", " */\n    it('testlistscrollPageTrue', 0, async func", "es(){\n         this.scrollPageTrue = this.$element", "nsole.info('testlistscrollPageTrue START');\n      ", "alse:null,\n         scrollPageNone:null,\n         ", "tor()\n         this.scrollPageFalse = this.$elemen", "crollPageFalse:this.scrollPageFalse, scrollPageNon", " this.showPropNone, scrollPageTrue:this.scrollPage", "scrollPageNone:this.scrollPageNone,\n             c", "se(globalThis.value.scrollPageNone);\n        conso", "se(globalThis.value.scrollPageTrue);\n        conso", "rs.id).assertEqual('scrollPageTrue')\n        expec", "c.name      testlistscrollPageNone\n      * @tc.des", "c.name      testlistscrollPageFalse\n      * @tc.de"], "files": ["scrollCode.ets", "listProps.test.js", "Scroll.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ListElement", "api_method_name": "scrollArrow", "api_method_all": "scrollArrow(params: { reverse: boolean; smooth: boolean }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListElement", "api_method_name": "collapseGroup", "api_method_all": "collapseGroup(param: {\n    \n    groupid: string;\n  }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 4, "since": 4, "api_used": "\u662f", "lines": [".$element('mylist').collapseGroup({\n            group", ".$element('myList').collapseGroup({\n\n        });\n    ", ".$element('myList').collapseGroup({\n            group", ".$element('mylist').collapseGroup()\n    },\n    expand"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ListElement", "api_method_name": "expandGroup", "api_method_all": "expandGroup(param: {\n    \n    groupid: string;\n  }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 4, "since": 4, "api_used": "\u662f", "lines": [".$element('myList').expandGroup({\n            group", ".$element('myList').expandGroup({\n\n        });\n    ", ".$element('mylist').expandGroup()\n    },\n    collap", ".$element('mylist').expandGroup({\n            group"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ListElement", "api_method_name": "currentOffset", "api_method_all": "currentOffset(): CurrentOffsetResultValue;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 2, "since": 4, "api_used": "\u662f", "lines": ["fset: this.scroller.currentOffset().yOffset + 100 })\n", "      this.scroller.currentOffset()\n            })\n  "], "files": ["scrollCode.ets", "Scroll.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SwiperElement", "api_method_all": "export interface SwiperElement extends Element {\n  \n  swipeTo(position: {\n    \n    index: number;\n  }): void;\n\n  \n  showNext(): void;\n\n  \n  showPrevious(): void;\n}", "api_method_name": "SwiperElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SwiperElement", "api_method_name": "swipeTo", "api_method_all": "swipeTo(position: {\n    \n    index: number;\n  }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 4, "since": 4, "api_used": "\u662f", "lines": ["$element('swiper1').swipeTo({index: 2});\n      ", "$element('swiper2').swipeTo({index: 2});\n    },", ".$element('swiper').swipeTo({index: 2});\n      ", "xport default {\n    swipeTo() {\n        this.$e"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SwiperElement", "api_method_name": "showNext", "api_method_all": "showNext(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 6, "since": 4, "api_used": "\u662f", "lines": ["ex: 2});\n    },\n    showNext() {\n        this.$e", "$element('swiper2').showNext();\n    },\n    showP", "$element('swiper1').showNext();\n        this.$el", ".$element('swiper').showNext();\n        this.$el", "is.swiperController.showNext();\n            this", "is.swiperController.showNext()\n          })\n    "], "files": ["swiper.ets", "Swiper.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SwiperElement", "api_method_name": "showPrevious", "api_method_all": "showPrevious(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 6, "since": 4, "api_used": "\u662f", "lines": ["is.swiperController.showPrevious()\n            this.", "is.swiperController.showPrevious()\n          })\n    ", "$element('swiper2').showPrevious();\n    },\n\n    onSh", ".$element('swiper').showPrevious();\n        this.$el", "$element('swiper1').showPrevious();\n        this.$el", "wNext();\n    },\n    showPrevious() {\n        this.$e"], "files": ["swiper.ets", "Swiper.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CameraTakePhotoOptions", "api_method_all": "export interface CameraTakePhotoOptions {\n  \n  quality: \"high\" | \"normal\" | \"low\";\n\n  \n  success?: (result: Object) => void;\n\n  \n  fail?: (result: Object) => void;\n\n  \n  complete?: (result: Object) => void;\n}", "api_method_name": "CameraTakePhotoOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "CameraTakePhotoOptions", "api_method_name": "success", "api_method_all": "success?: (result: Object) => void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 442, "since": 6, "api_used": "\u662f", "lines": ["o(\"get border state success \" + JSON.stringify(", "et areaChange state success \" + JSON.stringify(", "(\"push stepper page success \" + JSON.stringify(", "checkboxGroup state success \" + JSON.stringify(", "ole.info('Operation successful. Data: ' + JSON.", "\"push checkbox page success \" + JSON.stringify(", "nsole.info('onTouch successful, touchFlag is : ", "le.info(\"get slider success \" + JSON.stringify(", "ush edgeEffect page success \" + JSON.stringify(", "fo(\"get gauge state success \" + JSON.stringify(", "h imageEffects page success \" + JSON.stringify(", "o(\"push swiper page success \" + JSON.stringify(", "(\"get stepper state success \" + JSON.stringify(", "et edgeEffect state success \" + JSON.stringify(", " imageEffects state success \" + JSON.stringify(", "nfo(\"push flex page success \" + JSON.stringify(", "fo(\"push gauge page success \" + JSON.stringify(", "o(\"get swiper state success \" + JSON.stringify(", "nfo(\"get flex state success \" + JSON.stringify(", " checkboxGroup page success \" + JSON.stringify(", "ush areaChange page success \" + JSON.stringify(", "ndSizeSetting state success \" + JSON.stringify(", "\"get checkbox state success \" + JSON.stringify(", "o(\"push select page success \" + JSON.stringify(", "o(\"get select state success \" + JSON.stringify(", "(\"push marquee page success \" + JSON.stringify(", "onsole.info('dialog success callback\uff0cclick butt", "o(\"push border page success \" + JSON.stringify(", "o(\"get slider state success \" + JSON.stringify(", "le.info(\"get select success \" + JSON.stringify(", "(\"get marquee state success \" + JSON.stringify(", "AndSizeSetting page success \" + JSON.stringify(", "o(\"push slider page success \" + JSON.stringify(", "     ],\n            success: function(data) {\n "], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "GeometryTransitionJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "systemPrompt.ets", "LinkJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "TextJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "canvasProps.test.js", "AreaChangeJsunit.test.ets", "BlankJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "svgProps.test.js", "labelProps.test.js", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "gridContainerProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "MotionPathJsunit.test.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "popupProps.test.js", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "TextInputJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "StackJsunit.test.ets", "TextAreaJsunit.test.ets", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "gridColProps.test.js", "patternLock.ets", "animateProps.test.js", "buttonProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "BadgeJsunit.test.ets", "pickerViewProps.test.js", "divProps.test.js", "switchProps.test.js", "commonComponentJsApi.test.js", "ellipseProps.test.js", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "swiperProps.test.js", "polygonProps.test.js", "NavigatorJsunit.test.ets", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CameraTakePhotoOptions", "api_method_name": "fail", "api_method_all": "fail?: (result: Object) => void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 43, "since": 6, "api_used": "\u662f", "lines": ["(test).assertEqual('fail');\n            }\n  ", "onsole.info('dialog fail callback' + data.er", "ediaQuery maxHeight fail');\n                ", "MediaQuery logicNot fail');\n                ", "ediaQuery logicOnly fail');\n                ", "'MediaQuery logic>= fail');\n                ", "onerror: Image load fail');\n        };\n    }", "console.log('dialog fail callback' + data.er", "le.error('Operation failed. Cause: ' + JSON.", "'MediaQuery logicOr fail');\n                ", "diaQuery deviceType fail');\n                ", "le.info('load image fail')\n          })\n    ", "ole.log('Image load fail');\n        };\n    }", "diaQuery matchMedia fail');\n                ", "(test).assertEqual('fail');\n                ", "uery rmeoveListener fail');\n                ", "MediaQuery logicAnd fail');\n                ", "iaQuery orientation fail');\n                ", "     },\n            fail: function(data) {\n ", "iaQuery addListener fail');\n                ", "   },\n              fail: function(data) {\n ", "diaQuery logicComma fail');\n                "], "files": ["ohosPrompt.ets", "systemPrompt.ets", "Image.ets", "index.js", "mediaquery.test.js", "index.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CameraTakePhotoOptions", "api_method_name": "complete", "api_method_all": "complete?: (result: Object) => void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 9, "since": 6, "api_used": "\u662f", "lines": ["('Marquee animation complete onStart')\n        }", "('Marquee animation complete onBounce')\n        ", "('Marquee animation complete onStart')\n         ", "    });\n    },\n\n    complete(event){\n        pro", "[prompt.showDialog] complete');\n            }\n  ", "('Marquee animation complete onFinish')\n        ", "     },\n            complete: function () {\n    "], "files": ["Marquee.ets", "marquee.ets", "basicabilityapi.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CameraTakePhotoOptions", "api_method_name": "quality", "api_method_all": "quality: \"high\" | \"normal\" | \"low\"", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["ype: 'image/png'}, {quality: 0.92});\n        pr"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CameraElement", "api_method_all": "export interface CameraElement extends Element {\n  \n  takePhoto(options: CameraTakePhotoOptions): void;\n}", "api_method_name": "CameraElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "CameraElement", "api_method_name": "takePhoto", "api_method_all": "takePhoto(options: CameraTakePhotoOptions): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebElement", "api_method_all": "export interface WebElement extends Element {\n  \n  reload(): void;\n}", "api_method_name": "WebElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebElement", "api_method_name": "reload", "api_method_all": "reload(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DialogElement", "api_method_all": "export interface DialogElement extends Element {\n  \n  show(): void;\n  \n  close(): void;\n}", "api_method_name": "DialogElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DialogElement", "api_method_name": "show", "api_method_all": "show(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 3848, "since": 4, "api_used": "\u662f", "lines": ["CCCCC)\n            .showSteps(false)\n       ", "info('Calendar page show called');\n    var s", "nfo('[enabled] page show called ');\n    var ", "ps(true)\n          .showTips(true)\n         ", "{\n      Button(this.show).width(80).height(3", "info('Checkbox page show called');\n    var s", "             prompt.showToast({\n            ", "\n              this.show = \"show\"\n          ", "ole.info('flex page show called');\n    var s", "false)\n            .showTips(false)\n        ", "info('[column] page show called');\n    var s", "info('[zIndex] page show called ');\n    var ", "le.info('gauge page show called');\n    var s", "or.Blue)\n          .showSteps(true)\n        ", "info('[appear] page show called');\n    var s", "'checkboxGroup page show called');\n    var s", "\n            prompt.showToast({ message: 'Th", "ate show: string = \"show\"\n\n  build() {\n    F", ".info('stepper page show called');\n    var s", "ssage: 'The text is shown', duration: 2000 }", "nfo('[ellipse] page show called');\n    var s", "       this.show = \"show\"\n            }\n    ", ".Blue)\n            .showSteps(true)\n        ", "e.info('[list] page show called');\n    var s", "is.swiperController.showPrevious()\n         ", "is.swiperController.showNext();\n            ", "'gridContainer page show called');\n    var s", "s(false)\n          .showTips(false)\n        ", "fo('background page show called');\n    var s", "xCCCCCC)\n          .showSteps(false)\n       ", "fo('edgeEffect page show called');\n    var s", "e.info('swiper page show called');\n    var s", "'shapeClipping page show called');\n    var s", "('imageEffects page show called');\n    var s", "e.info('border page show called');\n    var s", "an = false\n  @State show: string = \"show\"\n\n ", "\n              this.show = \"hide\"\n          ", ".info('[touch] page show called');\n    var s", "ansFormExample page show called');\n    var s", "nfo('[overlay] page show called ');\n    var ", "o('[TouchAble] page show called');\n    var s", "ColorGradient] page show called');\n    var s", "(true)\n            .showTips(true)\n         ", " {\n          prompt.showToast({ message: JSO", "e.info('select page show called');\n    var s", "e.info('slider page show called');\n    var s", "ansFormExample page show called');\n\n    var ", "le.info('focus page show called');\n    var s"], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "dividerProps.test.js", "video.ets", "tabContentProps.test.js", "textProps.test.js", "Navigator.ets", "playMode.ets", "toolbarProps.test.js", "Qrcode.ets", "Navigation.ets", "Span.ets", "richText.ets", "column.ets", "Panel.ets", "Progress.ets", "checkboxGroup.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "toolbarItemProps.test.js", "Rating.ets", "PieceJsunit.test.ets", "Swiper.ets", "basicabilityapi.test.js", "Divider.ets", "badgeProps.test.js", "border.ets", "scrollBar.ets", "dialogProps.test.js", "textArea.ets", "transition.ets", "systemPrompt.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "scrollCode.ets", "button.ets", "RichText.ets", "formProps.test.js", "focus.ets", "touch.ets", "background.ets", "Slider.ets", "stackProps.test.js", "Text.ets", "PanelJsunit.test.ets", "Counter.ets", "gauge.ets", "Stack.ets", "swiper.ets", "sideBar.ets", "toggle.ets", "refreshProps.test.js", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "canvasProps.test.js", "TextArea.ets", "animatorOption.ets", "flexDirection.ets", "shapeClipping.ets", "edgeEffect.ets", "stepper.ets", "shape.ets", "labelProps.test.js", "row.ets", "loadingProgress.ets", "Marquee.ets", "gridContainerProps.test.js", "stepperProps.test.js", "Select.ets", "flex.ets", "ratingProps.test.js", "Shape.ets", "marqueeProps.test.js", "gridContainer.ets", "PatternLock.ets", "Polyline.ets", "imageAnimatorProps.test.js", "textPickerDialog.ets", "gridPage.ets", "enable.ets", "PieceCode.ets", "tabsProps.test.js", "badge.ets", "qrcodeProps.test.js", "imageEffects.ets", "popupProps.test.js", "AlphabetIndexer.ets", "ColumnSplit.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "videoProps.test.js", "list.ets", "colorGradient.ets", "AppStorage.ets", "QrCode.ets", "GridContainer.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "checkbox.ets", "Video.ets", "pieceProps.test.js", "pickerProps.test.js", "circle.ets", "listItem.ets", "selectProps.test.js", "Button.ets", "textareaProps.test.js", "Polygon.ets", "gridColProps.test.js", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "Rect.ets", "divProps.test.js", "switchProps.test.js", "divider.ets", "ScrollBar.ets", "TextInput.ets", "ellipse.ets", "appear.ets", "rating.ets", "zIndex.ets", "Path.ets", "line.ets", "DataPanel.ets", "chartProps.test.js", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "sliderProps.test.js", "swiperProps.test.js", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "Link.ets", "imageProps.test.js", "select.ets", "Toggle.ets", "listProps.test.js", "slider.ets", "progressProps.test.js", "aboutToDisappear.ets", "Calendar.ets", "sharedTransition.ets", "refresh.ets", "motionPath.ets", "search.ets", "panel.ets", "menuProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "DialogElement", "api_method_name": "close", "api_method_all": "close(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 83, "since": 4, "api_used": "\u662f", "lines": ["s.$element('prop1').close()\n    },\n    showPa", ").show()\n    },\n    closePanelPro3() {\n      ", "ent('simplePanel4').close()\n    },\n    showPa", "ent('simplePanel3').close()\n    },\n    showPa", ").show()\n    },\n    close(){\n        this.$el", "ent('simplePanel5').close()\n    },\n    showPa", ").show()\n    },\n    closePanel5() {\n        t", "ent('simplePanel7').close()\n    },\n    showPa", "ent('simplePanel6').close()\n    },\n    showPa", ");\n    this.context.closePath();\n    this.con", ").show()\n    },\n    closePanel() {\n        th", "tringify(obj.$attrs.closeEffect))\n      expec", "        })\n        .closeEffect(false)\n    }\n", ").show()\n    },\n    closePanelPro1() {\n      ", "    this.controller.close()\n            this.", ").show()\n    },\n    closePanelPro2() {\n      ", ").show()\n    },\n    closePanel3() {\n        t", "is.dialogController.close()\n        }).backgr", "0, 60);\n        ctx.closePath();\n        ctx.", "s.$element('prop2').close()\n    },\n    showPa", ").show()\n    },\n    closePanel6() {\n        t", ").show()\n    },\n    closePanel2() {\n        t", ").show()\n    },\n    closePanel4() {\n        t", "s.$element('event').close()\n    },\n    opengr", ");\n    this.context.closePath();\n  }\n\n  resto", "ment('simplePanel').close()\n    },\n    // \u5c5e\u6027\n", " console.log(\"panel closeEffect\" + JSON.strin", "        })\n        .closeEffect(true)\n      D", "xt.stroke();\n  }\n\n  closePath() {\n    this.co", "  expect(obj.$attrs.closeEffect).assertEqual(", "ece\")\n      Button('close')\n        .margin(3", "      console.info(\"close action state err: \"", ").show()\n    },\n    closePanel7() {\n        t", "ent('simplePanel1').close()\n    },\n    showPa", "\n              this.closePath();\n            ", "      console.info(\"close to emit action stat", "        })\n        .closeEffect(false)\n\n     ", "ent('simplePanel2').close()\n    },\n    showPa", ", 80);\n        path.closePath();\n        ctx.", ").show()\n    },\n    closePanel1() {\n        t"], "files": ["DataPanelJsunit.test.ets", "index.js", "PieceCode.ets", "canvas.ets", "customDialogController.ets", "DataPanel.ets", "CustomDialog.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorElement", "api_method_all": "export interface ImageAnimatorElement extends Element {\n  \n  start(): void;\n  \n  pause(): void;\n  \n  stop(): void;\n  \n  resume(): void;\n  \n  getState(): \"Playing\" | \"Paused\" | \"Stopped\";\n}", "api_method_name": "ImageAnimatorElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorElement", "api_method_name": "start", "api_method_all": "start(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 804, "since": 4, "api_used": "\u662f", "lines": ["geValue}`)\n        .startAngle(`${this.startA", "in = eventData.data.startMargin;\n      }\n    ", " = \"Running Marquee starts rolling\"\n  @State ", "fo(\"[testEllipse02] start to publish emit\");\n", "fo(\"[testEllipse06] start to publish emit\");\n", "    console.info(\"Onstart emit action state e", "(\"enable beforeEach start\");\n      let option", "    console.info('Onstart current action stat", "ue = eventData.data.startAngleValue;\n      }\n", "nsole.info(\"button1 start to emit action stat", "is.color,\n          startMargin: this.startMa", "  startMargin: this.startMargin,\n          en", "(\"column beforeEach start\");\n      let option", "nfo(\"[testEnable03] start to publish emit\");\n", "   })\n      Button('start')\n        .key('but", "fo(\"[testEllipse03] start to publish emit\");\n", "ull) {\n        this.startMargin = eventData.d", "eExample {\n  @State start: boolean = false\n  ", "{\n    console.info(\"start run testcase!!!!\")\n", "sole.info(\"Onbounce start to emit action stat", "ull) {\n        this.startAngleValue = eventDa", "\"ellipse beforeEach start\");\n      let option", "nsole.info(\"onClick start to emit action stat", " if (eventData.data.startMargin != null) {\n  ", "fo(\"[testEllipse04] start to publish emit\");\n", "(\"appear beforeEach start\");\n      let option", "info(\"disAppearFlag start to emit action stat", "sole.info(\"onChange start to emit action stat", "      console.info(\"start to emit action stat", " if (eventData.data.startAngleValue != null) ", "ole.info(\"touchFlag start to emit action stat", ".startAngle(`${this.startAngleValue}`)\n      ", "      \"start\": this.start,\n              }\n  ", "  Marquee({\n        start: this.start,\n      ", "le.info(\"appearFlag start to emit action stat", "=> {\n          this.start = true\n          tr", "nsole.info(\"Onstart start to emit action stat", " {\n                \"start\": this.start,\n     ", "fo(\"[testEllipse07] start to publish emit\");\n", "    console.info(\"Onstart start to emit actio", "        start: this.start,\n        step: this", "fo(\"[testEllipse05] start to publish emit\");\n", "sole.info(\"Onfinish start to emit action stat", ".info(\"onAreaChange start to emit action stat", "nfo(\"[testColumn02] start to publish emit\");\n", "ring = 20;\n  @State startAngleValue: string =", " 0xFFFFFF;\n  @State startMargin: number = 20.", "nfo(\"[testEnable02] start to publish emit\");\n", "e.info(\"[TouchAble] start to emit action stat", "nsole.info(\"button2 start to emit action stat"], "files": ["ImageJsunit.test.ets", "configuration.ets", "ImageEffectsJsunit.test.ets", "video.ets", "ListItemJsunit.test.ets", "longPressGesture.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "TextStyleJsunit.test.ets", "geometryTransition.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "marquee.ets", "TextClockJsunit.test.ets", "textTimer.ets", "mediaquery.test.js", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "ResponseRegion.ets", "basicabilityapi.test.js", "RichTextJsunit.test.ets", "CalendarJsunit.test.ets", "transition.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "CurvesJsunit.test.ets", "button.ets", "FlexWrapJsunit.test.ets", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "SourceTypeJsunit.test.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "gauge.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "Scroll.ets", "TransitionJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "PanGesture.ets", "Canvas2Jsunit.test.ets", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "Utils.ets", "ShapeJsunit.test.ets", "PieceCode.ets", "GlobalJsunit.test.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "textClock.ets", "tabs.ets", "BindMenuJsunit.test.ets", "videoProps.test.js", "list.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "DatePickerJsunit.test.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "Video.ets", "TextAreaJsunit.test.ets", "textareaProps.test.js", "imageAnimator.ets", "bindPopup.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "BorderJsunit.test.ets", "direction2.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "canvas.ets", "AboutToDisappearJsunit.test.ets", "CircleJsunit.test.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "animationStatus.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "line.ets", "TransFormJsunit.test.ets", "touchAble.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "datePicker.ets", "pageTransition.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "TabsJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "areaChange.ets", "BindPopupJsunit.test.ets", "timeStamp.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "colorGradient.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorElement", "api_method_name": "pause", "api_method_all": "pause(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 56, "since": 4, "api_used": "\u662f", "lines": ["s.myVideoController.pause();\n        });\n    ", "s.myTimerController.pause();\n        });\n    ", "     this.animation.pause();\n          });\n  ", "          animation.pause()\n        }, 1000)\n", "     });\n    },\n    pause(){\n\n        prompt.", "{\n          Button('pause').borderRadius(8).b", "})\n\n        Button('pause').key('button2').wi", "> {\n      animation.pause()\n    }, 1000)\n\n   ", " })\n        Button('pause').key('button1').wi", "this.$refs.animator.pause();\n    },\n    handl", "});\n        Button(\"pause\").onClick(() => {\n "], "files": ["Video.ets", "video.ets", "textTimer.ets", "animationStatus.ets", "imageAnimator.ets", "animatorOption.ets", "index.js", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorElement", "api_method_name": "stop", "api_method_all": "stop(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 20, "since": 4, "api_used": "\u662f", "lines": ["          message: 'stop'\n        });\n    },", "})\n\n        Button('stop').key('button3').wi", "nt('customMarquee').stop();\n        prompt.s", "});\n        Button(\"stop\").onClick(() => {\n ", "    this.controller.stop()\n          this.on", ";\n        function9.stop();\n        prompt.s", "      console.info('stopPropagation')\n      ", "s.myVideoController.stop();\n        });\n    ", "s.myVideoController.stop();\n      }\n    }\n  ", "    this.controller.stop()\n          })\n    ", "this.$refs.animator.stop();\n    },\n//\n    fo", "e: 'function9 video stop.'\n        })\n    },", " })\n        Button('stop').key('button2').wi", "   })\n      Button(\"stop TextClock\")\n       ", "nY + ')')\n          stopPropagation: () => {", "     });\n    },\n    stop(){\n        prompt.s", "     });\n    },\n    stop() {\n        prompt.", "        }\n          stopPropagation: () => {"], "files": ["textClock.ets", "touch.ets", "WebPage.ets", "video.ets", "mouseEvent.ets", "animationStatus.ets", "imageAnimator.ets", "index.js", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorElement", "api_method_name": "resume", "api_method_all": "resume(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 2, "since": 4, "api_used": "\u662f", "lines": ["     });\n    },\n    resume(){\n        prompt.s", "this.$refs.animator.resume();\n    },\n    handl"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorElement", "api_method_name": "getState", "api_method_all": "getState(): \"Playing\" | \"Paused\" | \"Stopped\";", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 296, "since": 4, "api_used": "\u662f", "lines": [" let pages = router.getState();\n        console."], "files": ["ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "CounterJsunit.test.ets", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "ColumnSplitJsunit.test.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "TextStyleJsunit.test.ets", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "CalendarJsunit.test.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "ScrollerBarJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "Canvas2Jsunit.test.ets", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "ColorGradientJsunit.test.ets", "MotionPathJsunit.test.ets", "ShapeJsunit.test.ets", "GlobalJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "BackgroundAndSizeSettingJsunit.test.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "CircleJsunit.test.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "TransFormJsunit.test.ets", "GestureModeJsunit.test.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "GridSettingsJsunit.test.ets", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "BindPopupJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MarqueeElement", "api_method_all": "export interface MarqueeElement extends Element {\n  \n  start(): void;\n\n  \n  stop(): void;\n}", "api_method_name": "MarqueeElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MarqueeElement", "api_method_name": "start", "api_method_all": "start(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 804, "since": 4, "api_used": "\u662f", "lines": ["geValue}`)\n        .startAngle(`${this.startA", "in = eventData.data.startMargin;\n      }\n    ", " = \"Running Marquee starts rolling\"\n  @State ", "fo(\"[testEllipse02] start to publish emit\");\n", "fo(\"[testEllipse06] start to publish emit\");\n", "    console.info(\"Onstart emit action state e", "(\"enable beforeEach start\");\n      let option", "    console.info('Onstart current action stat", "ue = eventData.data.startAngleValue;\n      }\n", "nsole.info(\"button1 start to emit action stat", "is.color,\n          startMargin: this.startMa", "  startMargin: this.startMargin,\n          en", "(\"column beforeEach start\");\n      let option", "nfo(\"[testEnable03] start to publish emit\");\n", "   })\n      Button('start')\n        .key('but", "fo(\"[testEllipse03] start to publish emit\");\n", "ull) {\n        this.startMargin = eventData.d", "eExample {\n  @State start: boolean = false\n  ", "{\n    console.info(\"start run testcase!!!!\")\n", "sole.info(\"Onbounce start to emit action stat", "ull) {\n        this.startAngleValue = eventDa", "\"ellipse beforeEach start\");\n      let option", "nsole.info(\"onClick start to emit action stat", " if (eventData.data.startMargin != null) {\n  ", "fo(\"[testEllipse04] start to publish emit\");\n", "(\"appear beforeEach start\");\n      let option", "info(\"disAppearFlag start to emit action stat", "sole.info(\"onChange start to emit action stat", "      console.info(\"start to emit action stat", " if (eventData.data.startAngleValue != null) ", "ole.info(\"touchFlag start to emit action stat", ".startAngle(`${this.startAngleValue}`)\n      ", "      \"start\": this.start,\n              }\n  ", "  Marquee({\n        start: this.start,\n      ", "le.info(\"appearFlag start to emit action stat", "=> {\n          this.start = true\n          tr", "nsole.info(\"Onstart start to emit action stat", " {\n                \"start\": this.start,\n     ", "fo(\"[testEllipse07] start to publish emit\");\n", "    console.info(\"Onstart start to emit actio", "        start: this.start,\n        step: this", "fo(\"[testEllipse05] start to publish emit\");\n", "sole.info(\"Onfinish start to emit action stat", ".info(\"onAreaChange start to emit action stat", "nfo(\"[testColumn02] start to publish emit\");\n", "ring = 20;\n  @State startAngleValue: string =", " 0xFFFFFF;\n  @State startMargin: number = 20.", "nfo(\"[testEnable02] start to publish emit\");\n", "e.info(\"[TouchAble] start to emit action stat", "nsole.info(\"button2 start to emit action stat"], "files": ["ImageJsunit.test.ets", "configuration.ets", "ImageEffectsJsunit.test.ets", "video.ets", "ListItemJsunit.test.ets", "longPressGesture.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "TextStyleJsunit.test.ets", "geometryTransition.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "marquee.ets", "TextClockJsunit.test.ets", "textTimer.ets", "mediaquery.test.js", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "ResponseRegion.ets", "basicabilityapi.test.js", "RichTextJsunit.test.ets", "CalendarJsunit.test.ets", "transition.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "CurvesJsunit.test.ets", "button.ets", "FlexWrapJsunit.test.ets", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "SourceTypeJsunit.test.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "gauge.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "Scroll.ets", "TransitionJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "PanGesture.ets", "Canvas2Jsunit.test.ets", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "Utils.ets", "ShapeJsunit.test.ets", "PieceCode.ets", "GlobalJsunit.test.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "textClock.ets", "tabs.ets", "BindMenuJsunit.test.ets", "videoProps.test.js", "list.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "DatePickerJsunit.test.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "Video.ets", "TextAreaJsunit.test.ets", "textareaProps.test.js", "imageAnimator.ets", "bindPopup.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "BorderJsunit.test.ets", "direction2.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "canvas.ets", "AboutToDisappearJsunit.test.ets", "CircleJsunit.test.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "animationStatus.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "line.ets", "TransFormJsunit.test.ets", "touchAble.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "datePicker.ets", "pageTransition.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "TabsJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "areaChange.ets", "BindPopupJsunit.test.ets", "timeStamp.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "colorGradient.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MarqueeElement", "api_method_name": "stop", "api_method_all": "stop(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 20, "since": 4, "api_used": "\u662f", "lines": ["          message: 'stop'\n        });\n    },", "})\n\n        Button('stop').key('button3').wi", "nt('customMarquee').stop();\n        prompt.s", "});\n        Button(\"stop\").onClick(() => {\n ", "    this.controller.stop()\n          this.on", ";\n        function9.stop();\n        prompt.s", "      console.info('stopPropagation')\n      ", "s.myVideoController.stop();\n        });\n    ", "s.myVideoController.stop();\n      }\n    }\n  ", "    this.controller.stop()\n          })\n    ", "this.$refs.animator.stop();\n    },\n//\n    fo", "e: 'function9 video stop.'\n        })\n    },", " })\n        Button('stop').key('button2').wi", "   })\n      Button(\"stop TextClock\")\n       ", "nY + ')')\n          stopPropagation: () => {", "     });\n    },\n    stop(){\n        prompt.s", "     });\n    },\n    stop() {\n        prompt.", "        }\n          stopPropagation: () => {"], "files": ["textClock.ets", "touch.ets", "WebPage.ets", "video.ets", "mouseEvent.ets", "animationStatus.ets", "imageAnimator.ets", "index.js", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MenuElement", "api_method_all": "export interface MenuElement extends Element {\n  \n  show(position: { x: number; y: number }): void;\n}", "api_method_name": "MenuElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MenuElement", "api_method_name": "show", "api_method_all": "show(position: { x: number; y: number }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3848, "since": 4, "api_used": "\u662f", "lines": ["CCCCC)\n            .showSteps(false)\n       ", "info('Calendar page show called');\n    var s", "nfo('[enabled] page show called ');\n    var ", "ps(true)\n          .showTips(true)\n         ", "{\n      Button(this.show).width(80).height(3", "info('Checkbox page show called');\n    var s", "             prompt.showToast({\n            ", "\n              this.show = \"show\"\n          ", "ole.info('flex page show called');\n    var s", "false)\n            .showTips(false)\n        ", "info('[column] page show called');\n    var s", "info('[zIndex] page show called ');\n    var ", "le.info('gauge page show called');\n    var s", "or.Blue)\n          .showSteps(true)\n        ", "info('[appear] page show called');\n    var s", "'checkboxGroup page show called');\n    var s", "\n            prompt.showToast({ message: 'Th", "ate show: string = \"show\"\n\n  build() {\n    F", ".info('stepper page show called');\n    var s", "ssage: 'The text is shown', duration: 2000 }", "nfo('[ellipse] page show called');\n    var s", "       this.show = \"show\"\n            }\n    ", ".Blue)\n            .showSteps(true)\n        ", "e.info('[list] page show called');\n    var s", "is.swiperController.showPrevious()\n         ", "is.swiperController.showNext();\n            ", "'gridContainer page show called');\n    var s", "s(false)\n          .showTips(false)\n        ", "fo('background page show called');\n    var s", "xCCCCCC)\n          .showSteps(false)\n       ", "fo('edgeEffect page show called');\n    var s", "e.info('swiper page show called');\n    var s", "'shapeClipping page show called');\n    var s", "('imageEffects page show called');\n    var s", "e.info('border page show called');\n    var s", "an = false\n  @State show: string = \"show\"\n\n ", "\n              this.show = \"hide\"\n          ", ".info('[touch] page show called');\n    var s", "ansFormExample page show called');\n    var s", "nfo('[overlay] page show called ');\n    var ", "o('[TouchAble] page show called');\n    var s", "ColorGradient] page show called');\n    var s", "(true)\n            .showTips(true)\n         ", " {\n          prompt.showToast({ message: JSO", "e.info('select page show called');\n    var s", "e.info('slider page show called');\n    var s", "ansFormExample page show called');\n\n    var ", "le.info('focus page show called');\n    var s"], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "dividerProps.test.js", "video.ets", "tabContentProps.test.js", "textProps.test.js", "Navigator.ets", "playMode.ets", "toolbarProps.test.js", "Qrcode.ets", "Navigation.ets", "Span.ets", "richText.ets", "column.ets", "Panel.ets", "Progress.ets", "checkboxGroup.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "toolbarItemProps.test.js", "Rating.ets", "PieceJsunit.test.ets", "Swiper.ets", "basicabilityapi.test.js", "Divider.ets", "badgeProps.test.js", "border.ets", "scrollBar.ets", "dialogProps.test.js", "textArea.ets", "transition.ets", "systemPrompt.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "scrollCode.ets", "button.ets", "RichText.ets", "formProps.test.js", "focus.ets", "touch.ets", "background.ets", "Slider.ets", "stackProps.test.js", "Text.ets", "PanelJsunit.test.ets", "Counter.ets", "gauge.ets", "Stack.ets", "swiper.ets", "sideBar.ets", "toggle.ets", "refreshProps.test.js", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "canvasProps.test.js", "TextArea.ets", "animatorOption.ets", "flexDirection.ets", "shapeClipping.ets", "edgeEffect.ets", "stepper.ets", "shape.ets", "labelProps.test.js", "row.ets", "loadingProgress.ets", "Marquee.ets", "gridContainerProps.test.js", "stepperProps.test.js", "Select.ets", "flex.ets", "ratingProps.test.js", "Shape.ets", "marqueeProps.test.js", "gridContainer.ets", "PatternLock.ets", "Polyline.ets", "imageAnimatorProps.test.js", "textPickerDialog.ets", "gridPage.ets", "enable.ets", "PieceCode.ets", "tabsProps.test.js", "badge.ets", "qrcodeProps.test.js", "imageEffects.ets", "popupProps.test.js", "AlphabetIndexer.ets", "ColumnSplit.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "videoProps.test.js", "list.ets", "colorGradient.ets", "AppStorage.ets", "QrCode.ets", "GridContainer.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "checkbox.ets", "Video.ets", "pieceProps.test.js", "pickerProps.test.js", "circle.ets", "listItem.ets", "selectProps.test.js", "Button.ets", "textareaProps.test.js", "Polygon.ets", "gridColProps.test.js", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "Rect.ets", "divProps.test.js", "switchProps.test.js", "divider.ets", "ScrollBar.ets", "TextInput.ets", "ellipse.ets", "appear.ets", "rating.ets", "zIndex.ets", "Path.ets", "line.ets", "DataPanel.ets", "chartProps.test.js", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "sliderProps.test.js", "swiperProps.test.js", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "Link.ets", "imageProps.test.js", "select.ets", "Toggle.ets", "listProps.test.js", "slider.ets", "progressProps.test.js", "aboutToDisappear.ets", "Calendar.ets", "sharedTransition.ets", "refresh.ets", "motionPath.ets", "search.ets", "panel.ets", "menuProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ChartElement", "api_method_all": "export interface ChartElement extends Element {\n  \n  append(params: {\n    \n    serial: number;\n    \n    data: Array<number>;\n  }): void;\n}", "api_method_name": "ChartElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ChartElement", "api_method_name": "append", "api_method_all": "append(params: {\n    \n    serial: number;\n    \n    data: Array<number>;\n  }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 4, "api_used": "\u662f", "lines": ["his.$refs.linechart.append({\n            seria"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "InputElement", "api_method_all": "export interface InputElement extends Element {\n  \n  focus(param: { focus: boolean }): void;\n\n  \n  showError(param: { error: string }): void;\n\n  \n  delete(): void;\n}", "api_method_name": "InputElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "InputElement", "api_method_name": "focus", "api_method_all": "focus(param: { focus: boolean }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 1260, "since": 3, "api_used": "\u662f", "lines": ["console.error(\"push focus page error:\" + err)", "t.test.ets';\nimport focusJsunit from './Focus", " '#87CEFA'\n  @State focusable: boolean = fals", "pNone,\n             focusablePropTrue : this.", "ue : null,\n         focusablePropFalse : null", "  console.info(\"get focus state pages.name:\" ", "le = eventData.data.focusable;\n      }\n    }\n", "st ATTRS_FOCUSED = 'focused'\nconst ATTRS_SCRO", "      console.info(\"focus page state change c", "ablePropTrue : this.focusablePropTrue,\n      ", " console.info(\"push focus page result:\" + JSO", "  console.info(\"get focus state pages:\" + JSO", "      console.info('focusTest_0100 START');\n ", "ne : null,\n         focusablePropTrue : null,", ");\n    });\n\n    it('focusTest_0100', 0, async", "ull) {\n        this.focusable = eventData.dat", "ayStyle({\n          focusedDayColor: Color.Re", "lor.Blue,\n          focusedAreaRadius: 20\n   ", "rd button cannot be focused'\n  @State oneButt", "s));\n        if (!(\"focus\" == pages.name)) {\n", "    .focusable(this.focusable)\n        .onFoc", "      console.info(\"focusTest_0100 start to p", "      console.info('focusTest_0100 END');\n   ", "se : null,\n         focusablePropNone : null,", " ATTRS_FOCUSABLE = 'focusable'\nconst ATTRS_CH", "      console.info(\"focus after each called\")", "\n  basicJsunit();\n  focusJsunit();\n  textArea", "r.Orange,\n          focusedAreaBackgroundColo", " if (eventData.data.focusable != null) {\n    ", "{\n    console.info('focus page show called');", "rt default function focusJsunit() {\n  describ", "      console.info(\"focus beforeEach start\");", "ata: {\n            \"focusable\": true\n        ", "        uri: 'pages/focus',\n      }\n      try", "  expect(obj.$attrs.focusable).assertEqual(tr", "       console.log(\"focusTest_0100 change com", "olor.Red,\n          focusedLunarColor: Color.", "lor.Black)\n        .focusable(this.focusable)"], "files": ["ratingProps.test.js", "listItemGroupProps.test.js", "formProps.test.js", "focus.ets", "tabContentProps.test.js", "marqueeProps.test.js", "textProps.test.js", "imageAnimatorProps.test.js", "buttonProps.test.js", "toolbarProps.test.js", "tabsProps.test.js", "pickerViewProps.test.js", "qrcodeProps.test.js", "stackProps.test.js", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "TouchAbleJsunit.test.ets", "Constants.ets", "refreshProps.test.js", "listItemProps.test.js", "searchProps.test.js", "chartProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "canvasProps.test.js", "sliderProps.test.js", "swiperProps.test.js", "toolbarItemProps.test.js", "videoProps.test.js", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "optionProps.test.js", "badgeProps.test.js", "pieceProps.test.js", "dialogProps.test.js", "imageProps.test.js", "listProps.test.js", "labelProps.test.js", "pickerProps.test.js", "progressProps.test.js", "selectProps.test.js", "textareaProps.test.js", "gridColProps.test.js", "Calendar.ets", "List.test.ets", "gridContainerProps.test.js", "stepperProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "InputElement", "api_method_name": "showError", "api_method_all": "showError(param: { error: string }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 4, "api_used": "\u662f", "lines": [";\n        function4.showError({ error: \"you input"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "InputElement", "api_method_name": "delete", "api_method_all": "delete(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 9, "since": 6, "api_used": "\u662f", "lines": ["ey5);\n      storage.delete(\"key5\");\n      key5", "t(\"PropA\", 20))\nvar deleteValue = String(AppSt", "ment_ContentStorage_delete_0100] END');\n      ", "ment_ContentStorage_delete_0100', 0, function ", "tate str7: string = deleteValue\n  @State str8:", ";\n        function4.delete();\n    },\n\n    chan", "ment_ContentStorage_delete_0100] START');\n    ", "    this.controller.deleteJavaScriptRegister('", "te = contentStorage.delete(\"key1\");\n      expe"], "files": ["WebPage.ets", "ContentStorage.test.ets", "AppStorage.ets", "index.js", "AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ButtonElement", "api_method_all": "export interface ButtonElement extends Element {\n  \n  setProgress(param: { progress: number }): void;\n}", "api_method_name": "ButtonElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ButtonElement", "api_method_name": "setProgress", "api_method_all": "setProgress(param: { progress: number }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 2, "since": 4, "api_used": "\u662f", "lines": ["ent('download-btn').setProgress({ progress: this.pr", "vent));\n    },\n\n    setProgress(e) {\n        var i="], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "TextAreaElement", "api_method_all": "export interface TextAreaElement extends Element {\n  \n  focus(param: { focus: boolean }): void;\n}", "api_method_name": "TextAreaElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TextAreaElement", "api_method_name": "focus", "api_method_all": "focus(param: { focus: boolean }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 1260, "since": 3, "api_used": "\u662f", "lines": ["console.error(\"push focus page error:\" + err)", "t.test.ets';\nimport focusJsunit from './Focus", " '#87CEFA'\n  @State focusable: boolean = fals", "pNone,\n             focusablePropTrue : this.", "ue : null,\n         focusablePropFalse : null", "  console.info(\"get focus state pages.name:\" ", "le = eventData.data.focusable;\n      }\n    }\n", "st ATTRS_FOCUSED = 'focused'\nconst ATTRS_SCRO", "      console.info(\"focus page state change c", "ablePropTrue : this.focusablePropTrue,\n      ", " console.info(\"push focus page result:\" + JSO", "  console.info(\"get focus state pages:\" + JSO", "      console.info('focusTest_0100 START');\n ", "ne : null,\n         focusablePropTrue : null,", ");\n    });\n\n    it('focusTest_0100', 0, async", "ull) {\n        this.focusable = eventData.dat", "ayStyle({\n          focusedDayColor: Color.Re", "lor.Blue,\n          focusedAreaRadius: 20\n   ", "rd button cannot be focused'\n  @State oneButt", "s));\n        if (!(\"focus\" == pages.name)) {\n", "    .focusable(this.focusable)\n        .onFoc", "      console.info(\"focusTest_0100 start to p", "      console.info('focusTest_0100 END');\n   ", "se : null,\n         focusablePropNone : null,", " ATTRS_FOCUSABLE = 'focusable'\nconst ATTRS_CH", "      console.info(\"focus after each called\")", "\n  basicJsunit();\n  focusJsunit();\n  textArea", "r.Orange,\n          focusedAreaBackgroundColo", " if (eventData.data.focusable != null) {\n    ", "{\n    console.info('focus page show called');", "rt default function focusJsunit() {\n  describ", "      console.info(\"focus beforeEach start\");", "ata: {\n            \"focusable\": true\n        ", "        uri: 'pages/focus',\n      }\n      try", "  expect(obj.$attrs.focusable).assertEqual(tr", "       console.log(\"focusTest_0100 change com", "olor.Red,\n          focusedLunarColor: Color.", "lor.Black)\n        .focusable(this.focusable)"], "files": ["ratingProps.test.js", "listItemGroupProps.test.js", "formProps.test.js", "focus.ets", "tabContentProps.test.js", "marqueeProps.test.js", "textProps.test.js", "imageAnimatorProps.test.js", "buttonProps.test.js", "toolbarProps.test.js", "tabsProps.test.js", "pickerViewProps.test.js", "qrcodeProps.test.js", "stackProps.test.js", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "TouchAbleJsunit.test.ets", "Constants.ets", "refreshProps.test.js", "listItemProps.test.js", "searchProps.test.js", "chartProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "canvasProps.test.js", "sliderProps.test.js", "swiperProps.test.js", "toolbarItemProps.test.js", "videoProps.test.js", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "optionProps.test.js", "badgeProps.test.js", "pieceProps.test.js", "dialogProps.test.js", "imageProps.test.js", "listProps.test.js", "labelProps.test.js", "pickerProps.test.js", "progressProps.test.js", "selectProps.test.js", "textareaProps.test.js", "gridColProps.test.js", "Calendar.ets", "List.test.ets", "gridContainerProps.test.js", "stepperProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "PickerElement", "api_method_all": "export interface PickerElement extends Element {\n  \n  show(): void;\n}", "api_method_name": "PickerElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "PickerElement", "api_method_name": "show", "api_method_all": "show(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 3848, "since": 4, "api_used": "\u662f", "lines": ["CCCCC)\n            .showSteps(false)\n       ", "info('Calendar page show called');\n    var s", "nfo('[enabled] page show called ');\n    var ", "ps(true)\n          .showTips(true)\n         ", "{\n      Button(this.show).width(80).height(3", "info('Checkbox page show called');\n    var s", "             prompt.showToast({\n            ", "\n              this.show = \"show\"\n          ", "ole.info('flex page show called');\n    var s", "false)\n            .showTips(false)\n        ", "info('[column] page show called');\n    var s", "info('[zIndex] page show called ');\n    var ", "le.info('gauge page show called');\n    var s", "or.Blue)\n          .showSteps(true)\n        ", "info('[appear] page show called');\n    var s", "'checkboxGroup page show called');\n    var s", "\n            prompt.showToast({ message: 'Th", "ate show: string = \"show\"\n\n  build() {\n    F", ".info('stepper page show called');\n    var s", "ssage: 'The text is shown', duration: 2000 }", "nfo('[ellipse] page show called');\n    var s", "       this.show = \"show\"\n            }\n    ", ".Blue)\n            .showSteps(true)\n        ", "e.info('[list] page show called');\n    var s", "is.swiperController.showPrevious()\n         ", "is.swiperController.showNext();\n            ", "'gridContainer page show called');\n    var s", "s(false)\n          .showTips(false)\n        ", "fo('background page show called');\n    var s", "xCCCCCC)\n          .showSteps(false)\n       ", "fo('edgeEffect page show called');\n    var s", "e.info('swiper page show called');\n    var s", "'shapeClipping page show called');\n    var s", "('imageEffects page show called');\n    var s", "e.info('border page show called');\n    var s", "an = false\n  @State show: string = \"show\"\n\n ", "\n              this.show = \"hide\"\n          ", ".info('[touch] page show called');\n    var s", "ansFormExample page show called');\n    var s", "nfo('[overlay] page show called ');\n    var ", "o('[TouchAble] page show called');\n    var s", "ColorGradient] page show called');\n    var s", "(true)\n            .showTips(true)\n         ", " {\n          prompt.showToast({ message: JSO", "e.info('select page show called');\n    var s", "e.info('slider page show called');\n    var s", "ansFormExample page show called');\n\n    var ", "le.info('focus page show called');\n    var s"], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "dividerProps.test.js", "video.ets", "tabContentProps.test.js", "textProps.test.js", "Navigator.ets", "playMode.ets", "toolbarProps.test.js", "Qrcode.ets", "Navigation.ets", "Span.ets", "richText.ets", "column.ets", "Panel.ets", "Progress.ets", "checkboxGroup.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "toolbarItemProps.test.js", "Rating.ets", "PieceJsunit.test.ets", "Swiper.ets", "basicabilityapi.test.js", "Divider.ets", "badgeProps.test.js", "border.ets", "scrollBar.ets", "dialogProps.test.js", "textArea.ets", "transition.ets", "systemPrompt.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "scrollCode.ets", "button.ets", "RichText.ets", "formProps.test.js", "focus.ets", "touch.ets", "background.ets", "Slider.ets", "stackProps.test.js", "Text.ets", "PanelJsunit.test.ets", "Counter.ets", "gauge.ets", "Stack.ets", "swiper.ets", "sideBar.ets", "toggle.ets", "refreshProps.test.js", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "canvasProps.test.js", "TextArea.ets", "animatorOption.ets", "flexDirection.ets", "shapeClipping.ets", "edgeEffect.ets", "stepper.ets", "shape.ets", "labelProps.test.js", "row.ets", "loadingProgress.ets", "Marquee.ets", "gridContainerProps.test.js", "stepperProps.test.js", "Select.ets", "flex.ets", "ratingProps.test.js", "Shape.ets", "marqueeProps.test.js", "gridContainer.ets", "PatternLock.ets", "Polyline.ets", "imageAnimatorProps.test.js", "textPickerDialog.ets", "gridPage.ets", "enable.ets", "PieceCode.ets", "tabsProps.test.js", "badge.ets", "qrcodeProps.test.js", "imageEffects.ets", "popupProps.test.js", "AlphabetIndexer.ets", "ColumnSplit.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "videoProps.test.js", "list.ets", "colorGradient.ets", "AppStorage.ets", "QrCode.ets", "GridContainer.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "checkbox.ets", "Video.ets", "pieceProps.test.js", "pickerProps.test.js", "circle.ets", "listItem.ets", "selectProps.test.js", "Button.ets", "textareaProps.test.js", "Polygon.ets", "gridColProps.test.js", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "Rect.ets", "divProps.test.js", "switchProps.test.js", "divider.ets", "ScrollBar.ets", "TextInput.ets", "ellipse.ets", "appear.ets", "rating.ets", "zIndex.ets", "Path.ets", "line.ets", "DataPanel.ets", "chartProps.test.js", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "sliderProps.test.js", "swiperProps.test.js", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "Link.ets", "imageProps.test.js", "select.ets", "Toggle.ets", "listProps.test.js", "slider.ets", "progressProps.test.js", "aboutToDisappear.ets", "Calendar.ets", "sharedTransition.ets", "refresh.ets", "motionPath.ets", "search.ets", "panel.ets", "menuProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "VideoElement", "api_method_all": "export interface VideoElement extends Element {\n  \n  start(): void;\n\n  \n  pause(): void;\n\n  \n  setCurrentTime(param: { currenttime: number }): void;\n\n  \n  requestFullscreen(param: { screenOrientation: \"default\" }): void;\n\n  \n  exitFullscreen(): void;\n\n  \n  stop(): void;\n}", "api_method_name": "VideoElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "VideoElement", "api_method_name": "start", "api_method_all": "start(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 804, "since": 4, "api_used": "\u662f", "lines": ["geValue}`)\n        .startAngle(`${this.startA", "in = eventData.data.startMargin;\n      }\n    ", " = \"Running Marquee starts rolling\"\n  @State ", "fo(\"[testEllipse02] start to publish emit\");\n", "fo(\"[testEllipse06] start to publish emit\");\n", "    console.info(\"Onstart emit action state e", "(\"enable beforeEach start\");\n      let option", "    console.info('Onstart current action stat", "ue = eventData.data.startAngleValue;\n      }\n", "nsole.info(\"button1 start to emit action stat", "is.color,\n          startMargin: this.startMa", "  startMargin: this.startMargin,\n          en", "(\"column beforeEach start\");\n      let option", "nfo(\"[testEnable03] start to publish emit\");\n", "   })\n      Button('start')\n        .key('but", "fo(\"[testEllipse03] start to publish emit\");\n", "ull) {\n        this.startMargin = eventData.d", "eExample {\n  @State start: boolean = false\n  ", "{\n    console.info(\"start run testcase!!!!\")\n", "sole.info(\"Onbounce start to emit action stat", "ull) {\n        this.startAngleValue = eventDa", "\"ellipse beforeEach start\");\n      let option", "nsole.info(\"onClick start to emit action stat", " if (eventData.data.startMargin != null) {\n  ", "fo(\"[testEllipse04] start to publish emit\");\n", "(\"appear beforeEach start\");\n      let option", "info(\"disAppearFlag start to emit action stat", "sole.info(\"onChange start to emit action stat", "      console.info(\"start to emit action stat", " if (eventData.data.startAngleValue != null) ", "ole.info(\"touchFlag start to emit action stat", ".startAngle(`${this.startAngleValue}`)\n      ", "      \"start\": this.start,\n              }\n  ", "  Marquee({\n        start: this.start,\n      ", "le.info(\"appearFlag start to emit action stat", "=> {\n          this.start = true\n          tr", "nsole.info(\"Onstart start to emit action stat", " {\n                \"start\": this.start,\n     ", "fo(\"[testEllipse07] start to publish emit\");\n", "    console.info(\"Onstart start to emit actio", "        start: this.start,\n        step: this", "fo(\"[testEllipse05] start to publish emit\");\n", "sole.info(\"Onfinish start to emit action stat", ".info(\"onAreaChange start to emit action stat", "nfo(\"[testColumn02] start to publish emit\");\n", "ring = 20;\n  @State startAngleValue: string =", " 0xFFFFFF;\n  @State startMargin: number = 20.", "nfo(\"[testEnable02] start to publish emit\");\n", "e.info(\"[TouchAble] start to emit action stat", "nsole.info(\"button2 start to emit action stat"], "files": ["ImageJsunit.test.ets", "configuration.ets", "ImageEffectsJsunit.test.ets", "video.ets", "ListItemJsunit.test.ets", "longPressGesture.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "TextStyleJsunit.test.ets", "geometryTransition.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "marquee.ets", "TextClockJsunit.test.ets", "textTimer.ets", "mediaquery.test.js", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "ResponseRegion.ets", "basicabilityapi.test.js", "RichTextJsunit.test.ets", "CalendarJsunit.test.ets", "transition.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "CurvesJsunit.test.ets", "button.ets", "FlexWrapJsunit.test.ets", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "SourceTypeJsunit.test.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "gauge.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "Scroll.ets", "TransitionJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "PanGesture.ets", "Canvas2Jsunit.test.ets", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "Utils.ets", "ShapeJsunit.test.ets", "PieceCode.ets", "GlobalJsunit.test.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "textClock.ets", "tabs.ets", "BindMenuJsunit.test.ets", "videoProps.test.js", "list.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "DatePickerJsunit.test.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "Video.ets", "TextAreaJsunit.test.ets", "textareaProps.test.js", "imageAnimator.ets", "bindPopup.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "BorderJsunit.test.ets", "direction2.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "canvas.ets", "AboutToDisappearJsunit.test.ets", "CircleJsunit.test.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "animationStatus.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "line.ets", "TransFormJsunit.test.ets", "touchAble.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "datePicker.ets", "pageTransition.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "TabsJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "areaChange.ets", "BindPopupJsunit.test.ets", "timeStamp.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "colorGradient.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "VideoElement", "api_method_name": "pause", "api_method_all": "pause(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 56, "since": 4, "api_used": "\u662f", "lines": ["s.myVideoController.pause();\n        });\n    ", "s.myTimerController.pause();\n        });\n    ", "     this.animation.pause();\n          });\n  ", "          animation.pause()\n        }, 1000)\n", "     });\n    },\n    pause(){\n\n        prompt.", "{\n          Button('pause').borderRadius(8).b", "})\n\n        Button('pause').key('button2').wi", "> {\n      animation.pause()\n    }, 1000)\n\n   ", " })\n        Button('pause').key('button1').wi", "this.$refs.animator.pause();\n    },\n    handl", "});\n        Button(\"pause\").onClick(() => {\n "], "files": ["Video.ets", "video.ets", "textTimer.ets", "animationStatus.ets", "imageAnimator.ets", "animatorOption.ets", "index.js", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "VideoElement", "api_method_name": "setCurrentTime", "api_method_all": "setCurrentTime(param: { currenttime: number }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 14, "since": 4, "api_used": "\u662f", "lines": ["s.myVideoController.setCurrentTime(9, SeekMode.Closest", "});\n        Button(\"setCurrentTime\").onClick(() => {\n ", ";\n        function6.setCurrentTime({\n            curre", "s.myVideoController.setCurrentTime(9, SeekMode.Previou", ") {\n        Button(\"setCurrentTime\").onClick(() => {\n ", "e: 'function6 video setCurrentTime.'\n        })\n    },", "s.myVideoController.setCurrentTime(9, SeekMode.Accurat", "s.myVideoController.setCurrentTime(9);\n        });\n   ", "s.myVideoController.setCurrentTime(9, SeekMode.NextKey"], "files": ["video.ets", "Video.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "VideoElement", "api_method_name": "requestFullscreen", "api_method_all": "requestFullscreen(param: { screenOrientation: \"default\" }): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 2, "since": 4, "api_used": "\u662f", "lines": [";\n        function7.requestFullscreen({\n            scree", "e: 'function7 video requestFullscreen.'\n        })\n\n    }"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "VideoElement", "api_method_name": "exitFullscreen", "api_method_all": "exitFullscreen(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 2, "since": 4, "api_used": "\u662f", "lines": ["e: 'function8 video exitFullscreen.'\n        })\n    },", ";\n        function8.exitFullscreen();\n        prompt.s"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "VideoElement", "api_method_name": "stop", "api_method_all": "stop(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 20, "since": 4, "api_used": "\u662f", "lines": ["          message: 'stop'\n        });\n    },", "})\n\n        Button('stop').key('button3').wi", "nt('customMarquee').stop();\n        prompt.s", "});\n        Button(\"stop\").onClick(() => {\n ", "    this.controller.stop()\n          this.on", ";\n        function9.stop();\n        prompt.s", "      console.info('stopPropagation')\n      ", "s.myVideoController.stop();\n        });\n    ", "s.myVideoController.stop();\n      }\n    }\n  ", "    this.controller.stop()\n          })\n    ", "this.$refs.animator.stop();\n    },\n//\n    fo", "e: 'function9 video stop.'\n        })\n    },", " })\n        Button('stop').key('button2').wi", "   })\n      Button(\"stop TextClock\")\n       ", "nY + ')')\n          stopPropagation: () => {", "     });\n    },\n    stop(){\n        prompt.s", "     });\n    },\n    stop() {\n        prompt.", "        }\n          stopPropagation: () => {"], "files": ["textClock.ets", "touch.ets", "WebPage.ets", "video.ets", "mouseEvent.ets", "animationStatus.ets", "imageAnimator.ets", "index.js", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TextMetrics", "api_method_all": "export interface TextMetrics {\n  \n  width: number;\n  \n  height: number;\n}", "api_method_name": "TextMetrics", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TextMetrics", "api_method_name": "width", "api_method_all": "width: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1772, "since": 6, "api_used": "\u662f", "lines": ["temsColumn\")\n      .width('90%')\n      .borde", "thValue}`)\n        .width(200)\n        .heigh", ");\n        })\n    }.width('100%').height('100", "Stretch)\n          .width('33%')\n          .h", "s.alignItems)\n    }.width('100%').padding({ t", ")\n        }\n      }.width('90%').key('gridCon", "gnSelf,height:100').width('34%').height(100)\n", "hrink(2)\n          .width('40%')\n          .h", "ull) {\n        this.width = eventData.data.wi", "(\"img_width=\" + img.width);\n    console.log(\"", "blurValue)\n        .width('90%')\n        .hei", "s/bg.jpg\");\n    let width = img.width;\n    le", "ign.Center)\n      }.width('90%').height(120).", "le.log(\"imagebitmap_width=\" + width);\n    con", "fontColor(0xCCCCCC).width('90%')\n      Column", "pse().width(`${this.width}`).height(`${this.h", "fontColor(0xCCCCCC).width('90%')\n      Flex({", "fontColor(0xCCCCCC).width('90%')\n      Text()", "Shrink')\n          .width('40%')\n          .h", "fontColor(0xCCCCCC).width('90%')\n      Text('", "eExample {\n  @State width: string = \"200px\";\n", "agebitmap_width=\" + width);\n    console.log(\"", "lor(0xAFEEEE)\n    }.width('100%').margin({ to", "xBasis\")\n          .width('60%')\n          .h", "    let width = img.width;\n    let height = i", "%')\n      .border({ width: 1 })\n      .alignI", "enabled)\n    }\n    .width('100%')\n    .paddin", "t: 30 })\n    }\n    .width('100%').height('100", "sole.log(\"imageData_width=\" + imageData.width", "}\n    }.padding(30).width('100%')\n  }\n}", "Shrink\")\n          .width('50%')\n          .h", "    Text()\n        .width('90%')\n        .hei", " .height(200)\n    }.width('100%').margin({ to", "ey('ellipse')\n    }.width('100%').height('100", ") {\n      Ellipse().width(`${this.width}`).he", " {\n        Column().width('50%').height(30).b", "ckgroundImageSize({ width: 1200, height: 160 ", " if (eventData.data.width != null) {\n        ", "   console.log(\"img_width=\" + img.width);\n   ", ".key('flex')\n      .width('90%')\n      .heigh", "ignSelf,height:80').width('33%').height(80)\n ", "s.context)\n        .width('100%').height('40%", "width=\" + imageData.width);\n    console.log(\"", "fontColor(0xCCCCCC).width('90%')\n      Flex()", "th = eventData.data.width;\n      }\n      if (", "E)\n        Column().width('50%').height(30).b"], "files": ["pageTransition2.ets", "ohosPrompt.ets", "systemRouterA.ets", "pathProps.test.js", "dividerProps.test.js", "video.ets", "Navigator.ets", "longPressGesture.ets", "canvas2.ets", "placement.ets", "playMode.ets", "Qrcode.ets", "Row.ets", "Navigation.ets", "imageFit.ets", "PathJsunit.test.ets", "Span.ets", "polylineProps.test.js", "Progress.ets", "column.ets", "Panel.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "toolbarItemProps.test.js", "marquee.ets", "Rating.ets", "enumsLineCapStyle.ets", "mediaquery.test.js", "Swiper.ets", "Divider.ets", "border.ets", "ResponseRegion.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "transition.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "polyline.ets", "focus.ets", "touch.ets", "circleProps.test.js", "ListItem.ets", "background.ets", "Slider.ets", "Text.ets", "Counter.ets", "gauge.ets", "enumsVerticalAlign.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "TextJsunit.test.ets", "sideBar.ets", "toggle.ets", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "canvasProps.test.js", "positionSetting.ets", "TextArea.ets", "animatorOption.ets", "tapGesture.ets", "shapeClipping.ets", "flexDirection.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "PanGesture.ets", "stepper.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "image.ets", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "stepperProps.test.js", "ratingProps.test.js", "flex.ets", "sharedTransition2.ets", "Shape.ets", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "Polyline.ets", "Stepper.ets", "gridPage.ets", "enumsImage.ets", "enable.ets", "PieceCode.ets", "polygon.ets", "badge.ets", "lineProps.test.js", "qrcodeProps.test.js", "textStyle.ets", "imageEffects.ets", "ohosRouterB.ets", "ColumnSplit.ets", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "videoProps.test.js", "enumsItemAlign.ets", "list.ets", "colorGradient.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "dragEvent.ets", "QrcodeJsunit.test.ets", "Video.ets", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "selectProps.test.js", "grid.ets", "Button.ets", "Polygon.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "mouseEvent.ets", "canvas.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "bindContextMenu.ets", "CircleJsunit.test.ets", "Rect.ets", "divProps.test.js", "divider.ets", "ScrollBar.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "appear.ets", "Constants.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "Path.ets", "enumsFlexAlign.ets", "fillMode.ets", "line.ets", "curves.ets", "priorityGesture.ets", "DataPanel.ets", "ellipseProps.test.js", "FormComponentPage.ets", "Grid.ets", "touchAble.ets", "pageTransition.ets", "visibility.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "polygonProps.test.js", "sliderProps.test.js", "RowJsunit.test.ets", "inputProps.test.js", "index.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "parallelGesture.ets", "timeStamp.ets", "Toggle.ets", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "enumsHorizontalAlign.ets", "panel.ets", "rectProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TextMetrics", "api_method_name": "height", "api_method_all": "height: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1455, "since": 6, "api_used": "\u662f", "lines": [" if (eventData.data.height != null) {\n        ", "     .width('100%').height('40%').backgroundCo", "    }.width('100%').height('100%')\n  }\n}", "\"img_height=\" + img.height);\n  }\n}", "\n    .width('100%').height('100%').margin({ to", "width(200)\n        .height(200)\n    }.width('1", ".gridSpan)\n        .height(\"100%\")\n        .ba", "        })\n        .height(\"100%\")\n        .ba", "th(`${this.width}`).height(`${this.height}`).k", "   let height = img.height;\n    this.context.i", ":100').width('34%').height(100)\n          .bac", " img.width;\n    let height = img.height;\n    t", "dth('90%')\n        .height(40)\n        .fontSi", "   console.log(\"img_height=\" + img.height);\n  ", "sole.log(\"imageData_height=\" + imageData.heigh", "     }.width('90%').height(120).padding(10).ba", "ull) {\n        this.height = eventData.data.he", "h('50%')\n          .height(100)\n          .lin", "dth('90%')\n        .height(40)\n        .shadow", "eight=\" + imageData.height);\n  }\n\n  testImage(", "s('100')\n          .height(100)\n          .lin", "dth('90%')\n        .height(40)\n        .graysc", "h('33%')\n          .height(80)\n          .line", "le.log(\"imagebitmap_height=\" + height);\n  }\n\n ", "h('60%')\n          .height(100)\n          .lin", "= \"200px\";\n  @State height: string = \"200px\";\n", "h}`).height(`${this.height}`).key('ellipse')\n ", " Text('no alignSelf,height:80').width('33%').h", "xGrow(1)\n          .height(100)\n          .lin", "ht = eventData.data.height;\n      }\n    }\n  }\n", "gebitmap_height=\" + height);\n  }\n\n  testOffscr", "xGrow(2)\n          .height(100)\n          .lin", "lumn().width('50%').height(30).backgroundColor", "h('40%')\n          .height(100)\n          .lin", "Size({ width: 1200, height: 160 })\n        .ke", "    })\n            .height(50)\n            .ba", "width('90%')\n      .height(120)\n      .padding", "   })\n\n            .height(50)\n            .ba", "ridOffset)\n        .height(\"100%\")\n        .ba", "an')\n      }\n      .height(200)\n    }\n    .bac", " Text('no alignSelf,height:100').width('34%').", "t:80').width('33%').height(80)\n          .back", "    }.width('100%').height('100%')\n  }\n\n  test"], "files": ["pageTransition2.ets", "ohosPrompt.ets", "systemRouterA.ets", "dividerProps.test.js", "video.ets", "Navigator.ets", "longPressGesture.ets", "canvas2.ets", "placement.ets", "playMode.ets", "Qrcode.ets", "Row.ets", "Navigation.ets", "imageFit.ets", "PathJsunit.test.ets", "Span.ets", "Progress.ets", "column.ets", "Panel.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "geometryTransition.ets", "toolbarItemProps.test.js", "marquee.ets", "Rating.ets", "enumsLineCapStyle.ets", "mediaquery.test.js", "Swiper.ets", "Divider.ets", "border.ets", "ResponseRegion.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "transition.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "polyline.ets", "focus.ets", "touch.ets", "ListItem.ets", "background.ets", "Slider.ets", "Text.ets", "Counter.ets", "gauge.ets", "enumsVerticalAlign.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "TextJsunit.test.ets", "sideBar.ets", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "canvasProps.test.js", "positionSetting.ets", "TextArea.ets", "animatorOption.ets", "tapGesture.ets", "shapeClipping.ets", "flexDirection.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "PanGesture.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "image.ets", "row.ets", "FlexDirectionJsunit.test.ets", "Marquee.ets", "stepperProps.test.js", "ratingProps.test.js", "flex.ets", "sharedTransition2.ets", "Shape.ets", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enumsImage.ets", "PieceCode.ets", "polygon.ets", "badge.ets", "qrcodeProps.test.js", "imageEffects.ets", "ohosRouterB.ets", "ColumnSplit.ets", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "videoProps.test.js", "enumsItemAlign.ets", "list.ets", "colorGradient.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "QrcodeJsunit.test.ets", "Video.ets", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "selectProps.test.js", "grid.ets", "Button.ets", "Polygon.ets", "fontWeight.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "canvas.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "bindContextMenu.ets", "CircleJsunit.test.ets", "Rect.ets", "divProps.test.js", "divider.ets", "ScrollBar.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "Constants.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "Path.ets", "enumsFlexAlign.ets", "fillMode.ets", "line.ets", "curves.ets", "priorityGesture.ets", "DataPanel.ets", "FormComponentPage.ets", "Grid.ets", "touchAble.ets", "pageTransition.ets", "visibility.ets", "AlertDialog.ets", "sliderProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "inputProps.test.js", "index.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "parallelGesture.ets", "timeStamp.ets", "Toggle.ets", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "Calendar.ets", "panelProps.test.js", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "enumsHorizontalAlign.ets", "panel.ets", "rectProps.test.js", "overlay.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_all": "export interface OffscreenCanvasRenderingContext2D {\n  \n  getLineDash: Array<number>;\n\n  \n  fillStyle?: string | CanvasGradient | CanvasPattern;\n\n  \n  strokeStyle?: string | CanvasGradient | CanvasPattern;\n\n  \n  setLineDash(segments: Array<number>): void;\n\n  \n  drawImage(image: Image, dx: number, dy: number, dw: number, dh: number): void;\n\n  \n  drawImage(\n    image: Image,\n    sx: number,\n    sy: number,\n    sw: number,\n    sh: number,\n    dx: number,\n    dy: number,\n    dw: number,\n    dh: number,\n  ): void;\n\n  \n  beginPath(): void;\n\n  \n  clip(): void;\n\n  \n  fill(): void;\n\n  \n  isPointInPath(x: number, y: number): boolean;\n\n  \n  isPointInPath(path: Path2D, x: number, y: number): boolean;\n\n  \n  isPointInStroke(x: number, y: number): boolean;\n\n  \n  isPointInStroke(path: Path2D, x: number, y: number): boolean;\n\n  \n  stroke(): void;\n\n  \n  stroke(path: Path2D): void;\n\n  \n  createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;\n\n  \n  createPattern(image: Image, repetition: string): CanvasPattern;\n\n  \n  createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;\n\n  \n  createImageData(sw: number, sh: number): ImageData;\n\n  \n  createImageData(imagedata: ImageData): ImageData;\n\n  \n  createPath2D(path?: Path2D): Path2D;\n\n  \n  createPath2D(cmds?: string): Path2D;\n\n  \n  getImageData(sx: number, sy: number, sw: number, sh: number): ImageData;\n\n  \n  putImageData(imagedata: ImageData, dx: number, dy: number): void;\n\n  \n  putImageData(\n    imagedata: ImageData,\n    dx: number,\n    dy: number,\n    dirtyX: number,\n    dirtyY: number,\n    dirtyWidth: number,\n    dirtyHeight: number,\n  ): void;\n\n  \n  arc(radius: number, x: number, y: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;\n\n  \n  arcTo(x1: number, x2: number, y1: number, y2: number, radius: number): void;\n\n  \n  bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;\n\n  \n  closePath(): void;\n\n  \n  lineTo(x: number, y: number): void;\n\n  \n  ellipse(\n    x: number,\n    y: number,\n    radiusX: number,\n    radiusY: number,\n    rotation: number,\n    startAngle: number,\n    endAngle: number,\n    anticlockwise?: boolean,\n  ): void;\n\n  \n  moveTo(x: number, y: number): void;\n\n  \n  quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\n\n  \n  rect(x: number, y: number, w: number, h: number): void;\n\n  \n  clearRect(x: number, y: number, w: number, h: number): void;\n\n  \n  fillRect(x: number, y: number, w: number, h: number): void;\n\n  \n  strokeRect(x: number, y: number, w: number, h: number): void;\n\n  \n  fillText(text: string, y: number, x: number ): void;\n\n  \n  measureText(text: string): TextMetrics;\n\n  \n  strokeText(text: string, x: number, y: number ): void;\n\n  \n  resetTransform(): void;\n\n  \n  rotate(angle: number): void;\n\n  \n  scale(x: number, y: number): void;\n\n  \n  setTransform(a: number, b: number, c: number, d: number, e: number, f: number): void;\n\n  \n  transform(a: number, b: number, c: number, d: number, e: number, f: number): void;\n\n  \n  translate(x: number, y: number): void;\n\n  \n  restore(): void;\n\n  \n  save(): void;\n}", "api_method_name": "OffscreenCanvasRenderingContext2D", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 7, "since": 7, "api_used": "\u662f", "lines": ["    uri: 'pages/obj_OffscreenCanvasRenderingContext2D/router/index'\n     ", "ringContext2D = new OffscreenCanvasRenderingContext2D(600, 600, this.sett", "ole.error(\"push obj_OffscreenCanvasRenderingContext2D page error \" + JSON", "  expect(\"pages/obj_OffscreenCanvasRenderingContext2D/router/\").assertEqu", "private offContext: OffscreenCanvasRenderingContext2D = new OffscreenCanv", "sole.info(\"push obj_OffscreenCanvasRenderingContext2D page success \" + JS", "e.info(\"[router.obj_OffscreenCanvasRenderingContext2D] getState\" + JSON.s"], "files": ["canvas2.ets", "commonComponentJsApi.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "setLineDash", "api_method_all": "setLineDash(segments: Array<number>): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.setLineDash([10, 20]);\n    this", " 6.28);\n        ctx.setLineDash([10,20]);\n        c", ");\n    this.context.setLineDash([0, 0]);\n  }\n\n  glo"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "drawImage", "api_method_all": "drawImage(image: Image, dx: number, dy: number, dw: number, dh: number): void;", "api_type": "", "api_args_count": 5, "api_level": 21, "api_used_count": 43, "since": 7, "api_used": "\u662f", "lines": ["\n        offCanvas2.drawImage(img, 0, 0, 33, 33);", "\n        offCanvas2.drawImage(img, 33, 66, 33, 33", "\n        offCanvas2.drawImage(img, 0, 99, 33, 33)", " offscreenCanvasCtx.drawImage(img, 0, 0, 200, 100", ");\n    this.context.drawImage(img, 30, 950, 160, ", "');\n            ctx.drawImage(img, 0, 0, 300, 250", "');\n            ctx.drawImage(img, 0, 0, 300, 50)", "\n        offCanvas2.drawImage(img, 66, 0, 33, 33)", "se;\n            ctx.drawImage(img, 10, 0, 100, 60", " offscreenCanvasCtx.drawImage(img, 0, 0, 100, 200", "');\n            ctx.drawImage(img, 0, 0, 200, 100", "\n        offCanvas2.drawImage(img, 66, 33, 33, 33", "\n        offCanvas2.drawImage(img, 0, 66, 33, 33)", "50, 50, 50);\n  }\n\n  drawImage() {\n    let img = n", "\n              this.drawImage();\n              th", "\n        offCanvas2.drawImage(img, 33, 33, 33, 33", "\n        offCanvas2.drawImage(img, 33, 99, 33, 33", "e;\n    this.context.drawImage(img, 30, 950, 160, ", "pg\";\n    offCanvas2.drawImage(img, 0, 0, 100, 100", ");\n    this.context.drawImage(img, 0, 0, 500, 500", "\n        offCanvas2.drawImage(img, 66, 66, 33, 33", "\n        offCanvas2.drawImage(img, 33, 0, 33, 33)", " offscreenCanvasCtx.drawImage(img, 0, 0, 100, 100", "');\n            ctx.drawImage(img, 0, 0, 300, 100", "\n        offCanvas2.drawImage(img, 0, 33, 33, 33)"], "files": ["global.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "drawImage", "api_method_all": "drawImage(\n    image: Image,\n    sx: number,\n    sy: number,\n    sw: number,\n    sh: number,\n    dx: number,\n    dy: number,\n    dw: number,\n    dh: number,\n  ): void;", "api_type": "", "api_args_count": 9, "api_level": 21, "api_used_count": 43, "since": 7, "api_used": "\u662f", "lines": ["\n        offCanvas2.drawImage(img, 0, 0, 33, 33);", "\n        offCanvas2.drawImage(img, 33, 66, 33, 33", "\n        offCanvas2.drawImage(img, 0, 99, 33, 33)", " offscreenCanvasCtx.drawImage(img, 0, 0, 200, 100", ");\n    this.context.drawImage(img, 30, 950, 160, ", "');\n            ctx.drawImage(img, 0, 0, 300, 250", "');\n            ctx.drawImage(img, 0, 0, 300, 50)", "\n        offCanvas2.drawImage(img, 66, 0, 33, 33)", "se;\n            ctx.drawImage(img, 10, 0, 100, 60", " offscreenCanvasCtx.drawImage(img, 0, 0, 100, 200", "');\n            ctx.drawImage(img, 0, 0, 200, 100", "\n        offCanvas2.drawImage(img, 66, 33, 33, 33", "\n        offCanvas2.drawImage(img, 0, 66, 33, 33)", "50, 50, 50);\n  }\n\n  drawImage() {\n    let img = n", "\n              this.drawImage();\n              th", "\n        offCanvas2.drawImage(img, 33, 33, 33, 33", "\n        offCanvas2.drawImage(img, 33, 99, 33, 33", "e;\n    this.context.drawImage(img, 30, 950, 160, ", "pg\";\n    offCanvas2.drawImage(img, 0, 0, 100, 100", ");\n    this.context.drawImage(img, 0, 0, 500, 500", "\n        offCanvas2.drawImage(img, 66, 66, 33, 33", "\n        offCanvas2.drawImage(img, 33, 0, 33, 33)", " offscreenCanvasCtx.drawImage(img, 0, 0, 100, 100", "');\n            ctx.drawImage(img, 0, 0, 300, 100", "\n        offCanvas2.drawImage(img, 0, 33, 33, 33)"], "files": ["global.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "beginPath", "api_method_all": "beginPath(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 29, "since": 7, "api_used": "\u662f", "lines": ["th = 8;\n        ctx.beginPath();\n        ctx.line", "1;\n    this.context.beginPath();\n    this.context", "('2d');\n        ctx.beginPath();\n        ctx.move", " 310, 1250);\n  }\n\n  beginPath() {\n    this.contex", "('2d');\n        ctx.beginPath();\n        ctx.elli", "('2d');\n        ctx.beginPath();\n        ctx.line", "0;\n    this.context.beginPath();\n    this.context", "rue });\n        ctx.beginPath();\n        ctx.arc(", " {\n    this.context.beginPath();\n    this.context", "\n              this.beginPath();\n              th", "8;\n    this.context.beginPath();\n    this.context"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "clip", "api_method_all": "clip(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 50, "since": 7, "api_used": "\u662f", "lines": [" expect(obj1.$attrs.clip).assertEqual('true'", "  if(eventData.data.clipValue != null) {\n   ", "c,\n            typeEclipse: this.typeEclipse", "t('testProgressTypeEclipse', 0, async functi", "spectorByKey('image_clip');\n      let obj = ", "eEclipse: this.typeEclipse\n        }\n    },\n", "o('testProgressTypeEclipse START');\n        ", "     Image('/images/clip.png')\n        .clip", ").assertEqual('typeEclipse')\n        expect(", "yle: ProgressStyle.Eclipse })\n          .val", " 5 }) {\n      Text('clip')\n        .fontSize", ")\n        this.typeEclipse = this.$element(\"", "ull) {\n        this.clipType = new Rect({ wi", "spectorByKey('image_clip_true');\n      let o", "(200)\n\n      Text('Eclipse Progress').fontSi", "parse(objNew.$attrs.clip);\n      expect(clip", "     Image('/images/clip.png')\n        .mask", "yle: ProgressStyle.Eclipse }).width(100).val", "     Image('/images/clip.png')\n          .wi", "obalThis.value.typeEclipse);\n        console", "objNew));\n      let clip = JSON.parse(objNew", "clip);\n      expect(clip.shape).assertEqual(", "ON.parse(obj.$attrs.clip);\n      expect(clip", "roke();\n        ctx.clip();\n        // Draw ", "type).assertEqual('eclipse')\n        console", "t: 280 });\n  @State clipType: CommonShapeMet", "ual(\"ProgressStyle.Eclipse\")\n      console.i", " null,\n        typeEclipse: null\n    },\n\n   ", "clip.png')\n        .clip(this.clipType)\n    ", "or(0xd2cab3)\n      .clip(true)\n\n      Text('", "const ATTRS_CLIP = 'clip'\nconst ATTRS_ENABLE", "        .key('image_clip')\n\n      Row() {\n  ", "\n        .clip(this.clipType)\n        .width", "  expect(obj.$attrs.clip).assertEqual('false", "red rectangle after clip\n        ctx.fillSty", "this.$element(\"typeEclipse\").getInspector()\n", "ata: {\n            \"clipValue\": false\n      ", "   testProgressTypeEclipse\n     * @tc.desc  ", ")\n      .key('image_clip_true')\n\n      Text(", "spectorByKey('image_clip');\n      let objNew", "fy(obj));\n      let clip = JSON.parse(obj.$a", "px')\n      }\n      .clip(true)\n      .border", "yle: ProgressStyle.Eclipse }).color(Color.Gr"], "files": ["ProgressJsunit.test.ets", "progress.ets", "layoutConstraints.ets", "progressProps.test.js", "Constants.ets", "Progress.ets", "ShapeClippingJsunit.test.ets", "index.js", "shapeClipping.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "fill", "api_method_all": "fill(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 1166, "since": 4, "api_used": "\u662f", "lines": [");\n    });\n\n    it('fillModeTest_0200', 0, a", "pped\n          this.fillMode = FillMode.None", "   \"fillMode\": this.fillMode\n              }", "      console.info(\"fillModeTest_0300 get st", "s));\n        if (!('fillMode' == pages.name)", "        uri: 'pages/fillMode',\n      }\n     ", "      console.info(\"fillModeTest_0200 click ", "preDecode)\n        .fillMode(this.fillMode).", " {\n                \"fillMode\": this.fillMode", "      console.info('fillModeTest_0200 START'", "nfo('beforeEach get fillMode state pages:' +", "      console.info('fillModeTest_0200 END');", "ning\n          this.fillMode = FillMode.Back", ");\n    });\n\n    it('fillModeTest_0100', 0, a", "      console.info(\"fillModeTest_0200 get st", "    Rect()\n        .fill(Color.Gray)\n       ", "      console.info('fillModeTest_0300 START'", "used\n          this.fillMode = FillMode.Both", "      console.info(\"fillModeTest_0100 get st", "      console.info('fillModeTest beforeEach ", "      console.info('fillModeTest_0100 END');", "or('beforeEach push fillMode page error:' + ", "number = 0\n  @State fillMode: FillMode = Fil", "ect(indexEvent.data.fillMode).assertEqual(Fi", "     .fillMode(this.fillMode).iterations(thi", "      console.info(\"fillModeTest_0100 click ", "      console.info('fillMode test after each", "      console.info('fillModeTest_0100 START'", "t.test.ets';\nimport fillModeJsunit from './F", "   Text('background fill the box(Cover)').fo", "rt default function fillModeJsunit(){\n  desc", "      console.info(\"fillModeTest_0200 on eve", " Ellipse()\n        .fill(Color.Pink)\n       ", "fo('beforeEach push fillMode page result:' +", "      console.info(\"fillModeTest_0300 on eve", "y\n@Component\nstruct fillModeExample {\n  @Sta", "      console.info(\"fillModeTest_0300 click ", "      console.info('fillModeTest_0300 END');", "   Text('background fill the box(Contain)').", "nfo('beforeEach get fillMode state pages.nam", ");\n    });\n\n    it('fillModeTest_0300', 0, a", "unit(){\n  describe('fillModeTest', function ", "  selectJsunit();\n  fillModeJsunit();\n  enum", "      console.info(\"fillModeTest_0100 on eve"], "files": ["ImageJsunit.test.ets", "Shape.ets", "pathProps.test.js", "circleProps.test.js", "imageAnimatorProps.test.js", "background.ets", "canvas2.ets", "ShapeJsunit.test.ets", "canvas.ets", "ImageAnimatorJsunit.test.ets", "polylineProps.test.js", "animationStatus.ets", "fillMode.ets", "ellipseProps.test.js", "GestureModeJsunit.test.ets", "touchAble.ets", "polygonProps.test.js", "animatorOption.ets", "enumsLineCapStyle.ets", "index.js", "backgroundAndSizeSetting.ets", "animateTransformProps.test.js", "tspanProps.test.js", "svgProps.test.js", "FillModeJsunit.test.ets", "shape.ets", "animateMotionProps.test.js", "Image.ets", "svgTextProps.test.js", "textPathProps.test.js", "imageAnimator.ets", "List.test.ets", "rectProps.test.js", "animateProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "isPointInPath", "api_method_all": "isPointInPath(x: number, y: number): boolean;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": [" offscreenCanvasCtx.isPointInPath(30, 20);\n\n        v"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "isPointInPath", "api_method_all": "isPointInPath(path: Path2D, x: number, y: number): boolean;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": [" offscreenCanvasCtx.isPointInPath(30, 20);\n\n        v"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "isPointInStroke", "api_method_all": "isPointInStroke(x: number, y: number): boolean;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": [" offscreenCanvasCtx.isPointInStroke(20, 10);\n\n        v"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "isPointInStroke", "api_method_all": "isPointInStroke(path: Path2D, x: number, y: number): boolean;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": [" offscreenCanvasCtx.isPointInStroke(20, 10);\n\n        v"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "stroke", "api_method_all": "stroke(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 1910, "since": 7, "api_used": "\u662f", "lines": ["0;\n    this.context.strokeStyle = '#0000ff';\n ", "xpect(objNew.$attrs.strokeWidth).assertEqual('", "strokeWidth(`${this.strokeWidthValue}`)\n      ", "  strokeWidth: this.strokeWidth,\n          col", "\n              this.strokeRect();\n            ", "neCap' + obj.$attrs.strokeLineCap)\n      expec", " if (eventData.data.strokeWidth != null) {\n   ", "ue = eventData.data.strokeWidthValue;\n      }\n", "    .fill(0x317Af7).stroke(Color.Black).stroke", "ata: {\n            \"strokeWidth\": \"3.000000vp\"", "ata: {\n            \"strokeWidthValue\": \"-30\",\n", "leValue}`)\n        .strokeWidth(`${this.stroke", "n = false;\n  @State strokeWidth: number = 2.00", "trokeDashOffset(10).strokeLineCap(LineCapStyle", "pStyle.Butt)\n      .strokeLineJoin(LineJoinSty", "rokeWidth(4)\n      .strokeDashArray([20]).stro", "ata: {\n            \"strokeWidthValue\": \"30\",\n ", "th = eventData.data.strokeWidth;\n      }\n     ", "ull) {\n        this.strokeWidthValue = eventDa", "25, 55, 75);\n  }\n\n  strokeStyle() {\n    this.c", "\n              this.strokeStyle();\n           ", "\n        .divider({ strokeWidth: 2, color: 0xF", "ata: {\n            \"strokeWidthValue\": \"121111", "stroke(Color.Black).strokeWidth(4)\n      .stro", "ull) {\n        this.strokeWidth = eventData.da", "ring = 50;\n  @State strokeWidthValue: string =", "\n              this.strokeText();\n            ", "5;\n    this.context.strokeRect(25, 25, 55, 75)", "';\n    this.context.strokeRect(115, 25, 75, 55", ");\n    this.context.stroke();\n    this.context", " if (eventData.data.strokeWidthValue != null) ", ");\n    this.context.stroke();\n  }\n\n  lineJoin(", "Black).key('path1').strokeWidth(3)\n\n      Text", "  expect(obj.$attrs.strokeWidth).assertEqual('", "le.info('obj.$attrs.strokeLineCap' + obj.$attr", ");\n    this.context.stroke();\n  }\n\n  font() {\n", "rokeDashArray([20]).strokeDashOffset(10).strok", "})\n      .divider({ strokeWidth: 2, color: 0xF", "  expect(obj.$attrs.strokeLineCap).assertEqual", ");\n    this.context.stroke();\n  }\n\n  miterLimi", "s(this.commandsOne).stroke(Color.Black).key('p", "(obj.$attrs.divider.strokeWidth).assertEqual(\"", "divider({\n          strokeWidth: this.strokeWi"], "files": ["Shape.ets", "pathProps.test.js", "PatternLock.ets", "circleProps.test.js", "EnmusLineCapStyleJsunit.test.ets", "ShapeJsunit.test.ets", "canvas.ets", "lineProps.test.js", "divider.ets", "gauge.ets", "polylineProps.test.js", "Path.ets", "ellipseProps.test.js", "polygonProps.test.js", "list.ets", "List.ets", "dragEvent2.ets", "enumsLineCapStyle.ets", "GaugeJsunit.test.ets", "index.js", "DividerJsunit.test.ets", "Divider.ets", "edgeEffect.ets", "dragEvent.ets", "tspanProps.test.js", "svgProps.test.js", "shape.ets", "svgTextProps.test.js", "textPathProps.test.js", "path.ets", "ListJsunit.test.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "stroke", "api_method_all": "stroke(path: Path2D): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 1910, "since": 7, "api_used": "\u662f", "lines": ["0;\n    this.context.strokeStyle = '#0000ff';\n ", "xpect(objNew.$attrs.strokeWidth).assertEqual('", "strokeWidth(`${this.strokeWidthValue}`)\n      ", "  strokeWidth: this.strokeWidth,\n          col", "\n              this.strokeRect();\n            ", "neCap' + obj.$attrs.strokeLineCap)\n      expec", " if (eventData.data.strokeWidth != null) {\n   ", "ue = eventData.data.strokeWidthValue;\n      }\n", "    .fill(0x317Af7).stroke(Color.Black).stroke", "ata: {\n            \"strokeWidth\": \"3.000000vp\"", "ata: {\n            \"strokeWidthValue\": \"-30\",\n", "leValue}`)\n        .strokeWidth(`${this.stroke", "n = false;\n  @State strokeWidth: number = 2.00", "trokeDashOffset(10).strokeLineCap(LineCapStyle", "pStyle.Butt)\n      .strokeLineJoin(LineJoinSty", "rokeWidth(4)\n      .strokeDashArray([20]).stro", "ata: {\n            \"strokeWidthValue\": \"30\",\n ", "th = eventData.data.strokeWidth;\n      }\n     ", "ull) {\n        this.strokeWidthValue = eventDa", "25, 55, 75);\n  }\n\n  strokeStyle() {\n    this.c", "\n              this.strokeStyle();\n           ", "\n        .divider({ strokeWidth: 2, color: 0xF", "ata: {\n            \"strokeWidthValue\": \"121111", "stroke(Color.Black).strokeWidth(4)\n      .stro", "ull) {\n        this.strokeWidth = eventData.da", "ring = 50;\n  @State strokeWidthValue: string =", "\n              this.strokeText();\n            ", "5;\n    this.context.strokeRect(25, 25, 55, 75)", "';\n    this.context.strokeRect(115, 25, 75, 55", ");\n    this.context.stroke();\n    this.context", " if (eventData.data.strokeWidthValue != null) ", ");\n    this.context.stroke();\n  }\n\n  lineJoin(", "Black).key('path1').strokeWidth(3)\n\n      Text", "  expect(obj.$attrs.strokeWidth).assertEqual('", "le.info('obj.$attrs.strokeLineCap' + obj.$attr", ");\n    this.context.stroke();\n  }\n\n  font() {\n", "rokeDashArray([20]).strokeDashOffset(10).strok", "})\n      .divider({ strokeWidth: 2, color: 0xF", "  expect(obj.$attrs.strokeLineCap).assertEqual", ");\n    this.context.stroke();\n  }\n\n  miterLimi", "s(this.commandsOne).stroke(Color.Black).key('p", "(obj.$attrs.divider.strokeWidth).assertEqual(\"", "divider({\n          strokeWidth: this.strokeWi"], "files": ["Shape.ets", "pathProps.test.js", "PatternLock.ets", "circleProps.test.js", "EnmusLineCapStyleJsunit.test.ets", "ShapeJsunit.test.ets", "canvas.ets", "lineProps.test.js", "divider.ets", "gauge.ets", "polylineProps.test.js", "Path.ets", "ellipseProps.test.js", "polygonProps.test.js", "list.ets", "List.ets", "dragEvent2.ets", "enumsLineCapStyle.ets", "GaugeJsunit.test.ets", "index.js", "DividerJsunit.test.ets", "Divider.ets", "edgeEffect.ets", "dragEvent.ets", "tspanProps.test.js", "svgProps.test.js", "shape.ets", "svgTextProps.test.js", "textPathProps.test.js", "path.ets", "ListJsunit.test.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "createRadialGradient", "api_method_all": "createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["\n              this.createRadialGradient();\n              th", ", 150, 150);\n  }\n\n  createRadialGradient() {\n    let grad = ", "grad = this.context.createRadialGradient(280, 1970, 40, 280,"], "files": ["canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "createPattern", "api_method_all": "createPattern(image: Image, repetition: string): CanvasPattern;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["\n              this.createPattern();\n              th", "xt.stroke();\n  }\n\n  createPattern() {\n    let img = n", "tern = this.context.createPattern(img, 'repeat');\n   ", "      var pat = ctx.createPattern(img, 'repeat');\n   "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "createLinearGradient", "api_method_all": "createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["grad = this.context.createLinearGradient(50, 1900, 150, 2000", "\n              this.createLinearGradient();\n              th", " 250, 1660);\n  }\n\n  createLinearGradient() {\n    let grad = ", "onst gradient = ctx.createLinearGradient(0,0,200,0);\n       "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "createImageData", "api_method_all": "createImageData(sw: number, sh: number): ImageData;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 13, "since": 7, "api_used": "\u662f", "lines": ["\n              this.createImageDataByImageData();\n     ", "Data = this.context.createImageData(imageData);\n    con", "Data = this.context.createImageData(80, 80);\n    for (v", "\n              this.createImageData();\n              th", "var imageData = ctx.createImageData(2,1)\n        prompt", "var imageData = ctx.createImageData(1,1)\n        prompt", "var imageData = ctx.createImageData(1,2)\n        prompt", "geData = offCanvas2.createImageData(100, 100);\n    var ", ", 200, 100);\n  }\n\n  createImageData() {\n    let imageDa", "Data = this.context.createImageData(100, 100);\n    cons", "Data = this.context.createImageData(50, 50);\n    let im", "imageData));\n  }\n\n  createImageDataByImageData() {\n    "], "files": ["global.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "createImageData", "api_method_all": "createImageData(imagedata: ImageData): ImageData;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 13, "since": 7, "api_used": "\u662f", "lines": ["\n              this.createImageDataByImageData();\n     ", "Data = this.context.createImageData(imageData);\n    con", "Data = this.context.createImageData(80, 80);\n    for (v", "\n              this.createImageData();\n              th", "var imageData = ctx.createImageData(2,1)\n        prompt", "var imageData = ctx.createImageData(1,1)\n        prompt", "var imageData = ctx.createImageData(1,2)\n        prompt", "geData = offCanvas2.createImageData(100, 100);\n    var ", ", 200, 100);\n  }\n\n  createImageData() {\n    let imageDa", "Data = this.context.createImageData(100, 100);\n    cons", "Data = this.context.createImageData(50, 50);\n    let im", "imageData));\n  }\n\n  createImageDataByImageData() {\n    "], "files": ["global.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "createPath2D", "api_method_all": "createPath2D(path?: Path2D): Path2D;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["    var path2 = ctx.createPath2D();\n        path2.ad", "     var path = ctx.createPath2D();\n        path.ell", "     var path = ctx.createPath2D();\n        path.rec", "     var path = ctx.createPath2D(\"M80 20 L40 100 L12", "    var path1 = ctx.createPath2D(\"M80 20 L40 100 L12", "     var path = ctx.createPath2D();\n        path.arc", "     var path = ctx.createPath2D();\n        path.mov"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "createPath2D", "api_method_all": "createPath2D(cmds?: string): Path2D;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["    var path2 = ctx.createPath2D();\n        path2.ad", "     var path = ctx.createPath2D();\n        path.ell", "     var path = ctx.createPath2D();\n        path.rec", "     var path = ctx.createPath2D(\"M80 20 L40 100 L12", "    var path1 = ctx.createPath2D(\"M80 20 L40 100 L12", "     var path = ctx.createPath2D();\n        path.arc", "     var path = ctx.createPath2D();\n        path.mov"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "getImageData", "api_method_all": "getImageData(sx: number, sy: number, sw: number, sh: number): ImageData;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["Data = this.context.getImageData(10, 10, 80, 80);\n  ", "\n              this.getImageData();\n              th", "y(imgData));\n  }\n\n  getImageData() {\n    let imageDa"], "files": ["canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "putImageData", "api_method_all": "putImageData(imagedata: ImageData, dx: number, dy: number): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": [" }\n    this.context.putImageData(imageData, 250, 166", "\" + height);\n  }\n\n  putImageData() {\n    let imageDa", "\n              this.putImageData();\n              th"], "files": ["canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "putImageData", "api_method_all": "putImageData(\n    imagedata: ImageData,\n    dx: number,\n    dy: number,\n    dirtyX: number,\n    dirtyY: number,\n    dirtyWidth: number,\n    dirtyHeight: number,\n  ): void;", "api_type": "", "api_args_count": 7, "api_level": 21, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": [" }\n    this.context.putImageData(imageData, 250, 166", "\" + height);\n  }\n\n  putImageData() {\n    let imageDa", "\n              this.putImageData();\n              th"], "files": ["canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "arc", "api_method_all": "arc(radius: number, x: number, y: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 393, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.arc(20, 2130, 50, 0, 6.", "expect(obj.$attrs.searchButton).assertEqual", "searchButton(this.searchButton)\n        .ke", "onsole.info('[testSearch002] START');\n     ", "console.info(\"get search success \" + JSON.s", "console.info(\"get search state success \" + ", "@Component\nstruct SearchExample {\n  @State ", "ect(objNew.$attrs.searchButton).assertEqual", "      uri: 'pages/search',\n      }\n      tr", " = eventData.data.searchButton;\n      }\n   ", "f (eventData.data.searchButton != null) {\n ", "a: {\n            \"searchButton\": \"5\"\n      ", "etInspectorByKey('search');\n      console.i", ");\n    this.context.arc(180, 650, 50, 0, 6.", "    console.info(\"search after each called\"", "hangevalue)\n      Search({ value: '', place", " default function searchJsunit() {\n  descri", "etInspectorByKey('search');\n      let objNe", "   .searchButton('search')\n        .textFon", "onsole.info(\"[testSearch002] component objN", "on)\n        .key('search')\n        .placeho", "State controller: SearchController= new Sea", ");\n    this.context.arcTo(80, 20 + 1500, 80", "onsole.info(\"[testSearch001] component strJ", " });\n\n    it('testSearch002', 0, async func", "    console.info(\"search page state change ", "extFont)\n        .searchButton(this.searchB", "Type(EnterKeyType.Search)\n          .placeh", "ation() {\n        Search({ value: '', place", "xt.stroke();\n  }\n\n  arcTo() {\n    this.cont", "nsole.error(\"push search page error \" + JSO", "chController= new SearchController()\n  @Sta", "onsole.info('[testSearch001] START');\n     ", "oller })\n        .searchButton('search')\n  ", "test.ets';\nimport searchJsunit from './Sear", "    console.info('search page show called')", "StatusJsunit();\n  searchJsunit();\n  scrollB", " });\n\n    it('testSearch001', 0, async func", "onsole.info(\"push search page success \" + J", "onsole.info(\"[testSearch002] start to publi", "l) {\n        this.searchButton = eventData.", "console.log(\"[testSearch002] change compone", ":Font=10\n  @State searchButton:number=10\n\n ", "\n              this.arcTo();\n              ", "rchJsunit from './SearchJsunit.test.ets';\ni"], "files": ["TextInputJsunit.test.ets", "Navigation.ets", "List.test.js", "SearchJsunit.test.ets", "TextInput.ets", "progressProps.test.js", "List.test.ets", "canvas.ets", "commonComponentJsApi.test.js", "inputProps.test.js", "index.js", "search.ets", "navigation.ets", "searchProps.test.js", "buttonProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "arcTo", "api_method_all": "arcTo(x1: number, x2: number, y1: number, y2: number, radius: number): void;", "api_type": "", "api_args_count": 5, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["0, 20);\n        ctx.arcTo(70, 10, 70, 20, 30)", "h2D();\n        path.arcTo(75, 10, 75, 35, 25)", "\n              this.arcTo();\n              th", ");\n    this.context.arcTo(80, 20 + 1500, 80, ", "xt.stroke();\n  }\n\n  arcTo() {\n    this.contex"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "bezierCurveTo", "api_method_all": "bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": [", 10);\n        path.bezierCurveTo(10, 50, 100, 50, 10", "\n              this.bezierCurveTo();\n              th", ");\n    this.context.bezierCurveTo(20, 100 + height, 2", "0, 10);\n        ctx.bezierCurveTo(20, 40, 80, 40, 100", ", 250, 100);\n  }\n\n  bezierCurveTo() {\n    let height "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "closePath", "api_method_all": "closePath(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 7, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.closePath();\n    this.context", "0, 60);\n        ctx.closePath();\n        ctx.stro", ");\n    this.context.closePath();\n  }\n\n  restore()", ", 80);\n        path.closePath();\n        ctx.stro", "\n              this.closePath();\n              th", "xt.stroke();\n  }\n\n  closePath() {\n    this.contex"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "lineTo", "api_method_all": "lineTo(x: number, y: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 39, "since": 7, "api_used": "\u662f", "lines": ["0, 30);\n        ctx.lineTo(200, 30);\n        c", ");\n    this.context.lineTo(190, 160);\n    this", ");\n    this.context.lineTo(450, height);\n    t", ");\n    this.context.lineTo(400, 2220);\n    thi", ");\n    this.context.lineTo(70, 1360);\n    this", "(5, 5);\n        ctx.lineTo(70, 5);\n        ctx", "0, 10);\n        ctx.lineTo(80, 30);\n        ct", "0, 10);\n        ctx.lineTo(60, 15);\n        ct", ");\n    this.context.lineTo(320, 50);\n    this.", "70, 5);\n        ctx.lineTo(40, 60);\n        ct", ");\n    this.context.lineTo(220, 210 + height);", ", 40);\n        path.lineTo(120, 40);\n        p", "0, 10);\n        ctx.lineTo(100, 10);\n        c", ");\n    this.context.lineTo(450, 1260);\n    thi", ");\n    this.context.lineTo(370, 75);\n    this.", "0, 15);\n        ctx.lineTo(10, 40);\n        ct", ");\n    this.context.lineTo(430, 50);\n    this.", ", 40);\n        path.lineTo(80, 80);\n        pa", "80, 0);\n        ctx.lineTo(80, 160);\n        c", ");\n    this.context.lineTo(130, 162);\n    this", "0, 30);\n        ctx.lineTo(10, 50);\n        ct", ");\n    this.context.lineTo(110, 1300);\n    thi"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "ellipse", "api_method_all": "ellipse(\n    x: number,\n    y: number,\n    radiusX: number,\n    radiusY: number,\n    rotation: number,\n    startAngle: number,\n    endAngle: number,\n    anticlockwise?: boolean,\n  ): void;", "api_type": "", "api_args_count": 8, "api_level": 21, "api_used_count": 421, "since": 7, "api_used": "\u662f", "lines": ["        uri: 'pages/ellipse/router/index'\n     ", "\n    console.info('[ellipse] page show called')", "h2D();\n        path.ellipse(50, 50, 25, 50, Mat", "console.error(\"push ellipseProps page error \" +", "ify(sendEventByKey('ellipse', 10, \"\")));\n      ", "      console.info(\"ellipse after each called\")", " console.info(\"push ellipse page success \" + JS", "console.error(\"push ellipse page error \" + JSON", "rt default function ellipseJsunit() {\n  describ", "  zIndexJsunit();\n  ellipseJsunit();\n  gaugeJsu", " console.info(\"push ellipseProps page success \"", "this.height}`).key('ellipse')\n    }.width('100%", "$type).assertEqual('ellipse')\n         console.", " console.info(\"push ellipse page result:\" + JSO", "      expect(\"pages/ellipse/router/\").assertEqu", "s));\n        if (!(\"ellipse\" == pages.name)) {\n", "     console.info(\"[ellipseProps] get globalThi", "t(80)\n        .key('ellipse')\n        .touchabl", " getInspectorByKey('ellipse');\n      let obj = ", "     console.info(\"[ellipse] page state change ", "  console.info(\"get ellipse state pages:\" + JSO", "Path();\n        ctx.ellipse(50, 50, 30, 60, Mat", "     console.info(\"[ellipseProps] get inspector", "console.error(\"push ellipse page error:\" + err)", "\n    console.info(\"[ellipse] page stateChangCal", "nit() {\n  describe('ellipseTest', function () {", "     console.info('[ellipsePropsJsTest] after e", "nsole.info(\"[router.ellipse] getState\" + JSON.s", "  console.info(\"get ellipse state pages.name:\" ", "        uri: 'pages/ellipse/prop/index'\n       ", "      console.info(\"ellipse beforeEach start\");", "        uri: 'pages/ellipse',\n      }\n      try", "     console.info('[ellipsePropsJsTest] before ", "t.test.ets';\nimport ellipseJsunit from './Ellip", "ex';\n \n \n describe('ellipsePropsJsTest', functi"], "files": ["index.js", "touchAble.ets", "List.test.js", "ellipse.ets", "TouchAbleJsunit.test.ets", "commonComponentJsApi.test.js", "EllipseJsunit.test.ets", "List.test.ets", "ellipseProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "moveTo", "api_method_all": "moveTo(x: number, y: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 36, "since": 7, "api_used": "\u662f", "lines": ["';\n    this.context.moveTo(310, 1200);\n    thi", "miter';\n        ctx.moveTo(10, 10);\n        ct", "('2d');\n        ctx.moveTo(30, 20);\n        ct", " {\n    this.context.moveTo(30, 20 + 1500);\n   ", "';\n    this.context.moveTo(220, 10 + height);\n", "000ff';\n        ctx.moveTo(0, 30);\n        ctx", ");\n    this.context.moveTo(250, 2220);\n    thi", "Path();\n        ctx.moveTo(5, 5);\n        ctx.", ");\n    this.context.moveTo(30, 1300);\n    this", ");\n    this.context.moveTo(20 + width, 20 + he", "';\n    this.context.moveTo(370, 25);\n    this.", "round';\n        ctx.moveTo(10, 10);\n        ct", "000ff';\n        ctx.moveTo(80, 0);\n        ctx", ");\n    this.context.moveTo(10, 10 + height);\n ", "Path();\n        ctx.moveTo(10, 10);\n        ct", "';\n    this.context.moveTo(50, height);\n    th", "3;\n    this.context.moveTo(130, 155);\n    this", "h2D();\n        path.moveTo(80, 40);\n        pa", "it = 3;\n        ctx.moveTo(10, 10);\n        ct", "h2D();\n        path.moveTo(10, 10);\n        pa", "';\n    this.context.moveTo(220, 50);\n    this."], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "quadraticCurveTo", "api_method_all": "quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["xt.stroke();\n  }\n\n  quadraticCurveTo() {\n    let height ", "\n              this.quadraticCurveTo();\n              th", ", 10);\n        path.quadraticCurveTo(50, 50, 100, 10);\n ", "0, 10);\n        ctx.quadraticCurveTo(50, 50, 100, 10);\n ", ");\n    this.context.quadraticCurveTo(100 + width, 100 + "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "rect", "api_method_all": "rect(x: number, y: number, w: number, h: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 1870, "since": 6, "api_used": "\u662f", "lines": ["_top, \"right\": this.rect_right, \"bottom\": th", "st')\n        .listDirection(this.listDirecti", " 9];\n  @State listDirection: Axis = Axis.Ver", " + ']')[0]\n    this.rect_bottom = JSON.parse", " = JSON.parse('[' + rectInfo[1] + ']')[0]\n  ", " = JSON.parse('[' + rectInfo[0] + ']')[1]\n  ", "   direction: FlexDirection.Column,\n      al", " = JSON.parse('[' + rectInfo[0] + ']')[0]\n  ", "exDirection = FlexDirection.Row\n  private st", "ON.parse('[' + obj.$rect + ']')\n    console.", "\n            \"listDirection\": Axis.Horizonta", "0%')\n      Flex({ direction: FlexDirection.R", "irection(this.listDirection)\n        .divide", "({ direction: FlexDirection.Row, alignItems:", " = JSON.parse('[' + rectInfo[1] + ']')[1]\n  ", "ventData.data.listDirection != null) {\n     ", "y] rectInfo is: \" + rectInfo);\n    this.rect", "({ direction: FlexDirection.Row }) {\n       ", "({ direction: FlexDirection.Column, alignIte", "ght, \"bottom\": this.rect_bottom\n    }\n  }\n\n ", " rect_top;\n  static rect_right;\n  static rec", "t_left, \"top\": this.rect_top, \"right\": this.", "ventData.data.listDirection;\n      }\n      i", "ld() {\n    Flex({ direction: FlexDirection.R", "ct(obj.$attrs.listDirection).assertEqual('Ax", " + ']')[1]\n    this.rect_right = JSON.parse(", ".assertEqual('FlexDirection.Row');\n      con", "ss Utils {\n  static rect_left;\n  static rect", "xample {\n  @State direction: FlexDirection =", "ct_bottom;\n  static rect_value;\n\n  static sl", "\n        this.listDirection = eventData.data", "[1]\n    return this.rect_value = {\n      \"le", "attrs.constructor.direction).assertEqual('Fl", "rect_left;\n  static rect_top;\n  static rect_", "te direction: FlexDirection = FlexDirection.", "gify(obj));\n    let rectInfo = JSON.parse('[", "ld() {\n    Flex({ direction: FlexDirection.C", "\n    Flex({\n      direction: FlexDirection.C", "\n      \"left\": this.rect_left, \"top\": this.r", "ect_right;\n  static rect_bottom;\n  static re", " + ']')[0]\n    this.rect_top = JSON.parse('[", "[getInspectorByKey] rectInfo is: \" + rectInf", "rectInfo);\n    this.rect_left = JSON.parse('"], "files": ["ImageJsunit.test.ets", "systemRouterA.ets", "longPressGesture.ets", "DragEventJsunit.test.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "Qrcode.ets", "Navigation.ets", "imageFit.ets", "Span.ets", "richText.ets", "Progress.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "geometryTransition.ets", "TapGesture.test.ets", "marquee.ets", "Rating.ets", "ScrollCodeJsunit.test.ets", "Divider.ets", "PriorityGestureJsunit.test.ets", "scrollBar.ets", "CalendarJsunit.test.ets", "transition.ets", "Image.ets", "List.test.ets", "scrollCode.ets", "button.ets", "touch.ets", "DirectionJsunit.test.ets", "Slider.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "Text.ets", "PanGestureJsunit.test.ets", "Counter.ets", "Stack.ets", "bindMenu.ets", "TextJsunit.test.ets", "Blank.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "ScrollerBarJsunit.test.ets", "text.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "tapGesture.ets", "FlexJsunit.test.ets", "flexDirection.ets", "AppStorageJsunit.test.ets", "edgeEffect.ets", "index.ets", "systemRouterB.ets", "PanGesture.ets", "image.ets", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "flex.ets", "Utils.ets", "marqueeProps.test.js", "PatternLock.ets", "textPickerDialog.ets", "gridPage.ets", "qrcodeProps.test.js", "AlphabetIndexer.ets", "SubscribaleAbstractJsunit.test.ets", "ohosRouterB.ets", "ColumnSplit.ets", "textClock.ets", "videoProps.test.js", "list.ets", "BackgroundJsunit.test.ets", "AppStorage.ets", "List.ets", "GridContainer.ets", "dragEvent2.ets", "flexWrap.ets", "direction.ets", "gradientDirection.ets", "calendar.ets", "dragEvent.ets", "grid.ets", "Button.ets", "ScrollJsunit.test.ets", "fontWeight.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "List.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "canvas.ets", "bindContextMenu.ets", "Rect.ets", "divider.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "Constants.ets", "rating.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "DataPanel.ets", "FormComponentPage.ets", "WebPage.ets", "RowJsunit.test.ets", "index.js", "ohosRouterA.ets", "Link.ets", "listProps.test.js", "slider.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "gestureMode.ets", "ScrollBar.ets", "Badge.ets", "colorGradient.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "clearRect", "api_method_all": "clearRect(x: number, y: number, w: number, h: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.clearRect(260, 970, 100, 60);", "0, 40);\n        ctx.clearRect(20, 10, 60, 20);\n  ", "\n              this.clearRect();\n              th", "0, 100, 60);\n  }\n\n  clearRect() {\n    this.contex"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "fillRect", "api_method_all": "fillRect(x: number, y: number, w: number, h: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 89, "since": 7, "api_used": "\u662f", "lines": ["';\n    this.context.fillRect(20 + width, 20 + he", "';\n    this.context.fillRect(150 + width, 50 + h", ",255)';\n        ctx.fillRect(0, 0, 100, 40);\n   ", "adient;\n        ctx.fillRect(20,20,300,100);\n   ", ",0,0)';\n        ctx.fillRect(10, 0, 70, 40);\n   ", "';\n    this.context.fillRect(250, 1500, 100, 100", "';\n    this.context.fillRect(10, 800, 100, 80);\n", "000ff';\n        ctx.fillRect(0, 0, 100, 30);\n   ", " {\n    this.context.fillRect(10, 1080, 80, 80);\n", "\n              this.fillRect();\n              th", "d;\n    this.context.fillRect(200, 1900, 150, 150", ", 160, 100);\n  }\n\n  fillRect() {\n    this.contex", "';\n    this.context.fillRect(360, 800, 80, 80);\n", "';\n    this.context.fillRect(120 + width, 20 + h", ",255)';\n        ctx.fillRect(25, 25, 30, 30);\n  ", ",0,0)';\n        ctx.fillRect(10, 10, 70, 40);\n  ", "';\n    this.context.fillRect(50 + width, 50 + he", ",0,0)';\n        ctx.fillRect(70, 10, 30, 30);\n  ", "';\n    this.context.fillRect(150, 800, 80, 100);", ",0,0)';\n        ctx.fillRect(20, 20, 70, 50);\n  ", ",0,0)';\n        ctx.fillRect(10, 10, 30, 30);\n  ", ",0,0)';\n        ctx.fillRect(10, 0, 70, 50);\n   ", ",255)';\n        ctx.fillRect(85, 25, 30, 30);\n  ", "';\n    this.context.fillRect(50, 670, 50, 50);\n ", " = pat;\n        ctx.fillRect(20, 0, 60, 50);\n   ", "    this.offContext.fillRect(20, 160, 150, 100);", "';\n    this.context.fillRect(240, 950, 200, 200)", "';\n    this.context.fillRect(0, 620, 50, 50);\n  ", " {\n    this.context.fillRect(180, 1650, 50, 50);", ",255)';\n        ctx.fillRect(40, 40, 40, 40);\n\n ", ",0,0)';\n        ctx.fillRect(0, 0, 40, 40);\n    ", "';\n    this.context.fillRect(0, 1650, 100, 100);", ");\n    this.context.fillRect(180, 20, 50, 50);\n ", ");\n    this.context.fillRect(180, 1650, 50, 50);", "';\n    this.context.fillRect(20, 120, 75, 55);\n ", "n;\n    this.context.fillRect(140, 1300, 250, 100", "';\n    this.context.fillRect(250, 800, 80, 80);\n", "d;\n    this.context.fillRect(10, 1900, 150, 150)"], "files": ["canvas2.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "strokeRect", "api_method_all": "strokeRect(x: number, y: number, w: number, h: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 13, "since": 7, "api_used": "\u662f", "lines": ["80, 80, 80);\n  }\n\n  strokeRect() {\n    this.contex", "5;\n    this.context.strokeRect(25, 25, 55, 75);\n  ", "';\n    this.context.strokeRect(115, 25, 75, 55);\n ", "000ff';\n        ctx.strokeRect(0, 0, 100, 30);\n   ", " {\n    this.context.strokeRect(110, 1080, 100, 60)", "\n              this.strokeRect();\n              th", "('2d');\n        ctx.strokeRect(10, 10, 25, 25);\n  ", "round';\n        ctx.strokeRect(0, 0, 100, 30);\n   ", "to 200%\n        ctx.strokeRect(10, 10, 20, 20);\n  "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "fillText", "api_method_all": "fillText(text: string, y: number, x: number ): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 35, "since": 7, "api_used": "\u662f", "lines": ["';\n    this.context.fillText('Middle', 225, heig", "0, 100, 60);\n  }\n\n  fillText() {\n    this.contex", "';\n    this.context.fillText('Hanging', 450, hei", "\n              this.fillText();\n              th", "right';\n        ctx.fillText('textAlign=right',8", "';\n    this.context.fillText(\"Hello World!\", 120", "';\n    this.context.fillText('textAlign=center',", "';\n    this.context.fillText(\"Hello World\", 250,", " 'top';\n        ctx.fillText('Top', 0, 30);\n    ", "';\n    this.context.fillText('textAlign=end', 21", "ottom';\n        ctx.fillText('Bottom', 20, 30);\n", "0, 10);\n        ctx.fillText(txt, 0, 25);\n    },", "'left';\n        ctx.fillText('textAlign=left', 8", "iddle';\n        ctx.fillText('Middle', 55, 30);\n", " 'end';\n        ctx.fillText('textAlign=end', 80", "';\n    this.context.fillText('Top', 60, height +", "betic';\n        ctx.fillText('Alphabetic', 90, 3", ");\n    this.context.fillText(\"width:\" + this.con", "';\n    this.context.fillText('Alphabetic', 345, ", "';\n    this.context.fillText('textAlign=left', 2", "enter';\n        ctx.fillText('textAlign=center',", "';\n    this.context.fillText('textAlign=start', ", "';\n    this.context.fillText('textAlign=right', ", "';\n    this.context.fillText('Bottom', 150, heig", "nging';\n        ctx.fillText('Hanging', 140, 30)", "World';\n        ctx.fillText(\"width:\" + ctx.meas", "serif';\n        ctx.fillText(\"Hello World\", 10, ", "start';\n        ctx.fillText('textAlign=start', "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "measureText", "api_method_all": "measureText(text: string): TextMetrics;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["th:\" + this.context.measureText(\"Hello World!\").wid", "\n              this.measureText();\n              th", " obj = this.context.measureText(\"Hello World!\");\n  ", " 260, 1195);\n  }\n\n  measureText() {\n    this.contex", "Text(\"width:\" + ctx.measureText(txt).width, 0, 10);"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "strokeText", "api_method_all": "strokeText(text: string, x: number, y: number ): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["\n              this.strokeText();\n              th", "serif';\n        ctx.strokeText(\"Hello World!\", 0, ", "';\n    this.context.strokeText(\"Hello World!\", 260", " 120, 1200);\n  }\n\n  strokeText() {\n    this.contex"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "resetTransform", "api_method_all": "resetTransform(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": [" offscreenCanvasCtx.resetTransform();\n        offscree", " {\n    this.context.resetTransform();\n  }\n\n  translate", "--\" + data);\n  }\n\n  resetTransform() {\n    this.contex"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "rotate", "api_method_all": "rotate(angle: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 392, "since": 4, "api_used": "\u662f", "lines": [" getInspectorByKey('rotate9');\n      let obj =", "  expect(obj.$attrs.rotate.angle).assertEqual(", "  expect(obj.$attrs.rotate.centerY).assertEqua", "(100)\n        .key('rotate8')\n      Image('/im", "xpect(objNew.$attrs.rotate.x).assertEqual('2.0", " getInspectorByKey('rotate');\n      let obj = ", "10 })\n        .key('rotate2')\n\n      Text('sca", " getInspectorByKey('rotate8');\n      let obj =", "  expect(obj.$attrs.rotate.z).assertEqual('1.0", "sMatrix4 {\n  @State rotateValue: object= {\n   ", "EEEE)\n        .key('rotate3')\n\n      Text('Mat", "xpect(objNew.$attrs.rotate.centerX).assertEqua", "(100)\n        .key('rotate7')\n      Image('/im", " getInspectorByKey('rotate');\n      let objNew", "ify(sendEventByKey('rotate5', 10, \"\")));\n     ", "0 }))\n        .key('rotate4')\n    }.width('100", "xpect(objNew.$attrs.rotate.y).assertEqual('2.0", " if (eventData.data.rotateValue != null) {\n   ", "       .rotate(this.rotateValue)\n        .widt", " 5 })\n        .key('rotate6')\n      Image('/im", "ull) {\n        this.rotateValue = JSON.parse(e", "umn() {\n      Text('rotate').width('90%').font", " getInspectorByKey('rotate6');\n      let objNe", "     Row()\n        .rotate(this.rotateValue)\n ", "arse(eventData.data.rotateValue);\n      }\n    ", "EEEE)\n        .key('rotate')\n\n      Text('tran", " getInspectorByKey('rotate3');\n      let objNe", "mExample {\n  @State rotateValue: object= {\n   ", "0 }))\n        .key('rotate4')\n      Button(\"ge", "ep(1000);\n      let rotateValue = {x: 2, y: 2,", "ata: {\n            \"rotateValue\": JSON.stringi", "ue\": JSON.stringify(rotateValue)\n          }\n ", "xpect(objNew.$attrs.rotate.centerY).assertEqua", "xpect(objNew.$attrs.rotate.z).assertEqual('2.0", "  expect(obj.$attrs.rotate.y).assertEqual('1.0", "  expect(obj.$attrs.rotate.x).assertEqual('1.0", "  expect(obj.$attrs.rotate.centerX).assertEqua", " Matrix4.identity().rotate({x:1, y:1, z:2, ang", "(100)\n        .key('rotate9')\n    }.width('100", " getInspectorByKey('rotate7');\n      let obj =", "olor(0x2788D9).key('rotate5')\n      Image('/im", "umn() {\n      Text('rotate').width('10%').font"], "files": ["ohosPrompt.ets", "pathProps.test.js", "circleProps.test.js", "OhosMatrix4Jsunit.test.ets", "canvas.ets", "ohosMatrix4.ets", "lineProps.test.js", "polylineProps.test.js", "OhosPromptJsunit.test.ets", "ellipseProps.test.js", "TransFormJsunit.test.ets", "polygonProps.test.js", "index.js", "animateTransformProps.test.js", "tspanProps.test.js", "svgProps.test.js", "animateMotionProps.test.js", "svgTextProps.test.js", "transForm.ets", "motionPath.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "scale", "api_method_all": "scale(x: number, y: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 1026, "since": 6, "api_used": "\u662f", "lines": ["(eventData.data.grayscaleValue != null) {\n   ", "RS_GRAYSCALE = 'grayscale'\nconst ATTRS_BLUR =", "  expect(obj.$attrs.scale.y).assertEqual('0.5", "   }\n      })\n    }.scale({ x: this.scale }).", "')\n\n      Text('grayscale').fontSize(15).font", "        .scale(this.scaleValue)\n        .widt", "ep(1000);\n      let scaleValue = { x: 1, y: 1", " eventData.data.grayscaleValue;\n      }\n     ", " Matrix4.identity().scale({ x: 3 }).copy()\n  ", "Y: 5 }\n  @State grayscaleValue: string= 10;\n ", "xpect(objNew.$attrs.scale.y).assertEqual('1.0", ".transitionTypeOne, scale: { x: 0, y: 1.0, z:", "  }.scale({ x: this.scale }).opacity(this.opa", "     \"scale\" : this.scale,\n              \"opa", "context.filter('grayscale(50%)');\n    this.co", "00, y: 5 }\n  @State scaleValue: object= { x: ", "arse(eventData.data.scaleValue);\n      }\n    ", " Matrix4.identity().scale(eventData.data.matr", "ue\": JSON.stringify(scaleValue)\n          }\n ", "  expect(obj.$attrs.scale.x).assertEqual('2.0", "ull) {\n        this.scaleValue = JSON.parse(e", "ata: {\n            \"scaleValue\": JSON.stringi", "ep(1000);\n      let scaleValue = {\n        x:", "xpect(objNew.$attrs.scale.x).assertEqual('1.0", "ate2')\n\n      Text('scale').width('90%').font", "nExample {\n  @State scale: number = 1\n  @Stat", ".transitionTypeTwo, scale: { x: 1.0, y: 0.0 }", "ayscale(`${this.grayscaleValue}`)\n        .ke", " if (eventData.data.scaleValue != null) {\n   ", "     Row()\n        .scale(this.scaleValue)\n  ", " {\n        this.grayscaleValue = eventData.da", "Example1 {\n  @State scale: number = 1\n  @Stat", "pect(obj.$attrs.grayscale).assertEqual(0);\n  ", "ht(40)\n        .grayscale(`${this.grayscaleVa", "a: {\n              \"scale\" : this.scale,\n    ", " Matrix4.identity().scale({x:5, y:1, z:1, cen"], "files": ["pageTransition2.ets", "pathProps.test.js", "circleProps.test.js", "OhosMatrix4Jsunit.test.ets", "canvas.ets", "ohosMatrix4.ets", "lineProps.test.js", "imageEffects.ets", "Constants.ets", "polylineProps.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "polygonProps.test.js", "index.js", "PageTransitionJsunit.test.ets", "animateTransformProps.test.js", "svgProps.test.js", "progressProps.test.js", "transition.ets", "transForm.ets", "sharedTransition.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "setTransform", "api_method_all": "setTransform(a: number, b: number, c: number, d: number, e: number, f: number): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n", "ffscreenCanvasCtx.resetTransform();\n        offscree", "\" + data);\n  }\n\n  resetTransform() {\n    this.contex", ", 100, 100);\n  }\n\n  setTransform() {\n    this.contex", ");\n    this.context.setTransform(1, 0.1, 0.01, 1, 10", "\n    this.context.resetTransform();\n  }\n\n  translate", "0 Z\");\n        path.setTransform(0.8, 0, 0, 0.4, 0, ", "\n              this.setTransform();\n              th"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "transform", "api_method_all": "transform(a: number, b: number, c: number, d: number, e: number, f: number): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 353, "since": 4, "api_used": "\u662f", "lines": ["h.PI / 180);\n  }\n\n  transform() {\n    this.contex", "\n              this.transform();\n              th", "ransformProp : this.transformProp,\n            id", "e('/images/bg.jpg').transform(this.matrix4)\n     ", ", z: 30 })\n  @State transformValue: object= Matri", "op = this.$element(\"transformProp\").getInspector(", "e('/images/bg.jpg').transform(this.matrix6)\n     ", ".info(\"[canvas] get transform----\" + data);\n  }\n\n", "rop : null,\n        transformProp : null,\n       ", "  expect(obj.$attrs.transform.type)\n        .asse", "15px 25px',\n        transformOrigin:'center top'\n", ");\n    this.context.transform(1, 0.1, 0.01, 1, 10", "tion:'0px',\n        transformOrigin:'center cente", "  expect(obj.$attrs.transform.matrix)\n      .asse", ", y: 0.5 }\n  @State transformValue: object= Matri", "e('/images/bg.jpg').transform(this.matrix5)\n     ", "thProp,\n            transformProp : this.transfor", "  expect(obj.$attrs.transform.matrix)\n        .as", "(0xAFEEEE)\n        .transform(Matrix4.identity().", "ctor()\n        this.transformProp = this.$element", "ngify(objNew.$attrs.transform)).assertEqual('{}')", "s = [\n    {\n        transform: {\n            tran", " Matrix4.identity().transformPoint([100, 10])\n  @", "padding(5)\n        .transform(this.matrix2.combin", "    .translate(this.transformValue)\n        .widt", "   },\n    {\n        transform: {\n            tran", "10px 20px',\n        transformOrigin:'left top'\n  "], "files": ["pathProps.test.js", "rectProps.test.js", "svgProps.test.js", "polygonProps.test.js", "circleProps.test.js", "polylineProps.test.js", "transForm.ets", "OhosMatrix4Jsunit.test.ets", "ellipseProps.test.js", "index.js", "canvas.ets", "ohosMatrix4.ets", "lineProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "translate", "api_method_all": "translate(x: number, y: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 280, "since": 6, "api_used": "\u662f", "lines": ["(Matrix4.identity().translate(eventData.data.matr", "     Row()\n        .translate(this.transformValue", "form: {\n            translate: '-120px',\n        ", "tate')\n\n      Text('translate').width('10%').font", "entity()\n          .translate(eventData.data.matr", "form: {\n            translateX: '100px',\n        ", " Matrix4.identity().translate({ x: 300 }).copy()\n", "'gestureMode')\n    .translate({ x: this.offsetX, ", "('PanGesture')\n    .translate({ x: this.offsetX, ", "Transform();\n  }\n\n  translate() {\n    this.contex", " Matrix4.identity().translate({x:100, y:200, z:30", "e: 300\n  }\n  @State translateValue: object= { x: ", " Matrix4.identity().translate(eventData.data.matr", " }).margin(80)\n    .translate({ x: this.offsetX, ", ");\n    this.context.translate(50, 50);\n    this.c", "tate')\n\n      Text('translate').width('90%').font", "100px',\n            translateY: '0px',\n          ", " '0px',\n            translateZ: '20px',\n         ", "form: {\n            translateX: '0px',\n          ", "(Matrix4.identity().translate({ x: 100, y: 100, z", " Matrix4.identity().translate({ x: 100, y: 100, z", "\n              this.translate();\n              th", " '0px',\n            translateY: '5px',\n          "], "files": ["animateTransformProps.test.js", "PanGesture.ets", "panDirection.ets", "pathProps.test.js", "rectProps.test.js", "svgProps.test.js", "polygonProps.test.js", "circleProps.test.js", "polylineProps.test.js", "transForm.ets", "ellipseProps.test.js", "gestureMode.ets", "index.js", "canvas.ets", "ohosMatrix4.ets", "lineProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "restore", "api_method_all": "restore(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["\n              this.restore();\n              th", "itMode(true)\n      .restoreId(this.id)\n      .h", "closePath();\n  }\n\n  restore() {\n    this.contex", " {\n    this.context.restore();\n  }\n\n  save() {\n"], "files": ["canvas.ets", "dragEvent2.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "save", "api_method_all": "save(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": [" {\n    this.context.save();\n  }\n\n  addPath()", "        this.cookie.saveCookie()\n          }", "\n              this.save();\n              th", "t.restore();\n  }\n\n  save() {\n    this.contex"], "files": ["WebPage.ets", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "getLineDash", "api_method_all": "getLineDash: Array<number>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [", 200, 100);\n  }\n\n  getLineDash() {\n    this.contex", " obj = this.context.getLineDash();\n  }\n\n  setPixelM"], "files": ["canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "fillStyle", "api_method_all": "fillStyle?: string | CanvasGradient | CanvasPattern", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 75, "since": 7, "api_used": "\u662f", "lines": ["\n              this.fillStyle();\n              th", " 3, 3);\n        ctx.fillStyle = 'rgb(255,0,0)';\n ", "example\n        ctx.fillStyle = 'rgb(255,0,0)';\n ", "('2d');\n        ctx.fillStyle = 'rgb(255,0,0)';\n ", "('2d');\n        ctx.fillStyle = '#0000ff';\n      ", "PageShow() {\n  }\n\n  fillStyle() {\n    this.contex", " {\n    this.context.fillStyle = 'rgb(0,0,0)';\n   ", ");\n    this.context.fillStyle = 'rgb(0,0,255)';\n ", ",255)';\n        ctx.fillStyle = 'rgb(255,0,0)';\n ", " 3, 3);\n        ctx.fillStyle = 'rgb(0,0,255)';\n ", "';\n    this.context.fillStyle = 'rgb(0,0,255)';\n ", "0;\n    this.context.fillStyle = 'rgb(255,0,0)';\n ", " = 0.4;\n        ctx.fillStyle = 'rgb(0,0,255)';\n ", ",0,0)';\n        ctx.fillStyle = 'rgb(255,0,0)';\n ", "('2d');\n        ctx.fillStyle = 'rgb(0,0,255)';\n ", ");\n    this.context.fillStyle = 'rgb(255,0,0)';\n ", " {\n    this.context.fillStyle = 'rgb(0,0,255)';\n ", "ff00');\n        ctx.fillStyle=gradient;\n        c", " {\n    this.context.fillStyle = '#0000ff';\n    th", ");\n    this.context.fillStyle = grad;\n    this.co", "er clip\n        ctx.fillStyle = \"rgb(255,0,0)\";\n ", "-over';\n        ctx.fillStyle = 'rgb(0,0,255)';\n ", "peat');\n        ctx.fillStyle = pat;\n        ctx.", "    this.offContext.fillStyle = '#0000ff';\n    th", "('2d');\n        ctx.fillStyle = 'rgb(0,0,0)';\n   ", " {\n    this.context.fillStyle = 'rgb(255,0,0)';\n ", "4;\n    this.context.fillStyle = 'rgb(0,0,255)';\n ", ");\n    this.context.fillStyle = pattern;\n    this", "';\n    this.context.fillStyle = 'rgb(255,0,0)';\n "], "files": ["canvas2.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "OffscreenCanvasRenderingContext2D", "api_method_name": "strokeStyle", "api_method_all": "strokeStyle?: string | CanvasGradient | CanvasPattern", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 12, "since": 7, "api_used": "\u662f", "lines": ["0;\n    this.context.strokeStyle = '#0000ff';\n    th", "h = 10;\n        ctx.strokeStyle = '#0000ff';\n      ", "25, 55, 75);\n  }\n\n  strokeStyle() {\n    this.contex", "\n              this.strokeStyle();\n              th", "6;\n    this.context.strokeStyle = '#0000ff';\n    th", "('2d');\n        ctx.strokeStyle = '#0000ff';\n      "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_all": "export interface CanvasRenderingContext2D {\n  \n  fillRect(x: number, y: number, width: number, height: number): void;\n\n  \n  fillStyle?: string | CanvasGradient | CanvasPattern;\n\n  \n  clearRect(x: number, y: number, width: number, height: number): void;\n\n  \n  strokeRect(x: number, y: number, width: number, height: number): void;\n\n  \n  fillText(text: string, x: number, y: number): void;\n\n  \n  strokeText(text: string, x: number, y: number): void;\n\n  \n  measureText(text: string): TextMetrics;\n\n  \n  lineWidth?: number;\n\n  \n  strokeStyle?: string | CanvasGradient | CanvasPattern;\n\n  \n  stroke(): void;\n\n  \n  stroke(path: Path2D): void;\n\n  \n  beginPath(): void;\n\n  \n  moveTo(x: number, y: number): void;\n\n  \n  lineTo(x: number, y: number): void;\n\n  \n  closePath(): void;\n\n  \n  lineCap: string;\n\n  \n  lineJoin: string;\n\n  \n  miterLimit: number;\n\n  \n  font: string;\n\n  \n  textAlign: \"left\" | \"right\" | \"center\" | \"start\" | \"end\";\n\n  \n  imageSmoothingEnabled: boolean;\n\n  \n  textBaseline: string;\n\n  \n  createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;\n\n  \n  createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;\n\n  \n  createPattern(image: Image, repetition: string): object;\n\n  \n  createPath2D(path?: Path2D): Path2D;\n\n  \n  createPath2D(cmds?: string): Path2D;\n\n  \n  bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;\n\n  \n  quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\n\n  \n  arc(x: number, y: number, radius: number, startAngle: number, endAngel: number, anticlockwise?: boolean): void;\n\n  \n  arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\n\n  \n  ellipse(\n    x: number,\n    y: number,\n    radiusX: number,\n    radiusY: number,\n    rotation: number,\n    startAngle: number,\n    endAngle: number,\n    anticlockwise?: number,\n  ): void;\n\n  \n  rect(x: number, y: number, width: number, height: number): void;\n\n  \n  fill(): void;\n\n  \n  clip(): void;\n\n  \n  rotate(rotate: number): void;\n\n  \n  scale(x: number, y: number): void;\n\n  \n  transform(scaleX: number, skewX: number, skewY: number, scaleY: number, translateX: number, translateY: number): void;\n\n  \n  setTransform(\n    scaleX: number,\n    skewX: number,\n    skewY: number,\n    scaleY: number,\n    translateX: number,\n    translateY: number,\n  ): void;\n\n  \n  translate(x: number, y: number): void;\n\n  \n  globalAlpha: number;\n\n  \n  drawImage(image: Image, dx: number, dy: number, dWidth: number, dHeight: number): void;\n\n  \n  drawImage(\n    image: Image,\n    sx: number,\n    sy: number,\n    sWidth: number,\n    sHeight: number,\n    dx: number,\n    dy: number,\n    dWidth: number,\n    dHeight: number,\n  ): void;\n\n  \n  restore: () => void;\n\n  \n  save: () => void;\n\n  \n  createImageData(width: number, height: number): ImageData;\n  \n  createImageData(imagedata: ImageData): ImageData;\n\n  \n  getImageData(sx: number, sy: number, sw: number, sh: number): ImageData;\n\n  \n  putImageData(imageData: ImageData, dx: number, dy: number): void;\n\n  \n  putImageData(\n    imageData: ImageData,\n    dx: number,\n    dy: number,\n    dirtyX: number,\n    dirtyY: number,\n    dirtyWidth: number,\n    dirtyHeight: number,\n  ): void;\n\n  \n  setLineDash(segments: Array<number>): void;\n\n  \n  getLineDash(): Array<number>;\n\n  \n  lineDashOffset: number;\n\n  \n  globalCompositeOperation: string;\n\n  \n  shadowBlur: number;\n\n  \n  shadowColor: string;\n\n  \n  shadowOffsetX: number;\n\n  \n  shadowOffsetY: number;\n\n  \n  transferFromImageBitmap(bitmap: ImageBitmap): void;\n}", "api_method_name": "CanvasRenderingContext2D", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 18, "since": 7, "api_used": "\u662f", "lines": ["    uri: 'pages/obj_CanvasRenderingContext2D/router/index'\n     ", "ringContext2D = new CanvasRenderingContext2D(this.settings);\n\n  ", "sole.info(\"push obj_CanvasRenderingContext2D page success \" + JS", "\n  private context: CanvasRenderingContext2D = new CanvasRenderi", "\"pages/obj_OffscreenCanvasRenderingContext2D/router/\").assertEqu", "(\"push obj_OffscreenCanvasRenderingContext2D page error \" + JSON", "e.info(\"[router.obj_CanvasRenderingContext2D] getState\" + JSON.s", "(\"push obj_OffscreenCanvasRenderingContext2D page success \" + JS", "router.obj_OffscreenCanvasRenderingContext2D] getState\" + JSON.s", "  expect(\"pages/obj_CanvasRenderingContext2D/router/\").assertEqu", "ringContext2D = new CanvasRenderingContext2D(this.settings);\n  p", "     */\n    it('testCanvasRenderingContext2DComponent', 0, async", "ole.error(\"push obj_CanvasRenderingContext2D page error \" + JSON", "xt2D = new OffscreenCanvasRenderingContext2D(600, 600, this.sett", "'pages/obj_OffscreenCanvasRenderingContext2D/router/index'\n     ", "* @tc.name      testCanvasRenderingContext2DComponent\n     * @tc", "ffContext: OffscreenCanvasRenderingContext2D = new OffscreenCanv"], "files": ["canvas2.ets", "canvas.ets", "commonComponentJsApi.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "fillRect", "api_method_all": "fillRect(x: number, y: number, width: number, height: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 89, "since": 7, "api_used": "\u662f", "lines": ["';\n    this.context.fillRect(20 + width, 20 + he", "';\n    this.context.fillRect(150 + width, 50 + h", ",255)';\n        ctx.fillRect(0, 0, 100, 40);\n   ", "adient;\n        ctx.fillRect(20,20,300,100);\n   ", ",0,0)';\n        ctx.fillRect(10, 0, 70, 40);\n   ", "';\n    this.context.fillRect(250, 1500, 100, 100", "';\n    this.context.fillRect(10, 800, 100, 80);\n", "000ff';\n        ctx.fillRect(0, 0, 100, 30);\n   ", " {\n    this.context.fillRect(10, 1080, 80, 80);\n", "\n              this.fillRect();\n              th", "d;\n    this.context.fillRect(200, 1900, 150, 150", ", 160, 100);\n  }\n\n  fillRect() {\n    this.contex", "';\n    this.context.fillRect(360, 800, 80, 80);\n", "';\n    this.context.fillRect(120 + width, 20 + h", ",255)';\n        ctx.fillRect(25, 25, 30, 30);\n  ", ",0,0)';\n        ctx.fillRect(10, 10, 70, 40);\n  ", "';\n    this.context.fillRect(50 + width, 50 + he", ",0,0)';\n        ctx.fillRect(70, 10, 30, 30);\n  ", "';\n    this.context.fillRect(150, 800, 80, 100);", ",0,0)';\n        ctx.fillRect(20, 20, 70, 50);\n  ", ",0,0)';\n        ctx.fillRect(10, 10, 30, 30);\n  ", ",0,0)';\n        ctx.fillRect(10, 0, 70, 50);\n   ", ",255)';\n        ctx.fillRect(85, 25, 30, 30);\n  ", "';\n    this.context.fillRect(50, 670, 50, 50);\n ", " = pat;\n        ctx.fillRect(20, 0, 60, 50);\n   ", "    this.offContext.fillRect(20, 160, 150, 100);", "';\n    this.context.fillRect(240, 950, 200, 200)", "';\n    this.context.fillRect(0, 620, 50, 50);\n  ", " {\n    this.context.fillRect(180, 1650, 50, 50);", ",255)';\n        ctx.fillRect(40, 40, 40, 40);\n\n ", ",0,0)';\n        ctx.fillRect(0, 0, 40, 40);\n    ", "';\n    this.context.fillRect(0, 1650, 100, 100);", ");\n    this.context.fillRect(180, 20, 50, 50);\n ", ");\n    this.context.fillRect(180, 1650, 50, 50);", "';\n    this.context.fillRect(20, 120, 75, 55);\n ", "n;\n    this.context.fillRect(140, 1300, 250, 100", "';\n    this.context.fillRect(250, 800, 80, 80);\n", "d;\n    this.context.fillRect(10, 1900, 150, 150)"], "files": ["canvas2.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "clearRect", "api_method_all": "clearRect(x: number, y: number, width: number, height: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.clearRect(260, 970, 100, 60);", "0, 40);\n        ctx.clearRect(20, 10, 60, 20);\n  ", "\n              this.clearRect();\n              th", "0, 100, 60);\n  }\n\n  clearRect() {\n    this.contex"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "strokeRect", "api_method_all": "strokeRect(x: number, y: number, width: number, height: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 13, "since": 7, "api_used": "\u662f", "lines": ["80, 80, 80);\n  }\n\n  strokeRect() {\n    this.contex", "5;\n    this.context.strokeRect(25, 25, 55, 75);\n  ", "';\n    this.context.strokeRect(115, 25, 75, 55);\n ", "000ff';\n        ctx.strokeRect(0, 0, 100, 30);\n   ", " {\n    this.context.strokeRect(110, 1080, 100, 60)", "\n              this.strokeRect();\n              th", "('2d');\n        ctx.strokeRect(10, 10, 25, 25);\n  ", "round';\n        ctx.strokeRect(0, 0, 100, 30);\n   ", "to 200%\n        ctx.strokeRect(10, 10, 20, 20);\n  "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "fillText", "api_method_all": "fillText(text: string, x: number, y: number): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 35, "since": 7, "api_used": "\u662f", "lines": ["';\n    this.context.fillText('Middle', 225, heig", "0, 100, 60);\n  }\n\n  fillText() {\n    this.contex", "';\n    this.context.fillText('Hanging', 450, hei", "\n              this.fillText();\n              th", "right';\n        ctx.fillText('textAlign=right',8", "';\n    this.context.fillText(\"Hello World!\", 120", "';\n    this.context.fillText('textAlign=center',", "';\n    this.context.fillText(\"Hello World\", 250,", " 'top';\n        ctx.fillText('Top', 0, 30);\n    ", "';\n    this.context.fillText('textAlign=end', 21", "ottom';\n        ctx.fillText('Bottom', 20, 30);\n", "0, 10);\n        ctx.fillText(txt, 0, 25);\n    },", "'left';\n        ctx.fillText('textAlign=left', 8", "iddle';\n        ctx.fillText('Middle', 55, 30);\n", " 'end';\n        ctx.fillText('textAlign=end', 80", "';\n    this.context.fillText('Top', 60, height +", "betic';\n        ctx.fillText('Alphabetic', 90, 3", ");\n    this.context.fillText(\"width:\" + this.con", "';\n    this.context.fillText('Alphabetic', 345, ", "';\n    this.context.fillText('textAlign=left', 2", "enter';\n        ctx.fillText('textAlign=center',", "';\n    this.context.fillText('textAlign=start', ", "';\n    this.context.fillText('textAlign=right', ", "';\n    this.context.fillText('Bottom', 150, heig", "nging';\n        ctx.fillText('Hanging', 140, 30)", "World';\n        ctx.fillText(\"width:\" + ctx.meas", "serif';\n        ctx.fillText(\"Hello World\", 10, ", "start';\n        ctx.fillText('textAlign=start', "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "strokeText", "api_method_all": "strokeText(text: string, x: number, y: number): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["\n              this.strokeText();\n              th", "serif';\n        ctx.strokeText(\"Hello World!\", 0, ", "';\n    this.context.strokeText(\"Hello World!\", 260", " 120, 1200);\n  }\n\n  strokeText() {\n    this.contex"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "measureText", "api_method_all": "measureText(text: string): TextMetrics;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["th:\" + this.context.measureText(\"Hello World!\").wid", "\n              this.measureText();\n              th", " obj = this.context.measureText(\"Hello World!\");\n  ", " 260, 1195);\n  }\n\n  measureText() {\n    this.contex", "Text(\"width:\" + ctx.measureText(txt).width, 0, 10);"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "stroke", "api_method_all": "stroke(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 1910, "since": 7, "api_used": "\u662f", "lines": ["0;\n    this.context.strokeStyle = '#0000ff';\n ", "xpect(objNew.$attrs.strokeWidth).assertEqual('", "strokeWidth(`${this.strokeWidthValue}`)\n      ", "  strokeWidth: this.strokeWidth,\n          col", "\n              this.strokeRect();\n            ", "neCap' + obj.$attrs.strokeLineCap)\n      expec", " if (eventData.data.strokeWidth != null) {\n   ", "ue = eventData.data.strokeWidthValue;\n      }\n", "    .fill(0x317Af7).stroke(Color.Black).stroke", "ata: {\n            \"strokeWidth\": \"3.000000vp\"", "ata: {\n            \"strokeWidthValue\": \"-30\",\n", "leValue}`)\n        .strokeWidth(`${this.stroke", "n = false;\n  @State strokeWidth: number = 2.00", "trokeDashOffset(10).strokeLineCap(LineCapStyle", "pStyle.Butt)\n      .strokeLineJoin(LineJoinSty", "rokeWidth(4)\n      .strokeDashArray([20]).stro", "ata: {\n            \"strokeWidthValue\": \"30\",\n ", "th = eventData.data.strokeWidth;\n      }\n     ", "ull) {\n        this.strokeWidthValue = eventDa", "25, 55, 75);\n  }\n\n  strokeStyle() {\n    this.c", "\n              this.strokeStyle();\n           ", "\n        .divider({ strokeWidth: 2, color: 0xF", "ata: {\n            \"strokeWidthValue\": \"121111", "stroke(Color.Black).strokeWidth(4)\n      .stro", "ull) {\n        this.strokeWidth = eventData.da", "ring = 50;\n  @State strokeWidthValue: string =", "\n              this.strokeText();\n            ", "5;\n    this.context.strokeRect(25, 25, 55, 75)", "';\n    this.context.strokeRect(115, 25, 75, 55", ");\n    this.context.stroke();\n    this.context", " if (eventData.data.strokeWidthValue != null) ", ");\n    this.context.stroke();\n  }\n\n  lineJoin(", "Black).key('path1').strokeWidth(3)\n\n      Text", "  expect(obj.$attrs.strokeWidth).assertEqual('", "le.info('obj.$attrs.strokeLineCap' + obj.$attr", ");\n    this.context.stroke();\n  }\n\n  font() {\n", "rokeDashArray([20]).strokeDashOffset(10).strok", "})\n      .divider({ strokeWidth: 2, color: 0xF", "  expect(obj.$attrs.strokeLineCap).assertEqual", ");\n    this.context.stroke();\n  }\n\n  miterLimi", "s(this.commandsOne).stroke(Color.Black).key('p", "(obj.$attrs.divider.strokeWidth).assertEqual(\"", "divider({\n          strokeWidth: this.strokeWi"], "files": ["Shape.ets", "pathProps.test.js", "PatternLock.ets", "circleProps.test.js", "EnmusLineCapStyleJsunit.test.ets", "ShapeJsunit.test.ets", "canvas.ets", "lineProps.test.js", "divider.ets", "gauge.ets", "polylineProps.test.js", "Path.ets", "ellipseProps.test.js", "polygonProps.test.js", "list.ets", "List.ets", "dragEvent2.ets", "enumsLineCapStyle.ets", "GaugeJsunit.test.ets", "index.js", "DividerJsunit.test.ets", "Divider.ets", "edgeEffect.ets", "dragEvent.ets", "tspanProps.test.js", "svgProps.test.js", "shape.ets", "svgTextProps.test.js", "textPathProps.test.js", "path.ets", "ListJsunit.test.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "stroke", "api_method_all": "stroke(path: Path2D): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 1910, "since": 7, "api_used": "\u662f", "lines": ["0;\n    this.context.strokeStyle = '#0000ff';\n ", "xpect(objNew.$attrs.strokeWidth).assertEqual('", "strokeWidth(`${this.strokeWidthValue}`)\n      ", "  strokeWidth: this.strokeWidth,\n          col", "\n              this.strokeRect();\n            ", "neCap' + obj.$attrs.strokeLineCap)\n      expec", " if (eventData.data.strokeWidth != null) {\n   ", "ue = eventData.data.strokeWidthValue;\n      }\n", "    .fill(0x317Af7).stroke(Color.Black).stroke", "ata: {\n            \"strokeWidth\": \"3.000000vp\"", "ata: {\n            \"strokeWidthValue\": \"-30\",\n", "leValue}`)\n        .strokeWidth(`${this.stroke", "n = false;\n  @State strokeWidth: number = 2.00", "trokeDashOffset(10).strokeLineCap(LineCapStyle", "pStyle.Butt)\n      .strokeLineJoin(LineJoinSty", "rokeWidth(4)\n      .strokeDashArray([20]).stro", "ata: {\n            \"strokeWidthValue\": \"30\",\n ", "th = eventData.data.strokeWidth;\n      }\n     ", "ull) {\n        this.strokeWidthValue = eventDa", "25, 55, 75);\n  }\n\n  strokeStyle() {\n    this.c", "\n              this.strokeStyle();\n           ", "\n        .divider({ strokeWidth: 2, color: 0xF", "ata: {\n            \"strokeWidthValue\": \"121111", "stroke(Color.Black).strokeWidth(4)\n      .stro", "ull) {\n        this.strokeWidth = eventData.da", "ring = 50;\n  @State strokeWidthValue: string =", "\n              this.strokeText();\n            ", "5;\n    this.context.strokeRect(25, 25, 55, 75)", "';\n    this.context.strokeRect(115, 25, 75, 55", ");\n    this.context.stroke();\n    this.context", " if (eventData.data.strokeWidthValue != null) ", ");\n    this.context.stroke();\n  }\n\n  lineJoin(", "Black).key('path1').strokeWidth(3)\n\n      Text", "  expect(obj.$attrs.strokeWidth).assertEqual('", "le.info('obj.$attrs.strokeLineCap' + obj.$attr", ");\n    this.context.stroke();\n  }\n\n  font() {\n", "rokeDashArray([20]).strokeDashOffset(10).strok", "})\n      .divider({ strokeWidth: 2, color: 0xF", "  expect(obj.$attrs.strokeLineCap).assertEqual", ");\n    this.context.stroke();\n  }\n\n  miterLimi", "s(this.commandsOne).stroke(Color.Black).key('p", "(obj.$attrs.divider.strokeWidth).assertEqual(\"", "divider({\n          strokeWidth: this.strokeWi"], "files": ["Shape.ets", "pathProps.test.js", "PatternLock.ets", "circleProps.test.js", "EnmusLineCapStyleJsunit.test.ets", "ShapeJsunit.test.ets", "canvas.ets", "lineProps.test.js", "divider.ets", "gauge.ets", "polylineProps.test.js", "Path.ets", "ellipseProps.test.js", "polygonProps.test.js", "list.ets", "List.ets", "dragEvent2.ets", "enumsLineCapStyle.ets", "GaugeJsunit.test.ets", "index.js", "DividerJsunit.test.ets", "Divider.ets", "edgeEffect.ets", "dragEvent.ets", "tspanProps.test.js", "svgProps.test.js", "shape.ets", "svgTextProps.test.js", "textPathProps.test.js", "path.ets", "ListJsunit.test.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "beginPath", "api_method_all": "beginPath(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 29, "since": 7, "api_used": "\u662f", "lines": ["th = 8;\n        ctx.beginPath();\n        ctx.line", "1;\n    this.context.beginPath();\n    this.context", "('2d');\n        ctx.beginPath();\n        ctx.move", " 310, 1250);\n  }\n\n  beginPath() {\n    this.contex", "('2d');\n        ctx.beginPath();\n        ctx.elli", "('2d');\n        ctx.beginPath();\n        ctx.line", "0;\n    this.context.beginPath();\n    this.context", "rue });\n        ctx.beginPath();\n        ctx.arc(", " {\n    this.context.beginPath();\n    this.context", "\n              this.beginPath();\n              th", "8;\n    this.context.beginPath();\n    this.context"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "moveTo", "api_method_all": "moveTo(x: number, y: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 36, "since": 7, "api_used": "\u662f", "lines": ["';\n    this.context.moveTo(310, 1200);\n    thi", "miter';\n        ctx.moveTo(10, 10);\n        ct", "('2d');\n        ctx.moveTo(30, 20);\n        ct", " {\n    this.context.moveTo(30, 20 + 1500);\n   ", "';\n    this.context.moveTo(220, 10 + height);\n", "000ff';\n        ctx.moveTo(0, 30);\n        ctx", ");\n    this.context.moveTo(250, 2220);\n    thi", "Path();\n        ctx.moveTo(5, 5);\n        ctx.", ");\n    this.context.moveTo(30, 1300);\n    this", ");\n    this.context.moveTo(20 + width, 20 + he", "';\n    this.context.moveTo(370, 25);\n    this.", "round';\n        ctx.moveTo(10, 10);\n        ct", "000ff';\n        ctx.moveTo(80, 0);\n        ctx", ");\n    this.context.moveTo(10, 10 + height);\n ", "Path();\n        ctx.moveTo(10, 10);\n        ct", "';\n    this.context.moveTo(50, height);\n    th", "3;\n    this.context.moveTo(130, 155);\n    this", "h2D();\n        path.moveTo(80, 40);\n        pa", "it = 3;\n        ctx.moveTo(10, 10);\n        ct", "h2D();\n        path.moveTo(10, 10);\n        pa", "';\n    this.context.moveTo(220, 50);\n    this."], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "lineTo", "api_method_all": "lineTo(x: number, y: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 39, "since": 7, "api_used": "\u662f", "lines": ["0, 30);\n        ctx.lineTo(200, 30);\n        c", ");\n    this.context.lineTo(190, 160);\n    this", ");\n    this.context.lineTo(450, height);\n    t", ");\n    this.context.lineTo(400, 2220);\n    thi", ");\n    this.context.lineTo(70, 1360);\n    this", "(5, 5);\n        ctx.lineTo(70, 5);\n        ctx", "0, 10);\n        ctx.lineTo(80, 30);\n        ct", "0, 10);\n        ctx.lineTo(60, 15);\n        ct", ");\n    this.context.lineTo(320, 50);\n    this.", "70, 5);\n        ctx.lineTo(40, 60);\n        ct", ");\n    this.context.lineTo(220, 210 + height);", ", 40);\n        path.lineTo(120, 40);\n        p", "0, 10);\n        ctx.lineTo(100, 10);\n        c", ");\n    this.context.lineTo(450, 1260);\n    thi", ");\n    this.context.lineTo(370, 75);\n    this.", "0, 15);\n        ctx.lineTo(10, 40);\n        ct", ");\n    this.context.lineTo(430, 50);\n    this.", ", 40);\n        path.lineTo(80, 80);\n        pa", "80, 0);\n        ctx.lineTo(80, 160);\n        c", ");\n    this.context.lineTo(130, 162);\n    this", "0, 30);\n        ctx.lineTo(10, 50);\n        ct", ");\n    this.context.lineTo(110, 1300);\n    thi"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "closePath", "api_method_all": "closePath(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 7, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.closePath();\n    this.context", "0, 60);\n        ctx.closePath();\n        ctx.stro", ");\n    this.context.closePath();\n  }\n\n  restore()", ", 80);\n        path.closePath();\n        ctx.stro", "\n              this.closePath();\n              th", "xt.stroke();\n  }\n\n  closePath() {\n    this.contex"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "createLinearGradient", "api_method_all": "createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["grad = this.context.createLinearGradient(50, 1900, 150, 2000", "\n              this.createLinearGradient();\n              th", " 250, 1660);\n  }\n\n  createLinearGradient() {\n    let grad = ", "onst gradient = ctx.createLinearGradient(0,0,200,0);\n       "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "createRadialGradient", "api_method_all": "createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["\n              this.createRadialGradient();\n              th", ", 150, 150);\n  }\n\n  createRadialGradient() {\n    let grad = ", "grad = this.context.createRadialGradient(280, 1970, 40, 280,"], "files": ["canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "createPattern", "api_method_all": "createPattern(image: Image, repetition: string): object;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["\n              this.createPattern();\n              th", "xt.stroke();\n  }\n\n  createPattern() {\n    let img = n", "tern = this.context.createPattern(img, 'repeat');\n   ", "      var pat = ctx.createPattern(img, 'repeat');\n   "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "createPath2D", "api_method_all": "createPath2D(path?: Path2D): Path2D;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["    var path2 = ctx.createPath2D();\n        path2.ad", "     var path = ctx.createPath2D();\n        path.ell", "     var path = ctx.createPath2D();\n        path.rec", "     var path = ctx.createPath2D(\"M80 20 L40 100 L12", "    var path1 = ctx.createPath2D(\"M80 20 L40 100 L12", "     var path = ctx.createPath2D();\n        path.arc", "     var path = ctx.createPath2D();\n        path.mov"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "createPath2D", "api_method_all": "createPath2D(cmds?: string): Path2D;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["    var path2 = ctx.createPath2D();\n        path2.ad", "     var path = ctx.createPath2D();\n        path.ell", "     var path = ctx.createPath2D();\n        path.rec", "     var path = ctx.createPath2D(\"M80 20 L40 100 L12", "    var path1 = ctx.createPath2D(\"M80 20 L40 100 L12", "     var path = ctx.createPath2D();\n        path.arc", "     var path = ctx.createPath2D();\n        path.mov"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "bezierCurveTo", "api_method_all": "bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": [", 10);\n        path.bezierCurveTo(10, 50, 100, 50, 10", "\n              this.bezierCurveTo();\n              th", ");\n    this.context.bezierCurveTo(20, 100 + height, 2", "0, 10);\n        ctx.bezierCurveTo(20, 40, 80, 40, 100", ", 250, 100);\n  }\n\n  bezierCurveTo() {\n    let height "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "quadraticCurveTo", "api_method_all": "quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["xt.stroke();\n  }\n\n  quadraticCurveTo() {\n    let height ", "\n              this.quadraticCurveTo();\n              th", ", 10);\n        path.quadraticCurveTo(50, 50, 100, 10);\n ", "0, 10);\n        ctx.quadraticCurveTo(50, 50, 100, 10);\n ", ");\n    this.context.quadraticCurveTo(100 + width, 100 + "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "arc", "api_method_all": "arc(x: number, y: number, radius: number, startAngle: number, endAngel: number, anticlockwise?: boolean): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 393, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.arc(20, 2130, 50, 0, 6.", "expect(obj.$attrs.searchButton).assertEqual", "searchButton(this.searchButton)\n        .ke", "onsole.info('[testSearch002] START');\n     ", "console.info(\"get search success \" + JSON.s", "console.info(\"get search state success \" + ", "@Component\nstruct SearchExample {\n  @State ", "ect(objNew.$attrs.searchButton).assertEqual", "      uri: 'pages/search',\n      }\n      tr", " = eventData.data.searchButton;\n      }\n   ", "f (eventData.data.searchButton != null) {\n ", "a: {\n            \"searchButton\": \"5\"\n      ", "etInspectorByKey('search');\n      console.i", ");\n    this.context.arc(180, 650, 50, 0, 6.", "    console.info(\"search after each called\"", "hangevalue)\n      Search({ value: '', place", " default function searchJsunit() {\n  descri", "etInspectorByKey('search');\n      let objNe", "   .searchButton('search')\n        .textFon", "onsole.info(\"[testSearch002] component objN", "on)\n        .key('search')\n        .placeho", "State controller: SearchController= new Sea", ");\n    this.context.arcTo(80, 20 + 1500, 80", "onsole.info(\"[testSearch001] component strJ", " });\n\n    it('testSearch002', 0, async func", "    console.info(\"search page state change ", "extFont)\n        .searchButton(this.searchB", "Type(EnterKeyType.Search)\n          .placeh", "ation() {\n        Search({ value: '', place", "xt.stroke();\n  }\n\n  arcTo() {\n    this.cont", "nsole.error(\"push search page error \" + JSO", "chController= new SearchController()\n  @Sta", "onsole.info('[testSearch001] START');\n     ", "oller })\n        .searchButton('search')\n  ", "test.ets';\nimport searchJsunit from './Sear", "    console.info('search page show called')", "StatusJsunit();\n  searchJsunit();\n  scrollB", " });\n\n    it('testSearch001', 0, async func", "onsole.info(\"push search page success \" + J", "onsole.info(\"[testSearch002] start to publi", "l) {\n        this.searchButton = eventData.", "console.log(\"[testSearch002] change compone", ":Font=10\n  @State searchButton:number=10\n\n ", "\n              this.arcTo();\n              ", "rchJsunit from './SearchJsunit.test.ets';\ni"], "files": ["TextInputJsunit.test.ets", "Navigation.ets", "List.test.js", "SearchJsunit.test.ets", "TextInput.ets", "progressProps.test.js", "List.test.ets", "canvas.ets", "commonComponentJsApi.test.js", "inputProps.test.js", "index.js", "search.ets", "navigation.ets", "searchProps.test.js", "buttonProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "arcTo", "api_method_all": "arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;", "api_type": "", "api_args_count": 5, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["0, 20);\n        ctx.arcTo(70, 10, 70, 20, 30)", "h2D();\n        path.arcTo(75, 10, 75, 35, 25)", "\n              this.arcTo();\n              th", ");\n    this.context.arcTo(80, 20 + 1500, 80, ", "xt.stroke();\n  }\n\n  arcTo() {\n    this.contex"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "ellipse", "api_method_all": "ellipse(\n    x: number,\n    y: number,\n    radiusX: number,\n    radiusY: number,\n    rotation: number,\n    startAngle: number,\n    endAngle: number,\n    anticlockwise?: number,\n  ): void;", "api_type": "", "api_args_count": 8, "api_level": 21, "api_used_count": 421, "since": 7, "api_used": "\u662f", "lines": ["        uri: 'pages/ellipse/router/index'\n     ", "\n    console.info('[ellipse] page show called')", "h2D();\n        path.ellipse(50, 50, 25, 50, Mat", "console.error(\"push ellipseProps page error \" +", "ify(sendEventByKey('ellipse', 10, \"\")));\n      ", "      console.info(\"ellipse after each called\")", " console.info(\"push ellipse page success \" + JS", "console.error(\"push ellipse page error \" + JSON", "rt default function ellipseJsunit() {\n  describ", "  zIndexJsunit();\n  ellipseJsunit();\n  gaugeJsu", " console.info(\"push ellipseProps page success \"", "this.height}`).key('ellipse')\n    }.width('100%", "$type).assertEqual('ellipse')\n         console.", " console.info(\"push ellipse page result:\" + JSO", "      expect(\"pages/ellipse/router/\").assertEqu", "s));\n        if (!(\"ellipse\" == pages.name)) {\n", "     console.info(\"[ellipseProps] get globalThi", "t(80)\n        .key('ellipse')\n        .touchabl", " getInspectorByKey('ellipse');\n      let obj = ", "     console.info(\"[ellipse] page state change ", "  console.info(\"get ellipse state pages:\" + JSO", "Path();\n        ctx.ellipse(50, 50, 30, 60, Mat", "     console.info(\"[ellipseProps] get inspector", "console.error(\"push ellipse page error:\" + err)", "\n    console.info(\"[ellipse] page stateChangCal", "nit() {\n  describe('ellipseTest', function () {", "     console.info('[ellipsePropsJsTest] after e", "nsole.info(\"[router.ellipse] getState\" + JSON.s", "  console.info(\"get ellipse state pages.name:\" ", "        uri: 'pages/ellipse/prop/index'\n       ", "      console.info(\"ellipse beforeEach start\");", "        uri: 'pages/ellipse',\n      }\n      try", "     console.info('[ellipsePropsJsTest] before ", "t.test.ets';\nimport ellipseJsunit from './Ellip", "ex';\n \n \n describe('ellipsePropsJsTest', functi"], "files": ["index.js", "touchAble.ets", "List.test.js", "ellipse.ets", "TouchAbleJsunit.test.ets", "commonComponentJsApi.test.js", "EllipseJsunit.test.ets", "List.test.ets", "ellipseProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "rect", "api_method_all": "rect(x: number, y: number, width: number, height: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 1870, "since": 6, "api_used": "\u662f", "lines": ["_top, \"right\": this.rect_right, \"bottom\": th", "st')\n        .listDirection(this.listDirecti", " 9];\n  @State listDirection: Axis = Axis.Ver", " + ']')[0]\n    this.rect_bottom = JSON.parse", " = JSON.parse('[' + rectInfo[1] + ']')[0]\n  ", " = JSON.parse('[' + rectInfo[0] + ']')[1]\n  ", "   direction: FlexDirection.Column,\n      al", " = JSON.parse('[' + rectInfo[0] + ']')[0]\n  ", "exDirection = FlexDirection.Row\n  private st", "ON.parse('[' + obj.$rect + ']')\n    console.", "\n            \"listDirection\": Axis.Horizonta", "0%')\n      Flex({ direction: FlexDirection.R", "irection(this.listDirection)\n        .divide", "({ direction: FlexDirection.Row, alignItems:", " = JSON.parse('[' + rectInfo[1] + ']')[1]\n  ", "ventData.data.listDirection != null) {\n     ", "y] rectInfo is: \" + rectInfo);\n    this.rect", "({ direction: FlexDirection.Row }) {\n       ", "({ direction: FlexDirection.Column, alignIte", "ght, \"bottom\": this.rect_bottom\n    }\n  }\n\n ", " rect_top;\n  static rect_right;\n  static rec", "t_left, \"top\": this.rect_top, \"right\": this.", "ventData.data.listDirection;\n      }\n      i", "ld() {\n    Flex({ direction: FlexDirection.R", "ct(obj.$attrs.listDirection).assertEqual('Ax", " + ']')[1]\n    this.rect_right = JSON.parse(", ".assertEqual('FlexDirection.Row');\n      con", "ss Utils {\n  static rect_left;\n  static rect", "xample {\n  @State direction: FlexDirection =", "ct_bottom;\n  static rect_value;\n\n  static sl", "\n        this.listDirection = eventData.data", "[1]\n    return this.rect_value = {\n      \"le", "attrs.constructor.direction).assertEqual('Fl", "rect_left;\n  static rect_top;\n  static rect_", "te direction: FlexDirection = FlexDirection.", "gify(obj));\n    let rectInfo = JSON.parse('[", "ld() {\n    Flex({ direction: FlexDirection.C", "\n    Flex({\n      direction: FlexDirection.C", "\n      \"left\": this.rect_left, \"top\": this.r", "ect_right;\n  static rect_bottom;\n  static re", " + ']')[0]\n    this.rect_top = JSON.parse('[", "[getInspectorByKey] rectInfo is: \" + rectInf", "rectInfo);\n    this.rect_left = JSON.parse('"], "files": ["ImageJsunit.test.ets", "systemRouterA.ets", "longPressGesture.ets", "DragEventJsunit.test.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "Qrcode.ets", "Navigation.ets", "imageFit.ets", "Span.ets", "richText.ets", "Progress.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "geometryTransition.ets", "TapGesture.test.ets", "marquee.ets", "Rating.ets", "ScrollCodeJsunit.test.ets", "Divider.ets", "PriorityGestureJsunit.test.ets", "scrollBar.ets", "CalendarJsunit.test.ets", "transition.ets", "Image.ets", "List.test.ets", "scrollCode.ets", "button.ets", "touch.ets", "DirectionJsunit.test.ets", "Slider.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "Text.ets", "PanGestureJsunit.test.ets", "Counter.ets", "Stack.ets", "bindMenu.ets", "TextJsunit.test.ets", "Blank.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "ScrollerBarJsunit.test.ets", "text.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "tapGesture.ets", "FlexJsunit.test.ets", "flexDirection.ets", "AppStorageJsunit.test.ets", "edgeEffect.ets", "index.ets", "systemRouterB.ets", "PanGesture.ets", "image.ets", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "flex.ets", "Utils.ets", "marqueeProps.test.js", "PatternLock.ets", "textPickerDialog.ets", "gridPage.ets", "qrcodeProps.test.js", "AlphabetIndexer.ets", "SubscribaleAbstractJsunit.test.ets", "ohosRouterB.ets", "ColumnSplit.ets", "textClock.ets", "videoProps.test.js", "list.ets", "BackgroundJsunit.test.ets", "AppStorage.ets", "List.ets", "GridContainer.ets", "dragEvent2.ets", "flexWrap.ets", "direction.ets", "gradientDirection.ets", "calendar.ets", "dragEvent.ets", "grid.ets", "Button.ets", "ScrollJsunit.test.ets", "fontWeight.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "List.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "canvas.ets", "bindContextMenu.ets", "Rect.ets", "divider.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "Constants.ets", "rating.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "DataPanel.ets", "FormComponentPage.ets", "WebPage.ets", "RowJsunit.test.ets", "index.js", "ohosRouterA.ets", "Link.ets", "listProps.test.js", "slider.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "gestureMode.ets", "ScrollBar.ets", "Badge.ets", "colorGradient.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "fill", "api_method_all": "fill(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 1166, "since": 4, "api_used": "\u662f", "lines": [");\n    });\n\n    it('fillModeTest_0200', 0, a", "pped\n          this.fillMode = FillMode.None", "   \"fillMode\": this.fillMode\n              }", "      console.info(\"fillModeTest_0300 get st", "s));\n        if (!('fillMode' == pages.name)", "        uri: 'pages/fillMode',\n      }\n     ", "      console.info(\"fillModeTest_0200 click ", "preDecode)\n        .fillMode(this.fillMode).", " {\n                \"fillMode\": this.fillMode", "      console.info('fillModeTest_0200 START'", "nfo('beforeEach get fillMode state pages:' +", "      console.info('fillModeTest_0200 END');", "ning\n          this.fillMode = FillMode.Back", ");\n    });\n\n    it('fillModeTest_0100', 0, a", "      console.info(\"fillModeTest_0200 get st", "    Rect()\n        .fill(Color.Gray)\n       ", "      console.info('fillModeTest_0300 START'", "used\n          this.fillMode = FillMode.Both", "      console.info(\"fillModeTest_0100 get st", "      console.info('fillModeTest beforeEach ", "      console.info('fillModeTest_0100 END');", "or('beforeEach push fillMode page error:' + ", "number = 0\n  @State fillMode: FillMode = Fil", "ect(indexEvent.data.fillMode).assertEqual(Fi", "     .fillMode(this.fillMode).iterations(thi", "      console.info(\"fillModeTest_0100 click ", "      console.info('fillMode test after each", "      console.info('fillModeTest_0100 START'", "t.test.ets';\nimport fillModeJsunit from './F", "   Text('background fill the box(Cover)').fo", "rt default function fillModeJsunit(){\n  desc", "      console.info(\"fillModeTest_0200 on eve", " Ellipse()\n        .fill(Color.Pink)\n       ", "fo('beforeEach push fillMode page result:' +", "      console.info(\"fillModeTest_0300 on eve", "y\n@Component\nstruct fillModeExample {\n  @Sta", "      console.info(\"fillModeTest_0300 click ", "      console.info('fillModeTest_0300 END');", "   Text('background fill the box(Contain)').", "nfo('beforeEach get fillMode state pages.nam", ");\n    });\n\n    it('fillModeTest_0300', 0, a", "unit(){\n  describe('fillModeTest', function ", "  selectJsunit();\n  fillModeJsunit();\n  enum", "      console.info(\"fillModeTest_0100 on eve"], "files": ["ImageJsunit.test.ets", "Shape.ets", "pathProps.test.js", "circleProps.test.js", "imageAnimatorProps.test.js", "background.ets", "canvas2.ets", "ShapeJsunit.test.ets", "canvas.ets", "ImageAnimatorJsunit.test.ets", "polylineProps.test.js", "animationStatus.ets", "fillMode.ets", "ellipseProps.test.js", "GestureModeJsunit.test.ets", "touchAble.ets", "polygonProps.test.js", "animatorOption.ets", "enumsLineCapStyle.ets", "index.js", "backgroundAndSizeSetting.ets", "animateTransformProps.test.js", "tspanProps.test.js", "svgProps.test.js", "FillModeJsunit.test.ets", "shape.ets", "animateMotionProps.test.js", "Image.ets", "svgTextProps.test.js", "textPathProps.test.js", "imageAnimator.ets", "List.test.ets", "rectProps.test.js", "animateProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "clip", "api_method_all": "clip(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 50, "since": 7, "api_used": "\u662f", "lines": [" expect(obj1.$attrs.clip).assertEqual('true'", "  if(eventData.data.clipValue != null) {\n   ", "c,\n            typeEclipse: this.typeEclipse", "t('testProgressTypeEclipse', 0, async functi", "spectorByKey('image_clip');\n      let obj = ", "eEclipse: this.typeEclipse\n        }\n    },\n", "o('testProgressTypeEclipse START');\n        ", "     Image('/images/clip.png')\n        .clip", ").assertEqual('typeEclipse')\n        expect(", "yle: ProgressStyle.Eclipse })\n          .val", " 5 }) {\n      Text('clip')\n        .fontSize", ")\n        this.typeEclipse = this.$element(\"", "ull) {\n        this.clipType = new Rect({ wi", "spectorByKey('image_clip_true');\n      let o", "(200)\n\n      Text('Eclipse Progress').fontSi", "parse(objNew.$attrs.clip);\n      expect(clip", "     Image('/images/clip.png')\n        .mask", "yle: ProgressStyle.Eclipse }).width(100).val", "     Image('/images/clip.png')\n          .wi", "obalThis.value.typeEclipse);\n        console", "objNew));\n      let clip = JSON.parse(objNew", "clip);\n      expect(clip.shape).assertEqual(", "ON.parse(obj.$attrs.clip);\n      expect(clip", "roke();\n        ctx.clip();\n        // Draw ", "type).assertEqual('eclipse')\n        console", "t: 280 });\n  @State clipType: CommonShapeMet", "ual(\"ProgressStyle.Eclipse\")\n      console.i", " null,\n        typeEclipse: null\n    },\n\n   ", "clip.png')\n        .clip(this.clipType)\n    ", "or(0xd2cab3)\n      .clip(true)\n\n      Text('", "const ATTRS_CLIP = 'clip'\nconst ATTRS_ENABLE", "        .key('image_clip')\n\n      Row() {\n  ", "\n        .clip(this.clipType)\n        .width", "  expect(obj.$attrs.clip).assertEqual('false", "red rectangle after clip\n        ctx.fillSty", "this.$element(\"typeEclipse\").getInspector()\n", "ata: {\n            \"clipValue\": false\n      ", "   testProgressTypeEclipse\n     * @tc.desc  ", ")\n      .key('image_clip_true')\n\n      Text(", "spectorByKey('image_clip');\n      let objNew", "fy(obj));\n      let clip = JSON.parse(obj.$a", "px')\n      }\n      .clip(true)\n      .border", "yle: ProgressStyle.Eclipse }).color(Color.Gr"], "files": ["ProgressJsunit.test.ets", "progress.ets", "layoutConstraints.ets", "progressProps.test.js", "Constants.ets", "Progress.ets", "ShapeClippingJsunit.test.ets", "index.js", "shapeClipping.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "rotate", "api_method_all": "rotate(rotate: number): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 392, "since": 4, "api_used": "\u662f", "lines": [" getInspectorByKey('rotate9');\n      let obj =", "  expect(obj.$attrs.rotate.angle).assertEqual(", "  expect(obj.$attrs.rotate.centerY).assertEqua", "(100)\n        .key('rotate8')\n      Image('/im", "xpect(objNew.$attrs.rotate.x).assertEqual('2.0", " getInspectorByKey('rotate');\n      let obj = ", "10 })\n        .key('rotate2')\n\n      Text('sca", " getInspectorByKey('rotate8');\n      let obj =", "  expect(obj.$attrs.rotate.z).assertEqual('1.0", "sMatrix4 {\n  @State rotateValue: object= {\n   ", "EEEE)\n        .key('rotate3')\n\n      Text('Mat", "xpect(objNew.$attrs.rotate.centerX).assertEqua", "(100)\n        .key('rotate7')\n      Image('/im", " getInspectorByKey('rotate');\n      let objNew", "ify(sendEventByKey('rotate5', 10, \"\")));\n     ", "0 }))\n        .key('rotate4')\n    }.width('100", "xpect(objNew.$attrs.rotate.y).assertEqual('2.0", " if (eventData.data.rotateValue != null) {\n   ", "       .rotate(this.rotateValue)\n        .widt", " 5 })\n        .key('rotate6')\n      Image('/im", "ull) {\n        this.rotateValue = JSON.parse(e", "umn() {\n      Text('rotate').width('90%').font", " getInspectorByKey('rotate6');\n      let objNe", "     Row()\n        .rotate(this.rotateValue)\n ", "arse(eventData.data.rotateValue);\n      }\n    ", "EEEE)\n        .key('rotate')\n\n      Text('tran", " getInspectorByKey('rotate3');\n      let objNe", "mExample {\n  @State rotateValue: object= {\n   ", "0 }))\n        .key('rotate4')\n      Button(\"ge", "ep(1000);\n      let rotateValue = {x: 2, y: 2,", "ata: {\n            \"rotateValue\": JSON.stringi", "ue\": JSON.stringify(rotateValue)\n          }\n ", "xpect(objNew.$attrs.rotate.centerY).assertEqua", "xpect(objNew.$attrs.rotate.z).assertEqual('2.0", "  expect(obj.$attrs.rotate.y).assertEqual('1.0", "  expect(obj.$attrs.rotate.x).assertEqual('1.0", "  expect(obj.$attrs.rotate.centerX).assertEqua", " Matrix4.identity().rotate({x:1, y:1, z:2, ang", "(100)\n        .key('rotate9')\n    }.width('100", " getInspectorByKey('rotate7');\n      let obj =", "olor(0x2788D9).key('rotate5')\n      Image('/im", "umn() {\n      Text('rotate').width('10%').font"], "files": ["ohosPrompt.ets", "pathProps.test.js", "circleProps.test.js", "OhosMatrix4Jsunit.test.ets", "canvas.ets", "ohosMatrix4.ets", "lineProps.test.js", "polylineProps.test.js", "OhosPromptJsunit.test.ets", "ellipseProps.test.js", "TransFormJsunit.test.ets", "polygonProps.test.js", "index.js", "animateTransformProps.test.js", "tspanProps.test.js", "svgProps.test.js", "animateMotionProps.test.js", "svgTextProps.test.js", "transForm.ets", "motionPath.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "scale", "api_method_all": "scale(x: number, y: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 1026, "since": 6, "api_used": "\u662f", "lines": ["(eventData.data.grayscaleValue != null) {\n   ", "RS_GRAYSCALE = 'grayscale'\nconst ATTRS_BLUR =", "  expect(obj.$attrs.scale.y).assertEqual('0.5", "   }\n      })\n    }.scale({ x: this.scale }).", "')\n\n      Text('grayscale').fontSize(15).font", "        .scale(this.scaleValue)\n        .widt", "ep(1000);\n      let scaleValue = { x: 1, y: 1", " eventData.data.grayscaleValue;\n      }\n     ", " Matrix4.identity().scale({ x: 3 }).copy()\n  ", "Y: 5 }\n  @State grayscaleValue: string= 10;\n ", "xpect(objNew.$attrs.scale.y).assertEqual('1.0", ".transitionTypeOne, scale: { x: 0, y: 1.0, z:", "  }.scale({ x: this.scale }).opacity(this.opa", "     \"scale\" : this.scale,\n              \"opa", "context.filter('grayscale(50%)');\n    this.co", "00, y: 5 }\n  @State scaleValue: object= { x: ", "arse(eventData.data.scaleValue);\n      }\n    ", " Matrix4.identity().scale(eventData.data.matr", "ue\": JSON.stringify(scaleValue)\n          }\n ", "  expect(obj.$attrs.scale.x).assertEqual('2.0", "ull) {\n        this.scaleValue = JSON.parse(e", "ata: {\n            \"scaleValue\": JSON.stringi", "ep(1000);\n      let scaleValue = {\n        x:", "xpect(objNew.$attrs.scale.x).assertEqual('1.0", "ate2')\n\n      Text('scale').width('90%').font", "nExample {\n  @State scale: number = 1\n  @Stat", ".transitionTypeTwo, scale: { x: 1.0, y: 0.0 }", "ayscale(`${this.grayscaleValue}`)\n        .ke", " if (eventData.data.scaleValue != null) {\n   ", "     Row()\n        .scale(this.scaleValue)\n  ", " {\n        this.grayscaleValue = eventData.da", "Example1 {\n  @State scale: number = 1\n  @Stat", "pect(obj.$attrs.grayscale).assertEqual(0);\n  ", "ht(40)\n        .grayscale(`${this.grayscaleVa", "a: {\n              \"scale\" : this.scale,\n    ", " Matrix4.identity().scale({x:5, y:1, z:1, cen"], "files": ["pageTransition2.ets", "pathProps.test.js", "circleProps.test.js", "OhosMatrix4Jsunit.test.ets", "canvas.ets", "ohosMatrix4.ets", "lineProps.test.js", "imageEffects.ets", "Constants.ets", "polylineProps.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "polygonProps.test.js", "index.js", "PageTransitionJsunit.test.ets", "animateTransformProps.test.js", "svgProps.test.js", "progressProps.test.js", "transition.ets", "transForm.ets", "sharedTransition.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "transform", "api_method_all": "transform(scaleX: number, skewX: number, skewY: number, scaleY: number, translateX: number, translateY: number): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 353, "since": 4, "api_used": "\u662f", "lines": ["h.PI / 180);\n  }\n\n  transform() {\n    this.contex", "\n              this.transform();\n              th", "ransformProp : this.transformProp,\n            id", "e('/images/bg.jpg').transform(this.matrix4)\n     ", ", z: 30 })\n  @State transformValue: object= Matri", "op = this.$element(\"transformProp\").getInspector(", "e('/images/bg.jpg').transform(this.matrix6)\n     ", ".info(\"[canvas] get transform----\" + data);\n  }\n\n", "rop : null,\n        transformProp : null,\n       ", "  expect(obj.$attrs.transform.type)\n        .asse", "15px 25px',\n        transformOrigin:'center top'\n", ");\n    this.context.transform(1, 0.1, 0.01, 1, 10", "tion:'0px',\n        transformOrigin:'center cente", "  expect(obj.$attrs.transform.matrix)\n      .asse", ", y: 0.5 }\n  @State transformValue: object= Matri", "e('/images/bg.jpg').transform(this.matrix5)\n     ", "thProp,\n            transformProp : this.transfor", "  expect(obj.$attrs.transform.matrix)\n        .as", "(0xAFEEEE)\n        .transform(Matrix4.identity().", "ctor()\n        this.transformProp = this.$element", "ngify(objNew.$attrs.transform)).assertEqual('{}')", "s = [\n    {\n        transform: {\n            tran", " Matrix4.identity().transformPoint([100, 10])\n  @", "padding(5)\n        .transform(this.matrix2.combin", "    .translate(this.transformValue)\n        .widt", "   },\n    {\n        transform: {\n            tran", "10px 20px',\n        transformOrigin:'left top'\n  "], "files": ["pathProps.test.js", "rectProps.test.js", "svgProps.test.js", "polygonProps.test.js", "circleProps.test.js", "polylineProps.test.js", "transForm.ets", "OhosMatrix4Jsunit.test.ets", "ellipseProps.test.js", "index.js", "canvas.ets", "ohosMatrix4.ets", "lineProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "setTransform", "api_method_all": "setTransform(\n    scaleX: number,\n    skewX: number,\n    skewY: number,\n    scaleY: number,\n    translateX: number,\n    translateY: number,\n  ): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n", "ffscreenCanvasCtx.resetTransform();\n        offscree", "\" + data);\n  }\n\n  resetTransform() {\n    this.contex", ", 100, 100);\n  }\n\n  setTransform() {\n    this.contex", ");\n    this.context.setTransform(1, 0.1, 0.01, 1, 10", "\n    this.context.resetTransform();\n  }\n\n  translate", "0 Z\");\n        path.setTransform(0.8, 0, 0, 0.4, 0, ", "\n              this.setTransform();\n              th"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "translate", "api_method_all": "translate(x: number, y: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 280, "since": 6, "api_used": "\u662f", "lines": ["(Matrix4.identity().translate(eventData.data.matr", "     Row()\n        .translate(this.transformValue", "form: {\n            translate: '-120px',\n        ", "tate')\n\n      Text('translate').width('10%').font", "entity()\n          .translate(eventData.data.matr", "form: {\n            translateX: '100px',\n        ", " Matrix4.identity().translate({ x: 300 }).copy()\n", "'gestureMode')\n    .translate({ x: this.offsetX, ", "('PanGesture')\n    .translate({ x: this.offsetX, ", "Transform();\n  }\n\n  translate() {\n    this.contex", " Matrix4.identity().translate({x:100, y:200, z:30", "e: 300\n  }\n  @State translateValue: object= { x: ", " Matrix4.identity().translate(eventData.data.matr", " }).margin(80)\n    .translate({ x: this.offsetX, ", ");\n    this.context.translate(50, 50);\n    this.c", "tate')\n\n      Text('translate').width('90%').font", "100px',\n            translateY: '0px',\n          ", " '0px',\n            translateZ: '20px',\n         ", "form: {\n            translateX: '0px',\n          ", "(Matrix4.identity().translate({ x: 100, y: 100, z", " Matrix4.identity().translate({ x: 100, y: 100, z", "\n              this.translate();\n              th", " '0px',\n            translateY: '5px',\n          "], "files": ["animateTransformProps.test.js", "PanGesture.ets", "panDirection.ets", "pathProps.test.js", "rectProps.test.js", "svgProps.test.js", "polygonProps.test.js", "circleProps.test.js", "polylineProps.test.js", "transForm.ets", "ellipseProps.test.js", "gestureMode.ets", "index.js", "canvas.ets", "ohosMatrix4.ets", "lineProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "drawImage", "api_method_all": "drawImage(image: Image, dx: number, dy: number, dWidth: number, dHeight: number): void;", "api_type": "", "api_args_count": 5, "api_level": 21, "api_used_count": 43, "since": 7, "api_used": "\u662f", "lines": ["\n        offCanvas2.drawImage(img, 0, 0, 33, 33);", "\n        offCanvas2.drawImage(img, 33, 66, 33, 33", "\n        offCanvas2.drawImage(img, 0, 99, 33, 33)", " offscreenCanvasCtx.drawImage(img, 0, 0, 200, 100", ");\n    this.context.drawImage(img, 30, 950, 160, ", "');\n            ctx.drawImage(img, 0, 0, 300, 250", "');\n            ctx.drawImage(img, 0, 0, 300, 50)", "\n        offCanvas2.drawImage(img, 66, 0, 33, 33)", "se;\n            ctx.drawImage(img, 10, 0, 100, 60", " offscreenCanvasCtx.drawImage(img, 0, 0, 100, 200", "');\n            ctx.drawImage(img, 0, 0, 200, 100", "\n        offCanvas2.drawImage(img, 66, 33, 33, 33", "\n        offCanvas2.drawImage(img, 0, 66, 33, 33)", "50, 50, 50);\n  }\n\n  drawImage() {\n    let img = n", "\n              this.drawImage();\n              th", "\n        offCanvas2.drawImage(img, 33, 33, 33, 33", "\n        offCanvas2.drawImage(img, 33, 99, 33, 33", "e;\n    this.context.drawImage(img, 30, 950, 160, ", "pg\";\n    offCanvas2.drawImage(img, 0, 0, 100, 100", ");\n    this.context.drawImage(img, 0, 0, 500, 500", "\n        offCanvas2.drawImage(img, 66, 66, 33, 33", "\n        offCanvas2.drawImage(img, 33, 0, 33, 33)", " offscreenCanvasCtx.drawImage(img, 0, 0, 100, 100", "');\n            ctx.drawImage(img, 0, 0, 300, 100", "\n        offCanvas2.drawImage(img, 0, 33, 33, 33)"], "files": ["global.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "drawImage", "api_method_all": "drawImage(\n    image: Image,\n    sx: number,\n    sy: number,\n    sWidth: number,\n    sHeight: number,\n    dx: number,\n    dy: number,\n    dWidth: number,\n    dHeight: number,\n  ): void;", "api_type": "", "api_args_count": 9, "api_level": 21, "api_used_count": 43, "since": 7, "api_used": "\u662f", "lines": ["\n        offCanvas2.drawImage(img, 0, 0, 33, 33);", "\n        offCanvas2.drawImage(img, 33, 66, 33, 33", "\n        offCanvas2.drawImage(img, 0, 99, 33, 33)", " offscreenCanvasCtx.drawImage(img, 0, 0, 200, 100", ");\n    this.context.drawImage(img, 30, 950, 160, ", "');\n            ctx.drawImage(img, 0, 0, 300, 250", "');\n            ctx.drawImage(img, 0, 0, 300, 50)", "\n        offCanvas2.drawImage(img, 66, 0, 33, 33)", "se;\n            ctx.drawImage(img, 10, 0, 100, 60", " offscreenCanvasCtx.drawImage(img, 0, 0, 100, 200", "');\n            ctx.drawImage(img, 0, 0, 200, 100", "\n        offCanvas2.drawImage(img, 66, 33, 33, 33", "\n        offCanvas2.drawImage(img, 0, 66, 33, 33)", "50, 50, 50);\n  }\n\n  drawImage() {\n    let img = n", "\n              this.drawImage();\n              th", "\n        offCanvas2.drawImage(img, 33, 33, 33, 33", "\n        offCanvas2.drawImage(img, 33, 99, 33, 33", "e;\n    this.context.drawImage(img, 30, 950, 160, ", "pg\";\n    offCanvas2.drawImage(img, 0, 0, 100, 100", ");\n    this.context.drawImage(img, 0, 0, 500, 500", "\n        offCanvas2.drawImage(img, 66, 66, 33, 33", "\n        offCanvas2.drawImage(img, 33, 0, 33, 33)", " offscreenCanvasCtx.drawImage(img, 0, 0, 100, 100", "');\n            ctx.drawImage(img, 0, 0, 300, 100", "\n        offCanvas2.drawImage(img, 0, 33, 33, 33)"], "files": ["global.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "restore", "api_method_all": "restore: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["\n              this.restore();\n              th", "itMode(true)\n      .restoreId(this.id)\n      .h", "closePath();\n  }\n\n  restore() {\n    this.contex", " {\n    this.context.restore();\n  }\n\n  save() {\n"], "files": ["canvas.ets", "dragEvent2.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "save", "api_method_all": "save: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": [" {\n    this.context.save();\n  }\n\n  addPath()", "        this.cookie.saveCookie()\n          }", "\n              this.save();\n              th", "t.restore();\n  }\n\n  save() {\n    this.contex"], "files": ["WebPage.ets", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "createImageData", "api_method_all": "createImageData(width: number, height: number): ImageData;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 13, "since": 7, "api_used": "\u662f", "lines": ["\n              this.createImageDataByImageData();\n     ", "Data = this.context.createImageData(imageData);\n    con", "Data = this.context.createImageData(80, 80);\n    for (v", "\n              this.createImageData();\n              th", "var imageData = ctx.createImageData(2,1)\n        prompt", "var imageData = ctx.createImageData(1,1)\n        prompt", "var imageData = ctx.createImageData(1,2)\n        prompt", "geData = offCanvas2.createImageData(100, 100);\n    var ", ", 200, 100);\n  }\n\n  createImageData() {\n    let imageDa", "Data = this.context.createImageData(100, 100);\n    cons", "Data = this.context.createImageData(50, 50);\n    let im", "imageData));\n  }\n\n  createImageDataByImageData() {\n    "], "files": ["global.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "createImageData", "api_method_all": "createImageData(imagedata: ImageData): ImageData;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 13, "since": 7, "api_used": "\u662f", "lines": ["\n              this.createImageDataByImageData();\n     ", "Data = this.context.createImageData(imageData);\n    con", "Data = this.context.createImageData(80, 80);\n    for (v", "\n              this.createImageData();\n              th", "var imageData = ctx.createImageData(2,1)\n        prompt", "var imageData = ctx.createImageData(1,1)\n        prompt", "var imageData = ctx.createImageData(1,2)\n        prompt", "geData = offCanvas2.createImageData(100, 100);\n    var ", ", 200, 100);\n  }\n\n  createImageData() {\n    let imageDa", "Data = this.context.createImageData(100, 100);\n    cons", "Data = this.context.createImageData(50, 50);\n    let im", "imageData));\n  }\n\n  createImageDataByImageData() {\n    "], "files": ["global.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "getImageData", "api_method_all": "getImageData(sx: number, sy: number, sw: number, sh: number): ImageData;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["Data = this.context.getImageData(10, 10, 80, 80);\n  ", "\n              this.getImageData();\n              th", "y(imgData));\n  }\n\n  getImageData() {\n    let imageDa"], "files": ["canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "putImageData", "api_method_all": "putImageData(imageData: ImageData, dx: number, dy: number): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": [" }\n    this.context.putImageData(imageData, 250, 166", "\" + height);\n  }\n\n  putImageData() {\n    let imageDa", "\n              this.putImageData();\n              th"], "files": ["canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "putImageData", "api_method_all": "putImageData(\n    imageData: ImageData,\n    dx: number,\n    dy: number,\n    dirtyX: number,\n    dirtyY: number,\n    dirtyWidth: number,\n    dirtyHeight: number,\n  ): void;", "api_type": "", "api_args_count": 7, "api_level": 21, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": [" }\n    this.context.putImageData(imageData, 250, 166", "\" + height);\n  }\n\n  putImageData() {\n    let imageDa", "\n              this.putImageData();\n              th"], "files": ["canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "setLineDash", "api_method_all": "setLineDash(segments: Array<number>): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.setLineDash([10, 20]);\n    this", " 6.28);\n        ctx.setLineDash([10,20]);\n        c", ");\n    this.context.setLineDash([0, 0]);\n  }\n\n  glo"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "getLineDash", "api_method_all": "getLineDash(): Array<number>;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [", 200, 100);\n  }\n\n  getLineDash() {\n    this.contex", " obj = this.context.getLineDash();\n  }\n\n  setPixelM"], "files": ["canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "transferFromImageBitmap", "api_method_all": "transferFromImageBitmap(bitmap: ImageBitmap): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 16, "since": 7, "api_used": "\u662f", "lines": ["tmap();\n        ctx.transferFromImageBitmap(bitmap);\n    }\n\n}", "tmap();\n        ctx.transferFromImageBitmap(bitmap);\n\n        p", "p();\n        canvas.transferFromImageBitmap(bitmap);\n\n        p", "p();\n        canvas.transferFromImageBitmap(bitmap);\n    }\n\n}", "tmap();\n        ctx.transferFromImageBitmap(bitmap);\n    },\n\n  ", "tmap();\n        ctx.transferFromImageBitmap(bitmap);\n    },\n   ", "p();\n        canvas.transferFromImageBitmap(bitmap);\n        pr", "PageShow() {\n  }\n\n  transferFromImageBitmap() {\n    this.offCon", "tmap();\n        ctx.transferFromImageBitmap(bitmap);\n        pr", "tmap();\n        ctx.transferFromImageBitmap(bitmap);\n    },\n\n}", ");\n    this.context.transferFromImageBitmap(image);\n  }\n\n  offS", "\n              this.transferFromImageBitmap();\n              th", "map();\n    this.ctx.transferFromImageBitmap(bitmap);\n  }\n\n  tes"], "files": ["global.ets", "canvas2.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "fillStyle", "api_method_all": "fillStyle?: string | CanvasGradient | CanvasPattern", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 75, "since": 7, "api_used": "\u662f", "lines": ["\n              this.fillStyle();\n              th", " 3, 3);\n        ctx.fillStyle = 'rgb(255,0,0)';\n ", "example\n        ctx.fillStyle = 'rgb(255,0,0)';\n ", "('2d');\n        ctx.fillStyle = 'rgb(255,0,0)';\n ", "('2d');\n        ctx.fillStyle = '#0000ff';\n      ", "PageShow() {\n  }\n\n  fillStyle() {\n    this.contex", " {\n    this.context.fillStyle = 'rgb(0,0,0)';\n   ", ");\n    this.context.fillStyle = 'rgb(0,0,255)';\n ", ",255)';\n        ctx.fillStyle = 'rgb(255,0,0)';\n ", " 3, 3);\n        ctx.fillStyle = 'rgb(0,0,255)';\n ", "';\n    this.context.fillStyle = 'rgb(0,0,255)';\n ", "0;\n    this.context.fillStyle = 'rgb(255,0,0)';\n ", " = 0.4;\n        ctx.fillStyle = 'rgb(0,0,255)';\n ", ",0,0)';\n        ctx.fillStyle = 'rgb(255,0,0)';\n ", "('2d');\n        ctx.fillStyle = 'rgb(0,0,255)';\n ", ");\n    this.context.fillStyle = 'rgb(255,0,0)';\n ", " {\n    this.context.fillStyle = 'rgb(0,0,255)';\n ", "ff00');\n        ctx.fillStyle=gradient;\n        c", " {\n    this.context.fillStyle = '#0000ff';\n    th", ");\n    this.context.fillStyle = grad;\n    this.co", "er clip\n        ctx.fillStyle = \"rgb(255,0,0)\";\n ", "-over';\n        ctx.fillStyle = 'rgb(0,0,255)';\n ", "peat');\n        ctx.fillStyle = pat;\n        ctx.", "    this.offContext.fillStyle = '#0000ff';\n    th", "('2d');\n        ctx.fillStyle = 'rgb(0,0,0)';\n   ", " {\n    this.context.fillStyle = 'rgb(255,0,0)';\n ", "4;\n    this.context.fillStyle = 'rgb(0,0,255)';\n ", ");\n    this.context.fillStyle = pattern;\n    this", "';\n    this.context.fillStyle = 'rgb(255,0,0)';\n "], "files": ["canvas2.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "lineWidth", "api_method_all": "lineWidth?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 26, "since": 4, "api_used": "\u662f", "lines": [" {\n    this.context.lineWidth = 5;\n    this.conte", "('2d');\n        ctx.lineWidth = 5;\n        ctx.li", "\n              this.lineWidth();\n              th", " {\n    this.context.lineWidth = 10;\n    this.cont", "('2d');\n        ctx.lineWidth = 10;\n        ctx.l", "('2d');\n        ctx.lineWidth = 8;\n        ctx.be", " {\n    this.context.lineWidth = 8;\n    this.conte", "20, 75, 55);\n  }\n\n  lineWidth() {\n    this.contex", "Path();\n        ctx.lineWidth = 5;\n        ctx.li", "('2d');\n        ctx.lineWidth = 10;\n        ctx.s", ");\n    this.context.lineWidth = 8;\n    this.conte", ");\n    this.context.lineWidth = 6;\n    this.conte"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "strokeStyle", "api_method_all": "strokeStyle?: string | CanvasGradient | CanvasPattern", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 12, "since": 7, "api_used": "\u662f", "lines": ["0;\n    this.context.strokeStyle = '#0000ff';\n    th", "h = 10;\n        ctx.strokeStyle = '#0000ff';\n      ", "25, 55, 75);\n  }\n\n  strokeStyle() {\n    this.contex", "\n              this.strokeStyle();\n              th", "6;\n    this.context.strokeStyle = '#0000ff';\n    th", "('2d');\n        ctx.strokeStyle = '#0000ff';\n      "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "lineCap", "api_method_all": "lineCap: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 49, "since": 4, "api_used": "\u662f", "lines": ["tringify(obj.$attrs.lineCap));\n      expect(obj", "000ff';\n        ctx.lineCap = 'round';\n        ", "\n              this.lineCap();\n              th", "number = 7\n  @State lineCap: LineCapStyle = Lin", "Path();\n        ctx.lineCap = 'round';\n        ", "et inspector stroke-lineCap value is: \" + JSON.", "  expect(obj.$attrs.lineCap == LineCapStyle.Rou", ");\n    this.context.lineCap = 'round';\n    this", "25, 75, 55);\n  }\n\n  lineCap() {\n    this.contex", "le.log(\"cd divider1 lineCap\" + JSON.stringify(o", "rops] get inspector lineCap value is: \" + JSON.", "  expect(obj.$attrs.lineCap == LineCapStyle.Squ", "ole.log(\"cd divider lineCap\" + JSON.stringify(o", "his.color)\n        .lineCap(LineCapStyle.Round)", " Divider()\n        .lineCap(LineCapStyle.Butt)\n", " Divider()\n        .lineCap(LineCapStyle.Square", "le.log(\"cd divider2 lineCap\" + JSON.stringify(o", "h = 10;\n        ctx.lineCap = 'round';\n        ", " Divider()\n        .lineCap(LineCapStyle.Round)"], "files": ["lineProps.test.js", "divider.ets", "pathProps.test.js", "rectProps.test.js", "svgProps.test.js", "polygonProps.test.js", "circleProps.test.js", "polylineProps.test.js", "ellipseProps.test.js", "index.js", "canvas.ets", "DividerJsunit.test.ets", "Divider.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "lineJoin", "api_method_all": "lineJoin: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 12, "since": 4, "api_used": "\u662f", "lines": ["\n              this.lineJoin();\n              th", "xt.stroke();\n  }\n\n  lineJoin() {\n    this.contex", "th = 5;\n        ctx.lineJoin = 'miter';\n        ", "8;\n    this.context.lineJoin = 'miter';\n    this"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "miterLimit", "api_method_all": "miterLimit: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 7, "since": 4, "api_used": "\u662f", "lines": ["xt.stroke();\n  }\n\n  miterLimit() {\n    this.contex", "';\n    this.context.miterLimit = 3;\n    this.conte", "miter';\n        ctx.miterLimit = 3;\n        ctx.mo", "\n              this.miterLimit();\n              th"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "font", "api_method_all": "font: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1278, "since": 4, "api_used": "\u662f", "lines": ["g container: grid').fontSize(20).fontColor(C", "height(40)\n        .fontSize(16)\n        .ba", "   Text('saturate').fontSize(15).fontColor(0", "t('2')\n            .fontSize(20)\n           ", "').key(\"alignSelf\").fontSize(9).fontColor(0x", "nSelf\").fontSize(9).fontColor(0xCCCCCC).widt", "margin(30)\n        .fontSize(20)\n        .on", "ETS TEST')\n        .fontSize(50)\n        .fo", "rast').fontSize(15).fontColor(0xCCCCCC).widt", "blur').fontSize(15).fontColor(0xCCCCCC).widt", "Basis').fontSize(9).fontColor(0xCCCCCC).widt", "  Text('hueRotate').fontSize(15).fontColor(0", "adow').fontSize(15).fontColor(0xCCCCCC).widt", " Text('alignItems').fontSize(9).fontColor(0x", " row').fontSize(20).fontColor(Color.Black).w", " Text('flexShrink').fontSize(9).fontColor(0x", "  Text('grayscale').fontSize(15).fontColor(0", "     Text('shadow').fontSize(15).fontColor(0", "  Text('font blur').fontSize(15).fontColor(0", "bb2cb)\n            .fontSize(20)\n           ", "cale').fontSize(15).fontColor(0xCCCCCC).widt", "t('1')\n            .fontSize(20)\n           ", "       Text('Left').fontSize(25)\n        }\n ", "ty 4').fontSize(20).fontColor(Color.Black).w", "t('4')\n            .fontSize(20)\n           ", "ness').fontSize(15).fontColor(0xCCCCCC).widt", "xGrow\").fontSize(9).fontColor(0xCCCCCC).widt", "ext('backdropBlur').fontSize(15).fontColor(0", "grid').fontSize(20).fontColor(Color.Black).w", "   Text('contrast').fontSize(15).fontColor(0", "vert').fontSize(15).fontColor(0xCCCCCC).widt", "     Text('Center').fontSize(25)\n        }\n ", "Blur').fontSize(15).fontColor(0xCCCCCC).widt", "displayPriority 4').fontSize(20).fontColor(C", "ntSize(50)\n        .fontWeight(FontWeight.Bo", "Items').fontSize(9).fontColor(0xCCCCCC).widt", "t('3')\n            .fontSize(20)\n           ", "ng container: row').fontSize(20).fontColor(C", " Text('brightness').fontSize(15).fontColor(0", "      Text('Right').fontSize(25)\n        }\n ", "w').key(\"flexGrow\").fontSize(9).fontColor(0x", "  Text('flexBasis').fontSize(9).fontColor(0x", "tate').fontSize(15).fontColor(0xCCCCCC).widt", "hrink').fontSize(9).fontColor(0xCCCCCC).widt", "     Text('invert').fontSize(15).fontColor(0", "10 }) {\n      Text('font blur').fontSize(15)", "2cb)\n              .fontSize(40)\n           ", "rate').fontSize(15).fontColor(0xCCCCCC).widt"], "files": ["ImageJsunit.test.ets", "systemRouterA.ets", "configuration.ets", "longPressGesture.ets", "placement.ets", "Qrcode.ets", "Navigation.ets", "imageFit.ets", "Span.ets", "Progress.ets", "column.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "TextStyleJsunit.test.ets", "marquee.ets", "TextClockJsunit.test.ets", "textTimer.ets", "Rating.ets", "Swiper.ets", "Divider.ets", "border.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "systemPrompt.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "scrollCode.ets", "button.ets", "focus.ets", "SelectJsunit.test.ets", "ListItem.ets", "background.ets", "Slider.ets", "PanDirectionJsunit.test.ets", "Text.ets", "SpanJsunit.test.ets", "Counter.ets", "ButtonJsunit.test.ets", "enumsVerticalAlign.ets", "Stack.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "sideBar.ets", "toggle.ets", "Blank.ets", "Badge.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "positionSetting.ets", "TextArea.ets", "flexDirection.ets", "shapeClipping.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "stepper.ets", "shape.ets", "image.ets", "svgTextProps.test.js", "textPathProps.test.js", "row.ets", "loadingProgress.ets", "Marquee.ets", "Select.ets", "flex.ets", "Shape.ets", "gridContainer.ets", "PatternLock.ets", "Stepper.ets", "gridPage.ets", "enumsImage.ets", "PieceCode.ets", "badge.ets", "textStyle.ets", "imageEffects.ets", "AlphabetIndexer.ets", "ohosRouterB.ets", "ColumnSplit.ets", "textClock.ets", "layoutConstraints.ets", "list.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "flexWrap.ets", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "TextAreaJsunit.test.ets", "lazyForEach.ets", "listItem.ets", "grid.ets", "Button.ets", "fontWeight.ets", "bindPopup.ets", "span.ets", "BackgroundAndSizeSettingJsunit.test.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "BadgeJsunit.test.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "Rect.ets", "divider.ets", "TextInput.ets", "Constants.ets", "rating.ets", "Path.ets", "DataPanel.ets", "FormComponentPage.ets", "Grid.ets", "GestureModeJsunit.test.ets", "visibility.ets", "progress.ets", "AlertDialog.ets", "WebPage.ets", "TextTimerJsunit.test.ets", "index.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "tspanProps.test.js", "select.ets", "Toggle.ets", "slider.ets", "aboutToDisappear.ets", "Calendar.ets", "refresh.ets", "ScrollBar.ets", "enumsHorizontalAlign.ets", "colorGradient.ets", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "textAlign", "api_method_all": "textAlign: \"left\" | \"right\" | \"center\" | \"start\" | \"end\"", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 199, "since": 4, "api_used": "\u662f", "lines": ["wberry')\n          .textAlign(TextAlign.Center).b", "ign: \" + obj.$attrs.textAlign);\n      expect(obj.", "th(120).height(120).textAlign(TextAlign.Center).f", "PositionSetting001] textAlign: \" + obj.$attrs.tex", "xD2B48C)\n          .textAlign(TextAlign.Center)\n ", "(10)\n              .textAlign(TextAlign.Center).b", "dth('90%')\n        .textAlign(TextAlign.Start).ma", "'mango')\n          .textAlign(TextAlign.Center).b", "0BFFF)\n            .textAlign(TextAlign.Center)\n ", "Radius(10)\n        .textAlign(TextAlign.Center).b", "682B4)\n            .textAlign(TextAlign.Center)\n ", "'cursive')\n        .textAlign(TextAlign.Center)\n ", "banana')\n          .textAlign(TextAlign.Center).b", "  expect(obj.$attrs.textAlign).assertEqual('TextA", " if (eventData.data.textAlign) {\n        this.ali", "PositionSetting003] textAlign: \" + obj.$attrs.tex", "FEEEE)\n            .textAlign(TextAlign.Center)\n ", " ATTRS_TEXTALIGN = 'textAlign'\nconst ATTRS_CONTEN", "height(50)\n        .textAlign(TextAlign.Center)\n ", "  expect(obj.$attrs.textAlign).assertEqual(\"TextA", "oundColor(0xF5DEB3).textAlign(TextAlign.Center)\n ", " getInspectorByKey('textAlign');\n      console.in", "xFFEFD5)\n          .textAlign(TextAlign.Center)\n ", "xF5DEB3)\n          .textAlign(TextAlign.Center)\n ", "orange')\n          .textAlign(TextAlign.Center).b", "582B4)\n            .textAlign(TextAlign.Center)\n ", "C4)\n          .key('textAlign')\n\n        Text('di", "6)\n                .textAlign(TextAlign.Center)\n ", "6)\n                .textAlign(TextAlign.Center).b", "(18)\n              .textAlign(TextAlign.Center)\n ", "'apple')\n          .textAlign(TextAlign.Center).b", "ata: {\n            \"textAlign\": Alignment.BottomE"], "files": ["flex.ets", "gridContainer.ets", "gridPage.ets", "canvas.ets", "badge.ets", "bindContextMenu.ets", "Text.ets", "textStyle.ets", "Navigation.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "Constants.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "text.ets", "Grid.ets", "FormComponentPage.ets", "layoutConstraints.ets", "list.ets", "positionSetting.ets", "List.ets", "TextArea.ets", "GridContainer.ets", "dragEvent2.ets", "index.js", "Swiper.ets", "edgeEffect.ets", "backgroundAndSizeSetting.ets", "border.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "GridItem.ets", "TextAreaJsunit.test.ets", "scrollBar.ets", "textArea.ets", "textInput.ets", "listItem.ets", "grid.ets", "image.ets", "sharedTransition.ets", "ScrollBar.ets", "ColumnSplit.ets", "scrollCode.ets", "NavigatorCode.ets", "patternLock.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "imageSmoothingEnabled", "api_method_all": "imageSmoothingEnabled: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 4, "api_used": "\u662f", "lines": [") {\n            ctx.imageSmoothingEnabled = false;\n          ", "t;\n    this.context.imageSmoothingEnabled = false;\n    this.c", "Y = 0;\n    }\n  }\n\n  imageSmoothingEnabled() {\n    let img = n", "\n              this.imageSmoothingEnabled();\n              th", ");\n    this.context.imageSmoothingEnabled = false;\n    this.c", "       this.context.imageSmoothingEnabled = false\n          t"], "files": ["global.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "textBaseline", "api_method_all": "textBaseline: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 12, "since": 4, "api_used": "\u662f", "lines": ["0, 30);\n        ctx.textBaseline = 'hanging';\n      ", ");\n    this.context.textBaseline = 'middle';\n    thi", ");\n    this.context.textBaseline = 'bottom';\n    thi", "\n              this.textBaseline();\n              th", "0, 30);\n        ctx.textBaseline = 'middle';\n       ", "0, 30);\n        ctx.textBaseline = 'bottom';\n       ", "5, 30);\n        ctx.textBaseline = 'alphabetic';\n   ", "erif';\n\n        ctx.textBaseline = 'top';\n        ct", "0 + height);\n  }\n\n  textBaseline() {\n    let height ", ");\n    this.context.textBaseline = 'alphabetic';\n   ", ");\n    this.context.textBaseline = 'hanging';\n    th", "';\n    this.context.textBaseline = 'top';\n    this.c"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "globalAlpha", "api_method_all": "globalAlpha: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 4, "api_used": "\u662f", "lines": [");\n    this.context.globalAlpha = 0.4;\n    this.con", "\n              this.globalAlpha();\n              th", " {\n    this.context.globalAlpha = 1;\n    this.conte", "eight + 10);\n  }\n\n  globalAlpha() {\n    this.contex", "0, 40);\n        ctx.globalAlpha = 0.4;\n        ctx."], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "lineDashOffset", "api_method_all": "lineDashOffset: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 4, "api_used": "\u662f", "lines": ["70, 50, 50);\n  }\n\n  lineDashOffset() {\n    this.contex", "0,20]);\n        ctx.lineDashOffset = 10.0;\n        ctx", "\n              this.lineDashOffset();\n              th"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "globalCompositeOperation", "api_method_all": "globalCompositeOperation: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 13, "since": 4, "api_used": "\u662f", "lines": ["0, 30);\n        ctx.globalCompositeOperation = 'source-over';\n  ", "0, 30);\n        ctx.globalCompositeOperation = 'destination-over", ");\n    this.context.globalCompositeOperation = 'source-over';\n  ", "ash([0, 0]);\n  }\n\n  globalCompositeOperation() {\n    let height ", "\n              this.globalCompositeOperation();\n              th", ");\n    this.context.globalCompositeOperation = 'destination-over"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "shadowBlur", "api_method_all": "shadowBlur: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 19, "since": 4, "api_used": "\u662f", "lines": [" {\n    this.context.shadowBlur = 0;\n    if (isX) {", "ource-over';\n  }\n\n  shadowBlur() {\n    this.contex", " {\n    this.context.shadowBlur = 10;\n    this.cont", " {\n    this.context.shadowBlur = 30;\n    this.cont", "\n              this.shadowBlur();\n              th", "('2d');\n        ctx.shadowBlur = 20;\n        ctx.s", "('2d');\n        ctx.shadowBlur = 30;\n        ctx.s", "('2d');\n        ctx.shadowBlur = 10;\n        ctx.s"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "shadowColor", "api_method_all": "shadowColor: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 18, "since": 4, "api_used": "\u662f", "lines": ["r = 20;\n        ctx.shadowColor = 'rgb(0,0,0)';\n   ", "X = 20;\n        ctx.shadowColor = 'rgb(0,0,0)';\n   ", "r = 20;\n        ctx.shadowColor = 'rgb(0,0,255)';\n ", "r = 30;\n        ctx.shadowColor = 'rgb(0,0,0)';\n   ", "0, 100, 80);\n  }\n\n  shadowColor() {\n    this.contex", "0;\n    this.context.shadowColor = 'rgb(0,0,0)';\n   ", "Y = 20;\n        ctx.shadowColor = 'rgb(0,0,0)';\n   ", "0;\n    this.context.shadowColor = 'rgb(0,0,255)';\n ", "\n              this.shadowColor();\n              th"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "shadowOffsetX", "api_method_all": "shadowOffsetX: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 4, "api_used": "\u662f", "lines": ["0, 80, 100);\n  }\n\n  shadowOffsetX() {\n    this.contex", "0;\n    this.context.shadowOffsetX = 20;\n    this.cont", "\n              this.shadowOffsetX();\n              th", "r = 10;\n        ctx.shadowOffsetX = 20;\n        ctx.s", "\n      this.context.shadowOffsetX = 0;\n    } else {\n "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasRenderingContext2D", "api_method_name": "shadowOffsetY", "api_method_all": "shadowOffsetY: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 4, "api_used": "\u662f", "lines": ["r = 10;\n        ctx.shadowOffsetY = 20;\n        ctx.s", "\n              this.shadowOffsetY();\n              th", "X = 20;\n        ctx.shadowOffsetY = 20;\n        ctx.s", "hadow(true);\n  }\n\n  shadowOffsetY() {\n    this.contex", "0;\n    this.context.shadowOffsetY = 20;\n    this.cont", "\n      this.context.shadowOffsetY = 0;\n    }\n  }\n\n  i"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasGradient", "api_method_all": "export interface CanvasGradient {\n  \n  addColorStop(offset: number, color: string): void;\n}", "api_method_name": "CanvasGradient", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 7, "since": 7, "api_used": "\u662f", "lines": ["  expect(\"pages/obj_CanvasGradient/router/\").assertEqu", "* @tc.name      testCanvasGradientComponent\n     * @tc", "sole.info(\"push obj_CanvasGradient page success \" + JS", "ole.error(\"push obj_CanvasGradient page error \" + JSON", "e.info(\"[router.obj_CanvasGradient] getState\" + JSON.s", "    uri: 'pages/obj_CanvasGradient/router/index'\n     ", "     */\n    it('testCanvasGradientComponent', 0, async"], "files": ["commonComponentJsApi.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasGradient", "api_method_name": "addColorStop", "api_method_all": "addColorStop(offset: number, color: string): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 8, "since": 4, "api_used": "\u662f", "lines": [");\n        gradient.addColorStop(0,'#00ffff');\n     ", "0, 'red');\n    grad.addColorStop(0.5, 'white');\n    ", "1970, 80);\n    grad.addColorStop(0.0, 'red');\n    gr", " 'white');\n    grad.addColorStop(1.0, 'green');\n    ", "50, 2000);\n    grad.addColorStop(0.0, 'red');\n    gr", ");\n        gradient.addColorStop(1,'#ffff00');\n     "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Path2D", "api_method_all": "export interface Path2D {\n  \n  addPath(path: Path2D): void;\n\n  \n  setTransform(\n    scaleX: number,\n    skewX: number,\n    skewY: number,\n    scaleY: number,\n    translateX: number,\n    translateY: number,\n  ): void;\n\n  \n  closePath(): void;\n\n  \n  moveTo(x: number, y: number): void;\n\n  \n  lineTo(x: number, y: number): void;\n\n  \n  bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;\n\n  \n  quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\n\n  \n  arc(x: number, y: number, radius: number, startAngle: number, endAngel: number, anticlockwise?: boolean): void;\n\n  \n  arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\n\n  \n  ellipse(\n    x: number,\n    y: number,\n    radiusX: number,\n    radiusY: number,\n    rotation: number,\n    startAngle: number,\n    endAngle: number,\n    anticlockwise?: number,\n  ): void;\n\n  \n  rect(x: number, y: number, width: number, height: number): void;\n}", "api_method_name": "Path2D", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 19, "since": 7, "api_used": "\u662f", "lines": ["  expect(\"pages/obj_Path2D/router/\").assertEqu", "    uri: 'pages/obj_Path2D/router/index'\n     ", "ar path = ctx.createPath2D(\"M80 20 L40 100 L12", "r path2 = ctx.createPath2D();\n        path2.ad", "ar path = ctx.createPath2D();\n        path.ell", "ole.error(\"push obj_Path2D page error \" + JSON", "ar path = ctx.createPath2D();\n        path.arc", "  let path2Da = new Path2D(\"M250 150 L150 350 ", "ar path = ctx.createPath2D();\n        path.rec", "sole.info(\"push obj_Path2D page success \" + JS", "e.info(\"[router.obj_Path2D] getState\" + JSON.s", "     */\n    it('testPath2DComponent', 0, async", "ar path = ctx.createPath2D();\n        path.mov", "* @tc.name      testPath2DComponent\n     * @tc", "r path1 = ctx.createPath2D(\"M80 20 L40 100 L12", "  let path2Db = new Path2D();\n    path2Db.addP"], "files": ["canvas.ets", "commonComponentJsApi.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Path2D", "api_method_name": "addPath", "api_method_all": "addPath(path: Path2D): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 4, "since": 4, "api_used": "\u662f", "lines": ["\n              this.addPath();\n              th", "text.save();\n  }\n\n  addPath() {\n    let path2Da", "th2D();\n    path2Db.addPath(path2Da);\n    this.", "2D();\n        path2.addPath(path1);\n        ctx"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Path2D", "api_method_name": "setTransform", "api_method_all": "setTransform(\n    scaleX: number,\n    skewX: number,\n    skewY: number,\n    scaleY: number,\n    translateX: number,\n    translateY: number,\n  ): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n", "ffscreenCanvasCtx.resetTransform();\n        offscree", "\" + data);\n  }\n\n  resetTransform() {\n    this.contex", ", 100, 100);\n  }\n\n  setTransform() {\n    this.contex", ");\n    this.context.setTransform(1, 0.1, 0.01, 1, 10", "\n    this.context.resetTransform();\n  }\n\n  translate", "0 Z\");\n        path.setTransform(0.8, 0, 0, 0.4, 0, ", "\n              this.setTransform();\n              th"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Path2D", "api_method_name": "closePath", "api_method_all": "closePath(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 7, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.closePath();\n    this.context", "0, 60);\n        ctx.closePath();\n        ctx.stro", ");\n    this.context.closePath();\n  }\n\n  restore()", ", 80);\n        path.closePath();\n        ctx.stro", "\n              this.closePath();\n              th", "xt.stroke();\n  }\n\n  closePath() {\n    this.contex"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Path2D", "api_method_name": "moveTo", "api_method_all": "moveTo(x: number, y: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 36, "since": 7, "api_used": "\u662f", "lines": ["';\n    this.context.moveTo(310, 1200);\n    thi", "miter';\n        ctx.moveTo(10, 10);\n        ct", "('2d');\n        ctx.moveTo(30, 20);\n        ct", " {\n    this.context.moveTo(30, 20 + 1500);\n   ", "';\n    this.context.moveTo(220, 10 + height);\n", "000ff';\n        ctx.moveTo(0, 30);\n        ctx", ");\n    this.context.moveTo(250, 2220);\n    thi", "Path();\n        ctx.moveTo(5, 5);\n        ctx.", ");\n    this.context.moveTo(30, 1300);\n    this", ");\n    this.context.moveTo(20 + width, 20 + he", "';\n    this.context.moveTo(370, 25);\n    this.", "round';\n        ctx.moveTo(10, 10);\n        ct", "000ff';\n        ctx.moveTo(80, 0);\n        ctx", ");\n    this.context.moveTo(10, 10 + height);\n ", "Path();\n        ctx.moveTo(10, 10);\n        ct", "';\n    this.context.moveTo(50, height);\n    th", "3;\n    this.context.moveTo(130, 155);\n    this", "h2D();\n        path.moveTo(80, 40);\n        pa", "it = 3;\n        ctx.moveTo(10, 10);\n        ct", "h2D();\n        path.moveTo(10, 10);\n        pa", "';\n    this.context.moveTo(220, 50);\n    this."], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Path2D", "api_method_name": "lineTo", "api_method_all": "lineTo(x: number, y: number): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 39, "since": 7, "api_used": "\u662f", "lines": ["0, 30);\n        ctx.lineTo(200, 30);\n        c", ");\n    this.context.lineTo(190, 160);\n    this", ");\n    this.context.lineTo(450, height);\n    t", ");\n    this.context.lineTo(400, 2220);\n    thi", ");\n    this.context.lineTo(70, 1360);\n    this", "(5, 5);\n        ctx.lineTo(70, 5);\n        ctx", "0, 10);\n        ctx.lineTo(80, 30);\n        ct", "0, 10);\n        ctx.lineTo(60, 15);\n        ct", ");\n    this.context.lineTo(320, 50);\n    this.", "70, 5);\n        ctx.lineTo(40, 60);\n        ct", ");\n    this.context.lineTo(220, 210 + height);", ", 40);\n        path.lineTo(120, 40);\n        p", "0, 10);\n        ctx.lineTo(100, 10);\n        c", ");\n    this.context.lineTo(450, 1260);\n    thi", ");\n    this.context.lineTo(370, 75);\n    this.", "0, 15);\n        ctx.lineTo(10, 40);\n        ct", ");\n    this.context.lineTo(430, 50);\n    this.", ", 40);\n        path.lineTo(80, 80);\n        pa", "80, 0);\n        ctx.lineTo(80, 160);\n        c", ");\n    this.context.lineTo(130, 162);\n    this", "0, 30);\n        ctx.lineTo(10, 50);\n        ct", ");\n    this.context.lineTo(110, 1300);\n    thi"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Path2D", "api_method_name": "bezierCurveTo", "api_method_all": "bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": [", 10);\n        path.bezierCurveTo(10, 50, 100, 50, 10", "\n              this.bezierCurveTo();\n              th", ");\n    this.context.bezierCurveTo(20, 100 + height, 2", "0, 10);\n        ctx.bezierCurveTo(20, 40, 80, 40, 100", ", 250, 100);\n  }\n\n  bezierCurveTo() {\n    let height "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Path2D", "api_method_name": "quadraticCurveTo", "api_method_all": "quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["xt.stroke();\n  }\n\n  quadraticCurveTo() {\n    let height ", "\n              this.quadraticCurveTo();\n              th", ", 10);\n        path.quadraticCurveTo(50, 50, 100, 10);\n ", "0, 10);\n        ctx.quadraticCurveTo(50, 50, 100, 10);\n ", ");\n    this.context.quadraticCurveTo(100 + width, 100 + "], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Path2D", "api_method_name": "arc", "api_method_all": "arc(x: number, y: number, radius: number, startAngle: number, endAngel: number, anticlockwise?: boolean): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 393, "since": 7, "api_used": "\u662f", "lines": [");\n    this.context.arc(20, 2130, 50, 0, 6.", "expect(obj.$attrs.searchButton).assertEqual", "searchButton(this.searchButton)\n        .ke", "onsole.info('[testSearch002] START');\n     ", "console.info(\"get search success \" + JSON.s", "console.info(\"get search state success \" + ", "@Component\nstruct SearchExample {\n  @State ", "ect(objNew.$attrs.searchButton).assertEqual", "      uri: 'pages/search',\n      }\n      tr", " = eventData.data.searchButton;\n      }\n   ", "f (eventData.data.searchButton != null) {\n ", "a: {\n            \"searchButton\": \"5\"\n      ", "etInspectorByKey('search');\n      console.i", ");\n    this.context.arc(180, 650, 50, 0, 6.", "    console.info(\"search after each called\"", "hangevalue)\n      Search({ value: '', place", " default function searchJsunit() {\n  descri", "etInspectorByKey('search');\n      let objNe", "   .searchButton('search')\n        .textFon", "onsole.info(\"[testSearch002] component objN", "on)\n        .key('search')\n        .placeho", "State controller: SearchController= new Sea", ");\n    this.context.arcTo(80, 20 + 1500, 80", "onsole.info(\"[testSearch001] component strJ", " });\n\n    it('testSearch002', 0, async func", "    console.info(\"search page state change ", "extFont)\n        .searchButton(this.searchB", "Type(EnterKeyType.Search)\n          .placeh", "ation() {\n        Search({ value: '', place", "xt.stroke();\n  }\n\n  arcTo() {\n    this.cont", "nsole.error(\"push search page error \" + JSO", "chController= new SearchController()\n  @Sta", "onsole.info('[testSearch001] START');\n     ", "oller })\n        .searchButton('search')\n  ", "test.ets';\nimport searchJsunit from './Sear", "    console.info('search page show called')", "StatusJsunit();\n  searchJsunit();\n  scrollB", " });\n\n    it('testSearch001', 0, async func", "onsole.info(\"push search page success \" + J", "onsole.info(\"[testSearch002] start to publi", "l) {\n        this.searchButton = eventData.", "console.log(\"[testSearch002] change compone", ":Font=10\n  @State searchButton:number=10\n\n ", "\n              this.arcTo();\n              ", "rchJsunit from './SearchJsunit.test.ets';\ni"], "files": ["TextInputJsunit.test.ets", "Navigation.ets", "List.test.js", "SearchJsunit.test.ets", "TextInput.ets", "progressProps.test.js", "List.test.ets", "canvas.ets", "commonComponentJsApi.test.js", "inputProps.test.js", "index.js", "search.ets", "navigation.ets", "searchProps.test.js", "buttonProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Path2D", "api_method_name": "arcTo", "api_method_all": "arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;", "api_type": "", "api_args_count": 5, "api_level": 21, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["0, 20);\n        ctx.arcTo(70, 10, 70, 20, 30)", "h2D();\n        path.arcTo(75, 10, 75, 35, 25)", "\n              this.arcTo();\n              th", ");\n    this.context.arcTo(80, 20 + 1500, 80, ", "xt.stroke();\n  }\n\n  arcTo() {\n    this.contex"], "files": ["canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Path2D", "api_method_name": "ellipse", "api_method_all": "ellipse(\n    x: number,\n    y: number,\n    radiusX: number,\n    radiusY: number,\n    rotation: number,\n    startAngle: number,\n    endAngle: number,\n    anticlockwise?: number,\n  ): void;", "api_type": "", "api_args_count": 8, "api_level": 21, "api_used_count": 421, "since": 7, "api_used": "\u662f", "lines": ["        uri: 'pages/ellipse/router/index'\n     ", "\n    console.info('[ellipse] page show called')", "h2D();\n        path.ellipse(50, 50, 25, 50, Mat", "console.error(\"push ellipseProps page error \" +", "ify(sendEventByKey('ellipse', 10, \"\")));\n      ", "      console.info(\"ellipse after each called\")", " console.info(\"push ellipse page success \" + JS", "console.error(\"push ellipse page error \" + JSON", "rt default function ellipseJsunit() {\n  describ", "  zIndexJsunit();\n  ellipseJsunit();\n  gaugeJsu", " console.info(\"push ellipseProps page success \"", "this.height}`).key('ellipse')\n    }.width('100%", "$type).assertEqual('ellipse')\n         console.", " console.info(\"push ellipse page result:\" + JSO", "      expect(\"pages/ellipse/router/\").assertEqu", "s));\n        if (!(\"ellipse\" == pages.name)) {\n", "     console.info(\"[ellipseProps] get globalThi", "t(80)\n        .key('ellipse')\n        .touchabl", " getInspectorByKey('ellipse');\n      let obj = ", "     console.info(\"[ellipse] page state change ", "  console.info(\"get ellipse state pages:\" + JSO", "Path();\n        ctx.ellipse(50, 50, 30, 60, Mat", "     console.info(\"[ellipseProps] get inspector", "console.error(\"push ellipse page error:\" + err)", "\n    console.info(\"[ellipse] page stateChangCal", "nit() {\n  describe('ellipseTest', function () {", "     console.info('[ellipsePropsJsTest] after e", "nsole.info(\"[router.ellipse] getState\" + JSON.s", "  console.info(\"get ellipse state pages.name:\" ", "        uri: 'pages/ellipse/prop/index'\n       ", "      console.info(\"ellipse beforeEach start\");", "        uri: 'pages/ellipse',\n      }\n      try", "     console.info('[ellipsePropsJsTest] before ", "t.test.ets';\nimport ellipseJsunit from './Ellip", "ex';\n \n \n describe('ellipsePropsJsTest', functi"], "files": ["index.js", "touchAble.ets", "List.test.js", "ellipse.ets", "TouchAbleJsunit.test.ets", "commonComponentJsApi.test.js", "EllipseJsunit.test.ets", "List.test.ets", "ellipseProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Path2D", "api_method_name": "rect", "api_method_all": "rect(x: number, y: number, width: number, height: number): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 1870, "since": 6, "api_used": "\u662f", "lines": ["_top, \"right\": this.rect_right, \"bottom\": th", "st')\n        .listDirection(this.listDirecti", " 9];\n  @State listDirection: Axis = Axis.Ver", " + ']')[0]\n    this.rect_bottom = JSON.parse", " = JSON.parse('[' + rectInfo[1] + ']')[0]\n  ", " = JSON.parse('[' + rectInfo[0] + ']')[1]\n  ", "   direction: FlexDirection.Column,\n      al", " = JSON.parse('[' + rectInfo[0] + ']')[0]\n  ", "exDirection = FlexDirection.Row\n  private st", "ON.parse('[' + obj.$rect + ']')\n    console.", "\n            \"listDirection\": Axis.Horizonta", "0%')\n      Flex({ direction: FlexDirection.R", "irection(this.listDirection)\n        .divide", "({ direction: FlexDirection.Row, alignItems:", " = JSON.parse('[' + rectInfo[1] + ']')[1]\n  ", "ventData.data.listDirection != null) {\n     ", "y] rectInfo is: \" + rectInfo);\n    this.rect", "({ direction: FlexDirection.Row }) {\n       ", "({ direction: FlexDirection.Column, alignIte", "ght, \"bottom\": this.rect_bottom\n    }\n  }\n\n ", " rect_top;\n  static rect_right;\n  static rec", "t_left, \"top\": this.rect_top, \"right\": this.", "ventData.data.listDirection;\n      }\n      i", "ld() {\n    Flex({ direction: FlexDirection.R", "ct(obj.$attrs.listDirection).assertEqual('Ax", " + ']')[1]\n    this.rect_right = JSON.parse(", ".assertEqual('FlexDirection.Row');\n      con", "ss Utils {\n  static rect_left;\n  static rect", "xample {\n  @State direction: FlexDirection =", "ct_bottom;\n  static rect_value;\n\n  static sl", "\n        this.listDirection = eventData.data", "[1]\n    return this.rect_value = {\n      \"le", "attrs.constructor.direction).assertEqual('Fl", "rect_left;\n  static rect_top;\n  static rect_", "te direction: FlexDirection = FlexDirection.", "gify(obj));\n    let rectInfo = JSON.parse('[", "ld() {\n    Flex({ direction: FlexDirection.C", "\n    Flex({\n      direction: FlexDirection.C", "\n      \"left\": this.rect_left, \"top\": this.r", "ect_right;\n  static rect_bottom;\n  static re", " + ']')[0]\n    this.rect_top = JSON.parse('[", "[getInspectorByKey] rectInfo is: \" + rectInf", "rectInfo);\n    this.rect_left = JSON.parse('"], "files": ["ImageJsunit.test.ets", "systemRouterA.ets", "longPressGesture.ets", "DragEventJsunit.test.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "Qrcode.ets", "Navigation.ets", "imageFit.ets", "Span.ets", "richText.ets", "Progress.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "geometryTransition.ets", "TapGesture.test.ets", "marquee.ets", "Rating.ets", "ScrollCodeJsunit.test.ets", "Divider.ets", "PriorityGestureJsunit.test.ets", "scrollBar.ets", "CalendarJsunit.test.ets", "transition.ets", "Image.ets", "List.test.ets", "scrollCode.ets", "button.ets", "touch.ets", "DirectionJsunit.test.ets", "Slider.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "Text.ets", "PanGestureJsunit.test.ets", "Counter.ets", "Stack.ets", "bindMenu.ets", "TextJsunit.test.ets", "Blank.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "ScrollerBarJsunit.test.ets", "text.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "tapGesture.ets", "FlexJsunit.test.ets", "flexDirection.ets", "AppStorageJsunit.test.ets", "edgeEffect.ets", "index.ets", "systemRouterB.ets", "PanGesture.ets", "image.ets", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "flex.ets", "Utils.ets", "marqueeProps.test.js", "PatternLock.ets", "textPickerDialog.ets", "gridPage.ets", "qrcodeProps.test.js", "AlphabetIndexer.ets", "SubscribaleAbstractJsunit.test.ets", "ohosRouterB.ets", "ColumnSplit.ets", "textClock.ets", "videoProps.test.js", "list.ets", "BackgroundJsunit.test.ets", "AppStorage.ets", "List.ets", "GridContainer.ets", "dragEvent2.ets", "flexWrap.ets", "direction.ets", "gradientDirection.ets", "calendar.ets", "dragEvent.ets", "grid.ets", "Button.ets", "ScrollJsunit.test.ets", "fontWeight.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "List.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "canvas.ets", "bindContextMenu.ets", "Rect.ets", "divider.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "Constants.ets", "rating.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "DataPanel.ets", "FormComponentPage.ets", "WebPage.ets", "RowJsunit.test.ets", "index.js", "ohosRouterA.ets", "Link.ets", "listProps.test.js", "slider.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "gestureMode.ets", "ScrollBar.ets", "Badge.ets", "colorGradient.ets", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasElement", "api_method_all": "export interface CanvasElement extends Element {\n  \n  getContext(type: \"2d\", options?: ContextAttrOptions): CanvasRenderingContext2D;\n\n  \n  getContext(type: \"webgl\", options?: WebGLContextAttributes): WebGLRenderingContext;\n\n  \n  getContext(type: \"webgl2\", options?: WebGLContextAttributes): WebGL2RenderingContext;\n\n  \n  toDataURL(type?: string, quality?: number): string;\n}", "api_method_name": "CanvasElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasElement", "api_method_name": "getContext", "api_method_all": "getContext(type: \"2d\", options?: ContextAttrOptions): CanvasRenderingContext2D;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 129, "since": 4, "api_used": "\u662f", "lines": ["let ctx = function4.getContext('2d', { antialias: ", "       var ctx = el.getContext('2d');\n        var ", "     const ctx = el.getContext('2d');\n        var ", "Canvas2 = offscreen.getContext(\"2d\");\n    var img ", "     const ctx = el.getContext('2d');\n        ctx.", "      const ctx =el.getContext('2d');\n        cons", "Canvas2 = offscreen.getContext(\"2d\");\n    var imag"], "files": ["global.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasElement", "api_method_name": "getContext", "api_method_all": "getContext(type: \"webgl\", options?: WebGLContextAttributes): WebGLRenderingContext;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 129, "since": 4, "api_used": "\u662f", "lines": ["let ctx = function4.getContext('2d', { antialias: ", "       var ctx = el.getContext('2d');\n        var ", "     const ctx = el.getContext('2d');\n        var ", "Canvas2 = offscreen.getContext(\"2d\");\n    var img ", "     const ctx = el.getContext('2d');\n        ctx.", "      const ctx =el.getContext('2d');\n        cons", "Canvas2 = offscreen.getContext(\"2d\");\n    var imag"], "files": ["global.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasElement", "api_method_name": "getContext", "api_method_all": "getContext(type: \"webgl2\", options?: WebGLContextAttributes): WebGL2RenderingContext;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 129, "since": 4, "api_used": "\u662f", "lines": ["let ctx = function4.getContext('2d', { antialias: ", "       var ctx = el.getContext('2d');\n        var ", "     const ctx = el.getContext('2d');\n        var ", "Canvas2 = offscreen.getContext(\"2d\");\n    var img ", "     const ctx = el.getContext('2d');\n        ctx.", "      const ctx =el.getContext('2d');\n        cons", "Canvas2 = offscreen.getContext(\"2d\");\n    var imag"], "files": ["global.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CanvasElement", "api_method_name": "toDataURL", "api_method_all": "toDataURL(type?: string, quality?: number): string;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 8, "since": 4, "api_used": "\u662f", "lines": ["rendering context2D toDataURL-----\" + JSON.string", "dataURL = function5.toDataURL({type: 'image/png'}", "l = this.offContext.toDataURL();\n    console.info", "xt.stroke();\n  }\n\n  toDataURL() {\n    let dataUrl", "dataURL = offscreen.toDataURL();\n        var bitm", "\n              this.toDataURL();\n              th", "aUrl = this.context.toDataURL();\n    console.info"], "files": ["canvas2.ets", "canvas.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollOptions", "api_method_all": "export interface ScrollOptions {\n  \n  position: number;\n\n  \n  duration: number;\n\n  \n  id?: string;\n\n  \n  timingFunction?: string;\n\n  \n  success?: (result: Object) => void;\n\n  \n  fail?: (result: Object) => void;\n\n  \n  complete?: (result: Object) => void;\n}", "api_method_name": "ScrollOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollOptions", "api_method_name": "success", "api_method_all": "success?: (result: Object) => void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 442, "since": 6, "api_used": "\u662f", "lines": ["o(\"get border state success \" + JSON.stringify(", "et areaChange state success \" + JSON.stringify(", "(\"push stepper page success \" + JSON.stringify(", "checkboxGroup state success \" + JSON.stringify(", "ole.info('Operation successful. Data: ' + JSON.", "\"push checkbox page success \" + JSON.stringify(", "nsole.info('onTouch successful, touchFlag is : ", "le.info(\"get slider success \" + JSON.stringify(", "ush edgeEffect page success \" + JSON.stringify(", "fo(\"get gauge state success \" + JSON.stringify(", "h imageEffects page success \" + JSON.stringify(", "o(\"push swiper page success \" + JSON.stringify(", "(\"get stepper state success \" + JSON.stringify(", "et edgeEffect state success \" + JSON.stringify(", " imageEffects state success \" + JSON.stringify(", "nfo(\"push flex page success \" + JSON.stringify(", "fo(\"push gauge page success \" + JSON.stringify(", "o(\"get swiper state success \" + JSON.stringify(", "nfo(\"get flex state success \" + JSON.stringify(", " checkboxGroup page success \" + JSON.stringify(", "ush areaChange page success \" + JSON.stringify(", "ndSizeSetting state success \" + JSON.stringify(", "\"get checkbox state success \" + JSON.stringify(", "o(\"push select page success \" + JSON.stringify(", "o(\"get select state success \" + JSON.stringify(", "(\"push marquee page success \" + JSON.stringify(", "onsole.info('dialog success callback\uff0cclick butt", "o(\"push border page success \" + JSON.stringify(", "o(\"get slider state success \" + JSON.stringify(", "le.info(\"get select success \" + JSON.stringify(", "(\"get marquee state success \" + JSON.stringify(", "AndSizeSetting page success \" + JSON.stringify(", "o(\"push slider page success \" + JSON.stringify(", "     ],\n            success: function(data) {\n "], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "GeometryTransitionJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "systemPrompt.ets", "LinkJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "TextJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "canvasProps.test.js", "AreaChangeJsunit.test.ets", "BlankJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "svgProps.test.js", "labelProps.test.js", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "gridContainerProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "MotionPathJsunit.test.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "popupProps.test.js", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "TextInputJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "StackJsunit.test.ets", "TextAreaJsunit.test.ets", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "gridColProps.test.js", "patternLock.ets", "animateProps.test.js", "buttonProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "BadgeJsunit.test.ets", "pickerViewProps.test.js", "divProps.test.js", "switchProps.test.js", "commonComponentJsApi.test.js", "ellipseProps.test.js", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "swiperProps.test.js", "polygonProps.test.js", "NavigatorJsunit.test.ets", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollOptions", "api_method_name": "fail", "api_method_all": "fail?: (result: Object) => void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 43, "since": 6, "api_used": "\u662f", "lines": ["(test).assertEqual('fail');\n            }\n  ", "onsole.info('dialog fail callback' + data.er", "ediaQuery maxHeight fail');\n                ", "MediaQuery logicNot fail');\n                ", "ediaQuery logicOnly fail');\n                ", "'MediaQuery logic>= fail');\n                ", "onerror: Image load fail');\n        };\n    }", "console.log('dialog fail callback' + data.er", "le.error('Operation failed. Cause: ' + JSON.", "'MediaQuery logicOr fail');\n                ", "diaQuery deviceType fail');\n                ", "le.info('load image fail')\n          })\n    ", "ole.log('Image load fail');\n        };\n    }", "diaQuery matchMedia fail');\n                ", "(test).assertEqual('fail');\n                ", "uery rmeoveListener fail');\n                ", "MediaQuery logicAnd fail');\n                ", "iaQuery orientation fail');\n                ", "     },\n            fail: function(data) {\n ", "iaQuery addListener fail');\n                ", "   },\n              fail: function(data) {\n ", "diaQuery logicComma fail');\n                "], "files": ["ohosPrompt.ets", "systemPrompt.ets", "Image.ets", "index.js", "mediaquery.test.js", "index.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollOptions", "api_method_name": "complete", "api_method_all": "complete?: (result: Object) => void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 9, "since": 6, "api_used": "\u662f", "lines": ["('Marquee animation complete onStart')\n        }", "('Marquee animation complete onBounce')\n        ", "('Marquee animation complete onStart')\n         ", "    });\n    },\n\n    complete(event){\n        pro", "[prompt.showDialog] complete');\n            }\n  ", "('Marquee animation complete onFinish')\n        ", "     },\n            complete: function () {\n    "], "files": ["Marquee.ets", "marquee.ets", "basicabilityapi.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollOptions", "api_method_name": "position", "api_method_all": "position: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 103, "since": 4, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.position.x).assertEqual('25.", " console.info(\"push positionSetting page result:", "ion1);\n        this.position2 = JSON.parse(event", "on')\n\n        Text('position').fontSize(20).font", "arse(eventData.data.position1);\n        this.pos", " 25 })\n            .position({ x: '100%', y: '10", ")\n          Text(`4 position(${this.position2.x}", " getInspectorByKey('position1');\n      console.i", "t('background image position').fontSize(9).width", ".firstState)\n      .position({ x: '35%', y: 0 })", "      console.info(\"positionSetting after each c", "t ATTRS_POSITION = 'position'\nconst ATTRS_POSITI", "arse(eventData.data.position2);\n      } else if ", "osition2.x, y: this.position2.y })\n            .", "(`4 position(${this.position2.x}, ${this.positio", ".position({ x: this.position1.x, y: this.positio", "  events_emitter.on(positionChangeEvent, this.st", "s));\n        if (!(\"positionSetting\" == pages.na", "  expect(obj.$attrs.position.y).assertEqual('15.", "console.error(\"push positionSetting page error:\"", " if (eventData.data.position1) {\n        this.po", "{\n    console.info(\"position page stateChangCall", "PositionSetting005] position1: \" + JSON.stringif", "extLabel('')\n      .position({ x: '35%', y: 0 })", "rt default function positionSettingJsunit() {\n  ", "  console.info(\"get positionSetting state pages:", "        uri: 'pages/positionSetting',\n      }\n  ", ")\n            .key('position1')\n          Text('", ")\n            .key('position2')\n        }.width(", "PositionSetting005] position: \" + JSON.stringify", "CallBack);\n\n    let positionChangeEvent = {\n    ", "osition1.x, y: this.position1.y })\n            .", "  })\n      }\n      .position({ x: '35%', y: 0 })", "sibilityJsunit();\n  positionSettingJsunit();\n  b", "5, y: 15};\n  @State position2: {x: string, y: st", "ze(20)\n            .position({ x: this.position2", "on1) {\n        this.position1 = JSON.parse(event", "      console.info(\"positionSetting beforeEach s", "osition1.x}, ${this.position1.y})`)\n            ", "0 })\n      }\n      .position({ x: '35%', y: 0 })", ")\n          Text(`2 position(${this.position1.x}", "  console.info(\"get positionSetting state pages.", "(`2 position(${this.position1.x}, ${this.positio", "tringify(obj.$attrs.position));\n      expect(obj", "ction.Rtl;\n  @State position1: {x: string, y: st", ".position({ x: this.position2.x, y: this.positio", "t.test.ets';\nimport positionSettingJsunit from '", " getInspectorByKey('position2');\n      console.i", "osition2.x}, ${this.position2.y})`)\n            ", "Start)\n            .position({ x: this.position1"], "files": ["backgroundAndSizeSetting.ets", "stepper.ets", "WebPage.ets", "PositionSettingJsunit.test.ets", "TextJsunit.test.ets", "Constants.ets", "Stepper.ets", "positionSetting.ets", "background.ets", "bindPopup.ets", "placement.ets", "motionPath.ets", "BadgeJsunit.test.ets", "List.test.ets", "badge.ets", "Text.ets", "Badge.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollOptions", "api_method_name": "duration", "api_method_all": "duration: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 240, "since": 4, "api_used": "\u662f", "lines": ["reateAnimator({\n    duration: 3000,\n    fill: 'f", "ata: {\n            \"duration\": \"nan\"\n          }", "xpect(objNew.$attrs.duration).assertEqual('500.0", "ull) {\n        this.duration = parseInt(eventDat", "he text is hidden', duration: 2000 })\n          ", "nsole.info(\"button6 duration value is : \" + this", "value is : \" + this.duration)\n          animateT", "xpect(objNew.$attrs.duration).assertEqual('nan')", "ata: {\n            \"duration\": \"500\"\n          }", "        animateTo({ duration: this.duration }, (", "To({ duration: this.duration }, () => {\n        ", "gify(this.matrix1), duration: 200 })\n          t", "nsole.info(\"button6 duration test animateTo STAR", " if (eventData.data.duration != null) {\n        ", "3.jpg',\n            duration: 500,\n            w", "ssage: \"sucessful\", duration: 200 })\n          t", "     .duration(this.duration)\n      .vertical(th", "s = {\n              duration: 5000,\n            ", "        animateTo({ duration: 1000 }, () => {\n  ", "nsole.info(\"button1 duration test animateTo STAR", "nsole.info(\"button1 duration value is : \" + this", " {\n                \"duration\": this.duration,\n  ", "an = false\n  @State duration: number = 100\n  @St", "2.jpg',\n            duration: 500,\n            w", "options = {\n        duration: 2000,\n        iter", "   \"duration\": this.duration,\n              }\n  ", "  expect(obj.$attrs.duration).assertEqual('1000.", "4.jpg',\n            duration: 500,\n            w", "nsole.info(\"button7 duration test animateTo STAR", "eInt(eventData.data.duration);\n      }\n      if ", "an = false\n  @State duration: number = 1000\n  @S", "nsole.info(\"button7 duration value is : \" + this", "The text is shown', duration: 2000 })\n          ", "p(this.loop)\n      .duration(this.duration)\n    ", "1.jpg',\n            duration: 500,\n            w"], "files": ["animate.ets", "pageTransition2.ets", "ohosPrompt.ets", "imageAnimatorProps.test.js", "ohosMatrix4.ets", "swiper.ets", "appear.ets", "animationStatus.ets", "fillMode.ets", "curves.ets", "chartProps.test.js", "SharedTransitionJsunit.test.ets", "pageTransition.ets", "geometryTransition.ets", "swiperProps.test.js", "AnimateJsunit.test.ets", "animatorOption.ets", "index.js", "SwiperJsunit.test.ets", "Swiper.ets", "basicabilityapi.test.js", "transition.ets", "sharedTransition.ets", "motionPath.ets", "imageAnimator.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollOptions", "api_method_name": "id", "api_method_all": "id?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8283, "since": 6, "api_used": "\u662f", "lines": ["emsColumn\")\n      .width('90%')\n      .bor", "eAppear: string = 'Hide Text'\n  private my", "nSelf,height:100').width('34%').height(100", "        this.strokeWidthValue = eventData.", "Basis\")\n          .width('60%')\n          ", "ole.log(\"imageData_width=\" + imageData.wid", "')\n      .border({ width: 1 })\n      .alig", "key('flex')\n      .width('90%')\n      .hei", "entData.data.strokeWidthValue != null) {\n ", ".context)\n        .width('100%').height('4", "hrink\")\n          .width('50%')\n          ", "/bg.jpg\");\n    let width = img.width;\n    ", "{\n        Column().width('50%').height(30)", "idth(`${this.strokeWidthValue}`)\n        .", "gn.Center)\n      }.width('90%').height(120", ".alignItems)\n    }.width('100%').padding({", "gnSelf,height:80').width('33%').height(80)", "50;\n  @State strokeWidthValue: string = 20", "   let width = img.width;\n    let height =", "ontColor(0xCCCCCC).width('90%')\n      Flex", "if (eventData.data.width != null) {\n      ", "hrink')\n          .width('40%')\n          ", "}`)\n        .strokeWidth(`${this.strokeWid", "\n    }.padding(30).width('100%')\n  }\n}", "ontColor(0xCCCCCC).width('90%')\n      Colu", "gebitmap_width=\" + width);\n    console.log", "entData.data.strokeWidthValue;\n      }\n   ", "rink(2)\n          .width('40%')\n          ", "se().width(`${this.width}`).height(`${this", ";\n        })\n    }.width('100%').height('1", " {\n      Ellipse().width(`${this.width}`).", "tretch)\n          .width('33%')\n          ", "sage: 'The text is hidden', duration: 2000", ": 30 })\n    }\n    .width('100%').height('1", ")\n        Column().width('50%').height(30)", "nabled)\n    }\n    .width('100%')\n    .padd", "or(0xAFEEEE)\n    }.width('100%').margin({ ", "is.changeAppear = 'Hide Text'\n            ", "hValue}`)\n        .width(200)\n        .hei", "h = eventData.data.width;\n      }\n      if", "y('ellipse')\n    }.width('100%').height('1", ".height(200)\n    }.width('100%').margin({ ", "e.log(\"imagebitmap_width=\" + width);\n    c", "Example {\n  @State width: string = \"200px\"", "ll) {\n        this.width = eventData.data."], "files": ["pageTransition2.ets", "ohosPrompt.ets", "listItemGroupProps.test.js", "systemRouterA.ets", "pathProps.test.js", "dividerProps.test.js", "video.ets", "tabContentProps.test.js", "textProps.test.js", "Navigator.ets", "longPressGesture.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "playMode.ets", "toolbarProps.test.js", "Qrcode.ets", "Row.ets", "Navigation.ets", "imageFit.ets", "PathJsunit.test.ets", "Span.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "column.ets", "Panel.ets", "Progress.ets", "sourceType.ets", "navigation.ets", "CustomDialog.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "toolbarItemProps.test.js", "TapGesture.test.ets", "marquee.ets", "Rating.ets", "enumsLineCapStyle.ets", "mediaquery.test.js", "Swiper.ets", "DividerJsunit.test.ets", "ScrollCodeJsunit.test.ets", "Divider.ets", "border.ets", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "badgeProps.test.js", "scrollBar.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "transition.ets", "Image.ets", "transForm.ets", "path.ets", "Column.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "GridJsnuit.test.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "polyline.ets", "formProps.test.js", "focus.ets", "VideoJsunit.test.ets", "touch.ets", "circleProps.test.js", "ListItem.ets", "background.ets", "Slider.ets", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "stackProps.test.js", "Text.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "enumsVerticalAlign.ets", "Stack.ets", "bindMenu.ets", "swiper.ets", "TextJsunit.test.ets", "sideBar.ets", "toggle.ets", "GridJsunit.test.ets", "refreshProps.test.js", "Blank.ets", "Badge.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "customDialogController.ets", "text.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "VisibilityJsunit.test.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "TextArea.ets", "animatorOption.ets", "tapGesture.ets", "shapeClipping.ets", "flexDirection.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "GridItem.test.ets", "PanGesture.ets", "richtextProps.test.js", "stepper.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "image.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "gridContainerProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "flex.ets", "sharedTransition2.ets", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "gridContainer.ets", "Tab.ets", "PatternLock.ets", "Polyline.ets", "Stepper.ets", "gridPage.ets", "imageAnimatorProps.test.js", "enumsImage.ets", "enable.ets", "PieceCode.ets", "tabsProps.test.js", "polygon.ets", "badge.ets", "lineProps.test.js", "qrcodeProps.test.js", "textStyle.ets", "imageEffects.ets", "popupProps.test.js", "SubscribaleAbstractJsunit.test.ets", "ohosRouterB.ets", "ColumnSplit.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "videoProps.test.js", "enumsItemAlign.ets", "list.ets", "colorGradient.ets", "BackgroundJsunit.test.ets", "AppStorage.ets", "List.ets", "QrCode.ets", "GridContainer.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "BasicJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "animateTransformProps.test.js", "dragEvent.ets", "QrcodeJsunit.test.ets", "Video.ets", "pieceProps.test.js", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "animateMotionProps.test.js", "selectProps.test.js", "grid.ets", "Button.ets", "ScrollJsunit.test.ets", "Polygon.ets", "gridColProps.test.js", "textareaProps.test.js", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animateProps.test.js", "animate.ets", "buttonProps.test.js", "List.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "BorderJsunit.test.ets", "direction2.ets", "mouseEvent.ets", "RowSplit.ets", "canvas.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "bindContextMenu.ets", "CircleJsunit.test.ets", "Rect.ets", "divProps.test.js", "divider.ets", "ScrollBar.ets", "switchProps.test.js", "TextInput.ets", "ellipse.ets", "radio.ets", "appear.ets", "Constants.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "GradientDirectionJsunit.test.ets", "enumsFlexAlign.ets", "Path.ets", "commonComponentJsApi.test.js", "fillMode.ets", "line.ets", "curves.ets", "priorityGesture.ets", "DataPanel.ets", "ellipseProps.test.js", "FormComponentPage.ets", "Grid.ets", "chartProps.test.js", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "visibility.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "polygonProps.test.js", "sliderProps.test.js", "TabsJsunit.test.ets", "swiperProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "toggleProps.test.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "GridItem.ets", "tspanProps.test.js", "parallelGesture.ets", "imageProps.test.js", "select.ets", "timeStamp.ets", "Toggle.ets", "slider.ets", "NavigationJsunit.test.ets", "listProps.test.js", "aboutToDisappear.ets", "progressProps.test.js", "Calendar.ets", "panelProps.test.js", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "enumsHorizontalAlign.ets", "panel.ets", "menuProps.test.js", "rectProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollOptions", "api_method_name": "timingFunction", "api_method_all": "timingFunction?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollOffset", "api_method_all": "export interface ScrollOffset {\n  \n  x: number;\n\n  \n  y: number;\n}", "api_method_name": "ScrollOffset", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 30, "since": 6, "api_used": "\u662f", "lines": ["fset = function4.getScrollOffset();\n    var x = scro", "fset = function4.getScrollOffset();\n        var x = "], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollOffset", "api_method_name": "x", "api_method_all": "x: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 20226, "since": 3, "api_used": "\u662f", "lines": ["", "= eventData.data.flexBasis;\n      }\n     ", "3).backgroundColor(0x2788D9)\n      if (th", "mponent\nstruct AreaExample {\n  @State val", "\n        })\n      Text('new area is: \\n' ", "f (eventData.data.text != null) {\n       ", "\n  build() {\n    Flex({ direction: FlexDi", "      Button(this.text)\n        .key('ena", "isShow) {\n        Text(this.myText)\n     ", " value: string = 'Text';\n  @State size: s", "ue)\n        .key('text1')\n        .backgr", "nent\nstruct EllipseExample {\n  @State wid", "t({ message: 'The text is shown', duratio", "nent\nstruct EnabledExample {\n  @State ena", "\n  build() {\n    Flex({ justifyContent: F", " Column() {\n      Text(this.value)\n      ", "State direction: FlexDirection = FlexDire", "Component\nstruct FlexExample {\n  @State d", " (eventData.data.flexBasis != null) {\n   ", "      Text(this.myText)\n          .onAppe", "t({ message: 'The text is hidden', durati", "ze)\n        .key('text2')\n        .margin", "ngeAppear = 'Hide Text'\n            conso", "idth: string = \"200px\";\n  @State height: ", "mponent\nstruct FlexExample {\n  @State dir", "myText: string = 'Text for onAppear'\n\n  o", "0).backgroundColor(0x00FFFF)\n      }\n    ", " justifyContent: FlexAlign.Center }) {\n  ", "ngeAppear = 'Show Text'\n            conso", "tSize(9).fontColor(0xCCCCCC).width('90%')", " Column() {\n      Text('alignItems').font", "l) {\n        this.text = eventData.data.t", "onent\nstruct AppearExample {\n  @State isS", "  .backgroundColor(0x317aff)\n        .ena", " = true;\n  @State text: string = \"enable\"", " (eventData.data.flexGrow != null) {\n    ", ") {\n        this.flexBasis = eventData.da", ") {\n        this.flexGrow = eventData.dat", "r: string = 'Hide Text'\n  private myText:", "0).backgroundColor(0xAFEEEE)\n        Colu", "  .backgroundColor(0x317aff)\n        .opa", " FlexDirection = FlexDirection.Row\n  priv", "e = this.value + 'Text'\n          try {\n ", "lex({ direction: FlexDirection.Row, align", "   console.info(\"Flex page state change c", " = eventData.data.text\n      }\n    }\n  }\n", "onent\nstruct ColumnExample {\n  @State ali", " justifyContent: FlexAlign.SpaceAround })", "Text'\n  private myText: string = 'Text fo", "ight: string = \"200px\";\n\n  onPageShow() {"], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageEffectsJsunit.test.ets", "ColumnSplitJsunit.test.ets", "Navigation.ets", "imageFit.ets", "ZIndexJsunit.test.ets", "checkboxGroup.ets", "sourceType.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "TapGesture.test.ets", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "border.ets", "ResponseRegion.ets", "FillModeJsunit.test.ets", "textArea.ets", "transition.ets", "gridSettings.ets", "Image.ets", "LongPressGesture.test.ets", "path.ets", "polyline.ets", "VideoJsunit.test.ets", "touch.ets", "SpanJsunit.test.ets", "PanelJsunit.test.ets", "sideBar.ets", "Prop.ets", "customDialogController.ets", "EnmusImageJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "VisibilityJsunit.test.ets", "TextArea.ets", "ResponseRegionJsunit.test.ets", "flexDirection.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "ListJsunit.test.ets", "gridContainerProps.test.js", "Select.ets", "flex.ets", "MotionPathJsunit.test.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enable.ets", "tabsProps.test.js", "lineProps.test.js", "AlphabetIndexer.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "videoProps.test.js", "enumsItemAlign.ets", "style.js", "DatePickerJsunit.test.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "StackJsunit.test.ets", "circle.ets", "animateMotionProps.test.js", "textareaProps.test.js", "span.ets", "NavigatorCode.ets", "patternLock.ets", "global.ets", "AnimationStatusJsunit.test.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "divProps.test.js", "divider.ets", "animationStatus.ets", "zIndex.ets", "enumsFlexAlign.ets", "ellipseProps.test.js", "FormComponentPage.ets", "chartProps.test.js", "sliderProps.test.js", "polygonProps.test.js", "inputProps.test.js", "SwiperJsunit.test.ets", "GridItem.ets", "imageProps.test.js", "select.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "gestureMode.ets", "refresh.ets", "ScrollBar.ets", "overlay.ets", "pathProps.test.js", "configuration.ets", "tabContentProps.test.js", "longPressGesture.ets", "Qrcode.ets", "Row.ets", "PathJsunit.test.ets", "Progress.ets", "column.ets", "Panel.ets", "CustomDialog.ets", "OhosRouterJsnuit.test.ets", "TextClockJsunit.test.ets", "enumsLineCapStyle.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "GeometryTransitionJsunit.test.ets", "ScrollCodeJsunit.test.ets", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "textInput.ets", "TouchJsunit.test.ets", "transForm.ets", "Column.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "SelectJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "ListItem.ets", "background.ets", "Slider.ets", "StepperJsunit.test.ets", "ButtonJsunit.test.ets", "enumsVerticalAlign.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "animatorOption.ets", "index.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "richtextProps.test.js", "PanGesture.ets", "shape.ets", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "imageAnimatorProps.test.js", "qrcodeProps.test.js", "GlobalJsunit.test.ets", "SystemRouterJsunit.test.ets", "stepperItemProps.test.js", "textClock.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "GridContainer.ets", "checkbox.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "grid.ets", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "bindPopup.ets", "buttonProps.test.js", "animateProps.test.js", "animate.ets", "List.test.js", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "RowSplit.ets", "pickerViewProps.test.js", "TextInput.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "curves.ets", "priorityGesture.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "CanvasJsunit.test.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "tabBarProps.test.js", "ColumnJsunit.test.ets", "parallelGesture.ets", "slider.ets", "panelProps.test.js", "motionPath.ets", "Badge.ets", "ColumnSplit.ets", "search.ets", "rectProps.test.js", "blank.ets", "pageTransition2.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "textProps.test.js", "DragEventJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "TextPickerJsunit.test.ets", "Span.ets", "CheckboxGroupJsunit.test.ets", "AppearJsunit.test.ets", "CommonJsunit.test.ets", "marquee.ets", "PieceJsunit.test.ets", "basicabilityapi.test.js", "badgeProps.test.js", "CalendarJsunit.test.ets", "systemPrompt.ets", "LinkJsunit.test.ets", "CurvesJsunit.test.ets", "DirectionJsunit.test.ets", "RadioJsunit.test.ets", "Stack.ets", "bindMenu.ets", "Sidebar.ets", "text.ets", "tapGesture.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "stepper.ets", "svgProps.test.js", "image.ets", "textPathProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "textPickerDialog.ets", "badge.ets", "imageEffects.ets", "popupProps.test.js", "tabs.ets", "dragEvent2.ets", "app.ets", "GaugeJsunit.test.ets", "BasicJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "Video.ets", "listItem.ets", "Button.ets", "ScrollJsunit.test.ets", "Polygon.ets", "panDirection.ets", "ContentStorage.test.ets", "direction2.ets", "BadgeJsunit.test.ets", "CircleJsunit.test.ets", "Rect.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "Constants.ets", "line.ets", "Grid.ets", "GestureModeJsunit.test.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "index.js", "tspanProps.test.js", "timeStamp.ets", "Toggle.ets", "Direction2Jsunit.test.ets", "panel.ets", "colorGradient.ets", "systemRouterA.ets", "CounterJsunit.test.ets", "dividerProps.test.js", "ListItemJsunit.test.ets", "Navigator.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "polylineProps.test.js", "richText.ets", "PositionSettingJsunit.test.ets", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "textTimer.ets", "Rating.ets", "Swiper.ets", "LineJsunit.test.ets", "DividerJsunit.test.ets", "Divider.ets", "RichTextJsunit.test.ets", "scrollBar.ets", "NavigatorCodeJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "focus.ets", "circleProps.test.js", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "stackProps.test.js", "Text.ets", "EdgeEffectJsunit.test.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "SystemAppJsunit.test.ets", "swiper.ets", "refreshProps.test.js", "Blank.ets", "ScrollerBarJsunit.test.ets", "TransitionJsunit.test.ets", "AreaChangeJsunit.test.ets", "PropJsunit.test.ets", "GridItem.test.ets", "labelProps.test.js", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "sharedTransition2.ets", "gridContainer.ets", "Tab.ets", "Stepper.ets", "ShapeJsunit.test.ets", "enumsImage.ets", "polygon.ets", "textStyle.ets", "SubscribaleAbstractJsunit.test.ets", "app.js", "listItemProps.test.js", "gridRowProps.test.js", "list.ets", "AppStorage.ets", "QrCode.ets", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "fontWeight.ets", "imageAnimator.ets", "BackgroundAndSizeSettingJsunit.test.ets", "Flex.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "switchProps.test.js", "radio.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "Path.ets", "fillMode.ets", "TransFormJsunit.test.ets", "DataPanel.ets", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "swiperProps.test.js", "TabsJsunit.test.ets", "LoadingProgressJsunit.test.ets", "GridSettingsJsunit.test.ets", "toggleProps.test.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "listProps.test.js", "progressProps.test.js", "Calendar.ets", "sharedTransition.ets", "enumsHorizontalAlign.ets", "BindPopupJsunit.test.ets", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScrollOffset", "api_method_name": "y", "api_method_all": "y: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 35614, "since": 4, "api_used": "\u662f", "lines": ["hos.emitter';\n\n@Entry\n@Component\nstruct E", "F)\n      }\n      .key(\"alignItemsColumn\")", "e is ${JSON.stringify(oldValue)} newvalue", "`${this.height}`).key('ellipse')\n    }.wi", "ohos.emitter'\n\n@Entry\n@Component\nstruct E", "ed:\" + JSON.stringify(eventData));\n      ", "Align.Center, justifyContent: FlexAlign.C", "d: 58,\n      priority: events_emitter.Eve", "size = JSON.stringify(newValue)\n         ", "d: 92,\n      priority: events_emitter.Eve", "te')\n  },\n  onDestroy() {\n    console.inf", "d: 93,\n      priority: events_emitter.Eve", "alled);\n          try {\n            var b", "e is ${JSON.stringify(newValue)}`)\n      ", "\n        Text(this.myText)\n          .onA", "eAppear)\n        .key('appear')\n        .", "Application onDestroy')\n  },\n}", "             priority: events_emitter.Eve", "r: \" + JSON.stringify(err.message))\n     ", "emitter.EventPriority.LOW\n            }\n ", "s.value)\n        .key('text1')\n        .b", " 'Text'\n          try {\n            var b", "hos.emitter';\n\n@Entry\n@Component\nstruct C", ": 192,\n      priority: events_emitter.Eve", "de Text'\n  private myText: string = 'Text", "ystem.prompt'\n\n@Entry\n@Preview\n@Component", "port prompt from '@system.prompt'\n\n@Entry", "hos.emitter';\n\n@Entry\n@Component\nstruct A", "emitter.EventPriority.LOW\n    }\n    event", "00 })\n            try {\n              var", "emitter.EventPriority.LOW\n              }", "is.size)\n        .key('text2')\n        .m", ": 907,\n      priority: events_emitter.Eve", ": 908,\n      priority: events_emitter.Eve"], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageEffectsJsunit.test.ets", "ColumnSplitJsunit.test.ets", "Navigation.ets", "imageFit.ets", "ZIndexJsunit.test.ets", "checkboxGroup.ets", "sourceType.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "TapGesture.test.ets", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "border.ets", "ResponseRegion.ets", "FillModeJsunit.test.ets", "textArea.ets", "transition.ets", "gridSettings.ets", "Image.ets", "LongPressGesture.test.ets", "path.ets", "polyline.ets", "VideoJsunit.test.ets", "touch.ets", "SpanJsunit.test.ets", "PanelJsunit.test.ets", "sideBar.ets", "Prop.ets", "customDialogController.ets", "EnmusImageJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "VisibilityJsunit.test.ets", "TextArea.ets", "ResponseRegionJsunit.test.ets", "flexDirection.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "ListJsunit.test.ets", "gridContainerProps.test.js", "Select.ets", "flex.ets", "MotionPathJsunit.test.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enable.ets", "tabsProps.test.js", "lineProps.test.js", "AlphabetIndexer.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "videoProps.test.js", "enumsItemAlign.ets", "DatePickerJsunit.test.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "StackJsunit.test.ets", "circle.ets", "animateMotionProps.test.js", "textareaProps.test.js", "span.ets", "NavigatorCode.ets", "patternLock.ets", "global.ets", "AnimationStatusJsunit.test.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "divProps.test.js", "divider.ets", "animationStatus.ets", "zIndex.ets", "enumsFlexAlign.ets", "ellipseProps.test.js", "FormComponentPage.ets", "chartProps.test.js", "sliderProps.test.js", "polygonProps.test.js", "inputProps.test.js", "SwiperJsunit.test.ets", "GridItem.ets", "imageProps.test.js", "select.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "gestureMode.ets", "refresh.ets", "ScrollBar.ets", "overlay.ets", "pathProps.test.js", "configuration.ets", "tabContentProps.test.js", "longPressGesture.ets", "Qrcode.ets", "Row.ets", "PathJsunit.test.ets", "Progress.ets", "column.ets", "Panel.ets", "CustomDialog.ets", "OhosRouterJsnuit.test.ets", "TextClockJsunit.test.ets", "enumsLineCapStyle.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "GeometryTransitionJsunit.test.ets", "ScrollCodeJsunit.test.ets", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "textInput.ets", "TouchJsunit.test.ets", "transForm.ets", "Column.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "SelectJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "ListItem.ets", "background.ets", "Slider.ets", "StepperJsunit.test.ets", "ButtonJsunit.test.ets", "enumsVerticalAlign.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "animatorOption.ets", "index.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "richtextProps.test.js", "PanGesture.ets", "shape.ets", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "imageAnimatorProps.test.js", "PieceCode.ets", "qrcodeProps.test.js", "GlobalJsunit.test.ets", "SystemRouterJsunit.test.ets", "stepperItemProps.test.js", "textClock.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "GridContainer.ets", "checkbox.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "grid.ets", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "bindPopup.ets", "buttonProps.test.js", "animateProps.test.js", "animate.ets", "List.test.js", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "RowSplit.ets", "pickerViewProps.test.js", "TextInput.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "curves.ets", "priorityGesture.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "CanvasJsunit.test.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "tabBarProps.test.js", "ColumnJsunit.test.ets", "parallelGesture.ets", "slider.ets", "panelProps.test.js", "motionPath.ets", "Badge.ets", "ColumnSplit.ets", "search.ets", "rectProps.test.js", "blank.ets", "pageTransition2.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "video.ets", "textProps.test.js", "DragEventJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "TextPickerJsunit.test.ets", "Span.ets", "CheckboxGroupJsunit.test.ets", "AppearJsunit.test.ets", "CommonJsunit.test.ets", "marquee.ets", "PieceJsunit.test.ets", "basicabilityapi.test.js", "badgeProps.test.js", "CalendarJsunit.test.ets", "systemPrompt.ets", "LinkJsunit.test.ets", "CurvesJsunit.test.ets", "DirectionJsunit.test.ets", "RadioJsunit.test.ets", "Stack.ets", "bindMenu.ets", "Sidebar.ets", "text.ets", "tapGesture.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "stepper.ets", "svgProps.test.js", "image.ets", "textPathProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "textPickerDialog.ets", "badge.ets", "imageEffects.ets", "popupProps.test.js", "tabs.ets", "dragEvent2.ets", "app.ets", "GaugeJsunit.test.ets", "BasicJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "Video.ets", "listItem.ets", "Button.ets", "ScrollJsunit.test.ets", "Polygon.ets", "panDirection.ets", "ContentStorage.test.ets", "direction2.ets", "BadgeJsunit.test.ets", "CircleJsunit.test.ets", "Rect.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "Constants.ets", "line.ets", "Grid.ets", "GestureModeJsunit.test.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "index.js", "tspanProps.test.js", "timeStamp.ets", "Toggle.ets", "Direction2Jsunit.test.ets", "panel.ets", "colorGradient.ets", "systemRouterA.ets", "CounterJsunit.test.ets", "dividerProps.test.js", "ListItemJsunit.test.ets", "Navigator.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "polylineProps.test.js", "richText.ets", "PositionSettingJsunit.test.ets", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "textTimer.ets", "Rating.ets", "Swiper.ets", "LineJsunit.test.ets", "DividerJsunit.test.ets", "Divider.ets", "RichTextJsunit.test.ets", "scrollBar.ets", "NavigatorCodeJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "focus.ets", "circleProps.test.js", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "stackProps.test.js", "Text.ets", "EdgeEffectJsunit.test.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "SystemAppJsunit.test.ets", "swiper.ets", "refreshProps.test.js", "Blank.ets", "ScrollerBarJsunit.test.ets", "TransitionJsunit.test.ets", "AreaChangeJsunit.test.ets", "PropJsunit.test.ets", "GridItem.test.ets", "labelProps.test.js", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "sharedTransition2.ets", "gridContainer.ets", "Tab.ets", "Stepper.ets", "ShapeJsunit.test.ets", "enumsImage.ets", "polygon.ets", "textStyle.ets", "SubscribaleAbstractJsunit.test.ets", "app.js", "listItemProps.test.js", "gridRowProps.test.js", "list.ets", "AppStorage.ets", "QrCode.ets", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "fontWeight.ets", "imageAnimator.ets", "BackgroundAndSizeSettingJsunit.test.ets", "Flex.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "switchProps.test.js", "radio.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "Path.ets", "fillMode.ets", "TransFormJsunit.test.ets", "DataPanel.ets", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "swiperProps.test.js", "TabsJsunit.test.ets", "LoadingProgressJsunit.test.ets", "GridSettingsJsunit.test.ets", "toggleProps.test.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "listProps.test.js", "progressProps.test.js", "Calendar.ets", "sharedTransition.ets", "enumsHorizontalAlign.ets", "BindPopupJsunit.test.ets", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DivElement", "api_method_all": "export interface DivElement extends Element {\n  \n  scrollBy(data: ScrollParam): void;\n\n  \n  getScrollOffset(): ScrollOffset;\n}", "api_method_name": "DivElement", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DivElement", "api_method_name": "scrollBy", "api_method_all": "scrollBy(data: ScrollParam): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 30, "since": 4, "api_used": "\u662f", "lines": ["    }\n    function4.scrollBy(scrollParam)\n  },\n\n", "}\n        function4.scrollBy(scrollParam)\n    },"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DivElement", "api_method_name": "getScrollOffset", "api_method_all": "getScrollOffset(): ScrollOffset;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 30, "since": 6, "api_used": "\u662f", "lines": ["lOffset = function4.getScrollOffset();\n    var x = scro", "lOffset = function4.getScrollOffset();\n        var x = "], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Application", "api_method_all": "export interface Application {\n  \n  $def: any;\n}", "api_method_name": "Application", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 18, "since": 4, "api_used": "\u662f", "lines": ["{\n    console.info('Application onCreate')\n  },\n  o", "{\n    console.info('Application onDestroy')\n  },\n}", "   console.info('AceApplication onDestroy');\n    }\n", "   console.info('AceApplication onCreate');\n    },\n"], "files": ["app.js", "app.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Application", "api_method_name": "def", "api_method_all": "$def: any", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1052, "since": 4, "api_used": "\u662f", "lines": ["Utils.ets';\n\nexport default function column", " './Utils';\n\nexport default function enumsI", "Utils.ets';\n\nexport default function appear", "Utils.ets';\n\nexport default function areaCh", "Utils.ets';\n\nexport default function layout", "Text('second child, default zIndex(0)')\n   ", "     break;\n        default:\n          this", "/Utils.ets';\nexport default function listJs", "Utils.ets';\n\nexport default function imageE", ".test.ets';\n\nexport default function testsu", "s.emitter';\n\nexport default function steppe", "Utils.ets';\n\nexport default function textSt", "s.emitter';\n\nexport default function touchA", "/Utils.ets';\nexport default function enable", "s.emitter';\n\nexport default function swiper", "20 }) {\n      Text('default text').fontSize", " './Utils';\n\nexport default function checkb", " './Utils';\n\nexport default function select", "/Utils.ets';\nexport default function gaugeJ", "Utils.ets';\n\nexport default function touchJ", "Utils.ets';\n\nexport default function backgr", "em.router';\n\nexport default function flexJs", "Utils.ets';\n\nexport default function positi", "Utils.ets';\n\nexport default function global", "Utils.ets';\n\nexport default function ellips", " './Utils';\n\nexport default function enumsV", "s.emitter';\n\nexport default function marque", "Utils.ets';\n\nexport default function visibi", "Utils.ets';\n\nexport default function colorG", " './Utils';\n\nexport default function ohosMa", "Utils.ets';\n\nexport default function border", " './Utils';\n\nexport default function fillMo", "Utils.ets';\n\nexport default function girdCo", " './Utils';\n\nexport default function enumsF", " './Utils';\n\nexport default function slider", "@ts-nocheck\n\nexport default {\n  onCreate() ", "s.emitter';\n\nexport default function edgeEf", "ts-nocheck\n\n\nexport default class Utils {\n ", "/Utils.ets';\nexport default function zIndex", "tion).assertEqual(undefined);\n      done();", "Utils.ets';\n\nexport default function overLa", "Utils.ets';\n\nexport default function gridSe", "Utils.ets';\n\nexport default function shapeC"], "files": ["listItemGroupProps.test.js", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "CommonJsunit.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "border.ets", "badgeProps.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "List.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "SystemAppJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "labelProps.test.js", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "ratingProps.test.js", "flex.ets", "MotionPathJsunit.test.ets", "stepperProps.test.js", "Utils.ets", "marqueeProps.test.js", "gridContainer.ets", "imageAnimatorProps.test.js", "textPickerDialog.ets", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "GlobalJsunit.test.ets", "textStyle.ets", "popupProps.test.js", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "app.js", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "style.js", "DatePickerJsunit.test.ets", "BasicJsunit.test.ets", "app.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "animateMotionProps.test.js", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "patternLock.ets", "animateProps.test.js", "buttonProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "ContentStorage.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "AnimationStatusJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "pickerViewProps.test.js", "CircleJsunit.test.ets", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "zIndex.ets", "GradientDirectionJsunit.test.ets", "TransFormJsunit.test.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "AlertDialog.ets", "sliderProps.test.js", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "swiperProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_all": "export interface ViewModel {\n  $app: Application;\n\n  \n  $t(path: string, params?: object | Array<any>): string;\n\n  \n  $tc(path: string, count: number): string;\n\n  \n  $r(path: string): string;\n\n  \n  $set(key: string, value: any): void;\n\n  \n  $delete(key: string): void;\n\n  \n  $element(\n    id?: string,\n  ): AnimationElement &\n    CanvasElement &\n    object &\n    WebElement &\n    CameraElement &\n    ListElement &\n    SwiperElement &\n    DialogElement &\n    ImageAnimatorElement &\n    MarqueeElement &\n    MenuElement &\n    ChartElement &\n    InputElement &\n    ButtonElement &\n    TextAreaElement &\n    PickerElement &\n    VideoElement &\n    DivElement;\n\n  \n  $root(): ViewModel & object;\n\n  \n  $parent(): ViewModel & object;\n\n  \n  $child(id: string): ViewModel & object;\n\n  \n  $watch(data: string, callback: string): void;\n\n  \n  $refs: ElementReferences;\n\n  \n  $emit(event: string, params?: object): void;\n\n  \n  scrollTo(options: ScrollOptions): void;\n}", "api_method_name": "ViewModel", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "t", "api_method_all": "$t(path: string, params?: object | Array<any>): string;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 258869, "since": 4, "api_used": "\u662f", "lines": ["", "iew\n@Component\nstruct AppearExample {\n  @", "lean = false\n  private changeAppear: stri", "yText: string = 'Text for onAppear'\n\n  on", "o('Application onDestroy')\n  },\n}", "tter from '@ohos.emitter'\nimport prompt f", "      priority: events_emitter.EventPrior", ": string = 'Hide Text'\n  private myText: ", "Event = {\n      eventId: 58,\n      priori", " from '@system.prompt'\n\n@Entry\n@Preview\n@", " events_emitter.EventPriority.LOW\n    }\n ", "AppearExample {\n  @State isShow: boolean ", "\n\nimport events_emitter from '@ohos.emitt", "olean = false\n  @State disAppearFlag: boo", "_emitter.EventPriority.LOW\n    }\n    even", "priority: events_emitter.EventPriority.LO", "reate')\n  },\n  onDestroy() {\n    console.", " 'Hide Text'\n  private myText: string = '", "('Application onCreate')\n  },\n  onDestroy", "Preview\n@Component\nstruct AppearExample {", "alled');\n    var stateChangeEvent = {\n   ", "e isShow: boolean = true\n  @State appearF", "onsole.info('Application onDestroy')\n  },", "mitter'\nimport prompt from '@system.promp", "/ @ts-nocheck\n\nexport default {\n  onCreat", "ext'\n  private myText: string = 'Text for", "ocheck\n\n\nimport events_emitter from '@oho", " called');\n    var stateChangeEvent = {\n ", "t default {\n  onCreate() {\n    console.in", "pearExample {\n  @State isShow: boolean = ", "boolean = false\n  @State disAppearFlag: b", "\n\n\nimport events_emitter from '@ohos.emit", "onsole.info('Application onCreate')\n  },\n", "riority: events_emitter.EventPriority.LOW", " var stateChangeEvent = {\n      eventId: ", "ter from '@ohos.emitter'\nimport prompt fr", "rt prompt from '@system.prompt'\n\n@Entry\n@", "y\n@Preview\n@Component\nstruct AppearExampl", "vate changeAppear: string = 'Hide Text'\n ", "check\n\nexport default {\n  onCreate() {\n  ", " @ts-nocheck\n\n\nimport events_emitter from", " boolean = true\n  @State appearFlag: bool", "oolean = true\n  @State appearFlag: boolea", "    }\n    events_emitter.on(stateChangeEv", "y.LOW\n    }\n    events_emitter.on(stateCh", "@system.prompt'\n\n@Entry\n@Preview\n@Compone", "@ohos.emitter'\nimport prompt from '@syste", "Id: 58,\n      priority: events_emitter.Ev", "\n  private myText: string = 'Text for onA"], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageEffectsJsunit.test.ets", "ColumnSplitJsunit.test.ets", "Navigation.ets", "imageFit.ets", "ZIndexJsunit.test.ets", "checkboxGroup.ets", "sourceType.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "TapGesture.test.ets", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "border.ets", "ResponseRegion.ets", "FillModeJsunit.test.ets", "textArea.ets", "transition.ets", "gridSettings.ets", "Image.ets", "LongPressGesture.test.ets", "path.ets", "polyline.ets", "VideoJsunit.test.ets", "touch.ets", "SpanJsunit.test.ets", "PanelJsunit.test.ets", "sideBar.ets", "Prop.ets", "customDialogController.ets", "EnmusImageJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "VisibilityJsunit.test.ets", "TextArea.ets", "ResponseRegionJsunit.test.ets", "flexDirection.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "ListJsunit.test.ets", "gridContainerProps.test.js", "Select.ets", "flex.ets", "MotionPathJsunit.test.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enable.ets", "tabsProps.test.js", "lineProps.test.js", "AlphabetIndexer.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "videoProps.test.js", "enumsItemAlign.ets", "style.js", "DatePickerJsunit.test.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "StackJsunit.test.ets", "circle.ets", "animateMotionProps.test.js", "textareaProps.test.js", "span.ets", "NavigatorCode.ets", "patternLock.ets", "global.ets", "AnimationStatusJsunit.test.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "divProps.test.js", "divider.ets", "animationStatus.ets", "zIndex.ets", "enumsFlexAlign.ets", "ellipseProps.test.js", "FormComponentPage.ets", "chartProps.test.js", "sliderProps.test.js", "polygonProps.test.js", "inputProps.test.js", "SwiperJsunit.test.ets", "GridItem.ets", "imageProps.test.js", "select.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "gestureMode.ets", "refresh.ets", "ScrollBar.ets", "overlay.ets", "pathProps.test.js", "configuration.ets", "tabContentProps.test.js", "longPressGesture.ets", "Qrcode.ets", "Row.ets", "PathJsunit.test.ets", "Progress.ets", "column.ets", "Panel.ets", "CustomDialog.ets", "OhosRouterJsnuit.test.ets", "TextClockJsunit.test.ets", "enumsLineCapStyle.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "GeometryTransitionJsunit.test.ets", "ScrollCodeJsunit.test.ets", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "textInput.ets", "TouchJsunit.test.ets", "transForm.ets", "Column.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "SelectJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "ListItem.ets", "background.ets", "Slider.ets", "StepperJsunit.test.ets", "ButtonJsunit.test.ets", "enumsVerticalAlign.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "animatorOption.ets", "index.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "richtextProps.test.js", "PanGesture.ets", "shape.ets", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "imageAnimatorProps.test.js", "PieceCode.ets", "qrcodeProps.test.js", "GlobalJsunit.test.ets", "SystemRouterJsunit.test.ets", "stepperItemProps.test.js", "textClock.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "GridContainer.ets", "checkbox.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "grid.ets", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "bindPopup.ets", "buttonProps.test.js", "animateProps.test.js", "animate.ets", "List.test.js", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "RowSplit.ets", "pickerViewProps.test.js", "TextInput.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "curves.ets", "priorityGesture.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "CanvasJsunit.test.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "tabBarProps.test.js", "ColumnJsunit.test.ets", "parallelGesture.ets", "slider.ets", "panelProps.test.js", "motionPath.ets", "Badge.ets", "ColumnSplit.ets", "search.ets", "rectProps.test.js", "blank.ets", "pageTransition2.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "video.ets", "textProps.test.js", "DragEventJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "TextPickerJsunit.test.ets", "Span.ets", "CheckboxGroupJsunit.test.ets", "AppearJsunit.test.ets", "CommonJsunit.test.ets", "marquee.ets", "PieceJsunit.test.ets", "basicabilityapi.test.js", "badgeProps.test.js", "CalendarJsunit.test.ets", "systemPrompt.ets", "LinkJsunit.test.ets", "CurvesJsunit.test.ets", "DirectionJsunit.test.ets", "RadioJsunit.test.ets", "Stack.ets", "bindMenu.ets", "Sidebar.ets", "text.ets", "tapGesture.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "stepper.ets", "svgProps.test.js", "image.ets", "textPathProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "textPickerDialog.ets", "badge.ets", "imageEffects.ets", "popupProps.test.js", "tabs.ets", "dragEvent2.ets", "app.ets", "GaugeJsunit.test.ets", "BasicJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "Video.ets", "listItem.ets", "Button.ets", "ScrollJsunit.test.ets", "Polygon.ets", "panDirection.ets", "ContentStorage.test.ets", "direction2.ets", "BadgeJsunit.test.ets", "CircleJsunit.test.ets", "Rect.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "Constants.ets", "line.ets", "Grid.ets", "GestureModeJsunit.test.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "index.js", "tspanProps.test.js", "timeStamp.ets", "Toggle.ets", "Direction2Jsunit.test.ets", "panel.ets", "colorGradient.ets", "systemRouterA.ets", "CounterJsunit.test.ets", "dividerProps.test.js", "ListItemJsunit.test.ets", "Navigator.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "polylineProps.test.js", "richText.ets", "PositionSettingJsunit.test.ets", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "textTimer.ets", "Rating.ets", "Swiper.ets", "LineJsunit.test.ets", "DividerJsunit.test.ets", "Divider.ets", "RichTextJsunit.test.ets", "scrollBar.ets", "NavigatorCodeJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "focus.ets", "circleProps.test.js", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "stackProps.test.js", "Text.ets", "EdgeEffectJsunit.test.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "SystemAppJsunit.test.ets", "swiper.ets", "refreshProps.test.js", "Blank.ets", "ScrollerBarJsunit.test.ets", "TransitionJsunit.test.ets", "AreaChangeJsunit.test.ets", "PropJsunit.test.ets", "GridItem.test.ets", "labelProps.test.js", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "sharedTransition2.ets", "gridContainer.ets", "Tab.ets", "Stepper.ets", "ShapeJsunit.test.ets", "enumsImage.ets", "polygon.ets", "textStyle.ets", "SubscribaleAbstractJsunit.test.ets", "app.js", "listItemProps.test.js", "gridRowProps.test.js", "list.ets", "AppStorage.ets", "QrCode.ets", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "fontWeight.ets", "imageAnimator.ets", "BackgroundAndSizeSettingJsunit.test.ets", "Flex.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "switchProps.test.js", "radio.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "Path.ets", "fillMode.ets", "TransFormJsunit.test.ets", "DataPanel.ets", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "swiperProps.test.js", "TabsJsunit.test.ets", "LoadingProgressJsunit.test.ets", "GridSettingsJsunit.test.ets", "toggleProps.test.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "listProps.test.js", "progressProps.test.js", "Calendar.ets", "sharedTransition.ets", "enumsHorizontalAlign.ets", "BindPopupJsunit.test.ets", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "tc", "api_method_all": "$tc(path: string, count: number): string;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 5693, "since": 4, "api_used": "\u662f", "lines": ["ta)\n            } catch (err) {\n          ", "ta)\n            } catch {\n              co", "entData);\n      } catch (err) {\n        co", "nSelf(ItemAlign.Stretch)\n          .width(", ".info(\"start run testcase!!!!\")\n    featur", "ckData)\n        } catch (err) {\n          ", "elf = ItemAlign.Stretch;\n          break;\n", "sAppear);\n      } catch (err) {\n        co", "kAppear);\n      } catch (err) {\n        co", "allback);\n      } catch (err) {\n        co", "Data)\n          } catch {\n            cons", ";\n        case 'Stretch':\n          this.a", "Text('alignSelf stretch')\n          .align", "Data)\n          } catch (err) {\n          ", "entData));\n      switch (eventData.data.si", "        }\n      } catch (err) {\n        co", ";\n      })\n      .catch((error) => {\n     ", "llback1);\n      } catch (err) {\n        co", "entData));\n      switch (eventData.data.al"], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "configuration.ets", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "Navigator.ets", "textProps.test.js", "longPressGesture.ets", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "Qrcode.ets", "ColumnSplitJsunit.test.ets", "Row.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "Span.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "Progress.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "geometryTransition.ets", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "toolbarItemProps.test.js", "marquee.ets", "TextClockJsunit.test.ets", "textTimer.ets", "Rating.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "border.ets", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "Divider.ets", "RichTextJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "transition.ets", "Image.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "CurvesJsunit.test.ets", "button.ets", "FlexWrapJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "EnmusFlexAlignJsunit.test.ets", "ListItem.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "Text.ets", "SpanJsunit.test.ets", "stackProps.test.js", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "SystemAppJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "Stack.ets", "sideBar.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "refreshProps.test.js", "Blank.ets", "ScrollerBarJsunit.test.ets", "Scroll.ets", "customDialogController.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "tapGesture.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "PanGesture.ets", "richtextProps.test.js", "svgProps.test.js", "labelProps.test.js", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "ratingProps.test.js", "flex.ets", "MotionPathJsunit.test.ets", "stepperProps.test.js", "marqueeProps.test.js", "gridContainer.ets", "imageAnimatorProps.test.js", "ShapeJsunit.test.ets", "PieceCode.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "popupProps.test.js", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "BindMenuJsunit.test.ets", "videoProps.test.js", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "dragEvent.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "Button.ets", "ScrollJsunit.test.ets", "gridColProps.test.js", "textareaProps.test.js", "imageAnimator.ets", "bindPopup.ets", "patternLock.ets", "animateProps.test.js", "animate.ets", "buttonProps.test.js", "List.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "RowSplit.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "ohosMatrix4.ets", "CircleJsunit.test.ets", "divProps.test.js", "pickerViewProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "animationStatus.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "fillMode.ets", "ellipseProps.test.js", "TransFormJsunit.test.ets", "priorityGesture.ets", "DataPanel.ets", "Grid.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "touchAble.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "datePicker.ets", "pageTransition.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "polygonProps.test.js", "sliderProps.test.js", "swiperProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "areaChange.ets", "GridItem.ets", "tspanProps.test.js", "parallelGesture.ets", "imageProps.test.js", "timeStamp.ets", "Toggle.ets", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "panelProps.test.js", "sharedTransition.ets", "motionPath.ets", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "r", "api_method_all": "$r(path: string): string;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 165128, "since": 4, "api_used": "\u662f", "lines": ["'@ohos.emitter'\nimport prompt from '@syst", "m.prompt'\n\n@Entry\n@Preview\n@Component\nstr", "in(3).backgroundColor(0x2788D9)\n      if ", "    this.changeAppear = 'Show Text'\n     ", "r from '@ohos.emitter'\nimport prompt from", "port default {\n  onCreate() {\n    console", " isShow: boolean = true\n  @State appearFl", "t: string = 'Text for onAppear'\n\n  onPage", "  }).margin(3).backgroundColor(0x2788D9)\n", "console.info('[appear] page show called')", "review\n@Component\nstruct AppearExample {\n", "eventId: 58,\n      priority: events_emitt", " true\n  @State appearFlag: boolean = fals", "/ @ts-nocheck\n\n\nimport events_emitter fro", "\n        .key('appear')\n        .onClick(", "ter'\nimport prompt from '@system.prompt'\n", " private changeAppear: string = 'Hide Tex", "os.emitter'\nimport prompt from '@system.p", "ts_emitter.EventPriority.LOW\n    }\n    ev", "          this.appearFlag = true\n        ", "import events_emitter from '@ohos.emitter", "e called:\" + JSON.stringify(eventData));\n", "mponent\nstruct AppearExample {\n  @State i", "ate changeAppear: string = 'Hide Text'\n  ", " console.info('appearFlag current action ", "vents_emitter.EventPriority.LOW\n    }\n   ", "se\n  @State disAppearFlag: boolean = fals", " }\n    events_emitter.on(stateChangeEvent", "isShow\n        }).margin(3).backgroundCol", "ng = 'Hide Text'\n  private myText: string", ")\n          .onAppear(() => {\n           ", "ort events_emitter from '@ohos.emitter'\ni", "console.info(\"[appear] page state change ", ".info('appearFlag current action state is", "gCallBack);\n  }\n\n  private stateChangCall", "// @ts-nocheck\n\nexport default {\n  onCrea", " = 'Text for onAppear'\n\n  onPageShow() {\n", "nfo('Application onCreate')\n  },\n  onDest", "('Application onDestroy')\n  },\n}", "ompt from '@system.prompt'\n\n@Entry\n@Previ", " this.appearFlag = true\n            this.", "how called');\n    var stateChangeEvent = ", "ton(this.changeAppear)\n        .key('appe", "console.info(\"[appear] page stateChangCal", "  private myText: string = 'Text for onAp", "ntId: 58,\n      priority: events_emitter.", " boolean = false\n  private changeAppear: ", "system.prompt'\n\n@Entry\n@Preview\n@Componen", "eate')\n  },\n  onDestroy() {\n    console.i", "ority: events_emitter.EventPriority.LOW\n "], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageEffectsJsunit.test.ets", "ColumnSplitJsunit.test.ets", "Navigation.ets", "imageFit.ets", "ZIndexJsunit.test.ets", "checkboxGroup.ets", "sourceType.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "TapGesture.test.ets", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "border.ets", "ResponseRegion.ets", "FillModeJsunit.test.ets", "textArea.ets", "transition.ets", "gridSettings.ets", "Image.ets", "LongPressGesture.test.ets", "path.ets", "polyline.ets", "VideoJsunit.test.ets", "touch.ets", "SpanJsunit.test.ets", "PanelJsunit.test.ets", "sideBar.ets", "Prop.ets", "customDialogController.ets", "EnmusImageJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "VisibilityJsunit.test.ets", "TextArea.ets", "ResponseRegionJsunit.test.ets", "flexDirection.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "ListJsunit.test.ets", "gridContainerProps.test.js", "Select.ets", "flex.ets", "MotionPathJsunit.test.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enable.ets", "tabsProps.test.js", "lineProps.test.js", "AlphabetIndexer.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "videoProps.test.js", "enumsItemAlign.ets", "style.js", "DatePickerJsunit.test.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "StackJsunit.test.ets", "circle.ets", "animateMotionProps.test.js", "textareaProps.test.js", "span.ets", "NavigatorCode.ets", "patternLock.ets", "global.ets", "AnimationStatusJsunit.test.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "divProps.test.js", "divider.ets", "animationStatus.ets", "zIndex.ets", "enumsFlexAlign.ets", "ellipseProps.test.js", "FormComponentPage.ets", "chartProps.test.js", "sliderProps.test.js", "polygonProps.test.js", "inputProps.test.js", "SwiperJsunit.test.ets", "GridItem.ets", "imageProps.test.js", "select.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "gestureMode.ets", "refresh.ets", "ScrollBar.ets", "overlay.ets", "pathProps.test.js", "configuration.ets", "tabContentProps.test.js", "longPressGesture.ets", "Qrcode.ets", "Row.ets", "PathJsunit.test.ets", "Progress.ets", "column.ets", "Panel.ets", "CustomDialog.ets", "OhosRouterJsnuit.test.ets", "TextClockJsunit.test.ets", "enumsLineCapStyle.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "GeometryTransitionJsunit.test.ets", "ScrollCodeJsunit.test.ets", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "textInput.ets", "TouchJsunit.test.ets", "transForm.ets", "Column.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "SelectJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "ListItem.ets", "background.ets", "Slider.ets", "StepperJsunit.test.ets", "ButtonJsunit.test.ets", "enumsVerticalAlign.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "animatorOption.ets", "index.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "richtextProps.test.js", "PanGesture.ets", "shape.ets", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "imageAnimatorProps.test.js", "PieceCode.ets", "qrcodeProps.test.js", "GlobalJsunit.test.ets", "SystemRouterJsunit.test.ets", "stepperItemProps.test.js", "textClock.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "GridContainer.ets", "checkbox.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "grid.ets", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "bindPopup.ets", "buttonProps.test.js", "animateProps.test.js", "animate.ets", "List.test.js", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "RowSplit.ets", "pickerViewProps.test.js", "TextInput.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "curves.ets", "priorityGesture.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "CanvasJsunit.test.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "tabBarProps.test.js", "ColumnJsunit.test.ets", "parallelGesture.ets", "slider.ets", "panelProps.test.js", "motionPath.ets", "Badge.ets", "ColumnSplit.ets", "search.ets", "rectProps.test.js", "blank.ets", "pageTransition2.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "video.ets", "textProps.test.js", "DragEventJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "TextPickerJsunit.test.ets", "Span.ets", "CheckboxGroupJsunit.test.ets", "AppearJsunit.test.ets", "CommonJsunit.test.ets", "marquee.ets", "PieceJsunit.test.ets", "basicabilityapi.test.js", "badgeProps.test.js", "CalendarJsunit.test.ets", "systemPrompt.ets", "LinkJsunit.test.ets", "CurvesJsunit.test.ets", "DirectionJsunit.test.ets", "RadioJsunit.test.ets", "Stack.ets", "bindMenu.ets", "Sidebar.ets", "text.ets", "tapGesture.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "stepper.ets", "svgProps.test.js", "image.ets", "textPathProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "textPickerDialog.ets", "badge.ets", "imageEffects.ets", "popupProps.test.js", "tabs.ets", "dragEvent2.ets", "app.ets", "GaugeJsunit.test.ets", "BasicJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "Video.ets", "listItem.ets", "Button.ets", "ScrollJsunit.test.ets", "Polygon.ets", "panDirection.ets", "ContentStorage.test.ets", "direction2.ets", "BadgeJsunit.test.ets", "CircleJsunit.test.ets", "Rect.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "Constants.ets", "line.ets", "Grid.ets", "GestureModeJsunit.test.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "index.js", "tspanProps.test.js", "timeStamp.ets", "Toggle.ets", "Direction2Jsunit.test.ets", "panel.ets", "colorGradient.ets", "systemRouterA.ets", "CounterJsunit.test.ets", "dividerProps.test.js", "ListItemJsunit.test.ets", "Navigator.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "polylineProps.test.js", "richText.ets", "PositionSettingJsunit.test.ets", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "textTimer.ets", "Rating.ets", "Swiper.ets", "LineJsunit.test.ets", "DividerJsunit.test.ets", "Divider.ets", "RichTextJsunit.test.ets", "scrollBar.ets", "NavigatorCodeJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "focus.ets", "circleProps.test.js", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "stackProps.test.js", "Text.ets", "EdgeEffectJsunit.test.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "SystemAppJsunit.test.ets", "swiper.ets", "refreshProps.test.js", "Blank.ets", "ScrollerBarJsunit.test.ets", "TransitionJsunit.test.ets", "AreaChangeJsunit.test.ets", "PropJsunit.test.ets", "GridItem.test.ets", "labelProps.test.js", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "sharedTransition2.ets", "gridContainer.ets", "Tab.ets", "Stepper.ets", "ShapeJsunit.test.ets", "enumsImage.ets", "polygon.ets", "textStyle.ets", "SubscribaleAbstractJsunit.test.ets", "app.js", "listItemProps.test.js", "gridRowProps.test.js", "list.ets", "AppStorage.ets", "QrCode.ets", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "fontWeight.ets", "imageAnimator.ets", "BackgroundAndSizeSettingJsunit.test.ets", "Flex.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "switchProps.test.js", "radio.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "Path.ets", "fillMode.ets", "TransFormJsunit.test.ets", "DataPanel.ets", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "swiperProps.test.js", "TabsJsunit.test.ets", "LoadingProgressJsunit.test.ets", "GridSettingsJsunit.test.ets", "toggleProps.test.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "listProps.test.js", "progressProps.test.js", "Calendar.ets", "sharedTransition.ets", "enumsHorizontalAlign.ets", "BindPopupJsunit.test.ets", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "set", "api_method_all": "$set(key: string, value: any): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 1392, "since": 4, "api_used": "\u662f", "lines": ["      configService.setConfig(Want.paramete", "  xs: { span: 2, offset: 8 },\n             ", ", lg: { span: 7, offset: 2 }\n        })\n   ", "an: this.smSpan, offset: this.smOffset },\n ", "llBack);\n    let offsetChangeEvent = {\n    ", "\n    it('ACE_global_setTimeout', 0, functio", "  xs: { span: 6, offset: 0 },\n             ", "  xs: { span: 2, offset: 6 },\n             ", "  lg: { span: 2, offset: 2 }\n            })", "       .key('gridOffset')\n\n        Row() {\n", ";\n        this.smOffset = eventData.data.of", "entData.data.gridOffset) {\n        this.gri", "s.useSizeType.sm.offset).assertEqual(2);\n  ", "  }\n        .gridOffset(this.gridOffset)\n  ", "  lg: { span: 2, offset: 0 }\n            })", "lor: Color.Gray, offsetX: 5, offsetY: 5 }\n ", "  sm: { span: 2, offset: 10 },\n            ", "entData.data.gridOffset;\n      } else if (e", ".onScroll((scrollOffset: number, scrollStat", " this.alignment, offset: { x: this.x, y: th", "ame} START`);\n      setTimeout(() => {\n    ", "ray, offsetX: 5, offsetY: 5 }\n  @State gray", "  lg: { span: 2, offset: 4 }\n            })", "s.useSizeType.sm.offset).assertEqual(-21474", " 1,\n            \"offset\": 2\n          }\n   ", "  xs: { span: 1, offset: 0 }, sm: { span: t", "vents_emitter.on(offsetChangeEvent, this.st", "  sm: { span: 6, offset: 2 },\n             ", "  xs: { span: 2, offset: 10 },\n            ", "dOffset(this.gridOffset)\n        .height(\"1", ", offset: this.smOffset },\n          md: { ", "lignment.Bottom, offset: { x: 0, y: 20 } })", "  sm: { span: 2, offset: 8 },\n             ", "Offset:' + scrollOffset)\n          console.", "= eventData.data.offset;\n      } else if (e", "  md: { span: 2, offset: 10 },\n            ", "        this.gridOffset = eventData.data.gr", "  lg: { span: 6, offset: 6 }\n            })", "  sm: { span: 2, offset: 0 },\n             ", "  md: { span: 2, offset: 2 },\n             ", " 1;\n  @State gridOffset: number = 0;\n\n  bui", "  md: { span: 6, offset: 4 },\n             ", "tring = \"ACE_global_setTimeout\"\n      conso", "s.useSizeType.sm.offset).assertEqual(1);\n  ", "00,\n            \"offset\": 0x80000000\n      ", "  md: { span: 2, offset: 0 },\n             ", "sole.info('scrollOffset:' + scrollOffset)\n ", " = 2;\n  @State smOffset: number = 1;\n  @Sta", "  md: { span: 5, offset: 1 }, lg: { span: 7"], "files": ["listItemGroupProps.test.js", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "video.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "textProps.test.js", "canvas2.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "imageFit.ets", "polylineProps.test.js", "PositionSettingJsunit.test.ets", "CustomDialog.ets", "searchProps.test.js", "spanProps.test.js", "toolbarItemProps.test.js", "textTimer.ets", "enumsLineCapStyle.ets", "OverlayJsunit.test.ets", "DividerJsunit.test.ets", "basicabilityapi.test.js", "badgeProps.test.js", "dialogProps.test.js", "CalendarJsunit.test.ets", "gridSettings.ets", "LinkJsunit.test.ets", "GridJsnuit.test.ets", "scrollCode.ets", "formProps.test.js", "VideoJsunit.test.ets", "circleProps.test.js", "stackProps.test.js", "Text.ets", "SpanJsunit.test.ets", "PanelJsunit.test.ets", "StepperJsunit.test.ets", "ButtonJsunit.test.ets", "SystemAppJsunit.test.ets", "TextJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "Scroll.ets", "customDialogController.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "BlankJsunit.test.ets", "positionSetting.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "ProgressJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "PanGesture.ets", "svgProps.test.js", "shape.ets", "labelProps.test.js", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "gridContainerProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "gridContainer.ets", "PatternLock.ets", "imageAnimatorProps.test.js", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "imageEffects.ets", "popupProps.test.js", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "videoProps.test.js", "list.ets", "AppStorage.ets", "List.ets", "GridContainer.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "calendar.ets", "TextInputJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "Video.ets", "StackJsunit.test.ets", "TextAreaJsunit.test.ets", "pickerProps.test.js", "pieceProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "textareaProps.test.js", "ScrollJsunit.test.ets", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "patternLock.ets", "animateProps.test.js", "buttonProps.test.js", "panDirection.ets", "ContentStorage.test.ets", "BadgeJsunit.test.ets", "canvas.ets", "pickerViewProps.test.js", "divProps.test.js", "switchProps.test.js", "Constants.ets", "commonComponentJsApi.test.js", "ellipseProps.test.js", "chartProps.test.js", "touchAble.ets", "SliderJsunit.test.ets", "sliderProps.test.js", "swiperProps.test.js", "WebPage.ets", "polygonProps.test.js", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "toggleProps.test.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Calendar.ets", "panelProps.test.js", "gestureMode.ets", "refresh.ets", "motionPath.ets", "menuProps.test.js", "rectProps.test.js", "overlay.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "delete", "api_method_all": "$delete(key: string): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 9, "since": 4, "api_used": "\u662f", "lines": ["ey5);\n      storage.delete(\"key5\");\n      key5", "t(\"PropA\", 20))\nvar deleteValue = String(AppSt", "ment_ContentStorage_delete_0100] END');\n      ", "ment_ContentStorage_delete_0100', 0, function ", "tate str7: string = deleteValue\n  @State str8:", ";\n        function4.delete();\n    },\n\n    chan", "ment_ContentStorage_delete_0100] START');\n    ", "    this.controller.deleteJavaScriptRegister('", "te = contentStorage.delete(\"key1\");\n      expe"], "files": ["WebPage.ets", "ContentStorage.test.ets", "AppStorage.ets", "index.js", "AppStorageJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "element", "api_method_all": "$element(\n    id?: string,\n  ): AnimationElement &\n    CanvasElement &\n    object &\n    WebElement &\n    CameraElement &\n    ListElement &\n    SwiperElement &\n    DialogElement &\n    ImageAnimatorElement &\n    MarqueeElement &\n    MenuElement &\n    ChartElement &\n    InputElement &\n    ButtonElement &\n    TextAreaElement &\n    PickerElement &\n    VideoElement &\n    DivElement;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 2965, "since": 4, "api_used": "\u662f", "lines": ["romPropNone = this.$element(\"fromPropNone\").get", "eyTimesProp = this.$element(\"keyTimesProp\").get", "ropDiscrete = this.$element(\"calcModePropDiscre", "ext('This is a List element').fontSize(12)\n    ", "mesPropNone = this.$element(\"keyTimesPropNone\")", "ePropSpline = this.$element(\"calcModePropSpline", "ginPropNone = this.$element(\"beginPropNone\").ge", "this.idProp = this.$element(\"idProp\").getInspec", "nesPropNone = this.$element(\"keySplinesPropNone", "his.endProp = this.$element(\"endProp\").getInspe", "amePropNone = this.$element(\"attributeNamePropN", "durPropNone = this.$element(\"durPropNone\").getI", "lPropRemove = this.$element(\"fillPropRemove\").g", "dePropPaced = this.$element(\"calcModePropPaced\"", "here are three Text elements here')\n        .fo", "uch point and touch element:\\nx: '\n          + ", "his.durProp = this.$element(\"durProp\").getInspe", "is.fromProp = this.$element(\"fromProp\").getInsp", "untPropNone = this.$element(\"repeatCountPropNon", "s.beginProp = this.$element(\"beginProp\").getIns", "atCountProp = this.$element(\"repeatCountProp\").", "lPropFreeze = this.$element(\"fillPropFreeze\").g", "uteNameProp = this.$element(\"attributeNameProp\"", "this.toProp = this.$element(\"toProp\").getInspec", "SplinesProp = this.$element(\"keySplinesProp\").g", "ePropLinear = this.$element(\"calcModePropLinear", "this.byProp = this.$element(\"byProp\").getInspec", "endPropNone = this.$element(\"endPropNone\").getI", ".toPropNone = this.$element(\"toPropNone\").getIn", ".byPropNone = this.$element(\"byPropNone\").getIn", "uesPropNone = this.$element(\"valuesPropNone\").g", ".valuesProp = this.$element(\"valuesProp\").getIn"], "files": ["touch.ets", "dragEvent.ets", "dragEvent2.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "root", "api_method_all": "$root(): ViewModel & object;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "parent", "api_method_all": "$parent(): ViewModel & object;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "child", "api_method_all": "$child(id: string): ViewModel & object;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 24, "since": 4, "api_used": "\u662f", "lines": ["       Text('Second child, show in top').widt", "        Text('first child, zIndex(2)')\n      ", "        Text('First child, show in bottom').w", "       Text('second child, default zIndex(0)'", "        Text('third child, zIndex(1)')\n      ", "traints {\n  private children: string[] = ['1'", "       ForEach(this.children, (item) => {\n   "], "files": ["layoutConstraints.ets", "zIndex.ets", "Stack.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "watch", "api_method_all": "$watch(data: string, callback: string): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 2, "since": 4, "api_used": "\u662f", "lines": ["'Count Down' : 'Stopwatch')\n      if (this.isCountDown) {\n       ", "wn ? 'Swtich to Stopwatch' : 'Switch to Count Down')\n        .onC"], "files": ["aboutToDisappear.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "emit", "api_method_all": "$emit(event: string, params?: object): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 2895, "since": 4, "api_used": "\u662f", "lines": ["eck\n\n\nimport events_emitter from '@ohos.emit", "le.info(\"appearFlag emit action state err: \"", "emitter from '@ohos.emitter'\n\n@Entry\n@Compon", "emitter from '@ohos.emitter'\nimport prompt f", "info(\"disAppearFlag emit action state err: \"", "\n            events_emitter.emit(backEvent, ", "     events_emitter.emit(backEvent, backData", "emitter from '@ohos.emitter';\n\n@Entry\n@Compo", ".info(\"onAreaChange emit action state err: \"", "o(\"onClick start to emit action state\")\n    ", "nsole.info(\"onClick emit action state err: \"", "             events_emitter.emit(backEvent, ", "ck\n\n\n\nimport events_emitter from '@ohos.emit", "AreaChange start to emit action state\")\n    ", "   priority: events_emitter.EventPriority.LO", "OW\n    }\n    events_emitter.on(stateChangeEv", "appearFlag start to emit action state\")\n    ", "AppearFlag start to emit action state\")\n    "], "files": ["ohosPrompt.ets", "configuration.ets", "ImageEffectsJsunit.test.ets", "video.ets", "ListItemJsunit.test.ets", "longPressGesture.ets", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "richText.ets", "column.ets", "checkboxGroup.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "TextStyleJsunit.test.ets", "geometryTransition.ets", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "marquee.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "border.ets", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "scrollBar.ets", "FillModeJsunit.test.ets", "CalendarJsunit.test.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "transition.ets", "TouchJsunit.test.ets", "transForm.ets", "LongPressGesture.test.ets", "path.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "focus.ets", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "background.ets", "SourceTypeJsunit.test.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "gauge.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "sideBar.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "customDialogController.ets", "text.ets", "TransitionJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "tapGesture.ets", "flexDirection.ets", "FlexJsunit.test.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "PanGesture.ets", "stepper.ets", "shape.ets", "ListJsunit.test.ets", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "ColorGradientJsunit.test.ets", "flex.ets", "MotionPathJsunit.test.ets", "gridContainer.ets", "gridPage.ets", "ShapeJsunit.test.ets", "enable.ets", "PieceCode.ets", "badge.ets", "textStyle.ets", "imageEffects.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "list.ets", "colorGradient.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "QrCode.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "checkbox.ets", "TextAreaJsunit.test.ets", "circle.ets", "listItem.ets", "CustomDialogControllerJsunit.test.ets", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "direction2.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "ohosMatrix4.ets", "CircleJsunit.test.ets", "divider.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "line.ets", "TransFormJsunit.test.ets", "priorityGesture.ets", "touchAble.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "progress.ets", "datePicker.ets", "pageTransition.ets", "TabsJsunit.test.ets", "ShapeClippingJsunit.test.ets", "GridSettingsJsunit.test.ets", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "areaChange.ets", "BindPopupJsunit.test.ets", "parallelGesture.ets", "select.ets", "timeStamp.ets", "slider.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "sharedTransition.ets", "refresh.ets", "motionPath.ets", "search.ets", "panel.ets", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "scrollTo", "api_method_all": "scrollTo(options: ScrollOptions): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 9, "since": 4, "api_used": "\u662f", "lines": ["      this.scroller.scrollTo({\n                x", " {\n                \"scrollToIndex\": 10,\n        ", "pect(eventData.data.scrollToIndex).assertEqual(1", "    });\n    },\n\n    scrollTouchUp() {\n        pr", "          message: 'scrollTop'\n        });\n    }", "    });\n    },\n\n    scrollTop() {\n        prompt", "      this.scroller.scrollToIndex(0)\n           ", "      this.scroller.scrollTo({ xOffset: 0, yOffs", "          message: 'scrollTouchUp'\n        });\n "], "files": ["scrollCode.ets", "index.js", "Scroll.ets", "ScrollCodeJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "app", "api_method_all": "$app: Application", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 158, "since": 4, "api_used": "\u662f", "lines": ["", "ean = true\n  @State appearFlag: boolean = f", "      console.info(\"apple start to emit act", "o(\"testAppear02 get appearEvent result is: ", ").fontSize(16).key('apple')\n          .text", " {\n            this.appearFlag = true\n     ", "      console.info('appearFlag current acti", "s));\n        if (!(\"appear\" == pages.name))", " console.info(\"push appear page result: \" +", " }) {\n        Text('apple').width('25%').he", "e'\n            this.appleVisible = Visibili", "o(\"testAppear01 get appearEvent result is: ", "      console.info(\"appearFlag start to emi", "fo(\"testAppear02 on appearEvent err : \" + J", "ify(sendEventByKey('appear', 10, \"\")));\n\n  ", "console.error(\"push appear page error: \" + ", "      console.info(\"appear after each calle", "  events_emitter.on(appearEvent, callBackAp", "nit() {\n  describe('appearTest', function (", "      }\n        var appearEvent = {\n       ", "       console.log('apple onDragStart onAct", "  enableJsunit();\n  appearJsunit();\n  zInde", "      console.info(\"appear beforeEach start", "rt default function appearJsunit() {\n  desc", " \" + JSON.stringify(appearEvent));\n        ", "   .visibility(this.appleVisible)\n         ", "  console.info(\"get appear state pages.name", "\n    console.info('[appear] page show calle", "     \"ACTION\": this.appearFlag,\n           ", "        uri: 'pages/appear',\n      }\n      ", "fo(\"testAppear01 on appearEvent err : \" + J", " state is: ' + this.appearFlag);\n          ", "ify(sendEventByKey('appear', 10, \"\")));\n   ", "pear)\n        .key('appear')\n        .onCli", "nit() {\n  describe('appInfoTest', function ", "tring = ''\n  @State appleVisible: Visibilit", "\n    console.info(\"[appear] page stateChang", ".info(\"testAppear02 appearEvent click resul", "  console.info(\"get appear state pages: \" +", "       this.text = 'apple'\n            this", "      console.info(\"appearFlag emit action ", "     console.info(\"[appear] page state chan"], "files": ["SelectJsunit.test.ets", "textPickerDialog.ets", "DragEventJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "ScrollBarJsunit.test.ets", "SourceTypeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "Navigation.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "FocusJsunit.test.ets", "SystemAppJsunit.test.ets", "PathJsunit.test.ets", "appear.ets", "SubscribaleAbstractJsunit.test.ets", "OhosPromptJsunit.test.ets", "navigation.ets", "TransFormJsunit.test.ets", "CustomDialog.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "FormComponentPage.ets", "SliderJsunit.test.ets", "SearchJsunit.test.ets", "BindMenuJsunit.test.ets", "VisibilityJsunit.test.ets", "AppearJsunit.test.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "TextClockJsunit.test.ets", "AppStorage.ets", "DatePickerJsunit.test.ets", "dragEvent2.ets", "PieceJsunit.test.ets", "index.js", "PolylineJsunit.test.ets", "AppStorageJsunit.test.ets", "TextInputJsunit.test.ets", "GridItem.ets", "dragEvent.ets", "TextAreaJsunit.test.ets", "CalendarJsunit.test.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "SubscribedAbstractPropertyJsunit.test.ets", "List.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "refs", "api_method_all": "$refs: ElementReferences", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 170, "since": 4, "api_used": "\u662f", "lines": ["    const el =this.$refs.canvas7;\n        co", "   const el = this.$refs.canvas2;\n        co", " function2 =  this.$refs.function2;\n        ", "    const el =this.$refs.canvas11;\n        c", "    const el =this.$refs.canvas9;\n        co", "    const el =this.$refs.canvas14;\n        c", "e() {\n        this.$refs.animator.resume();\n", "    const el =this.$refs.canvas8;\n        co", "   const el = this.$refs.canvas1;\n        co", " function1 =  this.$refs.function1;\n        ", "   const el = this.$refs.canvas4;\n        co", "111\")\n        this.$refs.animator.start();\n ", "    const el =this.$refs.canvas12;\n        c", "a() {\n        this.$refs.linechart.append({\n", "    const el =this.$refs.canvas10;\n        c", " function4 =  this.$refs.function4;\n        ", "    const el =this.$refs.canvas;\n        con", "   const el = this.$refs.canvas3;\n        co", " function3 =  this.$refs.function3;\n\n       ", "p() {\n        this.$refs.animator.stop();\n  ", "    const el =this.$refs.canvas15;\n        c", "    const el =this.$refs.canvas5;\n        co", " var prop2 =  this.$refs.prop2;\n        var ", " function5 =  this.$refs.function5;\n        ", "    const el =this.$refs.canvas13;\n        c", "    const el =this.$refs.canvas17;\n        c", "e() {\n        this.$refs.animator.pause();\n ", "    const el =this.$refs.canvas6;\n        co", " var prop2 =  this.$refs.prop2;\n    var name", "    const el =this.$refs.canvas16;\n        c"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ElementReferences", "api_method_all": "export interface ElementReferences {\n  [k: string]: AnimationElement &\n    CanvasElement &\n    object &\n    WebElement &\n    CameraElement &\n    ListElement &\n    SwiperElement &\n    DialogElement &\n    ImageAnimatorElement &\n    MarqueeElement &\n    MenuElement &\n    ChartElement &\n    InputElement &\n    ButtonElement &\n    TextAreaElement &\n    PickerElement &\n    VideoElement &\n    DivElement;\n}", "api_method_name": "ElementReferences", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Locate", "api_method_all": "export declare class Locate {\n  \n  language: string;\n\n  \n  countryOrRegion: string;\n\n  \n  dir: \"ltr\" | \"rtl\";\n\n  \n  unicodeSetting: object;\n}", "api_method_name": "Locate", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Locate", "api_method_name": "language", "api_method_all": "language: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 3, "since": 4, "api_used": "\u662f", "lines": ["age: \" + localeInfo.language);\n        console.i", "  expect(localeInfo.language).assertEqual('zh');", "guration.getLocale] language: \" + localeInfo.lan"], "files": ["basicabilityapi.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Locate", "api_method_name": "countryOrRegion", "api_method_all": "countryOrRegion: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 3, "since": 4, "api_used": "\u662f", "lines": ["ion: \" + localeInfo.countryOrRegion);\n        console.i", "guration.getLocale] countryOrRegion: \" + localeInfo.cou", "OUNTRY\": localeInfo.countryOrRegion,\n                \"D"], "files": ["configuration.ets", "basicabilityapi.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Locate", "api_method_name": "dir", "api_method_all": "dir: \"ltr\" | \"rtl\"", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 2126, "since": 6, "api_used": "\u662f", "lines": ["CallBack);\n\n    let directionChangeEvent = ", "ion: \" + obj.$attrs.direction);\n      expec", " if (eventData.data.direction != null) {\n  ", "uild() {\n    Flex({ direction: FlexDirectio", " {\n    Flex({\n      direction: FlexDirectio", "ttrs.linearGradient.direction).assertEqual(", "    Text('slider in direction set').fontSiz", "ata: {\n            \"direction\": Direction.L", "   Text('slider out direction set').fontSiz", "  events_emitter.on(directionChangeEvent, t", "ll: 'forwards',\n    direction: \"normal\",\n  ", "\n    angle: 90,\n    direction: GradientDire", "'90%')\n      Flex({ direction: FlexDirectio", "rations: 1,\n        direction: 'alternate',", "    .direction(this.direction)\n        .key", " ATTRS_DIRECTION = 'direction'\nconst ATTRS_", "lder() {\n    Flex({ direction: FlexDirectio", "umber = 3;\n  @State direction: Axis = Axis.", ".TopStart;\n  @State direction: Direction = ", "dth('90%')\n        .direction(this.directio", "on = eventData.data.direction;\n      } else", "  expect(obj.$attrs.direction).assertEqual(", "on = eventData.data.direction;\n        cons", "weekStyle)\n        .direction(this.directio", "    .direction(this.direction)\n        .bac", "gn')\n\n        Text('direction').fontSize(20", "ion) {\n        this.direction = eventData.d", " angle: 80,\n        direction: GradientDire", "gin(5)\n      Flex({ direction: FlexDirectio", "OutSet,\n            direction: Axis.Vertica", "ction value\" + this.direction);\n      }\n   ", ".InSet,\n            direction: this.decorat", " if (eventData.data.direction) {\n        th", "ull) {\n        this.direction = eventData.d", ".$attrs.constructor.direction).assertEqual(", ".log(\"Calendar page direction value\" + this", "xExample {\n  @State direction: FlexDirectio"], "files": ["listItemGroupProps.test.js", "systemRouterA.ets", "configuration.ets", "dividerProps.test.js", "tabContentProps.test.js", "textProps.test.js", "longPressGesture.ets", "canvas2.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "Qrcode.ets", "imageFit.ets", "Span.ets", "richText.ets", "Progress.ets", "PositionSettingJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "toolbarItemProps.test.js", "marquee.ets", "Rating.ets", "basicabilityapi.test.js", "Divider.ets", "badgeProps.test.js", "scrollBar.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "transition.ets", "Image.ets", "List.test.ets", "button.ets", "formProps.test.js", "touch.ets", "DirectionJsunit.test.ets", "Slider.ets", "stackProps.test.js", "Text.ets", "Counter.ets", "Stack.ets", "bindMenu.ets", "TextJsunit.test.ets", "refreshProps.test.js", "Blank.ets", "Sidebar.ets", "Prop.ets", "Scroll.ets", "ScrollerBarJsunit.test.ets", "text.ets", "canvasProps.test.js", "positionSetting.ets", "animatorOption.ets", "tapGesture.ets", "FlexJsunit.test.ets", "flexDirection.ets", "index.ets", "systemRouterB.ets", "PanGesture.ets", "labelProps.test.js", "image.ets", "Marquee.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "ratingProps.test.js", "flex.ets", "stepperProps.test.js", "marqueeProps.test.js", "PatternLock.ets", "imageAnimatorProps.test.js", "textPickerDialog.ets", "gridPage.ets", "tabsProps.test.js", "qrcodeProps.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "ohosRouterB.ets", "ColumnSplit.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "videoProps.test.js", "BackgroundJsunit.test.ets", "AppStorage.ets", "GridContainer.ets", "dragEvent2.ets", "flexWrap.ets", "optionProps.test.js", "direction.ets", "gradientDirection.ets", "calendar.ets", "dragEvent.ets", "pieceProps.test.js", "pickerProps.test.js", "selectProps.test.js", "Button.ets", "textareaProps.test.js", "gridColProps.test.js", "fontWeight.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "global.ets", "Flex.ets", "RowSplit.ets", "direction2.ets", "canvas.ets", "pickerViewProps.test.js", "bindContextMenu.ets", "divProps.test.js", "switchProps.test.js", "divider.ets", "TextInput.ets", "ellipse.ets", "radio.ets", "Constants.ets", "rating.ets", "GradientDirectionJsunit.test.ets", "DataPanel.ets", "FormComponentPage.ets", "chartProps.test.js", "sliderProps.test.js", "swiperProps.test.js", "WebPage.ets", "RowJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "ohosRouterA.ets", "Link.ets", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "slider.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "panelProps.test.js", "gestureMode.ets", "ScrollBar.ets", "Badge.ets", "colorGradient.ets", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Locate", "api_method_name": "unicodeSetting", "api_method_all": "unicodeSetting: object", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 0, "since": 5, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Configuration", "api_method_all": "export declare class Configuration {\n  \n  locate: Locate;\n\n  \n  fontScale: number;\n}", "api_method_name": "Configuration", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 8, "since": 6, "api_used": "\u662f", "lines": ["@ts-nocheck\n\nimport Configuration from '@system.confi", "        let callBackConfiguration = (backData) => {\n ", "  console.info('testConfigurationGetLocale END');\n   ", ";\n\n    \n    it('testConfigurationGetLocale', 0, funct", "   let localeInfo = Configuration.getLocale();\n      ", "ationJsunit from './ConfigurationJsunit.test.ets';\nim", "  console.info('testConfigurationGetLocale START');\n ", "ationEvent, callBackConfiguration);\n      } catch (er"], "files": ["configuration.ets", "List.test.ets", "basicabilityapi.test.js", "ConfigurationJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Configuration", "api_method_name": "locate", "api_method_all": "locate: Locate", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Configuration", "api_method_name": "fontScale", "api_method_all": "fontScale: number", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_all": "export interface Options<T extends ViewModel, Data = DefaultData<T>> {\n  \n  data?: Data;\n\n  \n  onInit?(): void;\n\n  \n  onReady?(): void;\n\n  \n  onShow?(): void;\n\n  \n  onHide?(): void;\n\n  \n  onDestroy?(): void;\n\n  \n  onBackPress?(): boolean;\n\n  \n  onActive?(): void;\n\n  \n  onInactive?(): void;\n\n  \n  onNewRequest?(): void;\n\n  \n  onStartContinuation?(): boolean;\n\n  \n  onSaveData?(value: object): void;\n\n  \n  onRestoreData?(value: object): void;\n\n  \n  onCompleteContinuation?(code: number): void;\n\n  \n  onConfigurationUpdated?(configuration: Configuration): void;\n\n  \n  onCreate?(): void;\n}", "api_method_name": "Options", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 6, "since": 0, "api_used": "\u662f", "lines": ["sole.info('testChartOptions START');\n        co", ".name      testChartOptionsNone\n     * @tc.desc", "*/\n    it('testChartOptionsNone', 0, async func", "sole.info('testChartOptionsNone START');\n      ", "*/\n    it('testChartOptions', 0, async function", ".name      testChartOptions\n     * @tc.desc    "], "files": ["chartProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onInit", "api_method_all": "onInit?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 6, "since": 4, "api_used": "\u662f", "lines": ["itle: \"\"\n    },\n    onInit() {\n        console", "pector()\n    },\n    onInit(){\n        this.lis", "sh:false\n    },\n    onInit() {\n        this.li", "est page log] index onInit')\n        this.titl", "list: []\n    },\n    onInit() {\n        this.li", "     }\n    }\n  },\n  onInit() {\n    this.defaul"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onReady", "api_method_all": "onReady?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 3, "since": 4, "api_used": "\u662f", "lines": ["ff00')\n            .onReady(() => {\n           ", "'#00ffff')\n        .onReady(() => {\n          t"], "files": ["canvas2.ets", "global.ets", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onShow", "api_method_all": "onShow?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 157, "since": 4, "api_used": "\u662f", "lines": ["},1000)\n    },\n\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "     ],\n    },\n\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "   }\n     },\n \n     onShow(){\n         this.ge", "null\n     },\n \n     onShow(){\n         this.ge", " : null\n    },\n\n    onShow(){\n        this.get", "e: null\n    },\n\n    onShow(){\n        this.get", " null,\n\n    },\n\n    onShow(){\n        this.get", "xecute()\n    },\n    onShow() {\n        console", "        .onGeolocationShow((e) => {\n          ", ": null\n\n    },\n\n    onShow() {\n        this.ge", "     })\n    },\n\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "alue\n    })\n  },\n\n  onShow(){\n    // \u901a\u7528\u5c5e\u6027\n    ", "e : null\n    },\n    onShow(){\n        this.get", ": null,\n    },\n\n    onShow(){\n        this.get", "20,y:650});\n  },\n\n  onShow(){\n    // \u901a\u7528\u5c5e\u6027\n    ", "est page log] index onShow')\n    },\n    onHide", "xport default {\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "ull,\n\n\n\n    },\n\n    onShow(){\n        this.get", ").show()\n    },\n    onShow(){\n        this.get", "ull,\n     },\n \n     onShow(){\n         this.ge", "list: []\n    },\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "port default {\n\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "       }\n    },\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", " : null,\n    },\n    onShow(){\n        this.get", "      ],\n    },\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "       ]\n    },\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "  top:0,\n    },\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", ": null\n\n    },\n\n    onShow(){\n        this.get", " value')\n    },\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n"], "files": ["optionProps.test.js", "WebPage.ets", "buttonProps.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onHide", "api_method_all": "onHide?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 6, "since": 4, "api_used": "\u662f", "lines": ["        .onGeolocationHide(() => {\n          c", "est page log] index onHide')\n    },\n}\n", "onShow')\n    },\n    onHide() {\n        console", "nShow');\n    },\n    onHide() {\n        console", "ebTest : onGeolocationHide: \");\n        })\n   "], "files": ["WebPage.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onDestroy", "api_method_all": "onDestroy?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 20, "since": 4, "api_used": "\u662f", "lines": ["reate');\n    },\n    onDestroy() {\n        console", "nfo('AceApplication onDestroy');\n    }\n};\n", "n onCreate')\n  },\n  onDestroy() {\n    console.inf", "e.info('Application onDestroy')\n  },\n}", "        })\n        .onDestroy(() => {\n          c", "       console.log('onDestroy  ...')\n        })\n "], "files": ["app.js", "XComponentPage.ets", "app.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onBackPress", "api_method_all": "onBackPress?(): boolean;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 4, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onActive", "api_method_all": "onActive?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 1, "since": 5, "api_used": "\u662f", "lines": ["    this.controller.onActive()\n          })\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onInactive", "api_method_all": "onInactive?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 1, "since": 5, "api_used": "\u662f", "lines": ["    this.controller.onInactive()\n          })\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onNewRequest", "api_method_all": "onNewRequest?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 5, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onStartContinuation", "api_method_all": "onStartContinuation?(): boolean;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 5, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onSaveData", "api_method_all": "onSaveData?(value: object): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 5, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onRestoreData", "api_method_all": "onRestoreData?(value: object): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 5, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onCompleteContinuation", "api_method_all": "onCompleteContinuation?(code: number): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 5, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onConfigurationUpdated", "api_method_all": "onConfigurationUpdated?(configuration: Configuration): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 6, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onCreate", "api_method_all": "onCreate?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 18, "since": 4, "api_used": "\u662f", "lines": ["e.info('Application onCreate')\n  },\n  onDestroy(", "nfo('AceApplication onCreate');\n    },\n    onDes", "xport default {\n    onCreate() {\n        console", "\nexport default {\n  onCreate() {\n    console.inf"], "files": ["app.js", "app.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "data", "api_method_all": "data?: Data", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2739, "since": 4, "api_used": "\u662f", "lines": [".isShow = eventData.data.isShow;\n      }\n   ", "is.text = eventData.data.text\n      }\n    }\n", "      if (eventData.data.gaugeValue != null)", "\n      if(eventData.data.alignItems != null)", "thValue = eventData.data.strokeWidthValue;\n ", "      if (eventData.data.alignSelf != null) ", "SON.parse(eventData.data.colorValues);\n     ", "s.width = eventData.data.width;\n      }\n    ", "      if (eventData.data.flexBasis != null) ", "      if (eventData.data.text != null) {\n   ", "= {\n                data: {\n                ", "      if (eventData.data.flexShrink != null)", "mOffset = eventData.data.offset;\n      } els", "      if (eventData.data.blurValue != null) ", "xShrink = eventData.data.flexShrink;\n      }", ".smSpan = eventData.data.span;\n        this.", "exBasis = eventData.data.flexBasis;\n      }\n", "ignSelf = eventData.data.alignSelf;\n      }\n", "      if (eventData.data.grayscaleValue != n", "geValue = eventData.data.gaugeValue;\n      }", "gnItems = eventData.data.alignItems;\n      }", "      if (eventData.data.height != null) {\n ", "imgData = imageData.data;\n    console.log(\"i", "ntData && eventData.data) {\n      if (eventD", "urValue = eventData.data.blurValue;\n      }\n", "      if (eventData.data.isShow != null) {\n ", "  switch (eventData.data.alignSelf) {\n      ", "      if (eventData.data.flexGrow != null) {", "  switch (eventData.data.sizeType) {\n       ", "      if (eventData.data.width != null) {\n  ", "enabled = eventData.data.enabled\n      }\n   ", ".height = eventData.data.height;\n      }\n   ", "      if (eventData.data.enabled != null) {\n", "leValue = eventData.data.startAngleValue;\n  ", "      if (eventData.data.colorValues != null", "      if (eventData.data.span) {\n        thi", " else if (eventData.data.gridOffset) {\n     ", "      if (eventData.data.strokeWidthValue !=", "ridSpan = eventData.data.gridSpan;\n      }\n ", "dOffset = eventData.data.gridOffset;\n      }", "      if (eventData.data.shadowValue != null", "      if (eventData.data.startAngleValue != ", "SON.parse(eventData.data.shadowValue);\n     ", "a = {\n              data: {\n                ", " else if (eventData.data.gridSpan) {\n       ", "lexGrow = eventData.data.flexGrow;\n      }\n ", "      if (eventData.data.endAngleValue != nu", "leValue = eventData.data.endAngleValue;\n    "], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "systemRouterA.ets", "configuration.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "video.ets", "ListItemJsunit.test.ets", "Navigator.ets", "tabContentProps.test.js", "longPressGesture.ets", "DragEventJsunit.test.ets", "textProps.test.js", "canvas2.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "Row.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "richText.ets", "column.ets", "checkboxGroup.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "geometryTransition.ets", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "toolbarItemProps.test.js", "marquee.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "Swiper.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "border.ets", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "badgeProps.test.js", "scrollBar.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "transition.ets", "systemPrompt.ets", "TouchJsunit.test.ets", "transForm.ets", "LongPressGesture.test.ets", "path.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "formProps.test.js", "focus.ets", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "background.ets", "SourceTypeJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "gauge.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "sideBar.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "refreshProps.test.js", "customDialogController.ets", "text.ets", "TransitionJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "canvasProps.test.js", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "tapGesture.ets", "flexDirection.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "PanGesture.ets", "stepper.ets", "shape.ets", "labelProps.test.js", "ListJsunit.test.ets", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "ratingProps.test.js", "flex.ets", "MotionPathJsunit.test.ets", "stepperProps.test.js", "marqueeProps.test.js", "gridContainer.ets", "imageAnimatorProps.test.js", "gridPage.ets", "ShapeJsunit.test.ets", "enable.ets", "PieceCode.ets", "tabsProps.test.js", "badge.ets", "qrcodeProps.test.js", "textStyle.ets", "imageEffects.ets", "popupProps.test.js", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "videoProps.test.js", "list.ets", "colorGradient.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "QrCode.ets", "DatePickerJsunit.test.ets", "BasicJsunit.test.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "DataPanelJsunit.test.ets", "checkbox.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "textareaProps.test.js", "gridColProps.test.js", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "global.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "direction2.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "canvas.ets", "AboutToDisappearJsunit.test.ets", "ohosMatrix4.ets", "CircleJsunit.test.ets", "divProps.test.js", "pickerViewProps.test.js", "switchProps.test.js", "divider.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "line.ets", "TransFormJsunit.test.ets", "priorityGesture.ets", "DataPanel.ets", "Grid.ets", "chartProps.test.js", "touchAble.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "progress.ets", "datePicker.ets", "pageTransition.ets", "WebPage.ets", "sliderProps.test.js", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "swiperProps.test.js", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "areaChange.ets", "ohosRouterA.ets", "BindPopupJsunit.test.ets", "GridItem.ets", "parallelGesture.ets", "imageProps.test.js", "select.ets", "timeStamp.ets", "listProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "progressProps.test.js", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "panelProps.test.js", "sharedTransition.ets", "refresh.ets", "motionPath.ets", "search.ets", "panel.ets", "menuProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_all": "export interface ViewModel {\r\n  \r\n  $t(path: string, param?: object | Array<any>): string;\r\n\r\n  \r\n  $refs: ElementReferences;\r\n}", "api_method_name": "ViewModel", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "t", "api_method_all": "$t(path: string, param?: object | Array<any>): string;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 258869, "since": 0, "api_used": "\u662f", "lines": ["", "iew\n@Component\nstruct AppearExample {\n  @", "lean = false\n  private changeAppear: stri", "yText: string = 'Text for onAppear'\n\n  on", "o('Application onDestroy')\n  },\n}", "tter from '@ohos.emitter'\nimport prompt f", "      priority: events_emitter.EventPrior", ": string = 'Hide Text'\n  private myText: ", "Event = {\n      eventId: 58,\n      priori", " from '@system.prompt'\n\n@Entry\n@Preview\n@", " events_emitter.EventPriority.LOW\n    }\n ", "AppearExample {\n  @State isShow: boolean ", "\n\nimport events_emitter from '@ohos.emitt", "olean = false\n  @State disAppearFlag: boo", "_emitter.EventPriority.LOW\n    }\n    even", "priority: events_emitter.EventPriority.LO", "reate')\n  },\n  onDestroy() {\n    console.", " 'Hide Text'\n  private myText: string = '", "('Application onCreate')\n  },\n  onDestroy", "Preview\n@Component\nstruct AppearExample {", "alled');\n    var stateChangeEvent = {\n   ", "e isShow: boolean = true\n  @State appearF", "onsole.info('Application onDestroy')\n  },", "mitter'\nimport prompt from '@system.promp", "/ @ts-nocheck\n\nexport default {\n  onCreat", "ext'\n  private myText: string = 'Text for", "ocheck\n\n\nimport events_emitter from '@oho", " called');\n    var stateChangeEvent = {\n ", "t default {\n  onCreate() {\n    console.in", "pearExample {\n  @State isShow: boolean = ", "boolean = false\n  @State disAppearFlag: b", "\n\n\nimport events_emitter from '@ohos.emit", "onsole.info('Application onCreate')\n  },\n", "riority: events_emitter.EventPriority.LOW", " var stateChangeEvent = {\n      eventId: ", "ter from '@ohos.emitter'\nimport prompt fr", "rt prompt from '@system.prompt'\n\n@Entry\n@", "y\n@Preview\n@Component\nstruct AppearExampl", "vate changeAppear: string = 'Hide Text'\n ", "check\n\nexport default {\n  onCreate() {\n  ", " @ts-nocheck\n\n\nimport events_emitter from", " boolean = true\n  @State appearFlag: bool", "oolean = true\n  @State appearFlag: boolea", "    }\n    events_emitter.on(stateChangeEv", "y.LOW\n    }\n    events_emitter.on(stateCh", "@system.prompt'\n\n@Entry\n@Preview\n@Compone", "@ohos.emitter'\nimport prompt from '@syste", "Id: 58,\n      priority: events_emitter.Ev", "\n  private myText: string = 'Text for onA"], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageEffectsJsunit.test.ets", "ColumnSplitJsunit.test.ets", "Navigation.ets", "imageFit.ets", "ZIndexJsunit.test.ets", "checkboxGroup.ets", "sourceType.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "TapGesture.test.ets", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "border.ets", "ResponseRegion.ets", "FillModeJsunit.test.ets", "textArea.ets", "transition.ets", "gridSettings.ets", "Image.ets", "LongPressGesture.test.ets", "path.ets", "polyline.ets", "VideoJsunit.test.ets", "touch.ets", "SpanJsunit.test.ets", "PanelJsunit.test.ets", "sideBar.ets", "Prop.ets", "customDialogController.ets", "EnmusImageJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "VisibilityJsunit.test.ets", "TextArea.ets", "ResponseRegionJsunit.test.ets", "flexDirection.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "ListJsunit.test.ets", "gridContainerProps.test.js", "Select.ets", "flex.ets", "MotionPathJsunit.test.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enable.ets", "tabsProps.test.js", "lineProps.test.js", "AlphabetIndexer.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "videoProps.test.js", "enumsItemAlign.ets", "style.js", "DatePickerJsunit.test.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "StackJsunit.test.ets", "circle.ets", "animateMotionProps.test.js", "textareaProps.test.js", "span.ets", "NavigatorCode.ets", "patternLock.ets", "global.ets", "AnimationStatusJsunit.test.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "divProps.test.js", "divider.ets", "animationStatus.ets", "zIndex.ets", "enumsFlexAlign.ets", "ellipseProps.test.js", "FormComponentPage.ets", "chartProps.test.js", "sliderProps.test.js", "polygonProps.test.js", "inputProps.test.js", "SwiperJsunit.test.ets", "GridItem.ets", "imageProps.test.js", "select.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "gestureMode.ets", "refresh.ets", "ScrollBar.ets", "overlay.ets", "pathProps.test.js", "configuration.ets", "tabContentProps.test.js", "longPressGesture.ets", "Qrcode.ets", "Row.ets", "PathJsunit.test.ets", "Progress.ets", "column.ets", "Panel.ets", "CustomDialog.ets", "OhosRouterJsnuit.test.ets", "TextClockJsunit.test.ets", "enumsLineCapStyle.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "GeometryTransitionJsunit.test.ets", "ScrollCodeJsunit.test.ets", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "textInput.ets", "TouchJsunit.test.ets", "transForm.ets", "Column.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "SelectJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "ListItem.ets", "background.ets", "Slider.ets", "StepperJsunit.test.ets", "ButtonJsunit.test.ets", "enumsVerticalAlign.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "animatorOption.ets", "index.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "richtextProps.test.js", "PanGesture.ets", "shape.ets", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "imageAnimatorProps.test.js", "PieceCode.ets", "qrcodeProps.test.js", "GlobalJsunit.test.ets", "SystemRouterJsunit.test.ets", "stepperItemProps.test.js", "textClock.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "GridContainer.ets", "checkbox.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "grid.ets", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "bindPopup.ets", "buttonProps.test.js", "animateProps.test.js", "animate.ets", "List.test.js", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "RowSplit.ets", "pickerViewProps.test.js", "TextInput.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "curves.ets", "priorityGesture.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "CanvasJsunit.test.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "tabBarProps.test.js", "ColumnJsunit.test.ets", "parallelGesture.ets", "slider.ets", "panelProps.test.js", "motionPath.ets", "Badge.ets", "ColumnSplit.ets", "search.ets", "rectProps.test.js", "blank.ets", "pageTransition2.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "video.ets", "textProps.test.js", "DragEventJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "TextPickerJsunit.test.ets", "Span.ets", "CheckboxGroupJsunit.test.ets", "AppearJsunit.test.ets", "CommonJsunit.test.ets", "marquee.ets", "PieceJsunit.test.ets", "basicabilityapi.test.js", "badgeProps.test.js", "CalendarJsunit.test.ets", "systemPrompt.ets", "LinkJsunit.test.ets", "CurvesJsunit.test.ets", "DirectionJsunit.test.ets", "RadioJsunit.test.ets", "Stack.ets", "bindMenu.ets", "Sidebar.ets", "text.ets", "tapGesture.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "stepper.ets", "svgProps.test.js", "image.ets", "textPathProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "textPickerDialog.ets", "badge.ets", "imageEffects.ets", "popupProps.test.js", "tabs.ets", "dragEvent2.ets", "app.ets", "GaugeJsunit.test.ets", "BasicJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "Video.ets", "listItem.ets", "Button.ets", "ScrollJsunit.test.ets", "Polygon.ets", "panDirection.ets", "ContentStorage.test.ets", "direction2.ets", "BadgeJsunit.test.ets", "CircleJsunit.test.ets", "Rect.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "Constants.ets", "line.ets", "Grid.ets", "GestureModeJsunit.test.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "index.js", "tspanProps.test.js", "timeStamp.ets", "Toggle.ets", "Direction2Jsunit.test.ets", "panel.ets", "colorGradient.ets", "systemRouterA.ets", "CounterJsunit.test.ets", "dividerProps.test.js", "ListItemJsunit.test.ets", "Navigator.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "polylineProps.test.js", "richText.ets", "PositionSettingJsunit.test.ets", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "textTimer.ets", "Rating.ets", "Swiper.ets", "LineJsunit.test.ets", "DividerJsunit.test.ets", "Divider.ets", "RichTextJsunit.test.ets", "scrollBar.ets", "NavigatorCodeJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "focus.ets", "circleProps.test.js", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "stackProps.test.js", "Text.ets", "EdgeEffectJsunit.test.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "SystemAppJsunit.test.ets", "swiper.ets", "refreshProps.test.js", "Blank.ets", "ScrollerBarJsunit.test.ets", "TransitionJsunit.test.ets", "AreaChangeJsunit.test.ets", "PropJsunit.test.ets", "GridItem.test.ets", "labelProps.test.js", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "sharedTransition2.ets", "gridContainer.ets", "Tab.ets", "Stepper.ets", "ShapeJsunit.test.ets", "enumsImage.ets", "polygon.ets", "textStyle.ets", "SubscribaleAbstractJsunit.test.ets", "app.js", "listItemProps.test.js", "gridRowProps.test.js", "list.ets", "AppStorage.ets", "QrCode.ets", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "fontWeight.ets", "imageAnimator.ets", "BackgroundAndSizeSettingJsunit.test.ets", "Flex.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "switchProps.test.js", "radio.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "Path.ets", "fillMode.ets", "TransFormJsunit.test.ets", "DataPanel.ets", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "swiperProps.test.js", "TabsJsunit.test.ets", "LoadingProgressJsunit.test.ets", "GridSettingsJsunit.test.ets", "toggleProps.test.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "listProps.test.js", "progressProps.test.js", "Calendar.ets", "sharedTransition.ets", "enumsHorizontalAlign.ets", "BindPopupJsunit.test.ets", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ViewModel", "api_method_name": "refs", "api_method_all": "$refs: ElementReferences", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 170, "since": 0, "api_used": "\u662f", "lines": ["    const el =this.$refs.canvas7;\n        co", "   const el = this.$refs.canvas2;\n        co", " function2 =  this.$refs.function2;\n        ", "    const el =this.$refs.canvas11;\n        c", "    const el =this.$refs.canvas9;\n        co", "    const el =this.$refs.canvas14;\n        c", "e() {\n        this.$refs.animator.resume();\n", "    const el =this.$refs.canvas8;\n        co", "   const el = this.$refs.canvas1;\n        co", " function1 =  this.$refs.function1;\n        ", "   const el = this.$refs.canvas4;\n        co", "111\")\n        this.$refs.animator.start();\n ", "    const el =this.$refs.canvas12;\n        c", "a() {\n        this.$refs.linechart.append({\n", "    const el =this.$refs.canvas10;\n        c", " function4 =  this.$refs.function4;\n        ", "    const el =this.$refs.canvas;\n        con", "   const el = this.$refs.canvas3;\n        co", " function3 =  this.$refs.function3;\n\n       ", "p() {\n        this.$refs.animator.stop();\n  ", "    const el =this.$refs.canvas15;\n        c", "    const el =this.$refs.canvas5;\n        co", " var prop2 =  this.$refs.prop2;\n        var ", " function5 =  this.$refs.function5;\n        ", "    const el =this.$refs.canvas13;\n        c", "    const el =this.$refs.canvas17;\n        c", "e() {\n        this.$refs.animator.pause();\n ", "    const el =this.$refs.canvas6;\n        co", " var prop2 =  this.$refs.prop2;\n    var name", "    const el =this.$refs.canvas16;\n        c"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ListScrollToOptions", "api_method_all": "export interface ListScrollToOptions {\r\n  \r\n  index: number;\r\n}", "api_method_name": "ListScrollToOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListScrollToOptions", "api_method_name": "index", "api_method_all": "index: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1502, "since": 0, "api_used": "\u662f", "lines": ["       console.info(index.toString())\n       ", "Source([])\n  @State index: number = 1\n  @Stat", "    this.arr.splice(index, 1)\n          conso", " if (eventData.data.index != null) {\n        ", "    let callback = (indexEvent) => {\n        ", ";\n      }\n      let indexEvent = {\n        ev", "t));\n        expect(indexEvent.data.value).as", "    Stepper({\n      index: this.currentIndex\n", "d} from \"deccjsunit/index.ets\";\nimport testsu", ")\n      .index(this.index)\n      .autoPlay(th", "this.currentIndex = index\n    })\n    .align(A", "  events_emitter.on(indexEvent, callback);\n  ", "ngth\n  }\n\n  getData(index: number): any {\n   ", "t} from \"deccjsunit/index.ets\"\nimport router ", "events_emitter.emit(indexEvent, eventData);\n ", "chedCount(2)\n      .index(this.index)\n      .", " \" + JSON.stringify(indexEvent));\n        exp", "ull) {\n        this.index = parseInt(eventDat", "eInt(eventData.data.index);\n      }\n      if ", "(prevIndex: number, index: number) => {\n     ", "nsole.info(this.arr[index] + 'Delete')\n      ", "t} from \"deccjsunit/index.ets\";\nimport router", "')\n      .onChange((index: number) => {\n     ", "     .onItemDelete((index: number) => {\n     ", "   return this.list[index]\n  }\n\n  registerDat", "      }\n        let indexEvent = {\n          "], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "Navigator.ets", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "Row.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "CommonJsunit.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "Swiper.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "systemPrompt.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "EnmusFlexAlignJsunit.test.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "SystemAppJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "sideBar.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "edgeEffect.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "stepper.ets", "svgProps.test.js", "labelProps.test.js", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "Select.ets", "ratingProps.test.js", "MotionPathJsunit.test.ets", "stepperProps.test.js", "marqueeProps.test.js", "Tab.ets", "imageAnimatorProps.test.js", "Stepper.ets", "textPickerDialog.ets", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "popupProps.test.js", "AlphabetIndexer.ets", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "tabs.ets", "BindMenuJsunit.test.ets", "videoProps.test.js", "list.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "DatePickerJsunit.test.ets", "BasicJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "calendar.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "animateMotionProps.test.js", "listItem.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "buttonProps.test.js", "animateProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "ContentStorage.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "AnimationStatusJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "pickerViewProps.test.js", "CircleJsunit.test.ets", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "Constants.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "Grid.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "WebPage.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "polygonProps.test.js", "swiperProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "GridItem.ets", "tspanProps.test.js", "imageProps.test.js", "select.ets", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ListElement", "api_method_all": "export interface ListElement {\r\n  \r\n  scrollTo(position: ListScrollToOptions): void;\r\n}", "api_method_name": "ListElement", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ListElement", "api_method_name": "scrollTo", "api_method_all": "scrollTo(position: ListScrollToOptions): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 9, "since": 0, "api_used": "\u662f", "lines": ["      this.scroller.scrollTo({\n                x", " {\n                \"scrollToIndex\": 10,\n        ", "pect(eventData.data.scrollToIndex).assertEqual(1", "    });\n    },\n\n    scrollTouchUp() {\n        pr", "          message: 'scrollTop'\n        });\n    }", "    });\n    },\n\n    scrollTop() {\n        prompt", "      this.scroller.scrollToIndex(0)\n           ", "      this.scroller.scrollTo({ xOffset: 0, yOffs", "          message: 'scrollTouchUp'\n        });\n "], "files": ["scrollCode.ets", "index.js", "Scroll.ets", "ScrollCodeJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorElement", "api_method_all": "export interface ImageAnimatorElement {\r\n  \r\n  start(): void;\r\n  \r\n  pause(): void;\r\n  \r\n  stop(): void;\r\n  \r\n  resume(): void;\r\n  \r\n  getState(): \"Playing\" | \"Paused\" | \"Stopped\";\r\n}", "api_method_name": "ImageAnimatorElement", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorElement", "api_method_name": "start", "api_method_all": "start(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 804, "since": 0, "api_used": "\u662f", "lines": ["geValue}`)\n        .startAngle(`${this.startA", "in = eventData.data.startMargin;\n      }\n    ", " = \"Running Marquee starts rolling\"\n  @State ", "fo(\"[testEllipse02] start to publish emit\");\n", "fo(\"[testEllipse06] start to publish emit\");\n", "    console.info(\"Onstart emit action state e", "(\"enable beforeEach start\");\n      let option", "    console.info('Onstart current action stat", "ue = eventData.data.startAngleValue;\n      }\n", "nsole.info(\"button1 start to emit action stat", "is.color,\n          startMargin: this.startMa", "  startMargin: this.startMargin,\n          en", "(\"column beforeEach start\");\n      let option", "nfo(\"[testEnable03] start to publish emit\");\n", "   })\n      Button('start')\n        .key('but", "fo(\"[testEllipse03] start to publish emit\");\n", "ull) {\n        this.startMargin = eventData.d", "eExample {\n  @State start: boolean = false\n  ", "{\n    console.info(\"start run testcase!!!!\")\n", "sole.info(\"Onbounce start to emit action stat", "ull) {\n        this.startAngleValue = eventDa", "\"ellipse beforeEach start\");\n      let option", "nsole.info(\"onClick start to emit action stat", " if (eventData.data.startMargin != null) {\n  ", "fo(\"[testEllipse04] start to publish emit\");\n", "(\"appear beforeEach start\");\n      let option", "info(\"disAppearFlag start to emit action stat", "sole.info(\"onChange start to emit action stat", "      console.info(\"start to emit action stat", " if (eventData.data.startAngleValue != null) ", "ole.info(\"touchFlag start to emit action stat", ".startAngle(`${this.startAngleValue}`)\n      ", "      \"start\": this.start,\n              }\n  ", "  Marquee({\n        start: this.start,\n      ", "le.info(\"appearFlag start to emit action stat", "=> {\n          this.start = true\n          tr", "nsole.info(\"Onstart start to emit action stat", " {\n                \"start\": this.start,\n     ", "fo(\"[testEllipse07] start to publish emit\");\n", "    console.info(\"Onstart start to emit actio", "        start: this.start,\n        step: this", "fo(\"[testEllipse05] start to publish emit\");\n", "sole.info(\"Onfinish start to emit action stat", ".info(\"onAreaChange start to emit action stat", "nfo(\"[testColumn02] start to publish emit\");\n", "ring = 20;\n  @State startAngleValue: string =", " 0xFFFFFF;\n  @State startMargin: number = 20.", "nfo(\"[testEnable02] start to publish emit\");\n", "e.info(\"[TouchAble] start to emit action stat", "nsole.info(\"button2 start to emit action stat"], "files": ["ImageJsunit.test.ets", "configuration.ets", "ImageEffectsJsunit.test.ets", "video.ets", "ListItemJsunit.test.ets", "longPressGesture.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "TextStyleJsunit.test.ets", "geometryTransition.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "marquee.ets", "TextClockJsunit.test.ets", "textTimer.ets", "mediaquery.test.js", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "ResponseRegion.ets", "basicabilityapi.test.js", "RichTextJsunit.test.ets", "CalendarJsunit.test.ets", "transition.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "CurvesJsunit.test.ets", "button.ets", "FlexWrapJsunit.test.ets", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "SourceTypeJsunit.test.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "gauge.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "Scroll.ets", "TransitionJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "edgeEffect.ets", "systemRouterB.ets", "ProgressJsunit.test.ets", "PanGesture.ets", "Canvas2Jsunit.test.ets", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "Utils.ets", "ShapeJsunit.test.ets", "PieceCode.ets", "GlobalJsunit.test.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "textClock.ets", "tabs.ets", "BindMenuJsunit.test.ets", "videoProps.test.js", "list.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "DatePickerJsunit.test.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "Video.ets", "TextAreaJsunit.test.ets", "textareaProps.test.js", "imageAnimator.ets", "bindPopup.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "BorderJsunit.test.ets", "direction2.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "canvas.ets", "AboutToDisappearJsunit.test.ets", "CircleJsunit.test.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "animationStatus.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "line.ets", "TransFormJsunit.test.ets", "touchAble.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "datePicker.ets", "pageTransition.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "TabsJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "areaChange.ets", "BindPopupJsunit.test.ets", "timeStamp.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "sharedTransition.ets", "gestureMode.ets", "motionPath.ets", "colorGradient.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorElement", "api_method_name": "pause", "api_method_all": "pause(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 56, "since": 0, "api_used": "\u662f", "lines": ["s.myVideoController.pause();\n        });\n    ", "s.myTimerController.pause();\n        });\n    ", "     this.animation.pause();\n          });\n  ", "          animation.pause()\n        }, 1000)\n", "     });\n    },\n    pause(){\n\n        prompt.", "{\n          Button('pause').borderRadius(8).b", "})\n\n        Button('pause').key('button2').wi", "> {\n      animation.pause()\n    }, 1000)\n\n   ", " })\n        Button('pause').key('button1').wi", "this.$refs.animator.pause();\n    },\n    handl", "});\n        Button(\"pause\").onClick(() => {\n "], "files": ["Video.ets", "video.ets", "textTimer.ets", "animationStatus.ets", "imageAnimator.ets", "animatorOption.ets", "index.js", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorElement", "api_method_name": "stop", "api_method_all": "stop(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 20, "since": 0, "api_used": "\u662f", "lines": ["          message: 'stop'\n        });\n    },", "})\n\n        Button('stop').key('button3').wi", "nt('customMarquee').stop();\n        prompt.s", "});\n        Button(\"stop\").onClick(() => {\n ", "    this.controller.stop()\n          this.on", ";\n        function9.stop();\n        prompt.s", "      console.info('stopPropagation')\n      ", "s.myVideoController.stop();\n        });\n    ", "s.myVideoController.stop();\n      }\n    }\n  ", "    this.controller.stop()\n          })\n    ", "this.$refs.animator.stop();\n    },\n//\n    fo", "e: 'function9 video stop.'\n        })\n    },", " })\n        Button('stop').key('button2').wi", "   })\n      Button(\"stop TextClock\")\n       ", "nY + ')')\n          stopPropagation: () => {", "     });\n    },\n    stop(){\n        prompt.s", "     });\n    },\n    stop() {\n        prompt.", "        }\n          stopPropagation: () => {"], "files": ["textClock.ets", "touch.ets", "WebPage.ets", "video.ets", "mouseEvent.ets", "animationStatus.ets", "imageAnimator.ets", "index.js", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorElement", "api_method_name": "resume", "api_method_all": "resume(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["     });\n    },\n    resume(){\n        prompt.s", "this.$refs.animator.resume();\n    },\n    handl"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ImageAnimatorElement", "api_method_name": "getState", "api_method_all": "getState(): \"Playing\" | \"Paused\" | \"Stopped\";", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 296, "since": 0, "api_used": "\u662f", "lines": [" let pages = router.getState();\n        console."], "files": ["ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "CounterJsunit.test.ets", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "ColumnSplitJsunit.test.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "TextStyleJsunit.test.ets", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "CalendarJsunit.test.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "ScrollerBarJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "Canvas2Jsunit.test.ets", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "ColorGradientJsunit.test.ets", "MotionPathJsunit.test.ets", "ShapeJsunit.test.ets", "GlobalJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "BackgroundAndSizeSettingJsunit.test.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "CircleJsunit.test.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "TransFormJsunit.test.ets", "GestureModeJsunit.test.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "GridSettingsJsunit.test.ets", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "BindPopupJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ElementReferences", "api_method_all": "export interface ElementReferences {\r\n  [k: string]: object & ListElement & ImageAnimatorElement;\r\n}", "api_method_name": "ElementReferences", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ElementReferences", "api_method_name": "k", "api_method_all": "[k: string]: object & ListElement & ImageAnimatorElement", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 11097, "since": 0, "api_used": "\u662f", "lines": ["", "50%').height(30).backgroundColor(0x00FFFF", "(20)\n        .onClick(() => {\n          t", "console.info(\"onClick start to emit actio", "is.stateChangCallBack);\n\n  }\n\n  private s", "te stateChangCallBack = (eventData) => {\n", "    }).margin(3).backgroundColor(0x2788D9", "is.stateChangCallBack);\n  }\n\n  private st", "\n            var backData = {\n           ", "text1')\n        .backgroundColor(Color.Gr", "t(`${this.height}`).key('ellipse')\n    }.", "is.stateChangCallBack);\n\n    var stateCha", "50%').height(30).backgroundColor(0xAFEEEE", ".emit(backEvent, backData)\n            } ", "\n            var backEvent = {\n          ", "(\"[stateChangCallBack] stateChangCallBack", "             var backEvent = {\n          ", "console.info(\"onClick emit action state e", "ge stateChangCallBack\");\n    if (eventDat", "ngeAppear)\n        .key('appear')\n       ", "ar')\n        .onClick(() => {\n          t", "             var backData = {\n           ", ".emit(backEvent, backData)\n          } ca", "this.size)\n        .key('text2')\n        ", "nts_emitter.emit(backEvent, backData)\n   ", "his.value)\n        .key('text1')\n        ", "FFF)\n      }\n      .key(\"alignItemsColumn"], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageEffectsJsunit.test.ets", "ColumnSplitJsunit.test.ets", "Navigation.ets", "imageFit.ets", "ZIndexJsunit.test.ets", "checkboxGroup.ets", "sourceType.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "geometryTransition.ets", "TapGesture.test.ets", "PolylineJsunit.test.ets", "OverlayJsunit.test.ets", "border.ets", "ResponseRegion.ets", "FillModeJsunit.test.ets", "textArea.ets", "transition.ets", "gridSettings.ets", "Image.ets", "LongPressGesture.test.ets", "path.ets", "polyline.ets", "VideoJsunit.test.ets", "touch.ets", "SpanJsunit.test.ets", "PanelJsunit.test.ets", "sideBar.ets", "Prop.ets", "customDialogController.ets", "EnmusImageJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "VisibilityJsunit.test.ets", "TextArea.ets", "ResponseRegionJsunit.test.ets", "flexDirection.ets", "FlexJsunit.test.ets", "AppStorageJsunit.test.ets", "ListJsunit.test.ets", "gridContainerProps.test.js", "Select.ets", "flex.ets", "MotionPathJsunit.test.ets", "PatternLock.ets", "Polyline.ets", "gridPage.ets", "enable.ets", "tabsProps.test.js", "lineProps.test.js", "AlphabetIndexer.ets", "ToggleJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "videoProps.test.js", "enumsItemAlign.ets", "DatePickerJsunit.test.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "StackJsunit.test.ets", "circle.ets", "animateMotionProps.test.js", "textareaProps.test.js", "span.ets", "NavigatorCode.ets", "patternLock.ets", "global.ets", "AnimationStatusJsunit.test.ets", "mouseEvent.ets", "canvas.ets", "ohosMatrix4.ets", "bindContextMenu.ets", "divProps.test.js", "divider.ets", "animationStatus.ets", "zIndex.ets", "enumsFlexAlign.ets", "ellipseProps.test.js", "FormComponentPage.ets", "chartProps.test.js", "sliderProps.test.js", "polygonProps.test.js", "inputProps.test.js", "SwiperJsunit.test.ets", "GridItem.ets", "imageProps.test.js", "select.ets", "NavigationJsunit.test.ets", "aboutToDisappear.ets", "RatingJsunit.test.ets", "gestureMode.ets", "refresh.ets", "ScrollBar.ets", "overlay.ets", "pathProps.test.js", "configuration.ets", "tabContentProps.test.js", "longPressGesture.ets", "Qrcode.ets", "Row.ets", "PathJsunit.test.ets", "Progress.ets", "column.ets", "Panel.ets", "CustomDialog.ets", "OhosRouterJsnuit.test.ets", "TextClockJsunit.test.ets", "enumsLineCapStyle.ets", "PlacementJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "ScrollCodeJsunit.test.ets", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "textInput.ets", "TouchJsunit.test.ets", "transForm.ets", "Column.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "SelectJsunit.test.ets", "EnmusFlexAlignJsunit.test.ets", "ListItem.ets", "background.ets", "Slider.ets", "StepperJsunit.test.ets", "ButtonJsunit.test.ets", "enumsVerticalAlign.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "Scroll.ets", "EnmusItemAlignJsunit.test.ets", "GridContainerJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "positionSetting.ets", "animatorOption.ets", "index.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "richtextProps.test.js", "PanGesture.ets", "shape.ets", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "imageAnimatorProps.test.js", "PieceCode.ets", "qrcodeProps.test.js", "GlobalJsunit.test.ets", "SystemRouterJsunit.test.ets", "stepperItemProps.test.js", "textClock.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "List.ets", "GridContainer.ets", "checkbox.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "grid.ets", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "bindPopup.ets", "buttonProps.test.js", "animateProps.test.js", "animate.ets", "List.test.js", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "RowSplit.ets", "pickerViewProps.test.js", "TextInput.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "curves.ets", "priorityGesture.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "CanvasJsunit.test.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "tabBarProps.test.js", "ColumnJsunit.test.ets", "parallelGesture.ets", "slider.ets", "panelProps.test.js", "motionPath.ets", "Badge.ets", "ColumnSplit.ets", "search.ets", "rectProps.test.js", "blank.ets", "pageTransition2.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "video.ets", "textProps.test.js", "DragEventJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "TextPickerJsunit.test.ets", "Span.ets", "CheckboxGroupJsunit.test.ets", "AppearJsunit.test.ets", "CommonJsunit.test.ets", "marquee.ets", "PieceJsunit.test.ets", "basicabilityapi.test.js", "badgeProps.test.js", "CalendarJsunit.test.ets", "systemPrompt.ets", "LinkJsunit.test.ets", "CurvesJsunit.test.ets", "DirectionJsunit.test.ets", "RadioJsunit.test.ets", "Stack.ets", "bindMenu.ets", "Sidebar.ets", "text.ets", "tapGesture.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "stepper.ets", "svgProps.test.js", "image.ets", "textPathProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "Shape.ets", "Utils.ets", "marqueeProps.test.js", "textPickerDialog.ets", "badge.ets", "imageEffects.ets", "popupProps.test.js", "tabs.ets", "dragEvent2.ets", "app.ets", "GaugeJsunit.test.ets", "BasicJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "Video.ets", "listItem.ets", "Button.ets", "ScrollJsunit.test.ets", "Polygon.ets", "panDirection.ets", "ContentStorage.test.ets", "direction2.ets", "BadgeJsunit.test.ets", "CircleJsunit.test.ets", "Rect.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "Constants.ets", "line.ets", "Grid.ets", "GestureModeJsunit.test.ets", "progress.ets", "datePicker.ets", "AlertDialog.ets", "WebPage.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "index.js", "tspanProps.test.js", "timeStamp.ets", "Toggle.ets", "Direction2Jsunit.test.ets", "panel.ets", "colorGradient.ets", "systemRouterA.ets", "CounterJsunit.test.ets", "dividerProps.test.js", "ListItemJsunit.test.ets", "Navigator.ets", "canvas2.ets", "ParallelGestureJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "polylineProps.test.js", "richText.ets", "PositionSettingJsunit.test.ets", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "textTimer.ets", "Rating.ets", "Swiper.ets", "LineJsunit.test.ets", "DividerJsunit.test.ets", "Divider.ets", "RichTextJsunit.test.ets", "scrollBar.ets", "NavigatorCodeJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "focus.ets", "circleProps.test.js", "XComponentPage.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "stackProps.test.js", "Text.ets", "EdgeEffectJsunit.test.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "SystemAppJsunit.test.ets", "swiper.ets", "refreshProps.test.js", "Blank.ets", "ScrollerBarJsunit.test.ets", "TransitionJsunit.test.ets", "AreaChangeJsunit.test.ets", "PropJsunit.test.ets", "GridItem.test.ets", "labelProps.test.js", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "Marquee.ets", "ColorGradientJsunit.test.ets", "sharedTransition2.ets", "gridContainer.ets", "Tab.ets", "Stepper.ets", "ShapeJsunit.test.ets", "enumsImage.ets", "polygon.ets", "textStyle.ets", "SubscribaleAbstractJsunit.test.ets", "listItemProps.test.js", "gridRowProps.test.js", "list.ets", "AppStorage.ets", "QrCode.ets", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "fontWeight.ets", "imageAnimator.ets", "BackgroundAndSizeSettingJsunit.test.ets", "Flex.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "switchProps.test.js", "radio.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "Path.ets", "fillMode.ets", "TransFormJsunit.test.ets", "DataPanel.ets", "touchAble.ets", "SliderJsunit.test.ets", "pageTransition.ets", "CheckboxJsunit.test.ets", "swiperProps.test.js", "TabsJsunit.test.ets", "LoadingProgressJsunit.test.ets", "GridSettingsJsunit.test.ets", "toggleProps.test.js", "areaChange.ets", "ohosRouterA.ets", "Link.ets", "listProps.test.js", "progressProps.test.js", "Calendar.ets", "sharedTransition.ets", "enumsHorizontalAlign.ets", "BindPopupJsunit.test.ets", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_all": "export interface Options<T extends ViewModel, Data = DefaultData<T>> {\r\n  \r\n  data?: Data;\r\n\r\n  \r\n  onInit?(): void;\r\n\r\n  \r\n  onReady?(): void;\r\n\r\n  \r\n  onShow?(): void;\r\n\r\n  \r\n  onCreate?(): void;\r\n\r\n  \r\n  onDestroy?(): void;\r\n}", "api_method_name": "Options", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 6, "since": 0, "api_used": "\u662f", "lines": ["sole.info('testChartOptions START');\n        co", ".name      testChartOptionsNone\n     * @tc.desc", "*/\n    it('testChartOptionsNone', 0, async func", "sole.info('testChartOptionsNone START');\n      ", "*/\n    it('testChartOptions', 0, async function", ".name      testChartOptions\n     * @tc.desc    "], "files": ["chartProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onInit", "api_method_all": "onInit?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 6, "since": 0, "api_used": "\u662f", "lines": ["itle: \"\"\n    },\n    onInit() {\n        console", "pector()\n    },\n    onInit(){\n        this.lis", "sh:false\n    },\n    onInit() {\n        this.li", "est page log] index onInit')\n        this.titl", "list: []\n    },\n    onInit() {\n        this.li", "     }\n    }\n  },\n  onInit() {\n    this.defaul"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onReady", "api_method_all": "onReady?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 3, "since": 0, "api_used": "\u662f", "lines": ["ff00')\n            .onReady(() => {\n           ", "'#00ffff')\n        .onReady(() => {\n          t"], "files": ["canvas2.ets", "global.ets", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onShow", "api_method_all": "onShow?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 157, "since": 0, "api_used": "\u662f", "lines": ["},1000)\n    },\n\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "     ],\n    },\n\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "   }\n     },\n \n     onShow(){\n         this.ge", "null\n     },\n \n     onShow(){\n         this.ge", " : null\n    },\n\n    onShow(){\n        this.get", "e: null\n    },\n\n    onShow(){\n        this.get", " null,\n\n    },\n\n    onShow(){\n        this.get", "xecute()\n    },\n    onShow() {\n        console", "        .onGeolocationShow((e) => {\n          ", ": null\n\n    },\n\n    onShow() {\n        this.ge", "     })\n    },\n\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "alue\n    })\n  },\n\n  onShow(){\n    // \u901a\u7528\u5c5e\u6027\n    ", "e : null\n    },\n    onShow(){\n        this.get", ": null,\n    },\n\n    onShow(){\n        this.get", "20,y:650});\n  },\n\n  onShow(){\n    // \u901a\u7528\u5c5e\u6027\n    ", "est page log] index onShow')\n    },\n    onHide", "xport default {\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "ull,\n\n\n\n    },\n\n    onShow(){\n        this.get", ").show()\n    },\n    onShow(){\n        this.get", "ull,\n     },\n \n     onShow(){\n         this.ge", "list: []\n    },\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "port default {\n\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "       }\n    },\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", " : null,\n    },\n    onShow(){\n        this.get", "      ],\n    },\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "       ]\n    },\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", "  top:0,\n    },\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n", ": null\n\n    },\n\n    onShow(){\n        this.get", " value')\n    },\n    onShow(){\n        // \u901a\u7528\u5c5e\u6027\n"], "files": ["optionProps.test.js", "WebPage.ets", "buttonProps.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onCreate", "api_method_all": "onCreate?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 18, "since": 0, "api_used": "\u662f", "lines": ["e.info('Application onCreate')\n  },\n  onDestroy(", "nfo('AceApplication onCreate');\n    },\n    onDes", "xport default {\n    onCreate() {\n        console", "\nexport default {\n  onCreate() {\n    console.inf"], "files": ["app.js", "app.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "onDestroy", "api_method_all": "onDestroy?(): void;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 20, "since": 0, "api_used": "\u662f", "lines": ["reate');\n    },\n    onDestroy() {\n        console", "nfo('AceApplication onDestroy');\n    }\n};\n", "n onCreate')\n  },\n  onDestroy() {\n    console.inf", "e.info('Application onDestroy')\n  },\n}", "        })\n        .onDestroy(() => {\n          c", "       console.log('onDestroy  ...')\n        })\n "], "files": ["app.js", "XComponentPage.ets", "app.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "Options", "api_method_name": "data", "api_method_all": "data?: Data", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2739, "since": 0, "api_used": "\u662f", "lines": [".isShow = eventData.data.isShow;\n      }\n   ", "is.text = eventData.data.text\n      }\n    }\n", "      if (eventData.data.gaugeValue != null)", "\n      if(eventData.data.alignItems != null)", "thValue = eventData.data.strokeWidthValue;\n ", "      if (eventData.data.alignSelf != null) ", "SON.parse(eventData.data.colorValues);\n     ", "s.width = eventData.data.width;\n      }\n    ", "      if (eventData.data.flexBasis != null) ", "      if (eventData.data.text != null) {\n   ", "= {\n                data: {\n                ", "      if (eventData.data.flexShrink != null)", "mOffset = eventData.data.offset;\n      } els", "      if (eventData.data.blurValue != null) ", "xShrink = eventData.data.flexShrink;\n      }", ".smSpan = eventData.data.span;\n        this.", "exBasis = eventData.data.flexBasis;\n      }\n", "ignSelf = eventData.data.alignSelf;\n      }\n", "      if (eventData.data.grayscaleValue != n", "geValue = eventData.data.gaugeValue;\n      }", "gnItems = eventData.data.alignItems;\n      }", "      if (eventData.data.height != null) {\n ", "imgData = imageData.data;\n    console.log(\"i", "ntData && eventData.data) {\n      if (eventD", "urValue = eventData.data.blurValue;\n      }\n", "      if (eventData.data.isShow != null) {\n ", "  switch (eventData.data.alignSelf) {\n      ", "      if (eventData.data.flexGrow != null) {", "  switch (eventData.data.sizeType) {\n       ", "      if (eventData.data.width != null) {\n  ", "enabled = eventData.data.enabled\n      }\n   ", ".height = eventData.data.height;\n      }\n   ", "      if (eventData.data.enabled != null) {\n", "leValue = eventData.data.startAngleValue;\n  ", "      if (eventData.data.colorValues != null", "      if (eventData.data.span) {\n        thi", " else if (eventData.data.gridOffset) {\n     ", "      if (eventData.data.strokeWidthValue !=", "ridSpan = eventData.data.gridSpan;\n      }\n ", "dOffset = eventData.data.gridOffset;\n      }", "      if (eventData.data.shadowValue != null", "      if (eventData.data.startAngleValue != ", "SON.parse(eventData.data.shadowValue);\n     ", "a = {\n              data: {\n                ", " else if (eventData.data.gridSpan) {\n       ", "lexGrow = eventData.data.flexGrow;\n      }\n ", "      if (eventData.data.endAngleValue != nu", "leValue = eventData.data.endAngleValue;\n    "], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "systemRouterA.ets", "configuration.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "video.ets", "ListItemJsunit.test.ets", "Navigator.ets", "tabContentProps.test.js", "longPressGesture.ets", "DragEventJsunit.test.ets", "textProps.test.js", "canvas2.ets", "ParallelGestureJsunit.test.ets", "placement.ets", "ScrollBarJsunit.test.ets", "playMode.ets", "toolbarProps.test.js", "Row.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "richText.ets", "column.ets", "checkboxGroup.ets", "sourceType.ets", "PositionSettingJsunit.test.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "geometryTransition.ets", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "toolbarItemProps.test.js", "marquee.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "Swiper.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "border.ets", "ResponseRegion.ets", "PriorityGestureJsunit.test.ets", "badgeProps.test.js", "scrollBar.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "textArea.ets", "textInput.ets", "gridSettings.ets", "transition.ets", "systemPrompt.ets", "TouchJsunit.test.ets", "transForm.ets", "LongPressGesture.test.ets", "path.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "List.test.ets", "scrollCode.ets", "button.ets", "FlexWrapJsunit.test.ets", "RichText.ets", "formProps.test.js", "focus.ets", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "background.ets", "SourceTypeJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "gauge.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "bindMenu.ets", "sideBar.ets", "LayoutConstraintsJsunit.test.ets", "toggle.ets", "GridJsunit.test.ets", "refreshProps.test.js", "customDialogController.ets", "text.ets", "TransitionJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "canvasProps.test.js", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "positionSetting.ets", "ResponseRegionJsunit.test.ets", "tapGesture.ets", "flexDirection.ets", "shapeClipping.ets", "QrCodeJsunit.test.ets", "edgeEffect.ets", "ProgressJsunit.test.ets", "systemRouterB.ets", "TimeStampJsunit.test.ets", "PanGesture.ets", "stepper.ets", "shape.ets", "labelProps.test.js", "ListJsunit.test.ets", "row.ets", "FlexDirectionJsunit.test.ets", "loadingProgress.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "ratingProps.test.js", "flex.ets", "MotionPathJsunit.test.ets", "stepperProps.test.js", "marqueeProps.test.js", "gridContainer.ets", "imageAnimatorProps.test.js", "gridPage.ets", "ShapeJsunit.test.ets", "enable.ets", "PieceCode.ets", "tabsProps.test.js", "badge.ets", "qrcodeProps.test.js", "textStyle.ets", "imageEffects.ets", "popupProps.test.js", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "ohosRouterB.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "tabs.ets", "layoutConstraints.ets", "BindMenuJsunit.test.ets", "videoProps.test.js", "list.ets", "colorGradient.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "QrCode.ets", "DatePickerJsunit.test.ets", "BasicJsunit.test.ets", "GaugeJsunit.test.ets", "flexWrap.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "direction.ets", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "TextInputJsunit.test.ets", "dragEvent.ets", "DataPanelJsunit.test.ets", "checkbox.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "pickerProps.test.js", "lazyForEach.ets", "circle.ets", "listItem.ets", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "textareaProps.test.js", "gridColProps.test.js", "imageAnimator.ets", "bindPopup.ets", "span.ets", "NavigatorCode.ets", "patternLock.ets", "buttonProps.test.js", "animate.ets", "BackgroundAndSizeSettingJsunit.test.ets", "global.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "direction2.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "canvas.ets", "AboutToDisappearJsunit.test.ets", "ohosMatrix4.ets", "CircleJsunit.test.ets", "divProps.test.js", "pickerViewProps.test.js", "switchProps.test.js", "divider.ets", "ellipse.ets", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "appear.ets", "ImageAnimatorJsunit.test.ets", "rating.ets", "animationStatus.ets", "zIndex.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "line.ets", "TransFormJsunit.test.ets", "priorityGesture.ets", "DataPanel.ets", "Grid.ets", "chartProps.test.js", "touchAble.ets", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "visibility.ets", "progress.ets", "datePicker.ets", "pageTransition.ets", "WebPage.ets", "sliderProps.test.js", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "swiperProps.test.js", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "areaChange.ets", "ohosRouterA.ets", "BindPopupJsunit.test.ets", "GridItem.ets", "parallelGesture.ets", "imageProps.test.js", "select.ets", "timeStamp.ets", "listProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "progressProps.test.js", "aboutToDisappear.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "Calendar.ets", "panelProps.test.js", "sharedTransition.ets", "refresh.ets", "motionPath.ets", "search.ets", "panel.ets", "menuProps.test.js", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}]}