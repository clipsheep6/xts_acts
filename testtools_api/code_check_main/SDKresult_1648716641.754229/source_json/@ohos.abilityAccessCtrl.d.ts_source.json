{"subsystem_ch": "\u7a0b\u5e8f\u8bbf\u95ee\u63a7\u5236\u5b50\u7cfb\u7edf", "subsystem_en": "security", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.abilityAccessCtrl", "api": [{"api_class_name": "abilityAccessCtrl", "api_method_all": "declare namespace abilityAccessCtrl {\n    \n    function createAtManager(): AtManager;\n  \n    \n    interface AtManager {\n        \n        verifyAccessToken(tokenID: number, permissionName: string): Promise<GrantStatus>;\n\n        \n        grantUserGrantedPermission(tokenID: number, permissionName: string, permissionFlag: number): Promise<number>;\n        grantUserGrantedPermission(tokenID: number, permissionName: string, permissionFlag: number, callback: AsyncCallback<number>): void;\n\n        \n        revokeUserGrantedPermission(tokenID: number, permissionName: string, permissionFlag: number): Promise<number>;\n        revokeUserGrantedPermission(tokenID: number, permissionName: string, permissionFlag: number, callback: AsyncCallback<number>): void;\n\n        \n        getPermissionFlags(tokenID: number, permissionName: string): Promise<number>;\n    }\n  \n    \n    export enum GrantStatus {\n        \n        PERMISSION_DENIED = -1,\n        \n        PERMISSION_GRANTED = 0,\n    }\n  }", "api_method_name": "abilityAccessCtrl", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 28, "since": 0, "api_used": "\u662f", "lines": ["    var atManager = abilityAccessCtrl.createAtManager();\n", "essCtrl from '@ohos.abilityAccessCtrl'\nimport bundle from", "sunit/index'\nimport abilityAccessCtrl from '@ohos.ability"], "files": ["AccessToken.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "abilityAccessCtrl", "api_method_name": "createAtManager", "api_method_all": "function createAtManager(): AtManager;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 24, "since": 8, "api_used": "\u662f", "lines": ["= abilityAccessCtrl.createAtManager();\n        var resu", "= abilityAccessCtrl.createAtManager();\n        atManage", "= abilityAccessCtrl.createAtManager();\n        var perm"], "files": ["AccessToken.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AtManager", "api_method_all": "interface AtManager {\n        \n        verifyAccessToken(tokenID: number, permissionName: string): Promise<GrantStatus>;\n\n        \n        grantUserGrantedPermission(tokenID: number, permissionName: string, permissionFlag: number): Promise<number>;\n        grantUserGrantedPermission(tokenID: number, permissionName: string, permissionFlag: number, callback: AsyncCallback<number>): void;\n\n        \n        revokeUserGrantedPermission(tokenID: number, permissionName: string, permissionFlag: number): Promise<number>;\n        revokeUserGrantedPermission(tokenID: number, permissionName: string, permissionFlag: number, callback: AsyncCallback<number>): void;\n\n        \n        getPermissionFlags(tokenID: number, permissionName: string): Promise<number>;\n    }", "api_method_name": "AtManager", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 24, "since": 8, "api_used": "\u662f", "lines": ["ityAccessCtrl.createAtManager();\n        var resu", "ityAccessCtrl.createAtManager();\n        var perm", "ityAccessCtrl.createAtManager();\n        atManage"], "files": ["AccessToken.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AtManager", "api_method_name": "verifyAccessToken", "api_method_all": "verifyAccessToken(tokenID: number, permissionName: string): Promise<GrantStatus>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["          atManager.verifyAccessToken(tokenID, permissionNameUser).then(funct"], "files": ["AccessToken.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AtManager", "api_method_name": "grantUserGrantedPermission", "api_method_all": "grantUserGrantedPermission(tokenID: number, permissionName: string, permissionFlag: number): Promise<number>;", "api_type": "Promise", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AtManager", "api_method_name": "grantUserGrantedPermission", "api_method_all": "grantUserGrantedPermission(tokenID: number, permissionName: string, permissionFlag: number, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 4, "api_level": 21, "api_used_count": 31, "since": 8, "api_used": "\u662f", "lines": ["t = await atManager.grantUserGrantedPermission(tokenID, \"\", PermissionFlag.PERMISSION_", "  console.log(\"Test_grantUserGrantedPermission_005 tokenID\" + tokenID + \"-\" + result);", "t = await atManager.grantUserGrantedPermission(tokenID, permissionNameSystem,\n        ", "  console.log(\"Test_grantUserGrantedPermission_001 tokenID\" + tokenID + \"-\" + result);", "  console.log(\"Test_grantUserGrantedPermission_003 tokenID\" + tokenID + \"-result1\" + r", "t = await atManager.grantUserGrantedPermission(tokenID, permissionNameUser,\n\t\t\tPermiss", "\n\n    \n    it('Test_grantUserGrantedPermission_006', 0, async function(done){\n        ", "  console.log(\"Test_grantUserGrantedPermission_002 tokenID\" + tokenID + \"-\" + result);", "  console.log(\"Test_grantUserGrantedPermission_005 start\");\n        var atManager = ab", "\n\n    \n    it('Test_grantUserGrantedPermission_001', 0, async function(done){\n        ", "\n\n    \n    it('Test_grantUserGrantedPermission_005', 0, async function(done){\n        ", "\n\n    \n    it('Test_grantUserGrantedPermission_003', 0, async function(done){\n        ", "  console.log(\"Test_grantUserGrantedPermission_007 start\");\n        var atManager = ab", "t = await atManager.grantUserGrantedPermission(tokenID, permissionNameUser,\n          ", "  console.log(\"Test_grantUserGrantedPermission_001 start\");\n        var atManager = ab", "  console.log(\"Test_grantUserGrantedPermission_006 tokenID\" + tokenID + \"-\" + result);", "\n\n    \n    it('Test_grantUserGrantedPermission_007', 0, async function(done){\n        ", "t = await atManager.grantUserGrantedPermission(tokenID, permissionName,\n            Pe", "  console.log(\"Test_grantUserGrantedPermission_004 tokenID\" + tokenID + \"-\" + result);", "  console.log(\"Test_grantUserGrantedPermission_002 start\");\n        var atManager = ab", "  console.log(\"Test_grantUserGrantedPermission_003 tokenID\" + tokenID + \"-\" + result)\n", "  console.log(\"Test_grantUserGrantedPermission_007 tokenID\"+ tokenID + \"-\" + result)\n ", "  console.log(\"Test_grantUserGrantedPermission_004 start\");\n        var atManager = ab", "\n\n    \n    it('Test_grantUserGrantedPermission_004', 0, async function(done){\n        ", ";\n        atManager.grantUserGrantedPermission(tokenID, permissionNameUser, Permission", "  console.log(\"Test_grantUserGrantedPermission_006 start\");\n        var atManager = ab", "  console.log(\"Test_grantUserGrantedPermission_001 tokenID\" + tokenID + \"-result1\" + r", "t = await atManager.grantUserGrantedPermission(0, permissionNameUser,\n            Perm", "\n\n    \n    it('Test_grantUserGrantedPermission_002', 0, async function(done){\n        ", "  console.log(\"Test_grantUserGrantedPermission_003 start\");\n        var atManager = ab"], "files": ["AccessToken.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AtManager", "api_method_name": "revokeUserGrantedPermission", "api_method_all": "revokeUserGrantedPermission(tokenID: number, permissionName: string, permissionFlag: number): Promise<number>;", "api_type": "Promise", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AtManager", "api_method_name": "revokeUserGrantedPermission", "api_method_all": "revokeUserGrantedPermission(tokenID: number, permissionName: string, permissionFlag: number, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 4, "api_level": 21, "api_used_count": 34, "since": 8, "api_used": "\u662f", "lines": ["t = await atManager.revokeUserGrantedPermission(tokenID, permissionNameUser,\n          ", "t = await atManager.revokeUserGrantedPermission(tokenID, permissionNameUser,\n\t\t\tPermiss", "name Test atManager.revokeUserGrantedPermission.\n     * @tc.desc Test invalid permissio", "  console.log(\"Test_revokeUserGrantedPermission_006 tokenID\" + tokenID + \"-\" + result);", "  * @tc.number Test_revokeUserGrantedPermission_005\n     * @tc.name Test atManager.revo", "    */\n    it('Test_revokeUserGrantedPermission_005', 0, async function(done){\n        ", "t = await atManager.revokeUserGrantedPermission(0, permissionNameUser,\n            Perm", "  * @tc.number Test_revokeUserGrantedPermission_006\n     * @tc.name Test atManager.revo", "\n\n    \n    it('Test_revokeUserGrantedPermission_003', 0, async function(done){\n        ", ";\n        atManager.revokeUserGrantedPermission(tokenID, permissionNameUser, Permission", "  console.log(\"Test_revokeUserGrantedPermission_001 start\");\n        var atManager = ab", "  console.log(\"Test_revokeUserGrantedPermission_003 tokenID\" + tokenID + \"-result1\" + r", "  console.log(\"Test_revokeUserGrantedPermission_004 tokenID\" + tokenID + \"-\" + result);", "  console.log(\"Test_revokeUserGrantedPermission_005 start\");\n        var atManager = ab", "\n\n    \n    it('Test_revokeUserGrantedPermission_007', 0, async function(done){\n        ", "  console.log(\"Test_revokeUserGrantedPermission_001 tokenID\" + tokenID + \"-\" + result);", "t = await atManager.revokeUserGrantedPermission(tokenID, \"\", PermissionFlag.PERMISSION_", "  console.log(\"Test_revokeUserGrantedPermission_001 tokenID\" + tokenID + \"-result1\" + r", "t = await atManager.revokeUserGrantedPermission(tokenID, permissionNameSystem,\n        ", "  console.log(\"Test_revokeUserGrantedPermission_007 start\");\n        var atManager = ab", "  console.log(\"Test_revokeUserGrantedPermission_002 tokenID\" + tokenID + \"-\" + result);", "  console.log(\"Test_revokeUserGrantedPermission_004 start\");\n        var atManager = ab", "  console.log(\"Test_revokeUserGrantedPermission_002 start\");\n        var atManager = ab", "    */\n    it('Test_revokeUserGrantedPermission_006', 0, async function(done){\n        ", "  console.log(\"Test_revokeUserGrantedPermission_005 tokenID\" + tokenID + \"-\" + result);", "t = await atManager.revokeUserGrantedPermission(tokenID, permissionName,\n            Pe", "  console.log(\"Test_revokeUserGrantedPermission_007 tokenID\"+ tokenID + \"-\" + result)\n ", "\n\n    \n    it('Test_revokeUserGrantedPermission_002', 0, async function(done){\n        ", "\n\n    \n    it('Test_revokeUserGrantedPermission_004', 0, async function(done){\n        ", "  console.log(\"Test_revokeUserGrantedPermission_006 start\");\n        var atManager = ab", "\n\n    \n    it('Test_revokeUserGrantedPermission_001', 0, async function(done){\n        ", "  console.log(\"Test_revokeUserGrantedPermission_003 start\");\n        var atManager = ab", "  console.log(\"Test_revokeUserGrantedPermission_003 tokenID\" + tokenID + \"-\" + result)\n"], "files": ["AccessToken.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AtManager", "api_method_name": "getPermissionFlags", "api_method_all": "getPermissionFlags(tokenID: number, permissionName: string): Promise<number>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "GrantStatus", "api_method_all": "export enum GrantStatus {\n        \n        PERMISSION_DENIED = -1,\n        \n        PERMISSION_GRANTED = 0,\n    }", "api_method_name": "GrantStatus", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 10, "since": 8, "api_used": "\u662f", "lines": ["esult1).assertEqual(GrantStatus.PERMISSION_DENIED);", "esult1).assertEqual(GrantStatus.PERMISSION_GRANTED)", "result).assertEqual(GrantStatus.PERMISSION_DENIED);", "EM_FIXED: 3\n};\n\nvar GrantStatus = {\n    PERMISSION_", "result).assertEqual(GrantStatus.PERMISSION_GRANTED)"], "files": ["AccessToken.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "GrantStatus", "api_method_name": "PERMISSION_DENIED", "api_method_all": "PERMISSION_DENIED = -1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 7, "since": 0, "api_used": "\u662f", "lines": ["rtEqual(GrantStatus.PERMISSION_DENIED);\n\n        done();\n", "rtEqual(GrantStatus.PERMISSION_DENIED);\n                }", "GrantStatus = {\n    PERMISSION_DENIED: -1,\n    PERMISSION"], "files": ["AccessToken.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "GrantStatus", "api_method_name": "PERMISSION_GRANTED", "api_method_all": "PERMISSION_GRANTED = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["rtEqual(GrantStatus.PERMISSION_GRANTED);\n\n        done();\n", "ION_DENIED: -1,\n    PERMISSION_GRANTED: 0,\n};\nconst RESULT", "rtEqual(GrantStatus.PERMISSION_GRANTED);\n                }"], "files": ["AccessToken.test.js"], "is_white": " ", "desc": " "}]}