{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.application.missionManager", "api": [{"api_class_name": "missionManager", "api_method_all": "declare namespace missionManager {\r\n    \r\n    function registerMissionListener(listener: MissionListener): number;\r\n\r\n    \r\n    function unregisterMissionListener(listenerId: number, callback: AsyncCallback<void>): void;\r\n    function unregisterMissionListener(listenerId: number): Promise<void>;\r\n\r\n    \r\n    function getMissionInfo(deviceId: string, missionId: number, callback: AsyncCallback<MissionInfo>): void;\r\n    function getMissionInfo(deviceId: string, missionId: number): Promise<MissionInfo>;\r\n\r\n    \r\n    function getMissionInfos(deviceId: string, numMax: number, callback: AsyncCallback<Array<MissionInfo>>): void;\r\n    function getMissionInfos(deviceId: string, numMax: number): Promise<Array<MissionInfo>>;\r\n\r\n    \r\n    function getMissionSnapShot(deviceId: string, missionId: number, callback: AsyncCallback<MissionSnapshot>): void;\r\n    function getMissionSnapShot(deviceId: string, missionId: number): Promise<MissionSnapshot>;\r\n\r\n    \r\n    function lockMission(missionId: number, callback: AsyncCallback<void>): void;\r\n    function lockMission(missionId: number): Promise<void>;\r\n\r\n    \r\n    function unlockMission(missionId: number, callback: AsyncCallback<void>): void;\r\n    function unlockMission(missionId: number): Promise<void>;\r\n\r\n    \r\n    function clearMission(missionId: number, callback: AsyncCallback<void>): void;\r\n    function clearMission(missionId: number): Promise<void>;\r\n\r\n    \r\n    function clearAllMissions(callback: AsyncCallback<void>): void;\r\n    function clearAllMissions(): Promise<void>;\r\n\r\n    \r\n    function moveMissionToFront(missionId: number, callback: AsyncCallback<void>): void;\r\n    function moveMissionToFront(missionId: number, options: StartOptions, callback: AsyncCallback<void>): void;\r\n    function moveMissionToFront(missionId: number, options?: StartOptions): Promise<void>;\r\n}", "api_method_name": "missionManager", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 218, "since": 0, "api_used": "\u662f", "lines": [" '@ohos.application.missionManager'\nimport appManager ", ";\n        }\n        missionManager.clearAllMissions(\n ", "}\n        }\n        missionManager.clearMission(id,\n  ", "tureability'\nimport missionManager from '@ohos.applica", "Id)\n                missionManager.clearMission(data[i", ";\n        }\n        missionManager.clearMission(result", "   let data = await missionManager.getMissionInfos(\"\",", " var result = await missionManager.getMissionInfos(\"\",", " let result = await missionManager.getMissionInfos(\"\",", "   let info = await missionManager.moveMissionToFront(", "   var data = await missionManager.getMissionInfos(\"\",", ";\n        }\n        missionManager.moveMissionToFront(", "= 10;\n        await missionManager.getMissionInfos(\"\",", "axnum = 10;\n        missionManager.getMissionInfos(\"\",", "axnum = 20;\n        missionManager.getMissionInfos(\"\",", "xnum = 100;\n        missionManager.getMissionInfos(\"\","], "files": ["MangerAbilityJsunit.test.js", "LockNew.js", "taskSwitchJsunit.test.js", "MissionManagerTest.js", "ActsProcessManageJsTest.test.js", "LockMission.test.js", "AbilityDisableTest.js", "MissionManager.test.js", "amsMissionSnapshotTest.test.js", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "registerMissionListener", "api_method_all": "function registerMissionListener(listener: MissionListener): number;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 13, "since": 8, "api_used": "\u662f", "lines": ["   missionManager.unregisterMissionListener(null, (err, data) =", "   missionManager.unregisterMissionListener('cc', (err, data) =", "   missionManager.unregisterMissionListener(2.0, (err, data) =>", "   missionManager.unregisterMissionListener(listenerId, (err, d", "lt = missionManager.registerMissionListener(object);\n        co", "lt = missionManager.registerMissionListener({\n                o", "   missionManager.unregisterMissionListener(id, (err, data) => ", "   missionManager.unregisterMissionListener(result, (err, data)", "lt = missionManager.registerMissionListener({\n            onMis"], "files": ["taskSwitchJsunit.test.js", "MissionManagerTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "unregisterMissionListener", "api_method_all": "function unregisterMissionListener(listenerId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 7, "since": 8, "api_used": "\u662f", "lines": ["     missionManager.unregisterMissionListener(2.0, (err, data) => {\n            conso", "     missionManager.unregisterMissionListener(id, (err, data) => {\n            consol", "     missionManager.unregisterMissionListener(listenerId, (err, data) => {\n          ", "     missionManager.unregisterMissionListener('cc', (err, data) => {\n             con", "     missionManager.unregisterMissionListener(null, (err, data) => {\n             con", "     missionManager.unregisterMissionListener(result, (err, data) => {\n             c"], "files": ["MissionManagerTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "unregisterMissionListener", "api_method_all": "function unregisterMissionListener(listenerId: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "getMissionInfo", "api_method_all": "function getMissionInfo(deviceId: string, missionId: number, callback: AsyncCallback<MissionInfo>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 166, "since": 8, "api_used": "\u662f", "lines": ["     missionManager.getMissionInfos(\"\", maxnum,\n            (error, data) ", "'Acts_Ams_test_5400 getMissionInfos data[' + i + \"]: \" + JSON.stringify(da", "urthScene beforeAll getMissionInfos data: ' + JSON.stringify(data));\n     ", "wait missionManager.getMissionInfos(\"\", maxnum);\n        for (var i = 0; i", "'Acts_Ams_test_7600 getMissionInfos result[' + i + \"]: \" + JSON.stringify(", "'Acts_Ams_test_0300 getMissionInfos data[' + i + \"]\uff0c end..\");\n            ", "'Acts_Ams_test_7000 getMissionInfos data[' + i + \"]: \" + JSON.stringify(da", "wait missionManager.getMissionInfos(\"\", maxnum);\n        console.log('Acts", "'Acts_Ams_test_3600 getMissionInfos info[' + i + \"]: \" + JSON.stringify(in", "'Acts_Ams_test_1100 getMissionInfos result[' + i + \"]: \" + JSON.stringify(", "'Acts_Ams_test_0400 getMissionInfos data[' + i + \"]: \" + JSON.stringify(in", "hirdScene beforeAll getMissionInfos data: ' + JSON.stringify(data));\n     ", "'Acts_Ams_test_4400 getMissionInfos result[' + i + \"]: \" + JSON.stringify(", "'Acts_Ams_test_1200 getMissionInfos result[' + i + \"]: \" + JSON.stringify(", "condScene beforeAll getMissionInfos data: ' + JSON.stringify(data));\n     ", "'Acts_Ams_test_5400 getMissionInfos error.code : \\\n                ' + err", "Acts_Ams_test_11900 getMissionInfos result[' + i + \"]: \" + JSON.stringify(", "wait missionManager.getMissionInfos(\"\", maxnum);\n        let id = 0;\n     ", "'Acts_Ams_test_5600 getMissionInfos result[' + i + \"]: \" + JSON.stringify(", "ifthScene beforeAll getMissionInfos data: ' + JSON.stringify(data));\n     ", "'Acts_Ams_test_0300 getMissionInfos data[' + i + \"]: \" + JSON.stringify(da", "'Acts_Ams_test_2800 getMissionInfos result[' + i + \"]: \" + JSON.stringify(", "     missionManager.getMissionInfos(\"\", maxnum,\n            (error, info) ", "'Acts_Ams_test_0300 getMissionInfos failed: ' + err);\n        });\n    })\n\n", "'Acts_Ams_test_1100 getMissionInfos failed: ' + err);\n        });\n        ", "'Acts_Ams_test_0400 getMissionInfos error.code : \\\n                ' + err", "wait missionManager.getMissionInfos(\"\", maxnum).catch(err => {\n           ", "'Acts_Ams_test_2000 getMissionInfos data[' + i + \"]: \" + JSON.stringify(in", "wait missionManager.getMissionInfos(\"\", maxnum);\n        for (let i = 0; i", "'Acts_Ams_test_3600 getMissionInfos error.code : \\\n                ' + err", "'Acts_Ams_test_0300 getMissionInfos data ' + JSON.stringify(data));\n      ", "'Acts_Ams_test_2000 getMissionInfos error.code : \\\n                ' + err", "irstScene beforeAll getMissionInfos data: ' + JSON.stringify(data));\n     ", "'Acts_Ams_test_2400 getMissionInfos result[' + i + \"]: \" + JSON.stringify(", "'Acts_Ams_test_6000 getMissionInfos result[' + i + \"]: \" + JSON.stringify(", "'Acts_Ams_test_7000 getMissionInfos error.code : \\\n                ' + err"], "files": ["MangerAbilityJsunit.test.js", "LockNew.js", "taskSwitchJsunit.test.js", "MissionManagerTest.js", "ActsProcessManageJsTest.test.js", "LockMission.test.js", "AbilityDisableTest.js", "MissionManager.test.js", "amsMissionSnapshotTest.test.js", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "getMissionInfo", "api_method_all": "function getMissionInfo(deviceId: string, missionId: number): Promise<MissionInfo>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["wait missionManager.getMissionInfos(\"\", maxnum).then(data => {\n           "], "files": ["MangerAbilityJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "getMissionInfos", "api_method_all": "function getMissionInfos(deviceId: string, numMax: number, callback: AsyncCallback<Array<MissionInfo>>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 160, "since": 8, "api_used": "\u662f", "lines": ["wait missionManager.getMissionInfos(\"\", maxnum);\n        console.log('ActsA", "'Acts_Ams_test_5600 getMissionInfos result[' + i + \"]: \" + JSON.stringify(r", "     missionManager.getMissionInfos(\"\", maxnum,\n            (error, info) =", "ifthScene beforeAll getMissionInfos data: ' + JSON.stringify(data));\n      ", "wait missionManager.getMissionInfos(\"\", maxnum).catch(err => {\n            ", "'Acts_Ams_test_7000 getMissionInfos data[' + i + \"]: \" + JSON.stringify(dat", "'Acts_Ams_test_1200 getMissionInfos result[' + i + \"]: \" + JSON.stringify(r", "'Acts_Ams_test_2000 getMissionInfos error.code : \\\n                ' + erro", "'Acts_Ams_test_5400 getMissionInfos error.code : \\\n                ' + erro", "'Acts_Ams_test_0300 getMissionInfos failed: ' + err);\n        });\n    })\n\n ", "hirdScene beforeAll getMissionInfos data: ' + JSON.stringify(data));\n      ", "'Acts_Ams_test_7600 getMissionInfos result[' + i + \"]: \" + JSON.stringify(r", "wait missionManager.getMissionInfos(\"\", maxnum);\n        for (var i = 0; i ", "wait missionManager.getMissionInfos(\"\", maxnum);\n        let id = 0;\n      ", "Acts_Ams_test_11900 getMissionInfos result[' + i + \"]: \" + JSON.stringify(r", "condScene beforeAll getMissionInfos data: ' + JSON.stringify(data));\n      ", "'Acts_Ams_test_2800 getMissionInfos result[' + i + \"]: \" + JSON.stringify(r", "'Acts_Ams_test_4400 getMissionInfos result[' + i + \"]: \" + JSON.stringify(r", "'Acts_Ams_test_0300 getMissionInfos data ' + JSON.stringify(data));\n       ", "'Acts_Ams_test_1100 getMissionInfos result[' + i + \"]: \" + JSON.stringify(r", "'Acts_Ams_test_5400 getMissionInfos data[' + i + \"]: \" + JSON.stringify(dat", "irstScene beforeAll getMissionInfos data: ' + JSON.stringify(data));\n      ", "'Acts_Ams_test_0400 getMissionInfos error.code : \\\n                ' + erro", "wait missionManager.getMissionInfos(\"\", maxnum);\n        for (let i = 0; i ", "'Acts_Ams_test_3600 getMissionInfos info[' + i + \"]: \" + JSON.stringify(inf", "'Acts_Ams_test_2400 getMissionInfos result[' + i + \"]: \" + JSON.stringify(r", "'Acts_Ams_test_0300 getMissionInfos data[' + i + \"]: \" + JSON.stringify(dat", "'Acts_Ams_test_6000 getMissionInfos result[' + i + \"]: \" + JSON.stringify(r", "'Acts_Ams_test_7000 getMissionInfos error.code : \\\n                ' + erro", "'Acts_Ams_test_3600 getMissionInfos error.code : \\\n                ' + erro", "'Acts_Ams_test_0400 getMissionInfos data[' + i + \"]: \" + JSON.stringify(inf", "     missionManager.getMissionInfos(\"\", maxnum,\n            (error, data) =", "'Acts_Ams_test_0300 getMissionInfos data[' + i + \"]\uff0c end..\");\n            }", "'Acts_Ams_test_1100 getMissionInfos failed: ' + err);\n        });\n        f", "'Acts_Ams_test_2000 getMissionInfos data[' + i + \"]: \" + JSON.stringify(inf", "urthScene beforeAll getMissionInfos data: ' + JSON.stringify(data));\n      "], "files": ["MangerAbilityJsunit.test.js", "LockNew.js", "taskSwitchJsunit.test.js", "MissionManagerTest.js", "ActsProcessManageJsTest.test.js", "LockMission.test.js", "AbilityDisableTest.js", "MissionManager.test.js", "amsMissionSnapshotTest.test.js", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "getMissionInfos", "api_method_all": "function getMissionInfos(deviceId: string, numMax: number): Promise<Array<MissionInfo>>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["wait missionManager.getMissionInfos(\"\", maxnum).then(data => {\n            "], "files": ["MangerAbilityJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "getMissionSnapShot", "api_method_all": "function getMissionSnapShot(deviceId: string, missionId: number, callback: AsyncCallback<MissionSnapshot>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["     missionManager.getMissionSnapShot(\"\", parseInt(abilityMissionList[0]), (e", " console.log(TAG + \"getMissionSnapShot success, err: \"\n                + JSON.", "wait missionManager.getMissionSnapShot(\"\", m_missionId, async (err, data) => {", "wait missionManager.getMissionSnapShot(\"\", -1, (err, data) => {\n              ", "     missionManager.getMissionSnapShot(\"\", m_missionId)\n                    .t"], "files": ["taskSwitchJsunit.test.js", "amsMissionSnapshotTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "getMissionSnapShot", "api_method_all": "function getMissionSnapShot(deviceId: string, missionId: number): Promise<MissionSnapshot>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["     missionManager.getMissionSnapShot(\"\", -1)\n                .then(function ", "     missionManager.getMissionSnapShot(\"\", m_missionId).then(function (data) {"], "files": ["amsMissionSnapshotTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "lockMission", "api_method_all": "function lockMission(missionId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 51, "since": 8, "api_used": "\u662f", "lines": ["  }\n\n    function unlockMissionMy() {\n        console.log('===========S", "enHarmony_Lock_1800 lockMission data: \" +\n                JSON.stringif", "   missionManager.unlockMission(missionArray[1].id, (err, data) => {\n  ", "();\n            //unlockMissionMy();\n        })\n    }\n\n    function unl", "   missionManager.unlockMission(missionId,(error, data1) => {\n         ", "nHarmony_Clear_0100 lockMission1 missionIds[1] : ' +\n                JS", "nHarmony_Clear_0100 lockMission1 errCode : ' +\n            JSON.stringi", "   missionManager.unlockMission(undefined, (err, data) => {\n           ", "     missionManager.lockMission(missionArray[i].id, (err, data) => {\n  ", "nHarmony_Clear_0100 lockMission1 errCode : ' +\n                JSON.str", "   missionManager.unlockMission(0.2, (err, data) => {\n            conso", "     missionManager.lockMission(missionId, (error, data) => {\n         ", "  }\n\n    function unlockMissionTest() {\n        console.log('==========", "ue();\n            unlockMissionTest();\n        })\n    }\n\n    function c", "     missionManager.lockMission(parseInt(missionId[i]),(err,data)=>{\n  ", "     missionManager.lockMission(1.2, (error, data) => {\n               ", "     missionManager.lockMission(parseInt(missionIds[1]),(err,data)=>{\n ", "True();\n            lockMissionMy();\n        })\n    }\n\n    function loc", "       console.log(\"lockMission info\" + JSON.stringify(data));\n        ", "     console.log(\"unlockMission info\" + JSON.stringify(data1));\n       ", "   missionManager.unlockMission(missionArray[i].id, (err, data) => {\n  ", "    }\n\n    function lockMissionMy() {\n        console.log('============", "     missionManager.lockMission(parseInt(missionIds[2]),(err,data)=>{\n ", "     console.log(\"unlockMissionMy start \" + JSON.stringify(missionArray", "  },400)\n}\nfunction lockMissions(titles,missionId,times){\n        setTi", "enHarmony_Lock_1800 lockMission error: \" +\n                JSON.stringi", "     missionManager.lockMission(1.2, (err, data) => {\n            conso", "     missionManager.lockMission(\"A\", (err, data) => {\n            conso", "Harmony_Lock_2600 unlockMission data: \" +\n                JSON.stringif", "enHarmony_Lock_0700 lockMission err:'\n                    + JSON.string", "Harmony_Lock_0700 unlockMission err:'\n            + JSON.stringify(err)", "nHarmony_Clear_0100 lockMission1 missionIds[1] : ' +\n            JSON.s", "     missionManager.lockMission(\"12\", (err, data) => {\n            cons", "onsole.log(titles+\" lockMission missionIds[1]+++++123456::::\"+missionId", "   missionManager.unlockMission(\"a\", (err, data) => {\n            conso", "Harmony_Lock_2600 unlockMission error: \" +\n                JSON.stringi", "Harmony_Lock_0700 unlockMission err:'\n                    + JSON.string", "     missionManager.lockMission(undefined, (err, data) => {\n           ", "   missionManager.unlockMission(missionId,(error, data) => {\n          ", "nHarmony_Clear_0100 lockMission2 errCode : ' +\n                JSON.str", "   missionManager.unlockMission(\"123\", (err, data) => {\n            con", "console.log(titles+'lockMission1 errCode:' + JSON.stringify(err) + \" da", "   missionManager.unlockMission(-1, (err, data) => {\n            consol", "     missionManager.lockMission(-1, (err, data) => {\n            consol", "700 step3 start=====lockMission======');\n        console.log('SUB_AA_Op", "     missionManager.lockMission(parseInt(missionIds[1]),(err,data)=>{\n\n"], "files": ["LockNew.js", "LockMission.test.js", "AbilityDisableTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "lockMission", "api_method_all": "function lockMission(missionId: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["     missionManager.lockMission(missionId).then((data) => {\n           ", "   missionManager.unlockMission(missionId).then((data) => {\n           "], "files": ["LockMission.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "unlockMission", "api_method_all": "function unlockMission(missionId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 22, "since": 8, "api_used": "\u662f", "lines": ["     missionManager.unlockMission(undefined, (err, data) => {\n           ", "enHarmony_Lock_2600 unlockMission error: \" +\n                JSON.stringi", "enHarmony_Lock_0700 unlockMission err:'\n                    + JSON.string", "       console.log(\"unlockMission info\" + JSON.stringify(data1));\n       ", "enHarmony_Lock_0700 unlockMission err:'\n            + JSON.stringify(err)", "     missionManager.unlockMission(missionArray[1].id, (err, data) => {\n  ", "     missionManager.unlockMission(-1, (err, data) => {\n            consol", "     missionManager.unlockMission(missionId,(error, data1) => {\n         ", "enHarmony_Lock_2600 unlockMission data: \" +\n                JSON.stringif", "     missionManager.unlockMission(missionId,(error, data) => {\n          ", "    }\n\n    function unlockMissionMy() {\n        console.log('===========S", "ue();\n            //unlockMissionMy();\n        })\n    }\n\n    function unl", "True();\n            unlockMissionTest();\n        })\n    }\n\n    function c", "     missionManager.unlockMission(missionArray[i].id, (err, data) => {\n  ", "       console.log(\"unlockMissionMy start \" + JSON.stringify(missionArray", "     missionManager.unlockMission(0.2, (err, data) => {\n            conso", "     missionManager.unlockMission(\"a\", (err, data) => {\n            conso", "    }\n\n    function unlockMissionTest() {\n        console.log('==========", "     missionManager.unlockMission(\"123\", (err, data) => {\n            con"], "files": ["LockNew.js", "LockMission.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "unlockMission", "api_method_all": "function unlockMission(missionId: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["     missionManager.unlockMission(missionId).then((data) => {\n           "], "files": ["LockMission.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "clearMission", "api_method_all": "function clearMission(missionId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 39, "since": 8, "api_used": "\u662f", "lines": ["     missionManager.clearMission(result[1].missionId,\n            (error", "     missionmanager.clearMission(missionInfos[i].missionId, (err, data) ", ">ACTS_ProcessManage clearMission finish<=======');\n            resolve()", "'Acts_Ams_test_6100 clearMissionInfos failed: ' + err);\n            expe", "     missionManager.clearMission(id,\n            (error, info) => {\n    ", "     missionManager.clearMission(parseInt(abilityMissionList[0]), (err, ", "     missionManager.clearMission(1.1234, (data, err) => {\n              ", "'Acts_Ams_test_2400 clearMission error.code \\\n                ' + error.", "     missionManager.clearMission(\"xxxx\", (data, err) => {\n              ", " console.info('5500 clearMission data.code:' + data);\n            done()", "Acts_Ams_test_12200 clearMissions error.code ' + error.code + ',data  ['", "hirdScene beforeAll clearMission error.code \\\n                        ' ", "ifthScene beforeAll clearMission error.code \\\n                        ' ", " => {\n        await clearMissionId();\n        setTimeout(async function ", "     missionManager.clearMission(undefined, (data, err) => {\n           ", " console.info('5500 clearMission error.code:' + err.code);\n        });\n ", "condScene beforeAll clearMission error.code \\\n                        ' ", "urthScene beforeAll clearMission error.code \\\n                        ' ", ">ACTS_ProcessManage clearMission id:\" + missionInfos[i].missionId);\n    ", "irstScene beforeAll clearMission error.code \\\n                        ' ", "'Acts_Ams_test_5600 clearMission error.code \\\n                ' + error.", "     missionManager.clearMission(\"123456\", (data, err) => {\n            ", "     missionManager.clearMission(\"abc@@#$\", (data, err) => {\n           ", "    }\n\n    function clearMissionId() {\n        return new Promise(async ", "     missionManager.clearMission(data[i].missionId,\n                    "], "files": ["taskSwitchJsunit.test.js", "MangerAbilityJsunit.test.js", "AbilityDisableTest.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "clearMission", "api_method_all": "function clearMission(missionId: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["     missionManager.clearMission(id).then(data => {\n            console."], "files": ["MangerAbilityJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "clearAllMissions", "api_method_all": "function clearAllMissions(callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 21, "since": 8, "api_used": "\u662f", "lines": ["wait missionManager.clearAllMissions().catch(err => {\n            console.lo", "     missionManager.clearAllMissions((err, data) => {\n            console.lo", "     missionManager.clearAllMissions(\n            (error,info) => {\n        ", "     missionManager.clearAllMissions();\n                        done();\n    ", "Acts_Ams_test_11900 clearAllMissions error.code: \\\n                ' + error", ",times);\n}\nfunction clearAllMissions(){\n        missionManager.clearAllMissi", "     missionManager.clearAllMissions((err,data)=>{\n            console.log('", "Acts_Ams_test_12100 clearAllMissions data  [' + info + ']');\n        done();", "     missionManager.clearAllMissions();\n                    if (i == mission", " \"Emtry MainAbility clearAllMissions success, error: \"\n                + JSO", "700 step4 start=====clearAllMissions======');\n        missionManager.clearAl", "'Acts_Ams_test_6100 clearAllMissions data  [' + info + ']');\n        done();", "     missionManager.clearAllMissions((err,data)=>{\n                console.l", "     missionManager.clearAllMissions(\n            (error, info) => {\n       ", "     missionManager.clearAllMissions();\n        sleep(500);\n        getMissi", "nHarmony_Clear_0100 clearAllMissions errCode: ' +\n            JSON.stringify", "       console.log('clearAllMissions errCode: ' +\n            JSON.stringify", "700 step7 start=====clearAllMissions======');\n        var myEvents = {\n     ", "nHarmony_Clear_0100 clearAllMissions errCode: ' +\n                JSON.strin"], "files": ["taskSwitchJsunit.test.js", "LockNew.js", "MangerAbilityJsunit.test.js", "AbilityDisableTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "clearAllMissions", "api_method_all": "function clearAllMissions(): Promise<void>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "moveMissionToFront", "api_method_all": "function moveMissionToFront(missionId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 45, "since": 0, "api_used": "\u662f", "lines": ["nHarmony_Clear_0100 moveMissionToFront errCode : ' +\n                JSON.stri", "     missionManager.moveMissionToFront(parseInt(mainAbility1missinds[0]),{\n   ", "'Acts_Ams_test_7600 moveMissionToFront error.code \\\n                ' + error.", "sionToFront_3000 \n\t\tmoveMissionToFront dataCode:++++++');\n            missionM", "MissionToFront_2900 moveMissionToFront dataCode:++++++');\n            missionM", "MissionToFront_2900 moveMissionToFront errCode:'+ \" err:\"\n                + JS", "'Acts_Ams_test_6000 moveMissionToFront error.code \\\n                ' + error.", "'Acts_Ams_test_1100 moveMissionToFront failed: ' + err);\n            expect(er", "wait missionManager.moveMissionToFront(result[0].missionId).catch(err => {\n   ", "'Acts_Ams_test_4300 moveMissionToFront data  [' + info + ']');\n        done();", "     missionManager.moveMissionToFront(result[0].missionId,\n            (error", "     missionManager.moveMissionToFront(parseInt(abilityMissionList[0]), (error", "'Acts_Ams_test_2700 moveMissionToFront data  [' + info + ']');\n        done();", "sionToFront_3000 \n\t\tmoveMissionToFront dataCode:'+ \n\t\t\" data:\" + JSON.stringif", "     missionManager.moveMissionToFront(missionId, (error, data) => {\n         ", "'Acts_Ams_test_4300 moveMissionToFront failed: ' + err);\n            expect(er", "'Acts_Ams_test_4400 moveMissionToFront error.code \\\n                ' + error.", "     missionManager.moveMissionToFront(parseInt(missionIds[2]),(err,data)=>{\n ", "(TAG + \"MainAbility moveMissionToFront success, error: \"\n                + JSO", "sionToFront_3000 \n\t\tmoveMissionToFront errCode:'+ \n\t\t\" err:\" + JSON.stringify(", "'Acts_Ams_test_5900 moveMissionToFront data  [' + info + ']');\n        done();", "'Acts_Ams_test_2700 moveMissionToFront failed: ' + err);\n            expect(er", "wait missionmanager.moveMissionToFront(testMissionId);\n\n            for (let i", "     missionManager.moveMissionToFront(result[1].missionId,\n            (error", "'Acts_Ams_test_5900 moveMissionToFront failed: ' + err);\n            expect(er", "nHarmony_Clear_0100 moveMissionToFront errCode : ' +\n            JSON.stringif", "'Acts_Ams_test_1200 moveMissionToFront error.code \\\n                ' + error.", "MissionToFront_2900 moveMissionToFront dataCode:'+ \" data:\"\n                + ", "'Acts_Ams_test_2800 moveMissionToFront error.code \\\n                ' + error.", "'Acts_Ams_test_1100 moveMissionToFront data  [' + info + ']');\n        done();"], "files": ["taskSwitchJsunit.test.js", "MangerAbilityJsunit.test.js", "AbilityDisableTest.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "moveMissionToFront", "api_method_all": "function moveMissionToFront(missionId: number, options: StartOptions, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 45, "since": 0, "api_used": "\u662f", "lines": ["nHarmony_Clear_0100 moveMissionToFront errCode : ' +\n                JSON.stri", "     missionManager.moveMissionToFront(parseInt(mainAbility1missinds[0]),{\n   ", "'Acts_Ams_test_7600 moveMissionToFront error.code \\\n                ' + error.", "sionToFront_3000 \n\t\tmoveMissionToFront dataCode:++++++');\n            missionM", "MissionToFront_2900 moveMissionToFront dataCode:++++++');\n            missionM", "MissionToFront_2900 moveMissionToFront errCode:'+ \" err:\"\n                + JS", "'Acts_Ams_test_6000 moveMissionToFront error.code \\\n                ' + error.", "'Acts_Ams_test_1100 moveMissionToFront failed: ' + err);\n            expect(er", "wait missionManager.moveMissionToFront(result[0].missionId).catch(err => {\n   ", "'Acts_Ams_test_4300 moveMissionToFront data  [' + info + ']');\n        done();", "     missionManager.moveMissionToFront(result[0].missionId,\n            (error", "     missionManager.moveMissionToFront(parseInt(abilityMissionList[0]), (error", "'Acts_Ams_test_2700 moveMissionToFront data  [' + info + ']');\n        done();", "sionToFront_3000 \n\t\tmoveMissionToFront dataCode:'+ \n\t\t\" data:\" + JSON.stringif", "     missionManager.moveMissionToFront(missionId, (error, data) => {\n         ", "'Acts_Ams_test_4300 moveMissionToFront failed: ' + err);\n            expect(er", "'Acts_Ams_test_4400 moveMissionToFront error.code \\\n                ' + error.", "     missionManager.moveMissionToFront(parseInt(missionIds[2]),(err,data)=>{\n ", "(TAG + \"MainAbility moveMissionToFront success, error: \"\n                + JSO", "sionToFront_3000 \n\t\tmoveMissionToFront errCode:'+ \n\t\t\" err:\" + JSON.stringify(", "'Acts_Ams_test_5900 moveMissionToFront data  [' + info + ']');\n        done();", "'Acts_Ams_test_2700 moveMissionToFront failed: ' + err);\n            expect(er", "wait missionmanager.moveMissionToFront(testMissionId);\n\n            for (let i", "     missionManager.moveMissionToFront(result[1].missionId,\n            (error", "'Acts_Ams_test_5900 moveMissionToFront failed: ' + err);\n            expect(er", "nHarmony_Clear_0100 moveMissionToFront errCode : ' +\n            JSON.stringif", "'Acts_Ams_test_1200 moveMissionToFront error.code \\\n                ' + error.", "MissionToFront_2900 moveMissionToFront dataCode:'+ \" data:\"\n                + ", "'Acts_Ams_test_2800 moveMissionToFront error.code \\\n                ' + error.", "'Acts_Ams_test_1100 moveMissionToFront data  [' + info + ']');\n        done();"], "files": ["taskSwitchJsunit.test.js", "MangerAbilityJsunit.test.js", "AbilityDisableTest.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "missionManager", "api_method_name": "moveMissionToFront", "api_method_all": "function moveMissionToFront(missionId: number, options?: StartOptions): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}