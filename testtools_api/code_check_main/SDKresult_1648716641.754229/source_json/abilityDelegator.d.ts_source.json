{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\application\\abilityDelegator", "api": [{"api_class_name": "AbilityDelegator", "api_method_all": "export interface AbilityDelegator {\n    \n    addAbilityMonitor(monitor: AbilityMonitor, callback: AsyncCallback<void>): void;\n    addAbilityMonitor(monitor: AbilityMonitor): Promise<void>;\n\n    \n    removeAbilityMonitor(monitor: AbilityMonitor, callback: AsyncCallback<void>): void;\n    removeAbilityMonitor(monitor: AbilityMonitor): Promise<void>;\n\n    \n    waitAbilityMonitor(monitor: AbilityMonitor, callback: AsyncCallback<Ability>): void;\n    waitAbilityMonitor(monitor: AbilityMonitor, timeout: number, callback: AsyncCallback<Ability>): void;\n    waitAbilityMonitor(monitor: AbilityMonitor, timeout?: number): Promise<Ability>;\n\n    \n    getAppContext(): Context;\n\n    \n    getAbilityState(ability: Ability): number;\n\n    \n    getCurrentTopAbility(callback: AsyncCallback<Ability>): void;\n    getCurrentTopAbility(): Promise<Ability>\n\n    \n    doAbilityForeground(ability: Ability, callback: AsyncCallback<boolean>): void;\n    doAbilityForeground(ability: Ability): Promise<boolean>;\n\n    \n    doAbilityBackground(ability: Ability, callback: AsyncCallback<boolean>): void;\n    doAbilityBackground(ability: Ability): Promise<boolean>;\n\n    \n    print(msg: string, callback: AsyncCallback<void>): void;\n    print(msg: string): Promise<void>;\n\n    \n    executeShellCommand(cmd: string, callback: AsyncCallback<ShellCmdResult>): void;\n    executeShellCommand(cmd: string, timeoutSecs: number, callback: AsyncCallback<ShellCmdResult>): void;\n    executeShellCommand(cmd: string, timeoutSecs?: number): Promise<ShellCmdResult>;\n\n    \n    finishTest(msg: string, code: number, callback: AsyncCallback<void>): void;\n    finishTest(msg: string, code: number): Promise<void>;\n}", "api_method_name": "AbilityDelegator", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 40, "since": 8, "api_used": "\u662f", "lines": ["", "regroundCallback====AbilityDelegator=\" + AbilityDelegato", "  }\n            var AbilityDelegator = abilityDelegatorR", "st'\n            var AbilityDelegator = abilityDelegatorR", ">\" + JSON.stringify(AbilityDelegatorArgs.bundleName));\n ", "\n            expect(AbilityDelegatorArgs.parameters).ass", "fq3146'\n            AbilityDelegator.finishTest(msg, Num", "\n            expect(AbilityDelegatorArgs.bundleName).ass", ">\" + JSON.stringify(AbilityDelegatorArgs));\n            ", " AbilityDelegator = AbilityDelegatorRegistry.getAbilityD", "          || state!=AbilityDelegatorRegistry.AbilityLife", ">\" + JSON.stringify(AbilityDelegatorArgs.parameters));\n ", "bility;\n        var AbilityDelegator = AbilityDelegatorR", "\n            expect(AbilityDelegatorArgs.testCaseNames).", "         || (state!=AbilityDelegatorRegistry.AbilityLife", "====\");\n            AbilityDelegator.getCurrentTopAbilit", "wd'\n            var AbilityDelegator = abilityDelegatorR", "elegatorRegistry.getAbilityDelegator();\n        console.", "elegatorRegistry.getAbilityDelegator()\n            var m", "   + JSON.stringify(AbilityDelegatorArgs.testCaseNames))", "fq3146'\n            AbilityDelegator.finishTest(msg, 1, ", "js')", "   + JSON.stringify(AbilityDelegatorArgs.testRunnerClass", "      expect(state==AbilityDelegatorRegistry.AbilityLife", "gator()\n            AbilityDelegator.executeShellCommand", "bilityDelegator=\" + AbilityDelegator);\n        function ", "        var state = AbilityDelegator.getAbilityState(abi", "\n            expect(AbilityDelegatorArgs.testRunnerClass", "elegatorRegistry.getAbilityDelegator()\n            Abili", "sh b====\");\n        AbilityDelegator.addAbilityMonitor(\n", "pp'\n            var AbilityDelegator = abilityDelegatorR", "y {\n            var AbilityDelegatorArgs = abilityDelega"], "files": ["ActsAbilityDelegatorCaseTest.test.js", "List.test.js", "ActsAbilityLifecycleStateNewTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "addAbilityMonitor", "api_method_all": "addAbilityMonitor(monitor: AbilityMonitor, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 3, "since": 9, "api_used": "\u662f", "lines": ["le.debug(\"ACTS_====>addAbilityMonitor finish e====\");\n        })\n        feat", "le.debug(\"ACTS_====>addAbilityMonitor finish b====\");\n        AbilityDelegato", "   AbilityDelegator.addAbilityMonitor(\n            {abilityName: 'com.example"], "files": ["ActsAbilityLifecycleStateNewTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "addAbilityMonitor", "api_method_all": "addAbilityMonitor(monitor: AbilityMonitor): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "removeAbilityMonitor", "api_method_all": "removeAbilityMonitor(monitor: AbilityMonitor, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "removeAbilityMonitor", "api_method_all": "removeAbilityMonitor(monitor: AbilityMonitor): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "waitAbilityMonitor", "api_method_all": "waitAbilityMonitor(monitor: AbilityMonitor, callback: AsyncCallback<Ability>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "waitAbilityMonitor", "api_method_all": "waitAbilityMonitor(monitor: AbilityMonitor, timeout: number, callback: AsyncCallback<Ability>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "waitAbilityMonitor", "api_method_all": "waitAbilityMonitor(monitor: AbilityMonitor, timeout?: number): Promise<Ability>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "getAppContext", "api_method_all": "getAppContext(): Context;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "getAbilityState", "api_method_all": "getAbilityState(ability: Ability): number;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 4, "since": 9, "api_used": "\u662f", "lines": ["yName: 'com.example.getAbilityState.MainAbility3',\n    ", " = AbilityDelegator.getAbilityState(ability);\n         ", "eName: 'com.example.getAbilityState',\n            abili"], "files": ["ActsAbilityLifecycleStateNewTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "getCurrentTopAbility", "api_method_all": "getCurrentTopAbility(callback: AsyncCallback<Ability>): void;", "api_type": "callback", "api_args_count": 1, "api_level": 21, "api_used_count": 1, "since": 9, "api_used": "\u662f", "lines": ["   AbilityDelegator.getCurrentTopAbility((err, data)=>{\n            console.debu"], "files": ["ActsAbilityLifecycleStateNewTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "getCurrentTopAbility", "api_method_all": "getCurrentTopAbility(): Promise<Ability>\n\n    \n    doAbilityForeground(ability: Ability, callback: AsyncCallback<boolean>): void;", "api_type": "Promise", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "doAbilityForeground", "api_method_all": "doAbilityForeground(ability: Ability, callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "doAbilityForeground", "api_method_all": "doAbilityForeground(ability: Ability): Promise<boolean>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "doAbilityBackground", "api_method_all": "doAbilityBackground(ability: Ability, callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "doAbilityBackground", "api_method_all": "doAbilityBackground(ability: Ability): Promise<boolean>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 0, "since": 9, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "print", "api_method_all": "print(msg: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["            context.printDrawnCompleted((error, data) => {\n      ", "       console.log(\"print listKey\" + listKey);\n            }\n    ", "ST_0300 = ' context_printDrawnCompleted_test_0100 ';\nconst TAG_TE", "       console.log(\"print listKey111\" + listKey);\n               ", "ST_0400 = ' context_printDrawnCompleted_test_0200 ';\nconst TAG_TE"], "files": ["addContextAndAbilityJsunit.test.ets", "MissionManager.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "print", "api_method_all": "print(msg: string): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": 21, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["      await context.printDrawnCompleted().then((data) => {\n      "], "files": ["addContextAndAbilityJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "executeShellCommand", "api_method_all": "executeShellCommand(cmd: string, callback: AsyncCallback<ShellCmdResult>): void;", "api_type": "callback", "api_args_count": 2, "api_level": 21, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["and_Callback_0200 - executeShellCommand: start ')\n\n                console.log(", "mand_Promise_0100 - executeShellCommand: start ')\n\n                console.log(", "and_Callback_0100 - executeShellCommand: end')\n\n                done()\n        ", "and_Callback_0100 - executeShellCommand: start ')\n\n                console.log(", "   AbilityDelegator.executeShellCommand(cmd, (err, data) => {\n                c", "   AbilityDelegator.executeShellCommand(cmd, 1000, (err, data) => {\n           "], "files": ["ActsAbilityDelegatorCaseTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "executeShellCommand", "api_method_all": "executeShellCommand(cmd: string, timeoutSecs: number, callback: AsyncCallback<ShellCmdResult>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["and_Callback_0200 - executeShellCommand: start ')\n\n                console.log(", "mand_Promise_0100 - executeShellCommand: start ')\n\n                console.log(", "and_Callback_0100 - executeShellCommand: end')\n\n                done()\n        ", "and_Callback_0100 - executeShellCommand: start ')\n\n                console.log(", "   AbilityDelegator.executeShellCommand(cmd, (err, data) => {\n                c", "   AbilityDelegator.executeShellCommand(cmd, 1000, (err, data) => {\n           "], "files": ["ActsAbilityDelegatorCaseTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "executeShellCommand", "api_method_all": "executeShellCommand(cmd: string, timeoutSecs?: number): Promise<ShellCmdResult>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["   AbilityDelegator.executeShellCommand(cmd, 1).then((data) => {\n              "], "files": ["ActsAbilityDelegatorCaseTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "finishTest", "api_method_all": "finishTest(msg: string, code: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": 21, "api_used_count": 3, "since": 0, "api_used": "\u662f", "lines": ["CTS_AAACommand_0100 finishTest  test  end ========> callback \")\n      ", "   AbilityDelegator.finishTest(msg, 1, () => {\n                console", "CTS_AAACommand_1200 finishTest  test  end ========> callback \")\n      "], "files": ["ActsAbilityDelegatorCaseTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityDelegator", "api_method_name": "finishTest", "api_method_all": "finishTest(msg: string, code: number): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": 21, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["   AbilityDelegator.finishTest(msg, Number.MAX_VALUE).then(() => {\n   "], "files": ["ActsAbilityDelegatorCaseTest.test.js"], "is_white": " ", "desc": " "}]}