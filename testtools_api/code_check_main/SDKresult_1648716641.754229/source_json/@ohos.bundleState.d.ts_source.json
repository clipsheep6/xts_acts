{"subsystem_ch": "\u5168\u5c40\u8d44\u6e90\u8c03\u5ea6\u7ba1\u63a7\u5b50\u7cfb\u7edf", "subsystem_en": "resourceschedule", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.bundleState", "api": [{"api_class_name": "bundleState", "api_method_all": "declare namespace bundleState {\n\n    \n    interface BundleStateInfo {\n        \n        id: number;\n        \n        abilityInFgTotalTime?: number;\n        \n        abilityPrevAccessTime?: number;\n        \n        abilityPrevSeenTime?: number;\n        \n        abilitySeenTotalTime?: number;\n        \n        bundleName?: string;\n        \n        fgAbilityAccessTotalTime?: number;\n        \n        fgAbilityPrevAccessTime?: number;\n        \n        infosBeginTime?: number;\n        \n        infosEndTime?: number;\n\n        \n        merge(toMerge: BundleStateInfo): void;\n    }\n\n    \n     interface BundleActiveState {\n        \n        appUsagePriorityGroup?: number;\n        \n        bundleName?: string;\n        \n        indexOfLink?: string;\n        \n        nameOfClass?: string;\n        \n        stateOccurredTime?: number;\n        \n        stateType?: number;\n    }\n\n    \n    function isIdleState(bundleName: string, callback: AsyncCallback<boolean>): void;\n    function isIdleState(bundleName: string): Promise<boolean>;\n\n    \n    function queryAppUsagePriorityGroup(callback: AsyncCallback<number>): void;\n    function queryAppUsagePriorityGroup(): Promise<number>;\n\n    \n     interface BundleActiveInfoResponse {\n        [key: string]: BundleStateInfo;\n    }\n\n    \n    function queryBundleStateInfos(begin: number, end: number, callback: AsyncCallback<BundleActiveInfoResponse>): void;\n    function queryBundleStateInfos(begin: number, end: number): Promise<BundleActiveInfoResponse>;\n\n    \n    export enum IntervalType {\n        \n        BY_OPTIMIZED = 0,\n\n        \n        BY_DAILY = 1,\n\n        \n        BY_WEEKLY = 2,\n\n        \n        BY_MONTHLY = 3,\n\n        \n        BY_ANNUALLY = 4\n    }\n\n    \n    function queryBundleStateInfoByInterval(byInterval: IntervalType, begin: number, end: number, callback: AsyncCallback<Array<BundleStateInfo>>): void;\n    function queryBundleStateInfoByInterval(byInterval: IntervalType, begin: number, end: number): Promise<Array<BundleStateInfo>>;\n\n    \n    function queryBundleActiveStates(begin: number, end: number, callback: AsyncCallback<Array<BundleActiveState>>): void;\n    function queryBundleActiveStates(begin: number, end: number): Promise<Array<BundleActiveState>>;\n\n    \n    function queryCurrentBundleActiveStates(begin: number, end: number, callback: AsyncCallback<Array<BundleActiveState>>): void;\n    function queryCurrentBundleActiveStates(begin: number, end: number): Promise<Array<BundleActiveState>>;\n}", "api_method_name": "bundleState", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 45, "since": 0, "api_used": "\u662f", "lines": ["", "ime: 0\n\t\t\t};\n\t\t\tlet bundleStateInfo2 = {\n\t\t\t\tbundle", "\t\tconsole.log('test bundleStateInfo merge' + res[0]", "defined) {\n\t\t\t\t\tlet bundleStateInfo = {\n\t\t\t\t\t\tbundl", "www.explace.com'] = bundleStateInfo1;\n\t\t\t\tres['www.", "Equal(true);\n\t\t\tlet bundleStateInfo1 = {\n\t\t\t\tbundle", "       let value1 = bundleState.IntervalType.BY_WEE", "0000000000;\n        bundleState.queryCurrentBundleA", "--------');\n        bundleState.queryAppUsagePriori", "tatistics';\n        bundleState.isIdleState(bundleN", "\t\tconsole.log('test bundleStateInfo merge')\n\t\t\t\t}\n ", "['www.baidu.com'] = bundleStateInfo2;\n\t\t\t\tfor(let k", "0000000000;\n        bundleState.queryBundleActiveSt", "       let value1 = bundleState.IntervalType.BY_DAI", "rge' + res[0].merge(bundleStateInfo));\n\t\t\t\t} else {", "       let value1 = bundleState.IntervalType.BY_OPT", "       let value1 = bundleState.IntervalType.BY_ANN", "       let value1 = bundleState.IntervalType.BY_MON", "0000000000;\n        bundleState.queryBundleStateInf", "leState from '@ohos.bundleState'\n\nimport {describe,"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "bundleState", "api_method_name": "isIdleState", "api_method_all": "function isIdleState(bundleName: string, callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["info('BUNDLE_ACTIVE isIdleState callback success.');\n                ex", "        bundleState.isIdleState(bundleName, (err, res) => {\n           ", "info('BUNDLE_ACTIVE isIdleState promise failure.');\n        });\n\n      ", "info('BUNDLE_ACTIVE isIdleState callback failure.');\n            }\n    ", "info('BUNDLE_ACTIVE isIdleState promise success.');\n            expect("], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "bundleState", "api_method_name": "isIdleState", "api_method_all": "function isIdleState(bundleName: string): Promise<boolean>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["        bundleState.isIdleState(bundleName).then((res) => {\n           "], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "bundleState", "api_method_name": "queryAppUsagePriorityGroup", "api_method_all": "function queryAppUsagePriorityGroup(callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["info('BUNDLE_ACTIVE queryAppUsagePriorityGroup callback success.');\n                ex", "info('BUNDLE_ACTIVE queryAppUsagePriorityGroup promise failure.');\n        });\n\n      ", "        bundleState.queryAppUsagePriorityGroup((err, res) => {\n            if(err.code", "info('BUNDLE_ACTIVE queryAppUsagePriorityGroup promise success.');\n            expect(", "info('BUNDLE_ACTIVE queryAppUsagePriorityGroup callback failure.');\n            }\n    "], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "bundleState", "api_method_name": "queryAppUsagePriorityGroup", "api_method_all": "function queryAppUsagePriorityGroup(): Promise<number>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["        bundleState.queryAppUsagePriorityGroup().then( res => {\n            console.in"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "bundleState", "api_method_name": "queryBundleStateInfos", "api_method_all": "function queryBundleStateInfos(begin: number, end: number, callback: AsyncCallback<BundleActiveInfoResponse>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["info('BUNDLE_ACTIVE queryBundleStateInfos promise success.');\n            expect(", "info('BUNDLE_ACTIVE queryBundleStateInfos callback success.');\n                ex", "info('BUNDLE_ACTIVE queryBundleStateInfos callback failure.');\n            }\n    ", "info('BUNDLE_ACTIVE queryBundleStateInfos promise failure.');\n        });\n\n      ", "        bundleState.queryBundleStateInfos(beginTime, endTime, (err, res) => {\n   "], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "bundleState", "api_method_name": "queryBundleStateInfos", "api_method_all": "function queryBundleStateInfos(begin: number, end: number): Promise<BundleActiveInfoResponse>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["        bundleState.queryBundleStateInfos(beginTime, endTime).then((res) => {\n   "], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "bundleState", "api_method_name": "queryBundleStateInfoByInterval", "api_method_all": "function queryBundleStateInfoByInterval(byInterval: IntervalType, begin: number, end: number, callback: AsyncCallback<Array<BundleStateInfo>>): void;", "api_type": "callback", "api_args_count": 4, "api_level": null, "api_used_count": 17, "since": 7, "api_used": "\u662f", "lines": ["   * @tc.desc: test queryBundleStateInfoByInterval callback.\n     * @tc.type: FUNC\n     * ", "info('BUNDLE_ACTIVE queryBundleStateInfoByInterval promise success.');\n            expect(", "info('BUNDLE_ACTIVE queryBundleStateInfoByInterval callback failure.');\n            }\n    ", "        bundleState.queryBundleStateInfoByInterval(intervalType, beginTime, endTime, (err,", "        bundleState.queryBundleStateInfoByInterval(0, beginTime, endTime, (err, res) => {\n", "info('BUNDLE_ACTIVE queryBundleStateInfoByInterval promise failure.');\n        });\n\n      ", "info('BUNDLE_ACTIVE queryBundleStateInfoByInterval callback success.');\n                ex"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "bundleState", "api_method_name": "queryBundleStateInfoByInterval", "api_method_all": "function queryBundleStateInfoByInterval(byInterval: IntervalType, begin: number, end: number): Promise<Array<BundleStateInfo>>;", "api_type": "Promise", "api_args_count": 3, "api_level": null, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["        bundleState.queryBundleStateInfoByInterval(intervalType, beginTime, endTime).then("], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "bundleState", "api_method_name": "queryBundleActiveStates", "api_method_all": "function queryBundleActiveStates(begin: number, end: number, callback: AsyncCallback<Array<BundleActiveState>>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 11, "since": 7, "api_used": "\u662f", "lines": ["info('BUNDLE_ACTIVE queryBundleActiveStates promise success.');\n            expect(", "info('BUNDLE_ACTIVE queryBundleActiveStates promise failure.');\n        });\n\n      ", "        bundleState.queryBundleActiveStates(beginTime, endTime, (err, res) => {\n   ", "info('BUNDLE_ACTIVE queryBundleActiveStates callback success.');\n                ex", "info('BUNDLE_ACTIVE queryBundleActiveStates callback failure.');\n            }\n    "], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "bundleState", "api_method_name": "queryBundleActiveStates", "api_method_all": "function queryBundleActiveStates(begin: number, end: number): Promise<Array<BundleActiveState>>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["        bundleState.queryBundleActiveStates(beginTime, endTime).then((res) => {\n   "], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "bundleState", "api_method_name": "queryCurrentBundleActiveStates", "api_method_all": "function queryCurrentBundleActiveStates(begin: number, end: number, callback: AsyncCallback<Array<BundleActiveState>>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 5, "since": 0, "api_used": "\u662f", "lines": ["info('BUNDLE_ACTIVE queryCurrentBundleActiveStates callback success.');\n                ex", "        bundleState.queryCurrentBundleActiveStates(beginTime, endTime, (err, res) => {\n   ", "info('BUNDLE_ACTIVE queryCurrentBundleActiveStates promise success.');\n            expect(", "info('BUNDLE_ACTIVE queryCurrentBundleActiveStates callback failure.');\n            }\n    ", "info('BUNDLE_ACTIVE queryCurrentBundleActiveStates promise failure.');\n        });\n\n      "], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "bundleState", "api_method_name": "queryCurrentBundleActiveStates", "api_method_all": "function queryCurrentBundleActiveStates(begin: number, end: number): Promise<Array<BundleActiveState>>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["        bundleState.queryCurrentBundleActiveStates(beginTime, endTime).then((res) => {\n   "], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleStateInfo", "api_method_all": "interface BundleStateInfo {\n        \n        id: number;\n        \n        abilityInFgTotalTime?: number;\n        \n        abilityPrevAccessTime?: number;\n        \n        abilityPrevSeenTime?: number;\n        \n        abilitySeenTotalTime?: number;\n        \n        bundleName?: string;\n        \n        fgAbilityAccessTotalTime?: number;\n        \n        fgAbilityPrevAccessTime?: number;\n        \n        infosBeginTime?: number;\n        \n        infosEndTime?: number;\n\n        \n        merge(toMerge: BundleStateInfo): void;\n    }", "api_method_name": "BundleStateInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 47, "since": 7, "api_used": "\u662f", "lines": ["   * @tc.desc: test BundleStateInfo abilityPrevSeenTime", "\t\tconsole.log('test BundleStateInfo id :' + res[0].id)\n", "   * @tc.desc: test BundleStateInfo infosBeginTime.\n   ", "\t\tconsole.log('test BundleStateInfo infosBeginTime :' +", "@tc.desc: test queryBundleStateInfoByInterval callback.", "\t\tconsole.log('test BundleStateInfo abilityInFgTotalTim", "   * @tc.desc: test BundleStateInfo abilitySeenTotalTim", "\t\tconsole.log('test BundleStateInfo infosEndTime :' + r", "   bundleState.queryBundleStateInfos(beginTime, endTime", "'BUNDLE_ACTIVE queryBundleStateInfoByInterval callback ", "'BUNDLE_ACTIVE queryBundleStateInfos promise failure.')", "   bundleState.queryBundleStateInfoByInterval(0, beginT", "\t\tconsole.log('test BundleStateInfo fgAbilityPrevAccess", "   * @tc.desc: test BundleStateInfo fgAbilityPrevAccess", "'BUNDLE_ACTIVE queryBundleStateInfos callback success.'", "   * @tc.desc: test BundleStateInfo fgAbilityAccessTota", "'BUNDLE_ACTIVE queryBundleStateInfoByInterval promise f", "\t\tconsole.log('test BundleStateInfo abilityPrevSeenTime", "   * @tc.desc: test BundleStateInfo id.\n     * @tc.type", "\t\tconsole.log('test BundleStateInfo fgAbilityAccessTota", "   * @tc.desc: test BundleStateInfo merge.\n     * @tc.t", "   * @tc.desc: test BundleStateInfo infosEndTime.\n     ", "   * @tc.desc: test BundleStateInfo abilityInFgTotalTim", "   bundleState.queryBundleStateInfoByInterval(intervalT", "   * @tc.desc: test BundleStateInfo bundleName.\n     * ", "'BUNDLE_ACTIVE queryBundleStateInfos callback failure.'", "   * @tc.desc: test BundleStateInfo abilityPrevAccessTi", "'BUNDLE_ACTIVE queryBundleStateInfos promise success.')", "\t\tconsole.log('test BundleStateInfo abilitySeenTotalTim", "\t\tconsole.log('test BundleStateInfo abilityPrevAccessTi", "\t\tconsole.log('test BundleStateInfo key :' + k + ',valu", "\t\tconsole.log('test BundleStateInfo bundleName :' + res", "'BUNDLE_ACTIVE queryBundleStateInfoByInterval promise s"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleStateInfo", "api_method_name": "merge", "api_method_all": "merge(toMerge: BundleStateInfo): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["est bundleStateInfo merge')\n\t\t\t\t}\n           ", "nfo merge' + res[0].merge(bundleStateInfo));\n", "est BundleStateInfo merge.\n     * @tc.type: F", "est bundleStateInfo merge' + res[0].merge(bun", "TotalTime: 0,\n\t\t\t\t\t\tmerge : function (toMerge"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleStateInfo", "api_method_name": "id", "api_method_all": "id: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 17, "since": 7, "api_used": "\u662f", "lines": ["ned) {\n\t\t\t\t\tres = [{id: 1}];\n\t\t\t\t}\n\t\t\t\tcon", "tend({\n            'id': 'extend'\n        ", "est BundleStateInfo id.\n     * @tc.type: F", "\tbundleName: 'www.baidu.com',\n\t\t\t\tabilityP", "s = [{indexOfLink: 'id'}];\n\t\t\t\t}\n\t\t\t\tconso", "st.abilityName\",\n\t\t\tidleWaitTime: 3000,\n  ", "rtBackgroundRunning(id, request, conTaskCa", "est BundleStateInfo id :' + res[0].id)\n   ", "{bundleName: 'www.baidu.com'}];\n\t\t\t\t}\n\t\t\t\t", "fo1;\n\t\t\t\tres['www.baidu.com'] = bundleStat", " }\n\n            let id = 1;\n\n            p", "rtBackgroundRunning(id, request).then((dat", "Info id :' + res[0].id)\n            } else"], "files": ["WorkScheduler.test.js", "ContinuousTaskJsunit.test.js", "DeviceUsageStatisticsJsunit.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleStateInfo", "api_method_name": "abilityInFgTotalTime", "api_method_all": "abilityInFgTotalTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 0, "api_used": "\u662f", "lines": ["ccessTime: 0,\n\t\t\t\t\t\tabilityInFgTotalTime: 0,\n\t\t\t\t\t\tmerge : f", "est BundleStateInfo abilityInFgTotalTime.\n     * @tc.type: F", "ned) {\n\t\t\t\t\tres = [{abilityInFgTotalTime: 0}];\n\t\t\t\t}\n\t\t\t\tcon", "ccessTime: 0,\n\t\t\t\t\t\tabilityInFgTotalTime: 0\n\t\t\t\t\t};\n\t\t\t\t\tres", "est BundleStateInfo abilityInFgTotalTime :' + res[0].ability", "vAccessTime: 0,\n\t\t\t\tabilityInFgTotalTime: 0\n\t\t\t};\n\t\t\tlet bun", "talTime :' + res[0].abilityInFgTotalTime)\n            } else", "vAccessTime: 1,\n\t\t\t\tabilityInFgTotalTime: 1\n\t\t\t};\n\t\t\tif(res "], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleStateInfo", "api_method_name": "abilityPrevAccessTime", "api_method_all": "abilityPrevAccessTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 0, "api_used": "\u662f", "lines": ["essTime :' + res[0].abilityPrevAccessTime)\n            } else", "explace.com',\n\t\t\t\t\t\tabilityPrevAccessTime: 0,\n\t\t\t\t\t\tabilityIn", "w.explace.com',\n\t\t\t\tabilityPrevAccessTime: 0,\n\t\t\t\tabilityInFg", "www.baidu.com',\n\t\t\t\tabilityPrevAccessTime: 1,\n\t\t\t\tabilityInFg", "est BundleStateInfo abilityPrevAccessTime.\n     * @tc.type: F", "ned) {\n\t\t\t\t\tres = [{abilityPrevAccessTime: 0}];\n\t\t\t\t}\n\t\t\t\tcon", "est BundleStateInfo abilityPrevAccessTime :' + res[0].ability"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleStateInfo", "api_method_name": "abilityPrevSeenTime", "api_method_all": "abilityPrevSeenTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["ned) {\n\t\t\t\t\tres = [{abilityPrevSeenTime: 0}];\n\t\t\t\t}\n\t\t\t\tcon", "est BundleStateInfo abilityPrevSeenTime :' + res[0].ability", "est BundleStateInfo abilityPrevSeenTime.\n     * @tc.type: F", "eenTime :' + res[0].abilityPrevSeenTime)\n            } else"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleStateInfo", "api_method_name": "abilitySeenTotalTime", "api_method_all": "abilitySeenTotalTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["est BundleStateInfo abilitySeenTotalTime.\n     * @tc.type: F", "ned) {\n\t\t\t\t\tres = [{abilitySeenTotalTime: 0}];\n\t\t\t\t}\n\t\t\t\tcon", "talTime :' + res[0].abilitySeenTotalTime)\n            } else", "est BundleStateInfo abilitySeenTotalTime :' + res[0].ability"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleStateInfo", "api_method_name": "bundleName", "api_method_all": "bundleName?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 60, "since": 7, "api_used": "\u662f", "lines": ["Id: 13,\n            bundleName: \"ohos.acts.resourc", "t BundleActiveState bundleName.\n     * @tc.type: F", "t BundleActiveState bundleName :' + res[0].bundleN", "est BundleStateInfo bundleName.\n     * @tc.type: F", "kId: 8,\n            bundleName: \"ohos.acts.resourc", "eStateInfo2 = {\n\t\t\t\tbundleName: 'www.baidu.com',\n\t", "kId: 9,\n            bundleName: \"ohos.acts.resourc", "----');\n        let bundleName = 'com.explace.devi", "eStateInfo1 = {\n\t\t\t\tbundleName: 'www.explace.com',", "kId: 0,\n            bundleName: \"ohos.acts.resourc", "kId: 7,\n            bundleName: \"ohos.acts.resourc", "StateInfo = {\n\t\t\t\t\t\tbundleName: 'www.explace.com',", "                    bundleName: \"com.continuoustas", "kId: 6,\n            bundleName: \"ohos.acts.resourc", "leState.isIdleState(bundleName, (err, res) => {\n  ", "dleName :' + res[0].bundleName)\n            } else", "kId: 5,\n            bundleName: \"ohos.acts.resourc", "Id: 12,\n            bundleName: \"ohos.acts.resourc", "Id: -1,\n            bundleName: \"ohos.acts.resourc", "kId: 4,\n            bundleName: \"ohos.acts.resourc", "leState.isIdleState(bundleName).then((res) => {\n  ", "Id: 10,\n            bundleName: \"ohos.acts.resourc", "Id: 11,\n            bundleName: \"ohos.acts.resourc", "ned) {\n\t\t\t\t\tres = [{bundleName: 'www.baidu.com'}];", "\t\t\t\t\tres = [{\n\t\t\t\t\t\tbundleName: 'www.explace.com',", "ned) {\n\t\t\t\t\tres = [{bundleName: 'www.explace.com'}", "est BundleStateInfo bundleName :' + res[0].bundleN"], "files": ["WorkScheduler.test.js", "ContinuousTaskJsunit.test.js", "DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleStateInfo", "api_method_name": "fgAbilityAccessTotalTime", "api_method_all": "fgAbilityAccessTotalTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["est BundleStateInfo fgAbilityAccessTotalTime :' + res[0].fgAbili", "ned) {\n\t\t\t\t\tres = [{fgAbilityAccessTotalTime: 0}];\n\t\t\t\t}\n\t\t\t\tcon", "talTime :' + res[0].fgAbilityAccessTotalTime)\n            } else", "est BundleStateInfo fgAbilityAccessTotalTime.\n     * @tc.type: F"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleStateInfo", "api_method_name": "fgAbilityPrevAccessTime", "api_method_all": "fgAbilityPrevAccessTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["est BundleStateInfo fgAbilityPrevAccessTime :' + res[0].fgAbili", "est BundleStateInfo fgAbilityPrevAccessTime.\n     * @tc.type: F", "essTime :' + res[0].fgAbilityPrevAccessTime)\n            } else", "ned) {\n\t\t\t\t\tres = [{fgAbilityPrevAccessTime: 0}];\n\t\t\t\t}\n\t\t\t\tcon"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleStateInfo", "api_method_name": "infosBeginTime", "api_method_all": "infosBeginTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["est BundleStateInfo infosBeginTime :' + res[0].infosBe", "ginTime :' + res[0].infosBeginTime)\n            } else", "ned) {\n\t\t\t\t\tres = [{infosBeginTime: 0}];\n\t\t\t\t}\n\t\t\t\tcon", "est BundleStateInfo infosBeginTime.\n     * @tc.type: F"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleStateInfo", "api_method_name": "infosEndTime", "api_method_all": "infosEndTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["ned) {\n\t\t\t\t\tres = [{infosEndTime: 0}];\n\t\t\t\t}\n\t\t\t\tcon", "est BundleStateInfo infosEndTime.\n     * @tc.type: F", "est BundleStateInfo infosEndTime :' + res[0].infosEn", "EndTime :' + res[0].infosEndTime)\n            } else"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleActiveState", "api_method_all": "interface BundleActiveState {\n        \n        appUsagePriorityGroup?: number;\n        \n        bundleName?: string;\n        \n        indexOfLink?: string;\n        \n        nameOfClass?: string;\n        \n        stateOccurredTime?: number;\n        \n        stateType?: number;\n    }", "api_method_name": "BundleActiveState", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 30, "since": 7, "api_used": "\u662f", "lines": ["leState.queryCurrentBundleActiveStates(beginTime, endTime", "'BUNDLE_ACTIVE queryBundleActiveStates callback success.'", "\t\tconsole.log('test BundleActiveState bundleName :' + res", "   * @tc.desc: test BundleActiveState indexOfLink.\n     *", "_ACTIVE queryCurrentBundleActiveStates promise failure.')", "'BUNDLE_ACTIVE queryBundleActiveStates promise failure.')", "'BUNDLE_ACTIVE queryBundleActiveStates promise success.')", "\t\tconsole.log('test BundleActiveState indexOfLink :' + re", "   * @tc.desc: test BundleActiveState appUsagePriorityGro", "   * @tc.desc: test BundleActiveState nameOfClass.\n     *", "   * @tc.desc: test BundleActiveState stateOccurredTime.\n", "\t\tconsole.log('test BundleActiveState stateOccurredTime :", "\t\tconsole.log('test BundleActiveState nameOfClass :' + re", "_ACTIVE queryCurrentBundleActiveStates callback failure.'", "\t\tconsole.log('test BundleActiveState appUsagePriorityGro", "   bundleState.queryBundleActiveStates(beginTime, endTime", "'BUNDLE_ACTIVE queryBundleActiveStates callback failure.'", "\t\tconsole.log('test BundleActiveState stateType :' + res[", "_ACTIVE queryCurrentBundleActiveStates promise success.')", "_ACTIVE queryCurrentBundleActiveStates callback success.'", "   * @tc.desc: test BundleActiveState bundleName.\n     * ", "   * @tc.desc: test BundleActiveState stateType.\n     * @"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleActiveState", "api_method_name": "appUsagePriorityGroup", "api_method_all": "appUsagePriorityGroup?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["tyGroup :' + res[0].appUsagePriorityGroup)\n            } else", "t BundleActiveState appUsagePriorityGroup :' + res[0].appUsag", "t BundleActiveState appUsagePriorityGroup.\n     * @tc.type: F", "ned) {\n\t\t\t\t\tres = [{appUsagePriorityGroup: 0}];\n\t\t\t\t}\n\t\t\t\tcon"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleActiveState", "api_method_name": "bundleName", "api_method_all": "bundleName?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 60, "since": 7, "api_used": "\u662f", "lines": ["Id: 13,\n            bundleName: \"ohos.acts.resourc", "t BundleActiveState bundleName.\n     * @tc.type: F", "t BundleActiveState bundleName :' + res[0].bundleN", "est BundleStateInfo bundleName.\n     * @tc.type: F", "kId: 8,\n            bundleName: \"ohos.acts.resourc", "eStateInfo2 = {\n\t\t\t\tbundleName: 'www.baidu.com',\n\t", "kId: 9,\n            bundleName: \"ohos.acts.resourc", "----');\n        let bundleName = 'com.explace.devi", "eStateInfo1 = {\n\t\t\t\tbundleName: 'www.explace.com',", "kId: 0,\n            bundleName: \"ohos.acts.resourc", "kId: 7,\n            bundleName: \"ohos.acts.resourc", "StateInfo = {\n\t\t\t\t\t\tbundleName: 'www.explace.com',", "                    bundleName: \"com.continuoustas", "kId: 6,\n            bundleName: \"ohos.acts.resourc", "leState.isIdleState(bundleName, (err, res) => {\n  ", "dleName :' + res[0].bundleName)\n            } else", "kId: 5,\n            bundleName: \"ohos.acts.resourc", "Id: 12,\n            bundleName: \"ohos.acts.resourc", "Id: -1,\n            bundleName: \"ohos.acts.resourc", "kId: 4,\n            bundleName: \"ohos.acts.resourc", "leState.isIdleState(bundleName).then((res) => {\n  ", "Id: 10,\n            bundleName: \"ohos.acts.resourc", "Id: 11,\n            bundleName: \"ohos.acts.resourc", "ned) {\n\t\t\t\t\tres = [{bundleName: 'www.baidu.com'}];", "\t\t\t\t\tres = [{\n\t\t\t\t\t\tbundleName: 'www.explace.com',", "ned) {\n\t\t\t\t\tres = [{bundleName: 'www.explace.com'}", "est BundleStateInfo bundleName :' + res[0].bundleN"], "files": ["WorkScheduler.test.js", "ContinuousTaskJsunit.test.js", "DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleActiveState", "api_method_name": "indexOfLink", "api_method_all": "indexOfLink?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["t BundleActiveState indexOfLink :' + res[0].indexOf", "t BundleActiveState indexOfLink.\n     * @tc.type: F", "xOfLink :' + res[0].indexOfLink)\n            } else", "ned) {\n\t\t\t\t\tres = [{indexOfLink: 'id'}];\n\t\t\t\t}\n\t\t\t\t"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleActiveState", "api_method_name": "nameOfClass", "api_method_all": "nameOfClass?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["t BundleActiveState nameOfClass :' + res[0].nameOfC", "OfClass :' + res[0].nameOfClass)\n            } else", "t BundleActiveState nameOfClass.\n     * @tc.type: F", "ned) {\n\t\t\t\t\tres = [{nameOfClass: 'BundleStates'}];\n"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleActiveState", "api_method_name": "stateOccurredTime", "api_method_all": "stateOccurredTime?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["t BundleActiveState stateOccurredTime.\n     * @tc.type: F", "ned) {\n\t\t\t\t\tres = [{stateOccurredTime: 0}];\n\t\t\t\t}\n\t\t\t\tcon", "t BundleActiveState stateOccurredTime :' + res[0].stateOc", "redTime :' + res[0].stateOccurredTime)\n            } else"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleActiveState", "api_method_name": "stateType", "api_method_all": "stateType?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["ned) {\n\t\t\t\t\tres = [{stateType: 0}];\n\t\t\t\t}\n\t\t\t\tcon", "t BundleActiveState stateType.\n     * @tc.type: F", "ateType :' + res[0].stateType)\n            } else", "t BundleActiveState stateType :' + res[0].stateTy"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleActiveInfoResponse", "api_method_all": "interface BundleActiveInfoResponse {\n        [key: string]: BundleStateInfo;\n    }", "api_method_name": "BundleActiveInfoResponse", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "BundleActiveInfoResponse", "api_method_name": "key", "api_method_all": "[key: string]: BundleStateInfo", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["nse BundleStateinfo key.\n     * @tc.type: F", "est BundleStateInfo key :' + k + ',value is"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "IntervalType", "api_method_all": "export enum IntervalType {\n        \n        BY_OPTIMIZED = 0,\n\n        \n        BY_DAILY = 1,\n\n        \n        BY_WEEKLY = 2,\n\n        \n        BY_MONTHLY = 3,\n\n        \n        BY_ANNUALLY = 4\n    }", "api_method_name": "IntervalType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["alue1 = bundleState.IntervalType.BY_WEEKLY;\n        ", "alue1 = bundleState.IntervalType.BY_DAILY;\n        e", "alue1 = bundleState.IntervalType.BY_ANNUALLY;\n      ", "alue1 = bundleState.IntervalType.BY_MONTHLY;\n       ", "alue1 = bundleState.IntervalType.BY_OPTIMIZED;\n     "], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "IntervalType", "api_method_name": "BY_OPTIMIZED", "api_method_all": "BY_OPTIMIZED = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["eState.IntervalType.BY_OPTIMIZED;\n        expect(val", ": test intervalType BY_OPTIMIZED\n     * @tc.type: FU"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "IntervalType", "api_method_name": "BY_DAILY", "api_method_all": "BY_DAILY = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": [": test intervalType BY_DAILY\n     * @tc.type: FU", "eState.IntervalType.BY_DAILY;\n        expect(val"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "IntervalType", "api_method_name": "BY_WEEKLY", "api_method_all": "BY_WEEKLY = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["eState.IntervalType.BY_WEEKLY;\n        expect(val", ": test intervalType BY_WEEKLY\n     * @tc.type: FU"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "IntervalType", "api_method_name": "BY_MONTHLY", "api_method_all": "BY_MONTHLY = 3,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["eState.IntervalType.BY_MONTHLY;\n        expect(val", ": test intervalType BY_MONTHLY\n     * @tc.type: FU"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "IntervalType", "api_method_name": "BY_ANNUALLY", "api_method_all": "BY_ANNUALLY = 4", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["eState.IntervalType.BY_ANNUALLY;\n        expect(val", ": test intervalType BY_ANNUALLY\n     * @tc.type: FU"], "files": ["DeviceUsageStatisticsJsunit.test.js"], "is_white": " ", "desc": " "}]}