{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@internal\\component\\ets\\web", "api": [{"api_class_name": "MessageLevel", "api_method_all": "declare enum MessageLevel {\n  \n  Debug,\n\n  \n  Error,\n\n  \n  Info,\n\n  \n  Log,\n\n  \n  Warn,\n}", "api_method_name": "MessageLevel", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["       if (level == MessageLevel.Debug) {\n          ", "evel = e.message.getMessageLevel()\n          if (lev", "} else if (level == MessageLevel.Info) {\n           ", "            level = MessageLevel.Warn\n            co", "} else if (level == MessageLevel.Error) {\n          ", "} else if (level == MessageLevel.Log) {\n            "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageLevel", "api_method_name": "Debug", "api_method_all": "Debug,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["vel == MessageLevel.Debug) {\n            cons", " : onConsole: level Debug\");\n          } else"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageLevel", "api_method_name": "Error", "api_method_all": "Error,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 36, "since": 8, "api_used": "\u662f", "lines": [" let errorCallback: ErrorCallback<void> = (er", "    console.info(\"onError\");\n        })\n\n    ", "      function4.showError({ error: \"you input", "le.log(\"webTest : onErrorReceive .error : \" +", "    })\n          .onError(() => {\n           ", "   })\n        .onSslErrorReceive((e) => {\n   ", "og(\"webTest : onHttpErrorReceive .request : \"", "log(\"webTest : onSslErrorReceive .error : \" +", "      })\n        .onError(() => {\n          c", "      })\n        .onError((error)=>{\n        ", "or : \" + e.error.getErrorInfo());\n          c", "log(\"webTest : onSslErrorReceive .handle : \" ", "vel == MessageLevel.Error) {\n            cons", "og(\"webTest : onHttpErrorReceive .error : \" +", "      })\n        .onErrorReceive((e) => {\n   ", " : onConsole: level Error\");\n          } else", "or : \" + e.error.getErrorCode());\n        })\n", "  })\n        .onHttpErrorReceive((e) => {\n   ", "Test(errorCallback: ErrorCallback<void>): voi", "le.log(\"webTest : onErrorReceive .request : \""], "files": ["Video.ets", "WebPage.ets", "Image.ets", "BasicJsunit.test.ets", "index.js", "FormComponentPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageLevel", "api_method_name": "Info", "api_method_all": "Info,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 127, "since": 8, "api_used": "\u662f", "lines": ["ectInfo is: \" + rectInfo);\n    this.rect_lef", "SON.parse('[' + rectInfo[1] + ']')[1]\n    re", "= ''\n};\n\nclass ChildInfo {\n  text: string = ", "entTest_0100 rectOneInfo is \" + JSON.stringi", "gEventTest_0100 rectInfo is \" + JSON.stringi", "      title: 'Title Info',\n            butto", "art((event: ItemDragInfo, itemIndex: number)", "gEventTest_0500 rectInfo is \" + JSON.stringi", "InspectorByKey] rectInfo is: \" + rectInfo);\n", "gEventTest_0400 rectInfo is \" + JSON.stringi", "SON.parse('[' + rectInfo[0] + ']')[0]\n    th", "              \"extraInfo\": \"aaa\",\n          ", "r';\n\nclass ContainerInfo {\n  label: string =", "entTest_0200 rectOneInfo is \" + JSON.stringi", "() {\n  describe('appInfoTest', function () {", "(obj));\n    let rectInfo = JSON.parse('[' + ", "SON.parse('[' + rectInfo[0] + ']')[1]\n    th", "container: ContainerInfo[] = [\n    { label: ", "      title: 'Title Info',\n            messa", "gEventTest_0300 rectInfo is \" + JSON.stringi", "entTest_0300 rectOneInfo is \" + JSON.stringi", "  message: 'Message Info',\n            butto", "SON.parse('[' + rectInfo[1] + ']')[0]\n    th", "entTest_0400 rectOneInfo is \" + JSON.stringi", "entTest_0500 rectOneInfo is \" + JSON.stringi", "gEventTest_0200 rectInfo is \" + JSON.stringi", "     var a = app.getInfo();\n      console.lo"], "files": ["ohosPrompt.ets", "Utils.ets", "VideoJsunit.test.ets", "configuration.ets", "SelectJsunit.test.ets", "DragEventJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "SourceTypeJsunit.test.ets", "Text.ets", "TextPickerJsunit.test.ets", "PanGestureJsunit.test.ets", "PolygonJsunit.test.ets", "FocusJsunit.test.ets", "SystemAppJsunit.test.ets", "PathJsunit.test.ets", "OhosPromptJsunit.test.ets", "TransFormJsunit.test.ets", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "SliderJsunit.test.ets", "SearchJsunit.test.ets", "layoutConstraints.ets", "VisibilityJsunit.test.ets", "TextTimerJsunit.test.ets", "TapGesture.test.ets", "SystempromptJsunit.test.ets", "WebPage.ets", "TextClockJsunit.test.ets", "List.ets", "ResponseRegionJsunit.test.ets", "DatePickerJsunit.test.ets", "dragEvent2.ets", "PieceJsunit.test.ets", "PolylineJsunit.test.ets", "basicabilityapi.test.js", "TextInputJsunit.test.ets", "PriorityGestureJsunit.test.ets", "PanGesture.ets", "TextAreaJsunit.test.ets", "CalendarJsunit.test.ets", "systemPrompt.ets", "NavigationJsunit.test.ets", "SubscribedAbstractPropertyJsunit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageLevel", "api_method_name": "Log", "api_method_all": "Log,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 10, "since": 8, "api_used": "\u662f", "lines": ["vel == MessageLevel.Log) {\n            cons", " : onConsole: level Log\");\n          } else", "ctExtend, InstrumentLog, ReportExtend} from"], "files": ["WebPage.ets", "index.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageLevel", "api_method_name": "Warn", "api_method_all": "Warn,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["evel = MessageLevel.Warn\n            console", " : onConsole: level Warn\");\n          }\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MixedMode", "api_method_all": "declare enum MixedMode {\n  \n  All,\n\n  \n  Compatible,\n\n  \n  None,\n}", "api_method_name": "MixedMode", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["   this.mixedMode = MixedMode.Compatible\n        ", "edMode: MixedMode = MixedMode.None\n  @State cache", "   this.mixedMode = MixedMode.None\n          })\n ", "   this.mixedMode = MixedMode.All\n          })\n  ", "  @State mixedMode: MixedMode = MixedMode.None\n  "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MixedMode", "api_method_name": "All", "api_method_all": "All,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 613, "since": 8, "api_used": "\u662f", "lines": ["rt {describe, beforeAll, beforeEach, afterE", "ch, afterEach, afterAll, it, expect} from \""], "files": ["listItemGroupProps.test.js", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "CommonJsunit.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "transition.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "EnmusFlexAlignJsunit.test.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "SystemAppJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "PanGesture.ets", "svgProps.test.js", "labelProps.test.js", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "ratingProps.test.js", "stepperProps.test.js", "MotionPathJsunit.test.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "popupProps.test.js", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "BasicJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "SubscribedAbstractPropertyJsunit.test.ets", "gridColProps.test.js", "buttonProps.test.js", "animateProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "panDirection.ets", "ContentStorage.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "AnimationStatusJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "pickerViewProps.test.js", "CircleJsunit.test.ets", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "WebPage.ets", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "polygonProps.test.js", "swiperProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MixedMode", "api_method_name": "Compatible", "api_method_all": "Compatible,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["xedMode = MixedMode.Compatible\n          })\n      "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MixedMode", "api_method_name": "None", "api_method_all": "None,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 5542, "since": 8, "api_used": "\u662f", "lines": ["('GradientDirection.None');\n      console.in", ".objectFit(ImageFit.None)\n          .objectR", "rtEqual(\"EdgeEffect.None\");\n      done();\n  ", ".objectFit(ImageFit.None).width(110).height(", ": GradientDirection.None\n          }\n       ", "ton === MouseButton.None) {\n            this", "(ImageInterpolation.None)\n          .renderM", "\"TextDecorationType.None\\\",\\\"color\\\":\\\"#FFFF", "Effect = EdgeEffect.None\n\n  build() {\n    St", "'ImageInterpolation.None')\n      expect(obj.", " .editable(EditMode.None)\n          .key('li", "   \"sticky\": Sticky.None\n          }\n       ", "assertEqual('Sticky.None');\n      console.in", "n = ScrollDirection.None\n  @State scrollBarC", "sibility(Visibility.None)\n        .fontWeigh", "fillMode = FillMode.None\n          try {\n   ", "this.eventAction = 'None'\n          }\n      ", " TextDecorationType.None;\n\n  build() {\n    F", "rtEqual('EdgeEffect.None');\n      expect(obj", "flow\": TextOverflow.None,\n          }\n      ", " TextDecorationType.None, color: Color.Red }", "rtEqual(\"Visibility.None\")\n      expect(obj.", "geEffect(EdgeEffect.None)\n        .chainAnim", "bility\": Visibility.None,\n          }\n      ", "FillMode = FillMode.None\n  @State reverse: b", "sertEqual('ImageFit.None')\n      expect(obj.", " .fillMode(FillMode.None).iterations(this.it", "ion === MouseAction.None) {\n            this", "erflow(TextOverflow.None)\n        .textCase(", "          .overlay('None', { align: Alignmen", "\"TextDecorationType.None\", color: \"#FFFF0000", " TextDecorationType.None, \"color\": Color.Red", "Equal('TextOverflow.None');\n      console.in", "rtEqual('Visibility.None');\n      console.in", "ssertEqual(FillMode.None);\n      }\n      let", "ble(ScrollDirection.None)\n      .scrollBar(B", "Effect = EdgeEffect.None;\n  @State chainAnim", "al('ScrollDirection.None')\n      expect(obj.", "'TextDecorationType.None');\n      expect(dec", "       Text('sticky:None , item1111')\n      ", "\"TextDecorationType.Noneh\", color: \"#FFFF000", "this.eventButton = 'None'\n          }\n      ", "number = EdgeEffect.None\n  @State autoPlay: ", "    }.sticky(Sticky.None)\n          .editabl"], "files": ["listItemGroupProps.test.js", "ImageJsunit.test.ets", "dividerProps.test.js", "tabContentProps.test.js", "ListItemJsunit.test.ets", "textProps.test.js", "toolbarProps.test.js", "imageFit.ets", "searchProps.test.js", "spanProps.test.js", "toolbarItemProps.test.js", "badgeProps.test.js", "FillModeJsunit.test.ets", "dialogProps.test.js", "Image.ets", "formProps.test.js", "ListItem.ets", "stackProps.test.js", "Text.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "refreshProps.test.js", "Scroll.ets", "text.ets", "canvasProps.test.js", "VisibilityJsunit.test.ets", "edgeEffect.ets", "richtextProps.test.js", "labelProps.test.js", "image.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "gridContainerProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "marqueeProps.test.js", "imageAnimatorProps.test.js", "tabsProps.test.js", "qrcodeProps.test.js", "popupProps.test.js", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "list.ets", "List.ets", "optionProps.test.js", "animateTransformProps.test.js", "pieceProps.test.js", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "textareaProps.test.js", "ScrollJsunit.test.ets", "gridColProps.test.js", "imageAnimator.ets", "span.ets", "buttonProps.test.js", "animateProps.test.js", "mouseEvent.ets", "pickerViewProps.test.js", "divProps.test.js", "switchProps.test.js", "animationStatus.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "chartProps.test.js", "sliderProps.test.js", "swiperProps.test.js", "WebPage.ets", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "panelProps.test.js", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "HitTestType", "api_method_all": "declare enum HitTestType {\n  \n  EditText,\n\n  \n  Email,\n\n  \n  HttpAnchor,\n\n  \n  HttpAnchorImg,\n\n  \n  Img,\n\n  \n  Map,\n\n  \n  Phone,\n\n  \n  Unknown,\n}", "api_method_name": "HitTestType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 10, "since": 8, "api_used": "\u662f", "lines": ["Test: HitTestType = HitTestType.Unknown\n  controlle", "e if (getHitTest == HitTestType.Http) {\n           ", "  if (getHitTest == HitTestType.Edit) {\n           ", "e if (getHitTest == HitTestType.Email) {\n          ", "e if (getHitTest == HitTestType.Phone) {\n          ", " @State getHitTest: HitTestType = HitTestType.Unkno", "e if (getHitTest == HitTestType.HttpImg) {\n        ", "       getHitTest = HitTestType.Unknown\n           ", "e if (getHitTest == HitTestType.Map) {\n            ", "e if (getHitTest == HitTestType.Img) {\n            "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "HitTestType", "api_method_name": "EditText", "api_method_all": "EditText,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "HitTestType", "api_method_name": "Email", "api_method_all": "Email,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 29, "since": 8, "api_used": "\u662f", "lines": [".name      testInputEmailPlaceholderNone\n    ", "('this getHitTest : Email');\n            } el", "()\n        this.typeEmail = this.$element(\"ty", "lobalThis.value.typeEmail);\n        console.i", " \"type\": 'InputType.Email',\n          }\n     ", "sole.info('testInputEmailPlaceholder START');", "ypeEmail : this.typeEmail, typeDate : this.ty", "*/\n    it('testInputEmailPlaceholderNone', 0,", "e      testInputTypeEmail\n     * @tc.desc    ", "ertEqual('InputType.Email')\n      expect(obj.", "*/\n    it('testInputEmailPlaceholder', 0, asy", " this.typeText, typeEmail : this.typeEmail, t", ": null,\n        typeEmail : null,\n        typ", " this.$element(\"typeEmail\").getInspector()\n  ", ".name      testInputEmailPlaceholder\n     * @", "   it('testInputTypeEmail', 0, async function", "d).assertEqual('typeEmail')\n        expect(ob", "Test == HitTestType.Email) {\n              co", "sole.info('testInputEmailPlaceholderNone STAR", "    .type(InputType.Email)\n          .enterKe", ".info('testInputTypeEmail START');\n        co"], "files": ["TextInputJsunit.test.ets", "TextInput.ets", "WebPage.ets", "inputProps.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "HitTestType", "api_method_name": "HttpAnchor", "api_method_all": "HttpAnchor,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "HitTestType", "api_method_name": "HttpAnchorImg", "api_method_all": "HttpAnchorImg,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "HitTestType", "api_method_name": "Img", "api_method_all": "Img,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["is getHitTest : HttpImg');\n            } el", "('this getHitTest : Img');\n            } el", "Test == HitTestType.Img) {\n              co", " == HitTestType.HttpImg) {\n              co"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "HitTestType", "api_method_name": "Map", "api_method_all": "Map,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 26, "since": 8, "api_used": "\u662f", "lines": ["uilder\" : this.pixelMapBuilder(),\n         ", "ap() {\n    let pixelMap = this.context.getP", "Test == HitTestType.Map) {\n              co", "his.context.setPixelMap();\n  }\n\n  getPixelM", "   return this.pixelMapBuilder();\n         ", "h();\n  }\n\n  setPixelMap() {\n    this.contex", " 0\n\n  @Builder pixelMapBuilder() {\n    Colu", "p();\n  }\n\n  getPixelMap() {\n    let pixelMa", "o(\"[canvas] getPixelMap ----\" + JSON.string", "JSON.stringify(pixelMap));\n  }\n}", "   \"pixelMap\" :PixelMapMock.release()\n     ", "('this getHitTest : Map');\n            } el", "   return this.pixelMapBuilder;\n        })\n", "       this.getPixelMap();\n            })\n ", "his.context.getPixelMap(10, 10, 80, 80);\n  ", "              \"pixelMap\" :PixelMapMock.rele", "   return this.pixelMapBuilder\n          })", " 1\n\n  @Builder pixelMapBuilder() {\n    Colu"], "files": ["dragEvent.ets", "WebPage.ets", "List.ets", "dragEvent2.ets", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "HitTestType", "api_method_name": "Phone", "api_method_all": "Phone,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["Test == HitTestType.Phone) {\n              co", "('this getHitTest : Phone');\n            } el"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "HitTestType", "api_method_name": "Unknown", "api_method_all": "Unknown,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["f (event.source === Unknown) {\n            this", "('this getHitTest : Unknown');\n            }\n  ", "tType = HitTestType.Unknown\n  controller: WebCo", " this.SourceType = 'Unknown'\n          }\n      ", "tTest = HitTestType.Unknown\n              conso"], "files": ["WebPage.ets", "sourceType.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CacheMode", "api_method_all": "declare enum CacheMode {\n  \n  None,\n\n  \n  Online,\n\n  \n  Only,\n}", "api_method_name": "CacheMode", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["  @State cacheMode: CacheMode = CacheMode.None\n  ", "heMode: CacheMode = CacheMode.None\n  @State getHi", "   this.cacheMode = CacheMode.None\n          })\n ", "   this.cacheMode = CacheMode.Only\n          })\n ", "   this.cacheMode = CacheMode.Online\n          })"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CacheMode", "api_method_name": "None", "api_method_all": "None,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 5542, "since": 8, "api_used": "\u662f", "lines": ["('GradientDirection.None');\n      console.in", ".objectFit(ImageFit.None)\n          .objectR", "rtEqual(\"EdgeEffect.None\");\n      done();\n  ", ".objectFit(ImageFit.None).width(110).height(", ": GradientDirection.None\n          }\n       ", "ton === MouseButton.None) {\n            this", "(ImageInterpolation.None)\n          .renderM", "\"TextDecorationType.None\\\",\\\"color\\\":\\\"#FFFF", "Effect = EdgeEffect.None\n\n  build() {\n    St", "'ImageInterpolation.None')\n      expect(obj.", " .editable(EditMode.None)\n          .key('li", "   \"sticky\": Sticky.None\n          }\n       ", "assertEqual('Sticky.None');\n      console.in", "n = ScrollDirection.None\n  @State scrollBarC", "sibility(Visibility.None)\n        .fontWeigh", "fillMode = FillMode.None\n          try {\n   ", "this.eventAction = 'None'\n          }\n      ", " TextDecorationType.None;\n\n  build() {\n    F", "rtEqual('EdgeEffect.None');\n      expect(obj", "flow\": TextOverflow.None,\n          }\n      ", " TextDecorationType.None, color: Color.Red }", "rtEqual(\"Visibility.None\")\n      expect(obj.", "geEffect(EdgeEffect.None)\n        .chainAnim", "bility\": Visibility.None,\n          }\n      ", "FillMode = FillMode.None\n  @State reverse: b", "sertEqual('ImageFit.None')\n      expect(obj.", " .fillMode(FillMode.None).iterations(this.it", "ion === MouseAction.None) {\n            this", "erflow(TextOverflow.None)\n        .textCase(", "          .overlay('None', { align: Alignmen", "\"TextDecorationType.None\", color: \"#FFFF0000", " TextDecorationType.None, \"color\": Color.Red", "Equal('TextOverflow.None');\n      console.in", "rtEqual('Visibility.None');\n      console.in", "ssertEqual(FillMode.None);\n      }\n      let", "ble(ScrollDirection.None)\n      .scrollBar(B", "Effect = EdgeEffect.None;\n  @State chainAnim", "al('ScrollDirection.None')\n      expect(obj.", "'TextDecorationType.None');\n      expect(dec", "       Text('sticky:None , item1111')\n      ", "\"TextDecorationType.Noneh\", color: \"#FFFF000", "this.eventButton = 'None'\n          }\n      ", "number = EdgeEffect.None\n  @State autoPlay: ", "    }.sticky(Sticky.None)\n          .editabl"], "files": ["listItemGroupProps.test.js", "ImageJsunit.test.ets", "dividerProps.test.js", "tabContentProps.test.js", "ListItemJsunit.test.ets", "textProps.test.js", "toolbarProps.test.js", "imageFit.ets", "searchProps.test.js", "spanProps.test.js", "toolbarItemProps.test.js", "badgeProps.test.js", "FillModeJsunit.test.ets", "dialogProps.test.js", "Image.ets", "formProps.test.js", "ListItem.ets", "stackProps.test.js", "Text.ets", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "TextJsunit.test.ets", "swiper.ets", "refreshProps.test.js", "Scroll.ets", "text.ets", "canvasProps.test.js", "VisibilityJsunit.test.ets", "edgeEffect.ets", "richtextProps.test.js", "labelProps.test.js", "image.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "gridContainerProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "marqueeProps.test.js", "imageAnimatorProps.test.js", "tabsProps.test.js", "qrcodeProps.test.js", "popupProps.test.js", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "list.ets", "List.ets", "optionProps.test.js", "animateTransformProps.test.js", "pieceProps.test.js", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "textareaProps.test.js", "ScrollJsunit.test.ets", "gridColProps.test.js", "imageAnimator.ets", "span.ets", "buttonProps.test.js", "animateProps.test.js", "mouseEvent.ets", "pickerViewProps.test.js", "divProps.test.js", "switchProps.test.js", "animationStatus.ets", "GradientDirectionJsunit.test.ets", "fillMode.ets", "chartProps.test.js", "sliderProps.test.js", "swiperProps.test.js", "WebPage.ets", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "panelProps.test.js", "menuProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CacheMode", "api_method_name": "Online", "api_method_all": "Online,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["cheMode = CacheMode.Online\n          })\n      "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CacheMode", "api_method_name": "Only", "api_method_all": "Only,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 9, "since": 8, "api_used": "\u662f", "lines": ["fo('MediaQuery logicOnly fail');\n           ", "fo('MediaQuery logicOnly end')\n        //}\n ", "fo('MediaQuery logicOnly start');\n        va", "  });\n\n    it('logicOnly', 0, function() {\n ", " console.info('logicOnly start');\n        va", "      function logicOnlyMatch(e){\n          ", "st.addListener(logicOnlyMatch)\n        conso", "fo('MediaQuery logicOnly success');\n        ", "cheMode = CacheMode.Only\n          })\n      "], "files": ["mediaquery.test.js", "WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "JsResult", "api_method_all": "declare class JsResult {\n  \n  constructor();\n\n  \n  handleCancel(): void;\n\n  \n  handleConfirm(): void;\n}", "api_method_name": "JsResult", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "JsResult", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 80, "since": 8, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "JsResult", "api_method_name": "handleCancel", "api_method_all": "handleCancel(): void;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["sult : \" + e.result.handleCancel());\n          conso"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "JsResult", "api_method_name": "handleConfirm", "api_method_all": "handleConfirm(): void;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["sult : \" + e.result.handleConfirm());\n        })\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ConsoleMessage", "api_method_all": "declare class ConsoleMessage {\n  \n  constructor(message: string, sourceId: string, lineNumber: number, messageLevel: MessageLevel);\n\n  \n  getMessage(): string;\n\n  \n  getSourceId(): string;\n\n  \n  getLineNumber(): number;\n\n  \n  getMessageLevel(): MessageLevel;\n}", "api_method_name": "ConsoleMessage", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ConsoleMessage", "api_method_name": "constructor", "api_method_all": "constructor(message: string, sourceId: string, lineNumber: number, messageLevel: MessageLevel)", "api_type": "", "api_args_count": 4, "api_level": 11, "api_used_count": 80, "since": 8, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ConsoleMessage", "api_method_name": "getMessage", "api_method_all": "getMessage(): string;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["t level = e.message.getMessageLevel()\n          if", "age : \" + e.message.getMessage());\n          conso"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ConsoleMessage", "api_method_name": "getSourceId", "api_method_all": "getSourceId(): string;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["age : \" + e.message.getSourceId());\n          conso"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ConsoleMessage", "api_method_name": "getLineNumber", "api_method_all": "getLineNumber(): number;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["age : \" + e.message.getLineNumber());\n          let l"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ConsoleMessage", "api_method_name": "getMessageLevel", "api_method_all": "getMessageLevel(): MessageLevel;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["t level = e.message.getMessageLevel()\n          if (lev"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceRequest", "api_method_all": "declare class WebResourceRequest {\n  \n  constructor();\n\n  \n  getRequestHeader(): Array<Header>;\n\n  \n  getRequestUrl(): string;\n\n  \n  isRequestGesture(): boolean;\n\n  \n  isMainFrame(): boolean;\n\n  \n  isRedirect(): boolean;\n}", "api_method_name": "WebResourceRequest", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceRequest", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 80, "since": 8, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceRequest", "api_method_name": "getRequestHeader", "api_method_all": "getRequestHeader(): Array<Header>;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["est : \" + e.request.getRequestHeader());\n          conso"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceRequest", "api_method_name": "getRequestUrl", "api_method_all": "getRequestUrl(): string;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["est : \" + e.request.getRequestUrl());\n          conso"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceRequest", "api_method_name": "isRequestGesture", "api_method_all": "isRequestGesture(): boolean;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["est : \" + e.request.isRequestGesture());\n          conso"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceRequest", "api_method_name": "isMainFrame", "api_method_all": "isMainFrame(): boolean;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["est : \" + e.request.isMainFrame());\n          conso"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceRequest", "api_method_name": "isRedirect", "api_method_all": "isRedirect(): boolean;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["est : \" + e.request.isRedirect());\n\n          cons"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceResponse", "api_method_all": "declare class WebResourceResponse {\n  \n  constructor();\n\n  \n  getResponseData(): string;\n\n  \n  getResponseEncoding(): string;\n\n  \n  getResponseMimeType(): string;\n\n  \n  getReasonMessage(): string;\n\n  \n  getResponseHeader() : Array<Header>;\n\n  \n  getResponseCode(): number;\n}", "api_method_name": "WebResourceResponse", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceResponse", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 80, "since": 8, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceResponse", "api_method_name": "getResponseData", "api_method_all": "getResponseData(): string;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceResponse", "api_method_name": "getResponseEncoding", "api_method_all": "getResponseEncoding(): string;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceResponse", "api_method_name": "getResponseMimeType", "api_method_all": "getResponseMimeType(): string;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceResponse", "api_method_name": "getReasonMessage", "api_method_all": "getReasonMessage(): string;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceResponse", "api_method_name": "getResponseHeader", "api_method_all": "getResponseHeader() : Array<Header>;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceResponse", "api_method_name": "getResponseCode", "api_method_all": "getResponseCode(): number;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Header", "api_method_all": "declare interface Header {\n  \n  headerKey: string;\n\n  \n  headerValue: string;\n}", "api_method_name": "Header", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 11, "since": 8, "api_used": "\u662f", "lines": ["*/\n    it('testInputHeadericon', 0, async func", "*/\n    it('testInputHeadericonNone', 0, async ", "sole.info('testInputHeadericon START');\n      ", ".name      testInputHeadericonNone\n     * @tc.", "      additionalHttpHeaders: [{ key: 'div', va", "    it('testtextAreaHeadericonProp', 0, async ", "sole.info('testInputHeadericonNone START');\n  ", " */\nit('testtextAreaHeadericonPropNull', 0, as", ".name      testInputHeadericon\n     * @tc.desc", "e.request.getRequestHeader());\n          conso"], "files": ["WebPage.ets", "inputProps.test.js", "textareaProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Header", "api_method_name": "headerKey", "api_method_all": "headerKey: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Header", "api_method_name": "headerValue", "api_method_all": "headerValue: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceError", "api_method_all": "declare class WebResourceError {\n  \n  constructor();\n\n  \n  getErrorInfo(): string;\n\n  \n  getErrorCode(): number;\n}", "api_method_name": "WebResourceError", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceError", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 80, "since": 8, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceError", "api_method_name": "getErrorInfo", "api_method_all": "getErrorInfo(): string;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["error : \" + e.error.getErrorInfo());\n          conso"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebResourceError", "api_method_name": "getErrorCode", "api_method_all": "getErrorCode(): number;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["error : \" + e.error.getErrorCode());\n        })\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "JsGeolocation", "api_method_all": "declare class JsGeolocation {\n  \n  constructor();\n\n  \n  invoke(origin: string, allow: boolean, retain: boolean): void;\n}", "api_method_name": "JsGeolocation", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "JsGeolocation", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 80, "since": 8, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "JsGeolocation", "api_method_name": "invoke", "api_method_all": "invoke(origin: string, allow: boolean, retain: boolean): void;", "api_type": "", "api_args_count": 3, "api_level": 11, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": [": \" + e.geolocation.invoke);\n        })\n      ", "      e.geolocation.invoke(e.origin, true, tru"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebCookie", "api_method_all": "declare class WebCookie {\n  \n  constructor();\n\n  \n  setCookie();\n\n  \n  saveCookie();\n}", "api_method_name": "WebCookie", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["ie: WebCookie = new WebCookie()\n  testObj = {\n   ", "roller();\n  cookie: WebCookie = new WebCookie()\n "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebCookie", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 80, "since": 8, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebCookie", "api_method_name": "setCookie", "api_method_all": "setCookie();", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["        this.cookie.setCookie()\n          })\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebCookie", "api_method_name": "saveCookie", "api_method_all": "saveCookie();", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["        this.cookie.saveCookie()\n          })\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_all": "declare class WebController {\n  \n  constructor();\n\n  \n  onInactive(): void;\n\n  \n  onActive(): void;\n\n  \n  zoom(factor: number): void;\n\n  \n  clearHistory(): void;\n\n  \n  runJavaScript(options: { script: string, callback?: (result: string) => void });\n\n  \n  loadData(options: { data: string, mimeType: string, encoding: string, baseUrl?: string, historyUrl?: string });\n\n  \n  loadUrl(options: { url: string | Resource, headers?: Array<Header> });\n\n  \n  refresh();\n\n  \n  stop();\n\n  \n  registerJavaScriptProxy(options: { object: object, name: string, methodList: Array<string> });\n\n  \n  deleteJavaScriptRegister(name: string);\n\n  \n  getHitTest(): HitTestType;\n\n  \n  requestFocus();\n\n  \n  accessBackward(): boolean;\n\n  \n  accessForward(): boolean;\n\n  \n  accessStep(step: number): boolean;\n\n  \n  backward();\n\n  \n  forward();\n}", "api_method_name": "WebController", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["known\n  controller: WebController = new WebController", "WebController = new WebController();\n  cookie: WebCoo"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 80, "since": 8, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "onInactive", "api_method_all": "onInactive(): void;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["    this.controller.onInactive()\n          })\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "onActive", "api_method_all": "onActive(): void;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["    this.controller.onActive()\n          })\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "zoom", "api_method_all": "zoom(factor: number): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["an = true;\n  @State zoomAccess: boolean = tr", "   .zoomAccess(this.zoomAccess)\n        .cac", "ageAccess)\n        .zoomAccess(this.zoomAcce"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "clearHistory", "api_method_all": "clearHistory(): void;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["    this.controller.clearHistory()\n          })\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "runJavaScriptoptions", "api_method_all": "runJavaScript(options: { script: string, callback?: (result: string) => void });", "api_type": "callback", "api_args_count": 1, "api_level": 11, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "runJavaScriptoptions", "api_method_all": "runJavaScript(options: { script: string, callback?: (result: string) => void });", "api_type": "callback", "api_args_count": 4, "api_level": 11, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "loadData", "api_method_all": "loadData(options: { data: string, mimeType: string, encoding: string, baseUrl?: string, historyUrl?: string });", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["    this.controller.loadData({\n              dat"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "loadUrl", "api_method_all": "loadUrl(options: { url: string | Resource, headers?: Array<Header> });", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["    this.controller.loadUrl({\n              url"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "refresh", "api_method_all": "refresh();", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 223, "since": 8, "api_used": "\u662f", "lines": [" console.info(\"push refreshProps page success \"", "  console.info(\"get refresh state pages:\" + JSO", "hingPropTrue : this.refreshingPropTrue,\n       ", " getInspectorByKey('refresh');\n      console.in", "rt default function refreshJsunit() {\n  describ", "nsole.info(\"[router.refresh] getState\" + JSON.s", "        uri: 'pages/refresh/router/index'\n     ", "ctor()\n        this.refreshingPropTrue =  this.", ") {\n      Refresh({ refreshing: this.isRefreshi", " console.info(\"push refresh page success \" + JS", "     console.info(\"[refreshProps] get inspector", "etProp,\n            refreshingPropFalse : this.", "      expect(\"pages/refresh/router/\").assertEqu", " console.info(\"push refresh page result:\" + JSO", "        uri: 'pages/refresh/prop/index'\n       ", "Change state is ' + refreshStatus)\n      })\n   ", "     that.fresh = e.refreshing;\n        setTime", "console.error(\"push refresh page error:\" + err)", "est.js')\nrequire('./refreshProps.test.js')\nrequ", " .refreshed : \" + e.refreshed);\n        })\n    ", "ctor()\n        this.refreshingPropFalse =  this", "      console.info(\"refresh beforeEach start\");", "     console.info(\"[refreshProps] get globalThi", "pFalse,\n            refreshingPropTrue : this.r", "  console.info(\"get refresh state pages.name:\" ", "Text('Pull Down and refresh: ' + this.counter)\n", "Prop: null,\n        refreshingPropFalse: null,\n", "ingPropFalse : this.refreshingPropFalse,\n      ", "s));\n        if (!(\"refresh\" == pages.name)) {\n", "nit() {\n  describe('refreshTest', function () {", "$type).assertEqual('refresh')\n        expect(ob", "alse: null,\n        refreshingPropTrue: null,\n ", "richTextJsunit();\n  refreshJsunit();\n  imageJsu", "console.error(\"push refresh page error \" + JSON", "    .onStateChange((refreshStatus: RefreshStatu", "     console.info('[refreshPropsJsTest] before ", "    this.controller.refresh()\n          })\n    ", "index';\n\n\ndescribe('refreshPropsJsTest', functi", "console.error(\"push refreshProps page error \" +", "t.test.ets';\nimport refreshJsunit from './Refre", "       }\n    },\n    refresh: function (e) {\n   ", "      console.info(\"refresh after each called\")", "e =  this.$element(\"refreshingPropTrue\").getIns", "e =  this.$element(\"refreshingPropFalse\").getIn", "eshAccessedHistory .refreshed : \" + e.refreshed", "     console.info('[refreshPropsJsTest] after e", "        uri: 'pages/refresh',\n      }\n      try"], "files": ["List.test.js", "WebPage.ets", "RefreshJsunit.test.ets", "commonComponentJsApi.test.js", "refresh.ets", "index.js", "List.test.ets", "refreshProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "stop", "api_method_all": "stop();", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 20, "since": 8, "api_used": "\u662f", "lines": ["          message: 'stop'\n        });\n    },", "})\n\n        Button('stop').key('button3').wi", "nt('customMarquee').stop();\n        prompt.s", "});\n        Button(\"stop\").onClick(() => {\n ", "    this.controller.stop()\n          this.on", ";\n        function9.stop();\n        prompt.s", "      console.info('stopPropagation')\n      ", "s.myVideoController.stop();\n        });\n    ", "s.myVideoController.stop();\n      }\n    }\n  ", "    this.controller.stop()\n          })\n    ", "this.$refs.animator.stop();\n    },\n//\n    fo", "e: 'function9 video stop.'\n        })\n    },", " })\n        Button('stop').key('button2').wi", "   })\n      Button(\"stop TextClock\")\n       ", "nY + ')')\n          stopPropagation: () => {", "     });\n    },\n    stop(){\n        prompt.s", "     });\n    },\n    stop() {\n        prompt.", "        }\n          stopPropagation: () => {"], "files": ["textClock.ets", "touch.ets", "WebPage.ets", "video.ets", "mouseEvent.ets", "animationStatus.ets", "imageAnimator.ets", "index.js", "fillMode.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "registerJavaScriptProxy", "api_method_all": "registerJavaScriptProxy(options: { object: object, name: string, methodList: Array<string> });", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["    this.controller.registerJavaScriptProxy({\n              obj"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "deleteJavaScriptRegister", "api_method_all": "deleteJavaScriptRegister(name: string);", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["    this.controller.deleteJavaScriptRegister('objName')\n        "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "getHitTest", "api_method_all": "getHitTest(): HitTestType;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 19, "since": 8, "api_used": "\u662f", "lines": ["  console.log('this getHitTest : Http');\n         ", "         } else if (getHitTest == HitTestType.Img)", "  console.log('this getHitTest : Img');\n          ", "         } else if (getHitTest == HitTestType.Map)", "t()\n            if (getHitTest == HitTestType.Edit", "  console.log('this getHitTest : Phone');\n        ", "         } else if (getHitTest == HitTestType.Emai", "> {\n            let getHitTest = this.controller.g", "  console.log('this getHitTest : HttpImg');\n      ", "  console.log('this getHitTest : Unknown');\n      ", "eMode.None\n  @State getHitTest: HitTestType = HitT", "t = this.controller.getHitTest()\n            if (g", "  console.log('this getHitTest : Map');\n          ", "lse {\n              getHitTest = HitTestType.Unkno", "         } else if (getHitTest == HitTestType.Phon", "         } else if (getHitTest == HitTestType.Http", "  console.log('this getHitTest : Email');\n        ", "  console.log('this getHitTest : Edit');\n         "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "requestFocus", "api_method_all": "requestFocus();", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["    this.controller.requestFocus()\n          })\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "accessBackward", "api_method_all": "accessBackward(): boolean;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["        Button(this.accessBackward ? '\u9875\u9762\u53ef\u540e\u9000' : '\u9875\u9762\u4e0d\u53ef\u540e\u9000", "an = true;\n  @State accessBackward: boolean = true;\n  ", " {\n            this.accessBackward = this.controller.a", "d = this.controller.accessBackward()\n          })\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "accessForward", "api_method_all": "accessForward(): boolean;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["d = this.controller.accessForward()\n          })\n    ", "        Button(this.accessForward ? '\u9875\u9762\u53ef\u524d\u8fdb' : '\u9875\u9762\u4e0d\u53ef\u524d\u8fdb", " {\n            this.accessForward = this.controller.a", "an = true;\n  @State accessForward: boolean = true;\n  "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "accessStep", "api_method_all": "accessStep(step: number): boolean;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["an = true;\n  @State accessStep: boolean = true;\n  ", "        Button(this.accessStep ? '\u9875\u9762\u53ef\u524d\u8fdb1\u6b65' : '\u9875\u9762\u4e0d\u53ef", "p = this.controller.accessStep(1)\n          })\n   ", " {\n            this.accessStep = this.controller.a"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "backward", "api_method_all": "backward();", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["    this.controller.backward()\n          })\n    "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebController", "api_method_name": "forward", "api_method_all": "forward();", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 45, "since": 8, "api_used": "\u662f", "lines": ["ay: 100,\n    fill: 'forwards',\n    iterations: ", "    this.controller.forward()\n          })\n    ", "elay: 100,\n  fill: 'forwards',\n  iterations: 2,", "n: 3000,\n    fill: 'forwards',\n    direction: \"", "lmode).assertEqual(\"forwards\")\n    console.info", "lmode).assertEqual(\"forwards\")\n        console."], "files": ["WebPage.ets", "imageAnimatorProps.test.js", "animatorOption.ets", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebOptions", "api_method_all": "declare interface WebOptions {\n  \n  src: string | Resource;\n  \n  controller: WebController;\n}", "api_method_name": "WebOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebOptions", "api_method_name": "src", "api_method_all": "src: string | Resource", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 90, "since": 8, "api_used": "\u662f", "lines": ["  if(eventData.data.srcValue != null) {\n   ", "mage();\n        img.src = 'common/images/su", " if (eventData.data.srcValue != null) {\n   ", "jpg\"},\n            {src: \"/common/images/im", "      {\n            src: '/comment/bg1.jpg'", "number = 3\n  @State src: string = \"Running ", "ges: [\n            {src: \"/common/images/im", "r sres = obj.$attrs.src.slice(res, res + 16", "      {\n            src: '/comment/bg.jpg',", "      {\n            src: '/comment/bg2.jpg'", "ew Image();\n    img.src = \"/images/bg.jpg\";", "{\n        src: this.srcs,\n        previewUr", ",\n        src: this.src\n      })\n        .f", "omponent {\n  @State srcs: string = \"/images", "  expect(obj.$attrs.src.slice(res, res + 16", "    Video({\n        src: this.srcs,\n       ", "omponent {\n  @State srcs: string = '/resour", ",\n        src: this.src\n      })\n        .k", "ar res = obj.$attrs.src.indexOf('rawfile/te", "     }\n\n      Web({ src: $rawfile('indextes", " is: \" + obj.$attrs.src);\n      console.inf", "ample.com'\n  @State src: string = this.on\n ", "est_0200 obj.$attrs.src is: \" + obj.$attrs.", "      {\n            src: '/comment/bg3.jpg'", ".fromStart,\n        src: this.src\n      })\n", "mage();\n        img.src = 'common/images/im", "ull) {\n        this.srcValue = eventData.da", "ue = eventData.data.srcValue;\n      }\n    }", "      {\n            src: '/comment/bg4.jpg'"], "files": ["backgroundAndSizeSetting.ets", "imageFit.ets", "ImageJsunit.test.ets", "Video.ets", "videoProps.test.js", "global.ets", "TextJsunit.test.ets", "video.ets", "WebPage.ets", "marquee.ets", "imageProps.test.js", "animationStatus.ets", "background.ets", "imageAnimator.ets", "index.js", "fillMode.ets", "Marquee.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebOptions", "api_method_name": "controller", "api_method_all": "controller: WebController", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 50, "since": 8, "api_used": "\u662f", "lines": [" {\n            this.controller.stop()\n          })", " {\n            this.controller.onInactive()\n      ", " {\n            this.controller.loadData({\n        ", "s.accessStep = this.controller.accessStep(1)\n     ", ".nextMonth,\n        controller: this.Controller\n  ", "t getHitTest = this.controller.getHitTest()\n      ", "string= ''\n  @State controller: SearchController= ", " {\n            this.controller.registerJavaScriptP", "cessBackward = this.controller.accessBackward()\n  ", "', controller: this.controller })\n        .searchB", " {\n            this.controller.forward()\n         ", "on.Start, index: 1, controller: this.controller })", " {\n            this.controller.runJavaScript({\n   ", " {\n            this.controller.requestFocus()\n    ", " {\n            this.controller.clearHistory()\n    ", ")=>{\n          this.controller.stop()\n          th", "tion.End, index: 1, controller: this.controller })", "gressRates,\n        controller: this.myVideoContro", " {\n            this.controller.refresh()\n         ", " {\n            this.controller.onActive()\n        ", " {\n            this.controller.close()\n           ", "{\n      TextTimer({ controller: this.myTimerContro", "8, controller: this.controller})\n        .key('tex", "ccessForward = this.controller.accessForward()\n   ", "r: 'input content', controller: this.controller })", " {\n            this.controller.deleteJavaScriptReg", "1, controller: this.controller }) {\n        TabCon", "previewUri,\n        controller: this.myVideoContro", "tTestType.Unknown\n  controller: WebController = ne", "timeZoneOffset: -8, controller: this.controller})\n", ", libraryname: '3', controller: this.xComponentCon", "omDialogExample {\n  controller: CustomDialogContro", "Example {\n  private controller: TabsController = n", " boolean = false;\n  controller: TextClockControlle", " {\n            this.controller.loadUrl({\n         ", " {\n            this.controller.backward()\n        ", "=> {\n          this.controller.caretPosition(4)\n  ", "n = false\n  private controller: TabsController = n", ": this.barPosition, controller: this.controller, i", "('indextest.html'), controller: this.controller })", "), controller: this.controller })\n        .domStor", "n, controller: this.controller, index: this.index ", "=> {\n          this.controller.changeIndex(0)\n    ", "rl);\n          this.controller.runJavaScript('test", ")=>{\n          this.controller.start()\n        })\n"], "files": ["textClock.ets", "tabs.ets", "Video.ets", "WebPage.ets", "video.ets", "Tab.ets", "textInput.ets", "textTimer.ets", "Calendar.ets", "XComponentPage.ets", "search.ets", "customDialogController.ets", "CustomDialog.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebInterface", "api_method_all": "interface WebInterface {\n  \n  (value: WebOptions): WebAttribute;\n}", "api_method_name": "WebInterface", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebInterface", "api_method_name": "value", "api_method_all": "(value: WebOptions): WebAttribute", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14499, "since": 8, "api_used": "\u662f", "lines": ["      console.info('value:' + value + 'mode:'", "   return this.rect_value = {\n      \"left\": t", ".info(\"this.matrix3 value is\");\n        this.", "xpect(objNew.$attrs.value).assertEqual('10.00", "xpect(objNew.$attrs.value).assertEqual('nan')", "ckbox1 change is' + value)\n          })\n     ", "ull) {\n        this.value = eventData.data.va", "  this.value = this.value + 'Text'\n          ", "g\"},\n              {value:'ddd',icon: \"/image", "ect(indexEvent.data.value).assertEqual('TextT", ".info(\"this.matrix2 value is\" + Matrix4.ident", "      \"value\": this.value,\n              }\n  ", "eckbox2 change is'+ value)\n        })\n    }\n ", "         .onChange((value: number, mode: Slid", "eckbox1 change is'+ value)\n        })\n      C", "g\"},\n              {value:'ccc',icon: \"/image", "=> {\n          this.value = this.value + 'Tex", " {\n                \"value\": this.value,\n     ", "e.info(\"this.matrix value is not\");\n      }\n ", " if (eventData.data.value != null) {\n        ", "rExample {\n  @State value:string=10\n  @State ", " Slider({\n          value: this.outSetValue,\n", " this.outSetValue = value\n            console", "        .value(this.value)\n        .font(this", "s.Vertical\n  @State value: number = 40\n\n  pri", "ttom;\n  static rect_value;\n\n  static sleep(ti", "ngify(oldValue)} newvalue is ${JSON.stringify", "ole.info(\"eventData value is\");\n      if (eve", "  expect(obj.$attrs.value).assertEqual('50.00", "xpect(objNew.$attrs.value).assertEqual('-10.0", "elected(2)\n        .value('TTT')\n        .val", "n() {\n      Gauge({ value: 0, min: 0, max: 10", "g\"},\n              {value:'bbb',icon: \"/image", "ue = eventData.data.value;\n      }\n      if (", ") {\n      Text(this.value)\n        .key('text", "\n        .onChange((value: boolean) => {\n    ", "y(\"gauge\")\n        .value(`${this.gaugeValue}", "ckbox2 change is' + value)\n          })\n     ", "aExample {\n  @State value: string = 'Text';\n ", "ckbox3 change is' + value)\n          })\n     ", "() {\n      Select([{value:'aaa',icon: \"/image", "lue('TTT')\n        .value(this.value)\n       ", "         .onChange((value: boolean) => {\n    "], "files": ["listItemGroupProps.test.js", "pathProps.test.js", "dividerProps.test.js", "tabContentProps.test.js", "ListItemJsunit.test.ets", "textProps.test.js", "ParallelGestureJsunit.test.ets", "toolbarProps.test.js", "Navigation.ets", "TextPickerJsunit.test.ets", "polylineProps.test.js", "Progress.ets", "Panel.ets", "checkboxGroup.ets", "navigation.ets", "searchProps.test.js", "spanProps.test.js", "toolbarItemProps.test.js", "TapGesture.test.ets", "Rating.ets", "badgeProps.test.js", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "textArea.ets", "textInput.ets", "formProps.test.js", "SelectJsunit.test.ets", "circleProps.test.js", "Slider.ets", "SourceTypeJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "PanelJsunit.test.ets", "PanGestureJsunit.test.ets", "Counter.ets", "gauge.ets", "ButtonJsunit.test.ets", "StepperJsunit.test.ets", "sideBar.ets", "refreshProps.test.js", "Sidebar.ets", "Prop.ets", "Scroll.ets", "ScrollerBarJsunit.test.ets", "canvasProps.test.js", "AreaChangeJsunit.test.ets", "TextArea.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "tapGesture.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "richtextProps.test.js", "svgProps.test.js", "labelProps.test.js", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "gridContainerProps.test.js", "stepperProps.test.js", "Select.ets", "ratingProps.test.js", "Utils.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "textPickerDialog.ets", "tabsProps.test.js", "badge.ets", "qrcodeProps.test.js", "lineProps.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "SubscribaleAbstractJsunit.test.ets", "ToggleJsunit.test.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "textClock.ets", "videoProps.test.js", "GaugeJsunit.test.ets", "optionProps.test.js", "TextInputJsunit.test.ets", "calendar.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "checkbox.ets", "QrcodeJsunit.test.ets", "TextAreaJsunit.test.ets", "pieceProps.test.js", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "Button.ets", "textareaProps.test.js", "gridColProps.test.js", "fontWeight.ets", "buttonProps.test.js", "animateProps.test.js", "animate.ets", "ContentStorage.test.ets", "BadgeJsunit.test.ets", "pickerViewProps.test.js", "ohosMatrix4.ets", "divProps.test.js", "switchProps.test.js", "TextInput.ets", "radio.ets", "rating.ets", "ellipseProps.test.js", "priorityGesture.ets", "DataPanel.ets", "chartProps.test.js", "SliderJsunit.test.ets", "progress.ets", "AlertDialog.ets", "sliderProps.test.js", "WebPage.ets", "swiperProps.test.js", "polygonProps.test.js", "NavigatorJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "SwiperJsunit.test.ets", "areaChange.ets", "tspanProps.test.js", "parallelGesture.ets", "imageProps.test.js", "select.ets", "listProps.test.js", "progressProps.test.js", "slider.ets", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "panelProps.test.js", "search.ets", "panel.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_all": "declare class WebAttribute extends CommonMethod<WebAttribute> {\n  \n  javaScriptAccess(javaScriptAccess: boolean): WebAttribute;\n\n  \n  fileAccess(fileAccess: boolean): WebAttribute;\n\n  \n  onlineImageAccess(onlineImageAccess: boolean): WebAttribute;\n\n  \n  domStorageAccess(domStorageAccess: boolean): WebAttribute;\n\n  \n  imageAccess(imageAccess: boolean): WebAttribute;\n\n  \n  mixedMode(mixedMode: MixedMode): WebAttribute;\n\n  \n  zoomAccess(zoomAccess: boolean): WebAttribute;\n\n  \n  geolocationAccess(geolocationAccess: boolean): WebAttribute;\n\n  \n  javaScriptProxy(javaScriptProxy: { object: object, name: string, methodList: Array<string>,\n    controller: WebController }): WebAttribute;\n\n  \n  password(password: boolean): WebAttribute;\n\n  \n  cacheMode(cacheMode: CacheMode): WebAttribute;\n\n  \n  tableData(tableData: boolean): WebAttribute;\n\n  \n  wideViewModeAccess(wideViewModeAccess: boolean): WebAttribute;\n\n  \n  overviewModeAccess(overviewModeAccess: boolean): WebAttribute;\n\n  \n  textZoomAtio(textZoomAtio: number): WebAttribute;\n\n  \n  databaseAccess(databaseAccess: boolean): WebAttribute;\n\n  \n  userAgent(userAgent: string): WebAttribute;\n\n  \n  onPageEnd(callback: (event?: { url: string }) => void): WebAttribute;\n\n  \n  onPageBegin(callback: (event?: { url: string }) => void): WebAttribute;\n\n  \n  onProgressChange(callback: (event?: { newProgress: number }) => void): WebAttribute;\n\n  \n  onTitleReceive(callback: (event?: { title: string }) => void): WebAttribute;\n\n  \n  onGeolocationHide(callback: () => void): WebAttribute;\n\n  \n  onGeolocationShow(callback: (event?: { origin: string, geolocation: JsGeolocation }) => void): WebAttribute;\n\n  \n  onRequestSelected(callback: () => void): WebAttribute;\n\n  \n  onAlert(callback: (event?: { url: string, message: string, result: JsResult }) => boolean): WebAttribute;\n\n  \n  onBeforeUnload(callback: (event?: { url: string, message: string, result: JsResult }) => boolean): WebAttribute;\n\n  \n  onConfirm(callback: (event?: { url: string, message: string, result: JsResult }) => boolean): WebAttribute;\n\n  \n  onConsole(callback: (event?: { message: ConsoleMessage }) => boolean): WebAttribute;\n\n  \n  onErrorReceive(callback: (event?: { request: WebResourceRequest, error: WebResourceError }) => void): WebAttribute;\n\n  \n  onHttpErrorReceive(callback: (event?: { request: WebResourceRequest,\n    response: WebResourceResponse }) => void): WebAttribute;\n\n  \n  onDownloadStart(callback: (event?: { url: string, userAgent: string, contentDisposition: string, mimetype: string,\n    contentLength: number }) => void): WebAttribute;\n\n  \n  onRefreshAccessedHistory(callback: (event?: { url: string, refreshed: boolean }) => void): WebAttribute;\n\n  \n  onUrlLoadIntercept(callback: (event?: { data: string | WebResourceRequest }) => boolean): WebAttribute;\n\n  \n  onSslErrorReceive(callback: (event?: { handler: Function, error: object }) => void): WebAttribute;\n\n  \n  onRenderExited(callback: (event?: { detail: object }) => boolean): WebAttribute;\n\n  \n  onFileSelectorShow(callback: (event?: { callback: Function, fileSelector: object }) => void): WebAttribute;\n}", "api_method_name": "WebAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "javaScriptAccess", "api_method_all": "javaScriptAccess(javaScriptAccess: boolean): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["vaScriptAccess(this.javaScriptAccess)\n        .mixedMode", "omponent {\n  @State javaScriptAccess: boolean = true;\n  ", "ageAccess)\n        .javaScriptAccess(this.javaScriptAcce"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "fileAccess", "api_method_all": "fileAccess(fileAccess: boolean): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["an = true;\n  @State fileAccess: boolean = true;\n  ", "   .fileAccess(this.fileAccess)\n        .geolocati", "ageAccess)\n        .fileAccess(this.fileAccess)\n  "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onlineImageAccess", "api_method_all": "onlineImageAccess(onlineImageAccess: boolean): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["mixedMode)\n        .onlineImageAccess(this.onlineImageAcc", "n = false;\n  @State onlineImageAccess: boolean = true;\n  ", "ineImageAccess(this.onlineImageAccess)\n        .zoomAcces"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "domStorageAccess", "api_method_all": "domStorageAccess(domStorageAccess: boolean): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["an = true;\n  @State domStorageAccess: boolean = false;\n ", "mStorageAccess(this.domStorageAccess)\n        .fileAcces", "troller })\n        .domStorageAccess(this.domStorageAcce"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "imageAccess", "api_method_all": "imageAccess(imageAccess: boolean): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["  .imageAccess(this.imageAccess)\n        .javaScrip", "an = true;\n  @State imageAccess: boolean = true;\n  ", "ionAccess)\n        .imageAccess(this.imageAccess)\n "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "mixedMode", "api_method_all": "mixedMode(mixedMode: MixedMode): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["umber = 1;\n  @State mixedMode: MixedMode = MixedM", " {\n            this.mixedMode = MixedMode.Compati", "    .mixedMode(this.mixedMode)\n        .onlineIma", " {\n            this.mixedMode = MixedMode.None\n  ", " {\n            this.mixedMode = MixedMode.All\n   ", "iptAccess)\n        .mixedMode(this.mixedMode)\n   "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "zoomAccess", "api_method_all": "zoomAccess(zoomAccess: boolean): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["   .zoomAccess(this.zoomAccess)\n        .cacheMode", "ageAccess)\n        .zoomAccess(this.zoomAccess)\n  ", "an = true;\n  @State zoomAccess: boolean = true;\n  "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "geolocationAccess", "api_method_all": "geolocationAccess(geolocationAccess: boolean): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["locationAccess(this.geolocationAccess)\n        .imageAcce", "an = true;\n  @State geolocationAccess: boolean = true;\n  ", "ileAccess)\n        .geolocationAccess(this.geolocationAcc"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "javaScriptProxy", "api_method_all": "javaScriptProxy(javaScriptProxy: { object: object, name: string, methodList: Array<string>,\n    controller: WebController }): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["aseAccess)\n        .javaScriptProxy({\n          obj: th"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "password", "api_method_all": "password(password: boolean): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 80, "since": 8, "api_used": "\u662f", "lines": ["     .password(this.password)\n        .onPageBeg", "ne = this.$element(\"passwordPlaceholderNone\").ge", "   }\n          this.passwords = input;\n        }", "conFalse : this.showpasswordiconFalse, showpassw", "kExample {\n  @State passwords: Number[] = []\n  @", ": null,\n        showpasswordiconFalse : null,\n  ", "ardenabledNone, showpasswordiconTrue : this.show", "iconTrue : this.showpasswordiconTrue,\n          ", "iconNone : this.showpasswordiconNone\n        }\n ", " {\n            this.passwords = input\n          ", "ing = 'please input password'\n  @State sideLengt", "holder,\n            passwordPlaceholderNone : th", "ue,\n            showpasswordiconFalse : this.sho", "           if (this.passwords.toString() == inpu", "()\n        this.showpasswordiconFalse = this.$el", "this.message = 'Set password successfully: ' + t", " this.$element(\"showpasswordiconFalse\").getInspe", "er = this.$element(\"passwordPlaceholder\").getIns", "\n              this.passwords = input\n          ", "        })\n        .password(this.password)\n    ", "LockTest {\n  @State passwords: Number[] = [];\n  ", "swordiconFalse, showpasswordiconNone : this.show", " })\n      Text(this.passwords.toString()).fontSi", "an = true;\n  @State password: boolean = true;\n  ", "dPlaceholder : this.passwordPlaceholder,\n       ", "der : null,\n        passwordPlaceholderNone : nu", "age = 'Please input password'\n        this.onAct", "ceholderNone : this.passwordPlaceholderNone, max", "ctor()\n        this.passwordPlaceholderNone = th", "   console.log('Set password successfully: ' + t", "one : null,\n        passwordPlaceholder : null,\n", " this.$element(\"showpasswordiconTrue\").getInspec", "cessfully: ' + this.passwords.toString()\n       ", "age = 'Inconsistent passwords, please enter agai", "e.log('Inconsistent passwords, please enter agai", "cessfully: ' + this.passwords.toString())\n\n     ", "\n          if (this.passwords.length > 0) {\n    ", "this.message = 'The password length needs to be ", "berPlaceholderNone, passwordPlaceholder : this.p", "t ATTRS_PASSWORD = 'password'\nconst ATTRS_CHECKE", "()\n        this.showpasswordiconTrue = this.$ele", ": null,\n        showpasswordiconTrue : null,\n   ", "   console.log('The password length needs to be ", ": null,\n        showpasswordiconNone : null\n    ", "eset()\n        this.passwords = []\n        this.", "ctor()\n        this.passwordPlaceholder = this.$"], "files": ["WebPage.ets", "PatternLock.ets", "Constants.ets", "inputProps.test.js", "index.js", "patternLock.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "cacheMode", "api_method_all": "cacheMode(cacheMode: CacheMode): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["oomAccess)\n        .cacheMode(this.cacheMode)\n   ", " {\n            this.cacheMode = CacheMode.Online\n", "    .cacheMode(this.cacheMode)\n        .tableData", " {\n            this.cacheMode = CacheMode.Only\n  ", "dMode.None\n  @State cacheMode: CacheMode = CacheM", " {\n            this.cacheMode = CacheMode.None\n  "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "tableData", "api_method_all": "tableData(tableData: boolean): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["cacheMode)\n        .tableData(this.tableData)\n   ", "    .tableData(this.tableData)\n        .wideViewM", "an = true;\n  @State tableData: boolean = true;\n  "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "wideViewModeAccess", "api_method_all": "wideViewModeAccess(wideViewModeAccess: boolean): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["tableData)\n        .wideViewModeAccess(this.wideViewModeAc", "an = true;\n  @State wideViewModeAccess: boolean = true;\n  ", "ViewModeAccess(this.wideViewModeAccess)\n        .overviewM"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "overviewModeAccess", "api_method_all": "overviewModeAccess(overviewModeAccess: boolean): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["odeAccess)\n        .overviewModeAccess(this.overviewModeAc", "viewModeAccess(this.overviewModeAccess)\n        .textZoomA", "an = true;\n  @State overviewModeAccess: boolean = true;\n  "], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "textZoomAtio", "api_method_all": "textZoomAtio(textZoomAtio: number): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["an = true;\n  @State textZoomAtio: number = 1;\n  @Sta", " .textZoomAtio(this.textZoomAtio)\n        .databaseA", "odeAccess)\n        .textZoomAtio(this.textZoomAtio)\n"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "databaseAccess", "api_method_all": "databaseAccess(databaseAccess: boolean): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["databaseAccess(this.databaseAccess)\n        .javaScrip", "an = true;\n  @State databaseAccess: boolean = true;\n  ", "tZoomAtio)\n        .databaseAccess(this.databaseAccess"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "userAgent", "api_method_all": "userAgent(userAgent: string): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["t : onDownloadStart userAgent : \" + e.userAgent);", "t userAgent : \" + e.userAgent);\n          console"], "files": ["WebPage.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onPageEndcallback", "api_method_all": "onPageEnd(callback: (event?: { url: string }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onPageEndcallback", "api_method_all": "onPageEnd(callback: (event?: { url: string }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onPageBegincallback", "api_method_all": "onPageBegin(callback: (event?: { url: string }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onPageBegincallback", "api_method_all": "onPageBegin(callback: (event?: { url: string }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onProgressChangecallback", "api_method_all": "onProgressChange(callback: (event?: { newProgress: number }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onProgressChangecallback", "api_method_all": "onProgressChange(callback: (event?: { newProgress: number }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onTitleReceivecallback", "api_method_all": "onTitleReceive(callback: (event?: { title: string }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onTitleReceivecallback", "api_method_all": "onTitleReceive(callback: (event?: { title: string }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onGeolocationHidecallback", "api_method_all": "onGeolocationHide(callback: () => void): WebAttribute;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onGeolocationHidecallback", "api_method_all": "onGeolocationHide(callback: () => void): WebAttribute;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onGeolocationShowcallback", "api_method_all": "onGeolocationShow(callback: (event?: { origin: string, geolocation: JsGeolocation }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onGeolocationShowcallback", "api_method_all": "onGeolocationShow(callback: (event?: { origin: string, geolocation: JsGeolocation }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onRequestSelectedcallback", "api_method_all": "onRequestSelected(callback: () => void): WebAttribute;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onRequestSelectedcallback", "api_method_all": "onRequestSelected(callback: () => void): WebAttribute;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onAlertcallback", "api_method_all": "onAlert(callback: (event?: { url: string, message: string, result: JsResult }) => boolean): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onAlertcallback", "api_method_all": "onAlert(callback: (event?: { url: string, message: string, result: JsResult }) => boolean): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onBeforeUnloadcallback", "api_method_all": "onBeforeUnload(callback: (event?: { url: string, message: string, result: JsResult }) => boolean): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onBeforeUnloadcallback", "api_method_all": "onBeforeUnload(callback: (event?: { url: string, message: string, result: JsResult }) => boolean): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onConfirmcallback", "api_method_all": "onConfirm(callback: (event?: { url: string, message: string, result: JsResult }) => boolean): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onConfirmcallback", "api_method_all": "onConfirm(callback: (event?: { url: string, message: string, result: JsResult }) => boolean): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onConsolecallback", "api_method_all": "onConsole(callback: (event?: { message: ConsoleMessage }) => boolean): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onConsolecallback", "api_method_all": "onConsole(callback: (event?: { message: ConsoleMessage }) => boolean): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onErrorReceivecallback", "api_method_all": "onErrorReceive(callback: (event?: { request: WebResourceRequest, error: WebResourceError }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onErrorReceivecallback", "api_method_all": "onErrorReceive(callback: (event?: { request: WebResourceRequest, error: WebResourceError }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onHttpErrorReceivecallback", "api_method_all": "onHttpErrorReceive(callback: (event?: { request: WebResourceRequest,\n    response: WebResourceResponse }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onHttpErrorReceivecallback", "api_method_all": "onHttpErrorReceive(callback: (event?: { request: WebResourceRequest,\n    response: WebResourceResponse }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onDownloadStartcallback", "api_method_all": "onDownloadStart(callback: (event?: { url: string, userAgent: string, contentDisposition: string, mimetype: string,\n    contentLength: number }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onDownloadStartcallback", "api_method_all": "onDownloadStart(callback: (event?: { url: string, userAgent: string, contentDisposition: string, mimetype: string,\n    contentLength: number }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onRefreshAccessedHistorycallback", "api_method_all": "onRefreshAccessedHistory(callback: (event?: { url: string, refreshed: boolean }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onRefreshAccessedHistorycallback", "api_method_all": "onRefreshAccessedHistory(callback: (event?: { url: string, refreshed: boolean }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onUrlLoadInterceptcallback", "api_method_all": "onUrlLoadIntercept(callback: (event?: { data: string | WebResourceRequest }) => boolean): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onUrlLoadInterceptcallback", "api_method_all": "onUrlLoadIntercept(callback: (event?: { data: string | WebResourceRequest }) => boolean): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onSslErrorReceivecallback", "api_method_all": "onSslErrorReceive(callback: (event?: { handler: Function, error: object }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onSslErrorReceivecallback", "api_method_all": "onSslErrorReceive(callback: (event?: { handler: Function, error: object }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onRenderExitedcallback", "api_method_all": "onRenderExited(callback: (event?: { detail: object }) => boolean): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onRenderExitedcallback", "api_method_all": "onRenderExited(callback: (event?: { detail: object }) => boolean): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onFileSelectorShowcallback", "api_method_all": "onFileSelectorShow(callback: (event?: { callback: Function, fileSelector: object }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebAttribute", "api_method_name": "onFileSelectorShowcallback", "api_method_all": "onFileSelectorShow(callback: (event?: { callback: Function, fileSelector: object }) => void): WebAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}