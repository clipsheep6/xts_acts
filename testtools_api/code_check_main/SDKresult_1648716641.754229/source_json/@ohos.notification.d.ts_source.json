{"subsystem_ch": "\u4e8b\u4ef6\u901a\u77e5\u5b50\u7cfb\u7edf", "subsystem_en": "notification", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.notification", "api": [{"api_class_name": "notification", "api_method_all": "declare namespace notification {\n  \n  function publish(request: NotificationRequest, callback: AsyncCallback<void>): void;\n  function publish(request: NotificationRequest): Promise<void>;\n\n  \n   function publish(request: NotificationRequest, userId: number, callback: AsyncCallback<void>): void;\n   function publish(request: NotificationRequest, userId: number): Promise<void>;\n\n  \n  function cancel(id: number, callback: AsyncCallback<void>): void;\n\n  \n  function cancel(id: number, label: string, callback: AsyncCallback<void>): void;\n  function cancel(id: number, label?: string): Promise<void>;\n\n  \n  function cancelAll(callback: AsyncCallback<void>): void;\n  function cancelAll(): Promise<void>;\n\n  \n  function addSlot(slot: NotificationSlot, callback: AsyncCallback<void>): void;\n\n  \n  function addSlot(slot: NotificationSlot): Promise<void>;\n\n  \n  function addSlot(type: SlotType, callback: AsyncCallback<void>): void;\n  function addSlot(type: SlotType): Promise<void>;\n\n  \n  function addSlots(slots: Array<NotificationSlot>, callback: AsyncCallback<void>): void;\n\n  \n  function addSlots(slots: Array<NotificationSlot>): Promise<void>;\n\n  \n  function getSlot(slotType: SlotType, callback: AsyncCallback<NotificationSlot>): void;\n  function getSlot(slotType: SlotType): Promise<NotificationSlot>;\n\n  \n  function getSlots(callback: AsyncCallback<Array<NotificationSlot>>): void;\n  function getSlots(): Promise<Array<NotificationSlot>>;\n\n  \n  function removeSlot(slotType: SlotType, callback: AsyncCallback<void>): void;\n  function removeSlot(slotType: SlotType): Promise<void>;\n\n  \n  function removeAllSlots(callback: AsyncCallback<void>): void;\n  function removeAllSlots(): Promise<void>;\n\n  \n  export enum SlotType {\n    \n    UNKNOWN_TYPE = 0,\n\n    \n    SOCIAL_COMMUNICATION = 1,\n\n    \n    SERVICE_INFORMATION = 2,\n\n    \n    CONTENT_INFORMATION = 3,\n\n    \n    OTHER_TYPES = 0xFFFF,\n  }\n\n  \n  export enum ContentType {\n    \n    NOTIFICATION_CONTENT_BASIC_TEXT,\n\n    \n    NOTIFICATION_CONTENT_LONG_TEXT,\n\n    \n    NOTIFICATION_CONTENT_PICTURE,\n\n    \n    NOTIFICATION_CONTENT_CONVERSATION,\n\n    \n    NOTIFICATION_CONTENT_MULTILINE,\n  }\n\n  \n  export enum SlotLevel {\n    \n    LEVEL_NONE = 0,\n\n    \n    LEVEL_MIN = 1,\n\n    \n    LEVEL_LOW = 2,\n\n    \n    LEVEL_DEFAULT = 3,\n\n    \n    LEVEL_HIGH = 4,\n  }\n\n  \n  function subscribe(subscriber: NotificationSubscriber, callback: AsyncCallback<void>): void;\n\n  \n  function subscribe(subscriber: NotificationSubscriber, info: NotificationSubscribeInfo, callback: AsyncCallback<void>): void;\n\n  \n  function subscribe(subscriber: NotificationSubscriber, info?: NotificationSubscribeInfo): Promise<void>;\n\n  \n  function unsubscribe(subscriber: NotificationSubscriber, callback: AsyncCallback<void>): void;\n\n  \n  function unsubscribe(subscriber: NotificationSubscriber): Promise<void>;\n\n  \n  function enableNotification(bundle: BundleOption, enable: boolean, callback: AsyncCallback<void>): void;\n\n  \n  function enableNotification(bundle: BundleOption, enable: boolean): Promise<void>;\n\n  \n  function isNotificationEnabled(bundle: BundleOption, callback: AsyncCallback<boolean>): void;\n\n  \n  function isNotificationEnabled(bundle: BundleOption): Promise<boolean>;\n\n  \n  function isNotificationEnabled(callback: AsyncCallback<boolean>): void;\n\n  \n  function isNotificationEnabled(): Promise<boolean>;\n\n  \n  function isNotificationEnabled(userId: number, callback: AsyncCallback<boolean>): void;\n  function isNotificationEnabled(userId: number): Promise<boolean>;\n\n  \n  function displayBadge(bundle: BundleOption, enable: boolean, callback: AsyncCallback<void>): void;\n\n  \n  function displayBadge(bundle: BundleOption, enable: boolean): Promise<void>;\n\n  \n  function isBadgeDisplayed(bundle: BundleOption, callback: AsyncCallback<boolean>): void;\n\n  \n  function isBadgeDisplayed(bundle: BundleOption): Promise<boolean>;\n\n  \n  function setSlotByBundle(bundle: BundleOption, slot: NotificationSlot, callback: AsyncCallback<void>): void;\n\n  \n  function setSlotByBundle(bundle: BundleOption, slot: NotificationSlot): Promise<void>;\n\n  \n  function getSlotsByBundle(bundle: BundleOption, callback: AsyncCallback<Array<NotificationSlot>>): void;\n\n  \n  function getSlotsByBundle(bundle: BundleOption): Promise<Array<NotificationSlot>>;\n\n  \n  function getSlotNumByBundle(bundle: BundleOption, callback: AsyncCallback<number>): void;\n\n  \n  function getSlotNumByBundle(bundle: BundleOption): Promise<number>;\n\n  \n  function remove(bundle: BundleOption, notificationKey: NotificationKey, callback: AsyncCallback<void>): void;\n\n  \n  function remove(bundle: BundleOption, notificationKey: NotificationKey): Promise<void>;\n\n  \n  function remove(hashCode: string, callback: AsyncCallback<void>): void;\n\n  \n  function remove(hashCode: string): Promise<void>;\n\n  \n  function removeAll(bundle: BundleOption, callback: AsyncCallback<void>): void;\n\n  \n  function removeAll(callback: AsyncCallback<void>): void;\n\n  \n   function removeAll(userId: number, callback: AsyncCallback<void>): void;\n   function removeAll(userId: number): Promise<void>;\n\n  \n  function removeAll(bundle?: BundleOption): Promise<void>;\n\n  \n  function getAllActiveNotifications(callback: AsyncCallback<Array<NotificationRequest>>): void;\n\n  \n  function getAllActiveNotifications(): Promise<Array<NotificationRequest>>;\n\n  \n  function getActiveNotificationCount(callback: AsyncCallback<number>): void;\n  function getActiveNotificationCount(): Promise<number>;\n\n  \n  function getActiveNotifications(callback: AsyncCallback<Array<NotificationRequest>>): void;\n  function getActiveNotifications(): Promise<Array<NotificationRequest>>;\n\n  \n  function cancelGroup(groupName: string, callback: AsyncCallback<void>): void;\n  function cancelGroup(groupName: string): Promise<void>;\n\n  \n  function removeGroupByBundle(bundle: BundleOption, groupName: string, callback: AsyncCallback<void>): void;\n  function removeGroupByBundle(bundle: BundleOption, groupName: string): Promise<void>;\n\n  \n  function setDoNotDisturbDate(date: DoNotDisturbDate, callback: AsyncCallback<void>): void;\n  function setDoNotDisturbDate(date: DoNotDisturbDate): Promise<void>;\n\n  \n   function setDoNotDisturbDate(date: DoNotDisturbDate, userId: number, callback: AsyncCallback<void>): void;\n   function setDoNotDisturbDate(date: DoNotDisturbDate, userId: number): Promise<void>;\n\n  \n  function getDoNotDisturbDate(callback: AsyncCallback<DoNotDisturbDate>): void;\n  function getDoNotDisturbDate(): Promise<DoNotDisturbDate>;\n\n  \n   function getDoNotDisturbDate(userId: number, callback: AsyncCallback<DoNotDisturbDate>): void;\n   function getDoNotDisturbDate(userId: number): Promise<DoNotDisturbDate>;\n\n  \n  function supportDoNotDisturbMode(callback: AsyncCallback<boolean>): void;\n  function supportDoNotDisturbMode(): Promise<boolean>;\n\n  \n  function isSupportTemplate(templateName: string, callback: AsyncCallback<boolean>): void;\n  function isSupportTemplate(templateName: string): Promise<boolean>;\n\n  \n   function requestEnableNotification(callback: AsyncCallback<void>): void;\n   function requestEnableNotification(): Promise<void>;\n\n  \n  function enableDistributed(enable: boolean, callback: AsyncCallback<void>): void;\n  function enableDistributed(enable: boolean): Promise<void>;\n\n  \n  function isDistributedEnabled(callback: AsyncCallback<boolean>): void;\n  function isDistributedEnabled(): Promise<boolean>;\n\n  \n  function enableDistributedByBundle(bundle: BundleOption, enable: boolean, callback: AsyncCallback<void>): void;\n  function enableDistributedByBundle(bundle: BundleOption, enable: boolean): Promise<void>;\n\n  \n  function isDistributedEnabledByBundle(bundle: BundleOption, callback: AsyncCallback<boolean>): void;\n  function isDistributedEnabledByBundle(bundle: BundleOption): Promise<boolean>;\n\n  \n  function getDeviceRemindType(callback: AsyncCallback<DeviceRemindType>): void;\n  function getDeviceRemindType(): Promise<DeviceRemindType>;\n\n  \n  export interface BundleOption {\n    bundle: string;\n    uid?: number;\n  }\n\n  \n  export interface NotificationKey {\n    id: number;\n    label?: string;\n  }\n\n  \n  export enum DoNotDisturbType {\n    \n    TYPE_NONE = 0,\n\n    \n    TYPE_ONCE = 1,\n\n    \n    TYPE_DAILY = 2,\n\n    \n    TYPE_CLEARLY = 3,\n  }\n\n  \n  export interface DoNotDisturbDate {\n    \n    type: DoNotDisturbType;\n\n    \n    begin: Date;\n\n    \n    end: Date;\n  }\n\n  \n   export enum DoNotDisturbType {\n    \n    TYPE_NONE = 0,\n\n    \n    TYPE_ONCE = 1,\n\n    \n    TYPE_DAILY = 2,\n\n    \n    TYPE_CLEARLY = 3,\n  }\n\n  \n  export interface DoNotDisturbDate {\n    \n    type: DoNotDisturbType;\n\n    \n    begin: Date;\n\n    \n    end: Date;\n  }\n\n  \n  export enum DeviceRemindType {\n    \n    IDLE_DONOT_REMIND = 0,\n\n    \n    IDLE_REMIND = 1,\n\n    \n    ACTIVE_DONOT_REMIND = 2,\n\n    \n    ACTIVE_REMIND = 3,\n  }\n\n  \n  export enum SourceType {\n    \n    TYPE_NORMAL = 0,\n\n    \n    TYPE_CONTINUOUS = 1,\n\n    \n    TYPE_TIMER = 2,\n  }\n}", "api_method_name": "notification", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 1600, "since": 0, "api_used": "\u662f", "lines": ["sc: Verify that the notification whose notification ", " notification whose notification property isUnremova", " notify from '@ohos.notification'\nimport {describe, ", "===>');\n        let notificationRequest = {\n        ", "wait notify.publish(notificationRequest);\n        co", "wait notify.publish(notificationRequest1);\n        c", "      }\n        let notificationRequest = {\n        ", "      }\n        let notificationRequest1 = {\n       "], "files": ["publishIcon.js", "getAllActive.js", "activeotherapp.js", "Subscriber.js", "ExampleJsunit.test.js", "BadgeDisplay.js", "EnableNotification.js", "ActsAnsPublishInput.js", "ActsAnsPublishConversation.js", "getActive.js", "ActiveButton.js", "ActsAnsNotificationCancel.test.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "publishImage.js", "ActsAnsRemoveGroup.js", "publish.js", "ActsAnsNotificationRemove.test.js", "UnSubscriber.js", "actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "publish", "api_method_all": "function publish(request: NotificationRequest, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 1008, "since": 8, "api_used": "\u662f", "lines": ["====ANS_Cancel_0900 publish promise==================>');\n        s", "====ANS_Cancel_0100 publish2 promise=======>');\n        setTimeout(", "       await notify.publish(notificationRequest1);\n        console.", "       await notify.publish(notificationRequest);\n        console.i", "====ANS_Cancel_1800 publish promise==================>');\n        s", "====ANS_Cancel_1700 publish promise==================>');\n        s", "====ANS_Cancel_1200 publish promise=================>');\n        se", "====ANS_Cancel_0700 publish promise==================>');\n        s", "====ANS_Cancel_2100 publish promise================>');\n        set", "====ANS_Cancel_0200 publish2 promise==================>');\n        ", "====ANS_Cancel_0500 publish promise end==============>');\n        s", "====ANS_Cancel_2500 publish promise==================>');\n        s", "====ANS_Cancel_0200 publish1 promise==================>');\n        ", "====ANS_Cancel_1100 publish promise===========>');\n        setTimeo", "====ANS_Cancel_1500 publish promise=============>');\n        setTim", "====ANS_Cancel_1900 publish promise==============>');\n        setTi", "====ANS_Cancel_0100 publish1 promise=======>');\n        await notif", "====ANS_Cancel_1300 publish promise==================>');\n        s", "====ANS_Cancel_1600 publish promise==================>');\n        s", "====ANS_Cancel_2200 publish promise==================>');\n        s", "====ANS_Cancel_0800 publish promise==================>');\n        s", "====ANS_Cancel_1400 publish promise==============>');\n        setTi", "====ANS_Cancel_0600 publish promise==================>');\n        s", "====ANS_Cancel_1000 publish promise==================>');\n        s", "====ANS_Cancel_2300 publish promise==================>');\n        s", "====ANS_Cancel_2000 publish promise===============>');\n        setT", "====ANS_Cancel_2400 publish promise==================>');\n        s"], "files": ["publishIcon.js", "List.test.js", "getAllActive.js", "activeotherapp.js", "Subscriber.js", "ExampleJsunit.test.js", "ActsAnsPublishInput.js", "ActsAnsPublishConversation.js", "getActive.js", "ActiveButton.js", "ActsSubscriber_test_unorder.js", "ActsSubscriber_test_ordered.js", "ActsAnsNotificationCancel.test.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "publishImage.js", "ActsAnsRemoveGroup.js", "publish.js", "ActsAnsNotificationRemove.test.js", "actsansdistributedtest.js", "ActsPublish.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "publish", "api_method_all": "function publish(request: NotificationRequest): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 112, "since": 8, "api_used": "\u662f", "lines": ["s_PublishSound_0100 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0500 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0400 publish1 then======>\");\n            notify.setS", "s_PublishSound_1000 publish1 then setSlotByBundle then======>\");\n  ", "s_PublishSound_0200 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0700 publish1 then catch err======>\"+err);\n        }", "etSlotByBundle then publish2======>\");\n            }).catch((err)=>", "s_PublishSound_1000 publish1 then setSlotByBundle then publish2====", "s_PublishSound_0300 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0800 publish1 then catch err======>\"+err);\n        }", "       await notify.publish(notificationRequest).then(()=>{\n       ", "s_PublishSound_0200 publish1 then======>\");\n            notify.setS", "   }\n        notify.publish(notificationRequest).then(console.info(", "s_PublishSound_0500 publish1 then======>\");\n            notify.setS", "s_PublishSound_0900 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0600 publish1 then======>\");\n            notify.setS", "s_PublishSound_1000 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0700 publish1 then======>\");\n            notify.setS", "s_PublishSound_1000 publish1 then setSlotByBundle catch err======>\"", "s_PublishSound_0400 publish1 then catch err======>\"+err);\n        }", "SlotTypeSocial_0500 publish then======>\"));\n        setTimeout((asy", "s_PublishSound_0300 publish1 then======>\");\n            notify.setS", "s_PublishSound_0900 publish1 then======>\");\n            notify.setS", "   }\n        notify.publish(notificationRequest).then(()=>{\n       ", "s_PublishSound_0100 publish1 then======>\");\n            notify.setS", "s_PublishSound_0600 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0800 publish1 then======>\");\n            notify.setS", "lotTypeService_0500 publish then======>\"))\n        setTimeout((asyn", "s_PublishSound_1000 publish1 then======>\");\n            notify.setS"], "files": ["ExampleJsunit.test.js", "ActsSubscriber_test_ordered.js", "Subscriber.js", "publish.js", "ActiveButton.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "publish", "api_method_all": "function publish(request: NotificationRequest, userId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 1008, "since": 8, "api_used": "\u662f", "lines": ["====ANS_Cancel_0900 publish promise==================>');\n        s", "====ANS_Cancel_0100 publish2 promise=======>');\n        setTimeout(", "       await notify.publish(notificationRequest1);\n        console.", "       await notify.publish(notificationRequest);\n        console.i", "====ANS_Cancel_1800 publish promise==================>');\n        s", "====ANS_Cancel_1700 publish promise==================>');\n        s", "====ANS_Cancel_1200 publish promise=================>');\n        se", "====ANS_Cancel_0700 publish promise==================>');\n        s", "====ANS_Cancel_2100 publish promise================>');\n        set", "====ANS_Cancel_0200 publish2 promise==================>');\n        ", "====ANS_Cancel_0500 publish promise end==============>');\n        s", "====ANS_Cancel_2500 publish promise==================>');\n        s", "====ANS_Cancel_0200 publish1 promise==================>');\n        ", "====ANS_Cancel_1100 publish promise===========>');\n        setTimeo", "====ANS_Cancel_1500 publish promise=============>');\n        setTim", "====ANS_Cancel_1900 publish promise==============>');\n        setTi", "====ANS_Cancel_0100 publish1 promise=======>');\n        await notif", "====ANS_Cancel_1300 publish promise==================>');\n        s", "====ANS_Cancel_1600 publish promise==================>');\n        s", "====ANS_Cancel_2200 publish promise==================>');\n        s", "====ANS_Cancel_0800 publish promise==================>');\n        s", "====ANS_Cancel_1400 publish promise==============>');\n        setTi", "====ANS_Cancel_0600 publish promise==================>');\n        s", "====ANS_Cancel_1000 publish promise==================>');\n        s", "====ANS_Cancel_2300 publish promise==================>');\n        s", "====ANS_Cancel_2000 publish promise===============>');\n        setT", "====ANS_Cancel_2400 publish promise==================>');\n        s"], "files": ["publishIcon.js", "List.test.js", "getAllActive.js", "activeotherapp.js", "Subscriber.js", "ExampleJsunit.test.js", "ActsAnsPublishInput.js", "ActsAnsPublishConversation.js", "getActive.js", "ActiveButton.js", "ActsSubscriber_test_unorder.js", "ActsSubscriber_test_ordered.js", "ActsAnsNotificationCancel.test.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "publishImage.js", "ActsAnsRemoveGroup.js", "publish.js", "ActsAnsNotificationRemove.test.js", "actsansdistributedtest.js", "ActsPublish.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "publish", "api_method_all": "function publish(request: NotificationRequest, userId: number): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 112, "since": 8, "api_used": "\u662f", "lines": ["s_PublishSound_0100 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0500 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0400 publish1 then======>\");\n            notify.setS", "s_PublishSound_1000 publish1 then setSlotByBundle then======>\");\n  ", "s_PublishSound_0200 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0700 publish1 then catch err======>\"+err);\n        }", "etSlotByBundle then publish2======>\");\n            }).catch((err)=>", "s_PublishSound_1000 publish1 then setSlotByBundle then publish2====", "s_PublishSound_0300 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0800 publish1 then catch err======>\"+err);\n        }", "       await notify.publish(notificationRequest).then(()=>{\n       ", "s_PublishSound_0200 publish1 then======>\");\n            notify.setS", "   }\n        notify.publish(notificationRequest).then(console.info(", "s_PublishSound_0500 publish1 then======>\");\n            notify.setS", "s_PublishSound_0900 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0600 publish1 then======>\");\n            notify.setS", "s_PublishSound_1000 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0700 publish1 then======>\");\n            notify.setS", "s_PublishSound_1000 publish1 then setSlotByBundle catch err======>\"", "s_PublishSound_0400 publish1 then catch err======>\"+err);\n        }", "SlotTypeSocial_0500 publish then======>\"));\n        setTimeout((asy", "s_PublishSound_0300 publish1 then======>\");\n            notify.setS", "s_PublishSound_0900 publish1 then======>\");\n            notify.setS", "   }\n        notify.publish(notificationRequest).then(()=>{\n       ", "s_PublishSound_0100 publish1 then======>\");\n            notify.setS", "s_PublishSound_0600 publish1 then catch err======>\"+err);\n        }", "s_PublishSound_0800 publish1 then======>\");\n            notify.setS", "lotTypeService_0500 publish then======>\"))\n        setTimeout((asyn", "s_PublishSound_1000 publish1 then======>\");\n            notify.setS"], "files": ["ExampleJsunit.test.js", "ActsSubscriber_test_ordered.js", "Subscriber.js", "publish.js", "ActiveButton.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "cancel", "api_method_all": "function cancel(id: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 389, "since": 8, "api_used": "\u662f", "lines": ["a));\n        notify.cancelAll(cancelAllCallBack2Times1);\n        c", "====ANS_Cancel_0100 cancelAllCallBack err================>' + JSON", "====ANS_Cancel_0500 cancelAllCallBack2 err:==============>' + JSON", "====ANS_Cancel_0800 cancelAll==========>');\n        console.info('", "====ANS_Cancel_0300 cancelAllCallBack data:=============>' + JSON.", "\n            notify.cancelAll();\n            console.info('=======", "ncel_0500 onConsume cancelAll=================>');\n        console", "====ANS_Cancel_0700 cancelAllCallBack data:==========>' + JSON.str", "   notify.cancelAll(cancelAllCallBackIsUnremovable);\n        conso", "\n    }\n    function cancelAllCallBack2Times1(err){\n        console", "\n    }\n    function cancelAllCallBackNoNotify(err, data){\n        ", "====ANS_Cancel_0700 cancelAllCallBack err:===========>' + JSON.str", "====ANS_Cancel_0500 cancelAllCallBack2 start=============>');\n    ", "====ANS_Cancel_0700 cancelAllCallBack end=======================>'", "====ANS_Cancel_0500 cancelAllCallBack1 err:===========>' + JSON.st", "ncel_0200 onConsume cancelAll promise==========>');\n        }\n    ", " cancelAllCallBack1 cancelAll======>');\n        console.info('====", "====ANS_Cancel_0300 cancelAllCallBack start=============>');\n     ", "a));\n        notify.cancelAll();\n        console.info('==========A", "====ANS_Cancel_0300 cancelAll promise===============>');\n        s", "a));\n        notify.cancelAll(cancelAllCallBackIsUnremovable);\n   ", "   notify.cancelAll(cancelAllCallBack);\n            console.info('", "====ANS_Cancel_0100 cancelAllCallBack data===============>' + JSON", "====ANS_Cancel_0100 cancelAllCallBack start==============>');\n    ", "====ANS_Cancel_0300 cancelAllCallBack end===============>');\n    }", "ncel_0100 onConsume cancelAll=======================>');\n        }", "====ANS_Cancel_0300 cancelAllCallBack  err:=============>' + JSON.", "====ANS_Cancel_0400 cancelAll promise=============>');\n        set", "====ANS_Cancel_0500 cancelAllCallBack1 cancelAll======>');\n       ", "ncel_0600 onConsume cancelAll 2times1 end======>');\n        notify", "====ANS_Cancel_0500 cancelAllCallBack1  end===========>');\n    }\n ", "a));\n        notify.cancelAll();\n        console.info('===========", "\n    }\n    function cancelAllCallBack(err, data){\n        console.", "====ANS_Cancel_0700 cancelAllCallBack start==========>');\n        ", "   notify.cancelAll(cancelAllCallBack2Times2);\n        console.inf", "a));\n        notify.cancel(data.request.id,cancelCallBackCancel);\n", "\n            notify.cancelAll(cancelAllCallBack);\n            cons", "ncel_0700 onConsume cancelAll===========>');\n        console.info(", "it notify.cancelAll(cancelAllCallBackNoNotify);\n        console.in", "====ANS_Cancel_0100 cancelAllCallBack end================>');\n    ", "   notify.cancelAll(cancelAllCallBack2Times1);\n        console.inf", "r));\n        notify.cancelAll(cancelAllCallBack2Times2);\n        c", ">');\n        notify.cancelAll();\n        console.info('==========A", "       await notify.cancelAll();\n        console.info('===========", "\n    }\n    function cancelAllCallBackIsUnremovable(err, data){\n   ", "       await notify.cancelAll(cancelAllCallBackNoNotify);\n        ", "====ANS_Cancel_0500 cancelAllCallBack2 end===============>');\n    ", "\n    }\n    function cancelAllCallBack2Times2(err){\n        console", "====ANS_Cancel_0500 cancelAllCallBack1 start==========>');\n       ", "ncel_0600 onConsume cancelAll 2times2 end======>');\n        consol"], "files": ["getAllActive.js", "ActsAnsNotificationCancel.test.js", "ActsAnsCancelGroup.js", "WantAgent.test.js", "getActive.js", "publish.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "cancel", "api_method_all": "function cancel(id: number, label: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 389, "since": 8, "api_used": "\u662f", "lines": ["a));\n        notify.cancelAll(cancelAllCallBack2Times1);\n        c", "====ANS_Cancel_0100 cancelAllCallBack err================>' + JSON", "====ANS_Cancel_0500 cancelAllCallBack2 err:==============>' + JSON", "====ANS_Cancel_0800 cancelAll==========>');\n        console.info('", "====ANS_Cancel_0300 cancelAllCallBack data:=============>' + JSON.", "\n            notify.cancelAll();\n            console.info('=======", "ncel_0500 onConsume cancelAll=================>');\n        console", "====ANS_Cancel_0700 cancelAllCallBack data:==========>' + JSON.str", "   notify.cancelAll(cancelAllCallBackIsUnremovable);\n        conso", "\n    }\n    function cancelAllCallBack2Times1(err){\n        console", "\n    }\n    function cancelAllCallBackNoNotify(err, data){\n        ", "====ANS_Cancel_0700 cancelAllCallBack err:===========>' + JSON.str", "====ANS_Cancel_0500 cancelAllCallBack2 start=============>');\n    ", "====ANS_Cancel_0700 cancelAllCallBack end=======================>'", "====ANS_Cancel_0500 cancelAllCallBack1 err:===========>' + JSON.st", "ncel_0200 onConsume cancelAll promise==========>');\n        }\n    ", " cancelAllCallBack1 cancelAll======>');\n        console.info('====", "====ANS_Cancel_0300 cancelAllCallBack start=============>');\n     ", "a));\n        notify.cancelAll();\n        console.info('==========A", "====ANS_Cancel_0300 cancelAll promise===============>');\n        s", "a));\n        notify.cancelAll(cancelAllCallBackIsUnremovable);\n   ", "   notify.cancelAll(cancelAllCallBack);\n            console.info('", "====ANS_Cancel_0100 cancelAllCallBack data===============>' + JSON", "====ANS_Cancel_0100 cancelAllCallBack start==============>');\n    ", "====ANS_Cancel_0300 cancelAllCallBack end===============>');\n    }", "ncel_0100 onConsume cancelAll=======================>');\n        }", "====ANS_Cancel_0300 cancelAllCallBack  err:=============>' + JSON.", "====ANS_Cancel_0400 cancelAll promise=============>');\n        set", "====ANS_Cancel_0500 cancelAllCallBack1 cancelAll======>');\n       ", "ncel_0600 onConsume cancelAll 2times1 end======>');\n        notify", "====ANS_Cancel_0500 cancelAllCallBack1  end===========>');\n    }\n ", "a));\n        notify.cancelAll();\n        console.info('===========", "\n    }\n    function cancelAllCallBack(err, data){\n        console.", "====ANS_Cancel_0700 cancelAllCallBack start==========>');\n        ", "   notify.cancelAll(cancelAllCallBack2Times2);\n        console.inf", "a));\n        notify.cancel(data.request.id,cancelCallBackCancel);\n", "\n            notify.cancelAll(cancelAllCallBack);\n            cons", "ncel_0700 onConsume cancelAll===========>');\n        console.info(", "it notify.cancelAll(cancelAllCallBackNoNotify);\n        console.in", "====ANS_Cancel_0100 cancelAllCallBack end================>');\n    ", "   notify.cancelAll(cancelAllCallBack2Times1);\n        console.inf", "r));\n        notify.cancelAll(cancelAllCallBack2Times2);\n        c", ">');\n        notify.cancelAll();\n        console.info('==========A", "       await notify.cancelAll();\n        console.info('===========", "\n    }\n    function cancelAllCallBackIsUnremovable(err, data){\n   ", "       await notify.cancelAll(cancelAllCallBackNoNotify);\n        ", "====ANS_Cancel_0500 cancelAllCallBack2 end===============>');\n    ", "\n    }\n    function cancelAllCallBack2Times2(err){\n        console", "====ANS_Cancel_0500 cancelAllCallBack1 start==========>');\n       ", "ncel_0600 onConsume cancelAll 2times2 end======>');\n        consol"], "files": ["getAllActive.js", "ActsAnsNotificationCancel.test.js", "ActsAnsCancelGroup.js", "WantAgent.test.js", "getActive.js", "publish.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "cancel", "api_method_all": "function cancel(id: number, label?: string): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 14, "since": 8, "api_used": "\u662f", "lines": [">');\n        notify.cancel(id2200, label2200).then(()=>{\n         ", "ncel_2000 onConsume cancel then======>');\n        }).catch((err)=>", "ncel_2200 onConsume cancel2 then======>');\n        }).catch((err)=", "ncel_2600 onConsume cancel then======>');\n        }).catch((err)=>", "          wantAgent.cancel(data).then(\n                    console", "id);\n        notify.cancel(data.request.id, '9999').then(()=>{\n   ", "          wantAgent.cancel(WantAgentd).then(\n                     ", "ncel_1800 onConsume cancel then======>');\n        }).catch((err)=>", "NS_CancelGroup_0800 cancelGroup then==================>\");\n       ", "id);\n        notify.cancel(6666, '6666').then(()=>{\n            co", "id);\n        notify.cancel(11111, data.request.label).then(()=>{\n ", ">\");\n        notify.cancelGroup(\"\").then(()=>{\n            console", "ncel_2400 onConsume cancel then======>');\n        }).catch((err)=>", "id);\n        notify.cancel(data.request.id, '').then(()=>{\n       "], "files": ["ActsAnsNotificationCancel.test.js", "WantAgent.test.js", "ActsAnsCancelGroup.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "cancelAll", "api_method_all": "function cancelAll(callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 126, "since": 0, "api_used": "\u662f", "lines": ["       await notify.cancelAll(cancelAllCallBackNoNotify);\n        con", "ncel_0700 onConsume cancelAll===========>');\n        console.info('==", "====ANS_Cancel_0100 cancelAllCallBack end================>');\n    }\n\n", "====ANS_Cancel_0100 cancelAllCallBack data===============>' + JSON.st", "====ANS_Cancel_0700 cancelAllCallBack start==========>');\n        con", "ncel_0100 onConsume cancelAll=======================>');\n        }\n  ", "====ANS_Cancel_0300 cancelAllCallBack start=============>');\n        ", "====ANS_Cancel_0500 cancelAllCallBack1 err:===========>' + JSON.strin", "   notify.cancelAll(cancelAllCallBack2Times2);\n        console.info('", "\n    }\n    function cancelAllCallBack2Times2(err){\n        console.in", "====ANS_Cancel_0700 cancelAllCallBack err:===========>' + JSON.string", " cancelAllCallBack1 cancelAll======>');\n        console.info('=======", "ncel_0600 onConsume cancelAll 2times1 end======>');\n        notify.ca", "====ANS_Cancel_0300 cancelAllCallBack  err:=============>' + JSON.str", "====ANS_Cancel_0700 cancelAllCallBack data:==========>' + JSON.string", "====ANS_Cancel_0700 cancelAllCallBack end=======================>');\n", "====ANS_Cancel_0500 cancelAllCallBack1  end===========>');\n    }\n    ", "\n    }\n    function cancelAllCallBack2Times1(err){\n        console.in", "it notify.cancelAll(cancelAllCallBackNoNotify);\n        console.info(", "a));\n        notify.cancelAll(cancelAllCallBackIsUnremovable);\n      ", "====ANS_Cancel_0100 cancelAllCallBack err================>' + JSON.st", "ncel_0600 onConsume cancelAll 2times2 end======>');\n        console.i", "====ANS_Cancel_0300 cancelAll promise===============>');\n        setT", "====ANS_Cancel_0300 cancelAllCallBack end===============>');\n    }\n\n ", "   notify.cancelAll(cancelAllCallBack);\n            console.info('===", "a));\n        notify.cancelAll();\n        console.info('==============", "   notify.cancelAll(cancelAllCallBack2Times1);\n        console.info('", "\n    }\n    function cancelAllCallBackNoNotify(err, data){\n        con", "       await notify.cancelAll();\n            done();\n        }),timeo", "a));\n        notify.cancelAll();\n        console.info('==========ANS_", "====ANS_Cancel_0500 cancelAllCallBack1 cancelAll======>');\n        co", "====ANS_Cancel_0100 cancelAllCallBack start==============>');\n       ", "       await notify.cancelAll();\n        console.info('==============", "====ANS_Cancel_0500 cancelAllCallBack2 start=============>');\n       ", "\n    }\n    function cancelAllCallBackIsUnremovable(err, data){\n      ", "====ANS_Cancel_0500 cancelAllCallBack2 err:==============>' + JSON.st", "   notify.cancelAll(cancelAllCallBackIsUnremovable);\n        console.", "\n    }\n    function cancelAllCallBack(err, data){\n        console.inf", "\n            notify.cancelAll();\n            console.info('==========", "\n            notify.cancelAll(cancelAllCallBack);\n            console", "a));\n        notify.cancelAll(cancelAllCallBack2Times1);\n        cons", ">');\n        notify.cancelAll();\n        console.info('==========ANS_", "r));\n        notify.cancelAll(cancelAllCallBack2Times2);\n        cons", "====ANS_Cancel_0500 cancelAllCallBack2 end===============>');\n    }\n\n", "====ANS_Cancel_0400 cancelAll promise=============>');\n        setTim", "ncel_0200 onConsume cancelAll promise==========>');\n        }\n       ", "====ANS_Cancel_0300 cancelAllCallBack data:=============>' + JSON.str", "ncel_0500 onConsume cancelAll=================>');\n        console.in", "====ANS_Cancel_0800 cancelAll==========>');\n        console.info('===", "====ANS_Cancel_0500 cancelAllCallBack1 start==========>');\n        co"], "files": ["ActsAnsNotificationCancel.test.js", "getAllActive.js", "getActive.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "cancelAll", "api_method_all": "function cancelAll(): Promise<void>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "addSlot", "api_method_all": "function addSlot(slot: NotificationSlot, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 233, "since": 0, "api_used": "\u662f", "lines": ["console.debug(\"====>addSlot SOCIAL_COMMUNICATION callback====>\");\n ", "console.debug(\"====>addSlot SlotType.SERVICE_INFORMATION start====>", "console.debug(\"====>addSlotActsAnsGetSlotTestCallback_0400 enter===", "console.debug(\"====>addSlotActsAnsGetSlotTestCallback_0300 err:\" + ", "console.debug(\"====>addSlot SlotType.CONTENT_INFORMATION start====>", "console.debug(\"====>addSlot ActsAnsGetSlotTestCallback_0200 enter==", "console.debug(\"====>addSlotActsAnsGetSlotTestCallback_0500 enter===", "console.debug(\"====>addSlot SlotType.SOCIAL_COMMUNICATION start====", "console.debug(\"====>addSlot SERVICE_INFORMATION callback====>\");\n  ", "console.debug(\"====>addSlot SOCIAL_COMMUNICATION====>\");\n        aw", "console.debug(\"====>addSlot SlotType.UNKNOWN_TYPE start====>\");\n   ", "console.debug(\"====>addSlot SERVICE_INFORMATION====>\");\n        awa", "console.debug(\"====>addSlot CONTENT_INFORMATION====>\");\n        awa", "{\n        title: \"\u6d4b\u8bd5addSlot(slot: NotificationSlot)\u63a5\u53e3\"\n    },\n    o", "console.debug(\"====>addSlot UNKNOWN_TYPE====>\");\n        await noti", "console.debug(\"====>addSlot CONTENT_INFORMATION callback====>\");\n  ", "console.debug(\"====>addSlot CONTENT_INFORMATION====>\");\n        not", " await notification.addSlot(\n            {\n                type: no", "console.debug(\"====>addSlot SlotType.OTHER_TYPES start====>\");\n    ", "       notification.addSlot(notification.SlotType.SERVICE_INFORMATI", "console.debug(\"====>addSlotActsAnsGetSlotTestCallback_0400 err:\" + ", "console.debug(\"====>addSlot 0100 enter====>\");\n            console.", "       notification.addSlot(\n            {\n                type: no", "console.debug(\"====>addSlot SERVICE_INFORMATION====>\");\n        not", "console.debug(\"====>addSlot 0100 err:\" + JSON.stringify(err));\n    ", "console.debug(\"====>addSlot UNKNOWN_TYPE callback====>\");\n         ", "       notification.addSlot(notification.SlotType.CONTENT_INFORMATI", "       notification.addSlot(notification.SlotType.SOCIAL_COMMUNICAT", "console.debug(\"====>addSlot SOCIAL_COMMUNICATION====>\");\n        no", "       notification.addSlot(notification.SlotType.UNKNOWN_TYPE, (er", "console.error(\"====>addSlotActsAnsGetSlotTestPromise_0100 err:\" + J", "console.debug(\"====>addSlot OTHER_TYPES callback====>\");\n          ", "console.debug(\"====>addSlot OTHER_TYPES====>\");\n        notificatio", "console.debug(\"====>addSlotActsAnsGetSlotTestCallback_0300 enter===", "console.debug(\"====>addSlotActsAnsGetSlotTestCallback_0500 err:\" + ", "    this.title = \"\u6d4b\u8bd5addSlot(slot: NotificationSlot)\u63a5\u53e3\";\n    },\n    ", "       notification.addSlot(notification.SlotType.OTHER_TYPES, (err", " await notification.addSlot(notification.SlotType.SOCIAL_COMMUNICAT", "console.debug(\"====>addSlot ActsAnsGetSlotTestCallback_0200 err:\" +"], "files": ["ExampleJsunit.test.js", "doNotDisturbTest.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "addSlot", "api_method_all": "function addSlot(slot: NotificationSlot): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["s_PublishVibra_1100 addSlot then======>\");\n        }).catch((err)=>"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "addSlot", "api_method_all": "function addSlot(type: SlotType, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 233, "since": 0, "api_used": "\u662f", "lines": ["console.debug(\"====>addSlot SOCIAL_COMMUNICATION callback====>\");\n ", "console.debug(\"====>addSlot SlotType.SERVICE_INFORMATION start====>", "console.debug(\"====>addSlotActsAnsGetSlotTestCallback_0400 enter===", "console.debug(\"====>addSlotActsAnsGetSlotTestCallback_0300 err:\" + ", "console.debug(\"====>addSlot SlotType.CONTENT_INFORMATION start====>", "console.debug(\"====>addSlot ActsAnsGetSlotTestCallback_0200 enter==", "console.debug(\"====>addSlotActsAnsGetSlotTestCallback_0500 enter===", "console.debug(\"====>addSlot SlotType.SOCIAL_COMMUNICATION start====", "console.debug(\"====>addSlot SERVICE_INFORMATION callback====>\");\n  ", "console.debug(\"====>addSlot SOCIAL_COMMUNICATION====>\");\n        aw", "console.debug(\"====>addSlot SlotType.UNKNOWN_TYPE start====>\");\n   ", "console.debug(\"====>addSlot SERVICE_INFORMATION====>\");\n        awa", "console.debug(\"====>addSlot CONTENT_INFORMATION====>\");\n        awa", "{\n        title: \"\u6d4b\u8bd5addSlot(slot: NotificationSlot)\u63a5\u53e3\"\n    },\n    o", "console.debug(\"====>addSlot UNKNOWN_TYPE====>\");\n        await noti", "console.debug(\"====>addSlot CONTENT_INFORMATION callback====>\");\n  ", "console.debug(\"====>addSlot CONTENT_INFORMATION====>\");\n        not", " await notification.addSlot(\n            {\n                type: no", "console.debug(\"====>addSlot SlotType.OTHER_TYPES start====>\");\n    ", "       notification.addSlot(notification.SlotType.SERVICE_INFORMATI", "console.debug(\"====>addSlotActsAnsGetSlotTestCallback_0400 err:\" + ", "console.debug(\"====>addSlot 0100 enter====>\");\n            console.", "       notification.addSlot(\n            {\n                type: no", "console.debug(\"====>addSlot SERVICE_INFORMATION====>\");\n        not", "console.debug(\"====>addSlot 0100 err:\" + JSON.stringify(err));\n    ", "console.debug(\"====>addSlot UNKNOWN_TYPE callback====>\");\n         ", "       notification.addSlot(notification.SlotType.CONTENT_INFORMATI", "       notification.addSlot(notification.SlotType.SOCIAL_COMMUNICAT", "console.debug(\"====>addSlot SOCIAL_COMMUNICATION====>\");\n        no", "       notification.addSlot(notification.SlotType.UNKNOWN_TYPE, (er", "console.error(\"====>addSlotActsAnsGetSlotTestPromise_0100 err:\" + J", "console.debug(\"====>addSlot OTHER_TYPES callback====>\");\n          ", "console.debug(\"====>addSlot OTHER_TYPES====>\");\n        notificatio", "console.debug(\"====>addSlotActsAnsGetSlotTestCallback_0300 enter===", "console.debug(\"====>addSlotActsAnsGetSlotTestCallback_0500 err:\" + ", "    this.title = \"\u6d4b\u8bd5addSlot(slot: NotificationSlot)\u63a5\u53e3\";\n    },\n    ", "       notification.addSlot(notification.SlotType.OTHER_TYPES, (err", " await notification.addSlot(notification.SlotType.SOCIAL_COMMUNICAT", "console.debug(\"====>addSlot ActsAnsGetSlotTestCallback_0200 err:\" +"], "files": ["ExampleJsunit.test.js", "doNotDisturbTest.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "addSlot", "api_method_all": "function addSlot(type: SlotType): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["s_PublishVibra_1100 addSlot then======>\");\n        }).catch((err)=>"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "addSlots", "api_method_all": "function addSlots(slots: Array<NotificationSlot>, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 20, "since": 0, "api_used": "\u662f", "lines": ["console.debug(\"====>addSlots twice start ActsAnsSlotAddRemoveAll_040", "console.debug(\"====>addSlots start ActsAnsSlotAddRemoveAll_0100====>", "console.debug(\"====>addSlots start ActsAnsSlotAddRemoveAll_0300====>", "console.debug(\"====>addSlots start ActsAnsSlotAddRemoveAll_0400====>", "       notification.addSlots([\n                {\n                   ", "console.debug(\"====>addSlots callback ActsAnsSlotAddRemoveAll_0700==", "    this.title = \"\u6d4b\u8bd5addSlots\u63a5\u53e3\u548cremoveAllSlots\u63a5\u53e3\";\n    },\n    onShow(", "console.debug(\"====>addSlots callback ActsAnsSlotAddRemoveAll_0300==", " await notification.addSlots([\n            {\n                type: n", "console.debug(\"====>addSlots twice callback ActsAnsSlotAddRemoveAll_", "console.debug(\"====>addSlots second time ActsAnsSlotAddRemoveAll_030", "console.debug(\"====>addSlots callback ActsAnsSlotAddRemoveAll_0100==", "{\n        title: \"\u6d4b\u8bd5addSlots\u63a5\u53e3\u548cremoveAllSlots\u63a5\u53e3\"\n    },\n    onInit()", "       notification.addSlots([\n            {\n                type: n", "console.debug(\"====>addSlots start ActsAnsSlotAddRemoveAll_0200====>"], "files": ["ExampleJsunit.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "addSlots", "api_method_all": "function addSlots(slots: Array<NotificationSlot>): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getSlot", "api_method_all": "function getSlot(slotType: SlotType, callback: AsyncCallback<NotificationSlot>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 455, "since": 0, "api_used": "\u662f", "lines": ["console.debug(\"====>getSlot SlotType.OTHER_TYPES====>\");\n        no", "console.debug(\"====>getSlot data:\" + JSON.stringify(data));\n       ", "       notification.getSlot(notification.SlotType.SERVICE_INFORMATI", "console.debug(\"====>getSlot SlotType.OTHER_TYPES====>\");\n        va", "console.debug(\"====>getSlot 0200 err:\" + JSON.stringify(err));\n    ", " await notification.getSlot(notification.SlotType.UNKNOWN_TYPE);\n  ", "console.debug(\"====>getSlot 0100 data:\" + JSON.stringify(data));\n  ", "console.debug(\"====>getSlot SlotType.UNKNOWN_TYPE====>\");\n        v", "console.debug(\"====>getSlot SlotType.SOCIAL_COMMUNICATION====>\");\n ", " await notification.getSlot(notification.SlotType.SERVICE_INFORMATI", "console.debug(\"====>getSlot 0700 data:\" + JSON.stringify(data));\n  ", "tType.UNKNOWN_TYPE, getSlotCallback);\n            })\n        setTim", "console.debug(\"====>getSlot 0800 data:\" + JSON.stringify(data));\n  ", ");\n        function getSlotCallback(err, data) {\n            consol", "console.debug(\"====>getSlot 0100 err:\" + JSON.stringify(err));\n    ", "console.debug(\"====>getSlot 0400 data:\" + JSON.stringify(data));\n  ", " await notification.getSlot(notification.SlotType.OTHER_TYPES);\n   ", "otType.OTHER_TYPES, getSlotCallback);\n        setTimeout(function()", "       notification.getSlot(notification.SlotType.UNKNOWN_TYPE, get", "console.debug(\"====>getSlot 0500 err:\" + JSON.stringify(err));\n    ", "console.debug(\"====>getSlot SlotType.UNKNOWN_TYPE====>\");\n         ", "console.debug(\"====>getSlot SlotType.SERVICE_INFORMATION====>\");\n  ", "console.debug(\"====>getSlot 0200 data:\" + JSON.stringify(data));\n  ", "       notification.getSlot(notification.SlotType.SOCIAL_COMMUNICAT", "console.debug(\"====>getSlot 0300 err:\" + JSON.stringify(err));\n    ", "CIAL_COMMUNICATION, getSlotCallback);\n            })\n        setTim", "console.debug(\"====>getSlot 0900 data:\" + JSON.stringify(data));\n  ", "console.debug(\"====>getSlot 0600 data:\" + JSON.stringify(data));\n  ", " await notification.getSlot(notification.SlotType.CONTENT_INFORMATI", "console.debug(\"====>getSlot enter====>\");\n        console.debug(\"==", "ERVICE_INFORMATION, getSlotCallback);\n            })\n        setTim", "console.debug(\"====>getSlot 0500 data:\" + JSON.stringify(data));\n  ", "console.debug(\"====>getSlot 0400 err:\" + JSON.stringify(err));\n    ", " await notification.getSlot(notification.SlotType.SOCIAL_COMMUNICAT", "       notification.getSlot(notification.SlotType.CONTENT_INFORMATI", "       notification.getSlot(notification.SlotType.OTHER_TYPES, getS", "console.debug(\"====>getSlot 0300 data:\" + JSON.stringify(data));\n  ", "console.debug(\"====>getSlot SlotType.SOCIAL_COMMUNICATION start====", "console.debug(\"====>getSlot SlotType.CONTENT_INFORMATION====>\");\n  ", "ONTENT_INFORMATION, getSlotCallback);\n            })\n        setTim", "console.debug(\"====>getSlot 0100 enter====>\");\n                cons"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getSlot", "api_method_all": "function getSlot(slotType: SlotType): Promise<NotificationSlot>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 24, "since": 0, "api_used": "\u662f", "lines": ["      and then call getSlotsByBundle query results.(callback)\n     ", "       notification.getSlotNumByBundle(bundleoption).then((data) =>", "       notification.getSlotsByBundle(bundleoption).then((data) => {", "      and then call getSlotsByBundle query results.(promise)\n     *", "       notification.getSlot(notification.SlotType.OTHER_TYPES).then"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getSlots", "api_method_all": "function getSlots(callback: AsyncCallback<Array<NotificationSlot>>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 203, "since": 0, "api_used": "\u662f", "lines": ["console.debug(\"====>getSlotsByBundle1 start====>\");\n        notifica", "       notification.getSlotsByBundle(bundleoption, (err, data) => {\n", " await notification.getSlotsByBundle(bundleoption)\n            conso", "console.debug(\"====>getSlotsByBundle1.1 finish====>\");\n            n", "console.debug(\"====>getSlotsByBundle1.1 start====>\");\n        notifi", "console.debug(\"====>getSlotsByBundle1 start====>\");\n            noti", "console.debug(\"====>getSlotsByBundle1 finish====>\");\n            con", "console.debug(\"====>getSlotsByBundle1 start====>\");\n        var data"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getSlots", "api_method_all": "function getSlots(): Promise<Array<NotificationSlot>>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 17, "since": 0, "api_used": "\u662f", "lines": ["       notification.getSlotsByBundle(bundleoption).then((data) => {\n", "      and then call getSlotsByBundle query results.(promise)\n     */", "      and then call getSlotsByBundle query results.(callback)\n     *"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "removeSlot", "api_method_all": "function removeSlot(slotType: SlotType, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 202, "since": 0, "api_used": "\u662f", "lines": ["console.debug(\"====>removeSlot OTHER_TYPES err:\" + JSON.stringify(err)", " await notification.removeSlot(notification.SlotType.SERVICE_INFORMATI", "console.debug(\"====>removeSlot second time callback err:\" + JSON.strin", "console.debug(\"====>removeSlot ActsAnsAddSlotSystem_1000 start====>\");", "console.debug(\"====>removeSlot SOCIAL_COMMUNICATION err:\" + JSON.strin", "console.debug(\"====>removeSlot ActsAnsAddSlotSystem_0300 err====>\" + J", "console.debug(\"====>removeSlot ActsAnsAddSlotSystem_0200 err====>\" + J", "console.debug(\"====>removeSlot first time callback err====>\" + JSON.st", "       notification.removeSlot(notification.SlotType.CONTENT_INFORMATI", "console.debug(\"====>removeSlot second time err:\" + JSON.stringify(err)", "console.debug(\"====>removeSlot ActsAnsAddSlotSystem_0900 start====>\");", "console.debug(\"====>removeSlot ActsAnsAddSlotSystem_0500 err====>\" + J", "console.debug(\"====>removeSlot ActsAnsAddSlotSystem_0700 start====>\");", " await notification.removeSlot(notification.SlotType.OTHER_TYPES);\n   ", "       notification.removeSlot(notification.SlotType.OTHER_TYPES, (err", "       notification.removeSlot(notification.SlotType.SOCIAL_COMMUNICAT", "console.debug(\"====>removeSlot CONTENT_INFORMATION err:\" + JSON.string", "console.debug(\"====>removeSlot ActsAnsAddSlotSystem_0600 start====>\");", "console.debug(\"====>removeSlot ActsAnsAddSlotSystem_0800 start====>\");", "console.debug(\"====>removeSlot first time promise start====>\");\n      ", "console.debug(\"====>removeSlot SOCIAL_COMMUNICATION enter====>\");\n    ", "console.debug(\"====>removeSlot ActsAnsAddSlotSystem_0400 err====>\" + J", "{\n        title: \"\u6d4b\u8bd5removeSlot\u63a5\u53e3\"\n    },\n    onInit() {\n        this.t", "       notification.removeSlot(notification.SlotType.SERVICE_INFORMATI", "console.debug(\"====>removeSlot OTHER_TYPES enter====>\");\n             ", "console.debug(\"====>removeSlot ActsAnsAddSlotSystem_0100 err====>\" + J", "console.debug(\"====>removeSlot SERVICE_INFORMATION enter====>\");\n     ", " await notification.removeSlot(notification.SlotType.CONTENT_INFORMATI", "    this.title = \"\u6d4b\u8bd5removeSlot\u63a5\u53e3\";\n    },\n    onShow() {\n        conso", "console.debug(\"====>removeSlot SERVICE_INFORMATION err:\" + JSON.string", "console.debug(\"====>removeSlot CONTENT_INFORMATION enter====>\");\n     ", " await notification.removeSlot(notification.SlotType.SOCIAL_COMMUNICAT"], "files": ["ExampleJsunit.test.js", "doNotDisturbTest.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "removeSlot", "api_method_all": "function removeSlot(slotType: SlotType): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["       notification.removeSlot(notification.SlotType.OTHER_TYPES).then"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "removeAllSlots", "api_method_all": "function removeAllSlots(callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 27, "since": 0, "api_used": "\u662f", "lines": ["console.debug(\"====>removeAllSlots start ActsAnsSlotAddRemoveAll_0300====>", " await notification.removeAllSlots();\n        console.debug(\"====>getSlots", "console.debug(\"====>removeAllSlots ActsAnsSlotSystemPromise_0100====>\");\n ", "tle = \"\u6d4b\u8bd5addSlots\u63a5\u53e3\u548cremoveAllSlots\u63a5\u53e3\";\n    },\n    onShow() {\n        conso", " await notification.removeAllSlots();\n        console.debug(\"====>ActsAnsS", "       notification.removeAllSlots((err)=>{\n            console.debug(\"===", "console.debug(\"====>removeAllSlots ActsAnsSlotAddRemoveAll_0500 err:\" + JS", "console.debug(\"====>removeAllSlots ActsAnsSlotAddRemoveAll_0500====>\");\n  ", "console.debug(\"====>removeAllSlots ActsAnsSlotAddRemoveAll_0300 callback==", "       notification.removeAllSlots((err)=>{\n                            co", "console.debug(\"====>removeAllSlots ActsAnsSlotAddRemoveAll_0600====>\");\n  ", "console.debug(\"====>removeAllSlots start ActsAnsSlotAddRemoveAll_0500====>", "console.debug(\"====>removeAllSlots start ActsAnsSlotAddRemoveAll_0200====>", "console.debug(\"====>removeAllSlots ActsAnsSlotAddRemoveAll_0600 err:\" + JS", "console.debug(\"====>removeAllSlots start ActsAnsSlotAddRemoveAll_0600====>", " await notification.removeAllSlots();\n            console.debug(\"====>Acts", "console.debug(\"====>removeAllSlots ActsAnsSlotSystemCallback_0100 err====>", "console.debug(\"====>removeAllSlots ActsAnsSlotAddRemoveAll_0700 err:\" + JS", "console.debug(\"====>removeAllSlots start ActsAnsSlotAddRemoveAll_0400====>", "itle: \"\u6d4b\u8bd5addSlots\u63a5\u53e3\u548cremoveAllSlots\u63a5\u53e3\"\n    },\n    onInit() {\n        this.t", "       notification.removeAllSlots((err)=>{\n                        consol", "console.debug(\"====>removeAllSlots ActsAnsSlotAddRemoveAll_0100 callback==", "console.debug(\"====>removeAllSlots start ActsAnsSlotAddRemoveAll_0100====>", "       notification.removeAllSlots((err)=>{\n                    console.de"], "files": ["ExampleJsunit.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "removeAllSlots", "api_method_all": "function removeAllSlots(): Promise<void>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["       notification.removeAllSlots().then(()=>{\n            console.debug("], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "subscribe", "api_method_all": "function subscribe(subscriber: NotificationSubscriber, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 1575, "since": 8, "api_used": "\u662f", "lines": ["       await notify.subscribe(subscriber);\n        console.info('====", "====ANS_Cancel_0500 subscribe promise======>');\n        let notificat", "it notify.subscribe(subscriber);\n        console.info('==============", "it notify.subscribe(subscriber);\n        console.info('========ANS_Ca", " notify.unsubscribe(subscriber);\n            console.info('======ANS_", "l_0700 setTimeout unsubscribe end==================>');\n            d", "l_0400 setTimeout unsubscribe end==================>');\n            d", "====ANS_Cancel_0100 subscribe promise=======>');\n        await notify", "     await notify.unsubscribe(subscriber);\n            console.info('", "====ANS_Cancel_0400 subscribe promise=============>');\n        await ", "====ANS_Cancel_0700 subscribe promise==================>');\n        l", "it notify.subscribe(subscriber);\n        console.info('===========ANS", "====ANS_Cancel_0200 subscribe promise==================>');\n        l", "====ANS_Cancel_0600 subscribe promise==================>');\n        l", "===>');\n        let subscriber ={\n            onConsume:onConsumeCanc", "l_0300 setTimeout unsubscribe end==================>');\n            d", "cel = 0\n        let subscriber ={\n            onConsume:onConsumeCanc", "l_0100 setTimeout unsubscribe==================>');\n            done(", "====ANS_Cancel_0300 subscribe promise===============>');\n        awai", "l_0600 setTimeout unsubscribe end==================>');\n            d", "it notify.subscribe(subscriber);\n        console.info('============AN", "l_0200 setTimeout unsubscribe end==================>');\n            d", "l_0500 setTimeout unsubscribe end==================>');\n            d"], "files": ["publishIcon.js", "ExampleJsunit.test.js", "ActsSubscriber_test_unorder.js", "ActsSubscriber_test_ordered.js", "ActsAnsNotificationCancel.test.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "publishImage.js", "ActsAnsPublishInput.js", "Subscriber.js", "UnSubscriber.js", "ActsAnsRemoveGroup.js", "actsansdistributedtest.js", "ActsAnsPublishConversation.js", "publish.js", "ActiveButton.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "subscribe", "api_method_all": "function subscribe(subscriber: NotificationSubscriber, info: NotificationSubscribeInfo, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 1575, "since": 8, "api_used": "\u662f", "lines": ["       await notify.subscribe(subscriber);\n        console.info('====", "====ANS_Cancel_0500 subscribe promise======>');\n        let notificat", "it notify.subscribe(subscriber);\n        console.info('==============", "it notify.subscribe(subscriber);\n        console.info('========ANS_Ca", " notify.unsubscribe(subscriber);\n            console.info('======ANS_", "l_0700 setTimeout unsubscribe end==================>');\n            d", "l_0400 setTimeout unsubscribe end==================>');\n            d", "====ANS_Cancel_0100 subscribe promise=======>');\n        await notify", "     await notify.unsubscribe(subscriber);\n            console.info('", "====ANS_Cancel_0400 subscribe promise=============>');\n        await ", "====ANS_Cancel_0700 subscribe promise==================>');\n        l", "it notify.subscribe(subscriber);\n        console.info('===========ANS", "====ANS_Cancel_0200 subscribe promise==================>');\n        l", "====ANS_Cancel_0600 subscribe promise==================>');\n        l", "===>');\n        let subscriber ={\n            onConsume:onConsumeCanc", "l_0300 setTimeout unsubscribe end==================>');\n            d", "cel = 0\n        let subscriber ={\n            onConsume:onConsumeCanc", "l_0100 setTimeout unsubscribe==================>');\n            done(", "====ANS_Cancel_0300 subscribe promise===============>');\n        awai", "l_0600 setTimeout unsubscribe end==================>');\n            d", "it notify.subscribe(subscriber);\n        console.info('============AN", "l_0200 setTimeout unsubscribe end==================>');\n            d", "l_0500 setTimeout unsubscribe end==================>');\n            d"], "files": ["publishIcon.js", "ExampleJsunit.test.js", "ActsSubscriber_test_unorder.js", "ActsSubscriber_test_ordered.js", "ActsAnsNotificationCancel.test.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "publishImage.js", "ActsAnsPublishInput.js", "Subscriber.js", "UnSubscriber.js", "ActsAnsRemoveGroup.js", "actsansdistributedtest.js", "ActsAnsPublishConversation.js", "publish.js", "ActiveButton.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "subscribe", "api_method_all": "function subscribe(subscriber: NotificationSubscriber, info?: NotificationSubscribeInfo): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 17, "since": 8, "api_used": "\u662f", "lines": [");\n        notify.unsubscribe(subscriberErr).then().catch((err)=>{\n  ", " notify.unsubscribe(subscriberTest).then().catch((err)=>{\n           ", " notify.unsubscribe(subscriberErr).then().catch((err)=>{\n            ", " notify.unsubscribe(subscriber).then(()=>{\n            console.debug(", "s_UnSubscriber_0800 subscribe first then err=================>\"+err.c", ");\n        notify.unsubscribe(subscriber).then(()=>{\n            cons", "s_UnSubscriber_0800 subscribe second then err=================>\"+err.", "s_UnSubscriber_1000 subscribe then err=================>\"+err.code);\n", "UnSubscriber_1200 unsubscribe then err=============>\"+err.code);\n    ", "s_UnSubscriber_0200 subscribe then==========>\");\n        }).catch((er", ");\n        notify.unsubscribe(subscriberTest).then().catch((err)=>{\n ", "           notify.unsubscribe(subscriber).then((err)=>{\n             ", " notify.unsubscribe(subscriber).then((err)=>{\n            console.deb", ");\n        notify.unsubscribe(subscriber).then((err)=>{\n            c", " notify.unsubscribe(subscriber).then((err)=>{\n                console"], "files": ["UnSubscriber.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "unsubscribe", "api_method_all": "function unsubscribe(subscriber: NotificationSubscriber, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 410, "since": 0, "api_used": "\u662f", "lines": ["cel_0800 setTimeout unsubscribe end==================>');\n            d", "cel_2300 setTimeout unsubscribe end==================>');\n            d", "cel_1800 setTimeout unsubscribe end==================>');\n            d", "cel_1400 setTimeout unsubscribe end==================>');\n            d", "cel_2500 setTimeout unsubscribe end==================>');\n            d", "cel_0700 setTimeout unsubscribe end==================>');\n            d", "       await notify.unsubscribe(subscriber);\n            console.info('", "cel_2400 setTimeout unsubscribe end==================>');\n            d", "cel_1100 setTimeout unsubscribe end==================>');\n            d", "cel_0400 setTimeout unsubscribe end==================>');\n            d", "cel_0500 setTimeout unsubscribe end==================>');\n            d", "cel_0300 setTimeout unsubscribe end==================>');\n            d", "cel_1600 setTimeout unsubscribe end==================>');\n            d", "cel_0600 setTimeout unsubscribe end==================>');\n            d", "cel_1000 setTimeout unsubscribe end==================>');\n            d", "cel_0100 setTimeout unsubscribe==================>');\n            done(", "cel_0200 setTimeout unsubscribe end==================>');\n            d", "cel_2000 setTimeout unsubscribe end==================>');\n            d", "cel_1700 setTimeout unsubscribe end==================>');\n            d", "cel_1200 setTimeout unsubscribe end==================>');\n            d", "cel_1500 setTimeout unsubscribe end==================>');\n            d", "cel_0900 setTimeout unsubscribe end==================>');\n            d", "cel_1300 setTimeout unsubscribe end==================>');\n            d", "cel_2100 setTimeout unsubscribe end==================>');\n            d", "cel_2200 setTimeout unsubscribe end==================>');\n            d", "cel_1900 setTimeout unsubscribe end==================>');\n            d"], "files": ["publishIcon.js", "ExampleJsunit.test.js", "ActsSubscriber_test_unorder.js", "ActsSubscriber_test_ordered.js", "ActsAnsNotificationCancel.test.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "publishImage.js", "ActsAnsPublishInput.js", "Subscriber.js", "UnSubscriber.js", "ActsAnsRemoveGroup.js", "actsansdistributedtest.js", "ActsAnsPublishConversation.js", "publish.js", "ActiveButton.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "unsubscribe", "api_method_all": "function unsubscribe(subscriber: NotificationSubscriber): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 7, "since": 0, "api_used": "\u662f", "lines": [">\");\n        notify.unsubscribe(subscriberTest).then().catch((err)=>{\n ", "s_UnSubscriber_1200 unsubscribe then err=============>\"+err.code);\n    ", ">\");\n        notify.unsubscribe(subscriber).then(()=>{\n            cons", ">\");\n        notify.unsubscribe(subscriber).then((err)=>{\n            c", ">\");\n        notify.unsubscribe(subscriberErr).then().catch((err)=>{\n  ", "\n            notify.unsubscribe(subscriber).then((err)=>{\n             "], "files": ["UnSubscriber.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "enableNotification", "api_method_all": "function enableNotification(bundle: BundleOption, enable: boolean, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 25, "since": 0, "api_used": "\u662f", "lines": ["       await notify.enableNotification({\n            bundle:\"com.example.actsa", "ify the function of enableNotification\n     */\n    it('ActsSetEnable_test_0800", "ify the function of enableNotification\n     */\n    it('ActsSetDisplay_test_090", "ify the function of enableNotification\n     */\n    it('ActsSetEnable_test_0900", "00\n     * @tc.name: enableNotification()\n     * @tc.desc: verify the function ", "ne) {\n       notify.enableNotification({\n            bundle:\"Wrong BundleName\"", "ify the function of enableNotification\n     */\n    it('ActsSetEnable_test_0700", "       await notify.enableNotification({\n            bundle:\"Wrong BundleName\"", "ify the function of enableNotification\n     */\n    it('ActsSetEnable_test_0600", "ify the function of enableNotification\n     */\n    it('ActsSetEnable_test_0400", "ify the function of enableNotification\n     */\n    it('ActsSetEnable_test_0500", "ise =  await notify.enableNotification({\n            bundle:\"com.example.actsa"], "files": ["BadgeDisplay.js", "EnableNotification.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "enableNotification", "api_method_all": "function enableNotification(bundle: BundleOption, enable: boolean): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isNotificationEnabled", "api_method_all": "function isNotificationEnabled(bundle: BundleOption, callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 18, "since": 0, "api_used": "\u662f", "lines": ["       await notify.isNotificationEnabled({\n            bundle:\"com.example.actsa", "ise =  await notify.isNotificationEnabled({})\n        expect(promise).assertEqual", "mise = await notify.isNotificationEnabled()\n        console.log(\"================", "       await notify.isNotificationEnabled({},(err,data) => {\n            console.", "ise =  await notify.isNotificationEnabled(\"#$#$%$%^\")\n        expect(promise).ass", "       await notify.isNotificationEnabled({\n                bundle:\"com.example.a", "mise = await notify.isNotificationEnabled({\n            bundle:\"com.example.actsa", "       await notify.isNotificationEnabled({\n            bundle:\"wrong BundleName\"", "mise = await notify.isNotificationEnabled({\n                bundle:\"com.example.a", "       await notify.isNotificationEnabled((err,data) => {\n            console.log", ") {\n         notify.isNotificationEnabled({\n            bundle:\"wrong BundleName\"", "       await notify.isNotificationEnabled(\"#$#$%$%^\",(err,data) => {\n            "], "files": ["EnableNotification.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isNotificationEnabled", "api_method_all": "function isNotificationEnabled(bundle: BundleOption): Promise<boolean>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isNotificationEnabled", "api_method_all": "function isNotificationEnabled(callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 18, "since": 0, "api_used": "\u662f", "lines": ["       await notify.isNotificationEnabled({\n            bundle:\"com.example.actsa", "ise =  await notify.isNotificationEnabled({})\n        expect(promise).assertEqual", "mise = await notify.isNotificationEnabled()\n        console.log(\"================", "       await notify.isNotificationEnabled({},(err,data) => {\n            console.", "ise =  await notify.isNotificationEnabled(\"#$#$%$%^\")\n        expect(promise).ass", "       await notify.isNotificationEnabled({\n                bundle:\"com.example.a", "mise = await notify.isNotificationEnabled({\n            bundle:\"com.example.actsa", "       await notify.isNotificationEnabled({\n            bundle:\"wrong BundleName\"", "mise = await notify.isNotificationEnabled({\n                bundle:\"com.example.a", "       await notify.isNotificationEnabled((err,data) => {\n            console.log", ") {\n         notify.isNotificationEnabled({\n            bundle:\"wrong BundleName\"", "       await notify.isNotificationEnabled(\"#$#$%$%^\",(err,data) => {\n            "], "files": ["EnableNotification.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isNotificationEnabled", "api_method_all": "function isNotificationEnabled(): Promise<boolean>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isNotificationEnabled", "api_method_all": "function isNotificationEnabled(userId: number, callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 18, "since": 0, "api_used": "\u662f", "lines": ["       await notify.isNotificationEnabled({\n            bundle:\"com.example.actsa", "ise =  await notify.isNotificationEnabled({})\n        expect(promise).assertEqual", "mise = await notify.isNotificationEnabled()\n        console.log(\"================", "       await notify.isNotificationEnabled({},(err,data) => {\n            console.", "ise =  await notify.isNotificationEnabled(\"#$#$%$%^\")\n        expect(promise).ass", "       await notify.isNotificationEnabled({\n                bundle:\"com.example.a", "mise = await notify.isNotificationEnabled({\n            bundle:\"com.example.actsa", "       await notify.isNotificationEnabled({\n            bundle:\"wrong BundleName\"", "mise = await notify.isNotificationEnabled({\n                bundle:\"com.example.a", "       await notify.isNotificationEnabled((err,data) => {\n            console.log", ") {\n         notify.isNotificationEnabled({\n            bundle:\"wrong BundleName\"", "       await notify.isNotificationEnabled(\"#$#$%$%^\",(err,data) => {\n            "], "files": ["EnableNotification.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isNotificationEnabled", "api_method_all": "function isNotificationEnabled(userId: number): Promise<boolean>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "displayBadge", "api_method_all": "function displayBadge(bundle: BundleOption, enable: boolean, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 25, "since": 0, "api_used": "\u662f", "lines": ["       await notify.displayBadge({\n            bundle:\"com.example.actsa", "00\n     * @tc.name: displayBadge()\n     * @tc.desc: verify the function ", "ise =  await notify.displayBadge({\n                bundle:\"com.example.a", "e) {\n        notify.displayBadge({\n            bundle:\"Wrong BundleName\"", "ify the function of displayBadge\n     */\n    it('ActsSetDisplay_test_080", "ify the function of displayBadge\n     */\n    it('ActsSetDisplay_test_070", "ify the function of displayBadge\n     */\n    it('ActsSetDoNotDisturbTest", "ify the function of displayBadge\n     */\n    it('ActsSetDisplay_test_060", "       await notify.displayBadge({\n            bundle:\"Wrong BundleName\""], "files": ["doNotDisturbTest.js", "BadgeDisplay.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "displayBadge", "api_method_all": "function displayBadge(bundle: BundleOption, enable: boolean): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isBadgeDisplayed", "api_method_all": "function isBadgeDisplayed(bundle: BundleOption, callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 16, "since": 0, "api_used": "\u662f", "lines": ["ise =  await notify.isBadgeDisplayed(\"#$#$%$%^\")\n        expect(promise).ass", "       await notify.isBadgeDisplayed({\n                bundle:\"com.example.a", "mise = await notify.isBadgeDisplayed({\n                bundle:\"com.example.a", "ise =  await notify.isBadgeDisplayed({})\n        expect(promise).assertEqual", "one) {\n      notify.isBadgeDisplayed({\n            bundle:\"wrong BundleName\"", "       await notify.isBadgeDisplayed(\"#$#$%$%^\",(err,data) => {\n            ", "       await notify.isBadgeDisplayed({\n            bundle:\"com.example.actsa", "ne) {\n       notify.isBadgeDisplayed({\n                bundle:\"com.example.a", "       await notify.isBadgeDisplayed({},(err,data) => {\n            console.", "       await notify.isBadgeDisplayed({\n            bundle:\"wrong BundleName\""], "files": ["BadgeDisplay.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isBadgeDisplayed", "api_method_all": "function isBadgeDisplayed(bundle: BundleOption): Promise<boolean>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "setSlotByBundle", "api_method_all": "function setSlotByBundle(bundle: BundleOption, slot: NotificationSlot, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 102, "since": 0, "api_used": "\u662f", "lines": [" await notification.setSlotByBundle(bundleoption, notificationslot1);\n     ", "console.debug(\"====>setSlotByBundle start====>\");\n            console.debug", " await notification.setSlotByBundle(bundleoption, notificationslot2);\n     ", "console.debug(\"====>setSlotByBundle start====>\");\n        await notificatio", "console.debug(\"====>setSlotByBundle start====>\");\n\n                notifica", " await notification.setSlotByBundle(bundleoption, notificationslot);\n      ", "       notification.setSlotByBundle(bundleoption, notificationslot1, () => ", "       notification.setSlotByBundle(bundleoption, notificationslot2, () => ", "console.debug(\"====>setSlotByBundle start====>\");\n                notificat", "console.debug(\"====>setSlotByBundle start====>\");\n            notification.", "       notification.setSlotByBundle(bundleoption, notificationslot, () => {", "console.debug(\"====>setSlotByBundle start====>\");\n        console.debug(\"==", "console.debug(\"====>setSlotByBundle start====>\");\n                    notif"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "setSlotByBundle", "api_method_all": "function setSlotByBundle(bundle: BundleOption, slot: NotificationSlot): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 61, "since": 0, "api_used": "\u662f", "lines": ["_1100 publish1 then setSlotByBundle then publish2======>\");\n            }).", "s_PublishVibra_0100 setSlotByBundle then publish2======>\");\n            }).", "tion, and then call setSlotByBundle\n     *                 to update the in", "s_PublishSound_0400 setSlotByBundle then publish2======>\");\n            }).", "s_PublishSound_0900 setSlotByBundle then======>\");\n                notify.p", "_1000 publish1 then setSlotByBundle catch err======>\"+err);\n            })\n", "s_PublishVibra_0300 setSlotByBundle then======>\");\n                notify.p", "s_PublishSound_0200 setSlotByBundle then publish2======>\");\n            }).", "s_PublishSound_0300 setSlotByBundle then publish2======>\");\n            }).", "_1100 publish1 then setSlotByBundle catch err======>\"+err);\n            })\n", "_1000 publish1 then setSlotByBundle then======>\");\n                notify.p", "_1100 publish1 then setSlotByBundle then======>\");\n                notify.p", "s_PublishSound_0800 setSlotByBundle then======>\");\n                notify.p", "s_PublishVibra_0400 setSlotByBundle then publish2======>\");\n            }).", "s_PublishVibra_0200 setSlotByBundle then======>\");\n                notify.p", "s_PublishVibra_0200 setSlotByBundle then publish2======>\");\n            }).", "s_PublishSound_0900 setSlotByBundle then publish2======>\");\n            }).", "s_PublishVibra_0500 setSlotByBundle then publish2======>\");\n            }).", "s_PublishSound_0600 setSlotByBundle then publish2======>\");\n            }).", "s_PublishSound_0100 setSlotByBundle then publish2======>\");\n            }).", "s_PublishSound_0200 setSlotByBundle then======>\");\n                notify.p", "s_PublishVibra_0100 setSlotByBundle then======>\");\n                notify.p", "s_PublishVibra_0500 setSlotByBundle then======>\");\n                notify.p", "s_PublishSound_0800 setSlotByBundle then publish2======>\");\n            }).", "s_PublishSound_0700 setSlotByBundle then======>\");\n                notify.p", "s_PublishVibra_0300 setSlotByBundle then publish2======>\");\n            }).", "s_PublishSound_0600 setSlotByBundle then======>\");\n                notify.p", "s_PublishSound_0100 setSlotByBundle then======>\");\n                notify.p", "s_PublishSound_0700 setSlotByBundle then publish2======>\");\n            }).", "_1000 publish1 then setSlotByBundle then publish2======>\");\n            }).", "       notification.setSlotByBundle(bundleoption, notificationslot).then(()", "s_PublishSound_0500 setSlotByBundle then======>\");\n                notify.p", "s_PublishVibra_0400 setSlotByBundle then======>\");\n                notify.p", "s_PublishSound_0300 setSlotByBundle then======>\");\n                notify.p", "tion, and then call setSlotByBundle\n     *                 twice to update ", "s_PublishSound_0400 setSlotByBundle then======>\");\n                notify.p", "s_PublishSound_0500 setSlotByBundle then publish2======>\");\n            })."], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getSlotsByBundle", "api_method_all": "function getSlotsByBundle(bundle: BundleOption, callback: AsyncCallback<Array<NotificationSlot>>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 140, "since": 0, "api_used": "\u662f", "lines": ["console.debug(\"====>getSlotsByBundle1 finish====>\");\n            console.deb", "console.debug(\"====>getSlotsByBundle1 start====>\");\n        var data = await", "console.debug(\"====>getSlotsByBundle1.1 finish====>\");\n            notificat", "console.debug(\"====>getSlotsByBundle1 start====>\");\n            notification", "console.debug(\"====>getSlotsByBundle1.1 start====>\");\n        notification.g", " await notification.getSlotsByBundle(bundleoption)\n            console.debug", "console.debug(\"====>getSlotsByBundle1 start====>\");\n        notification.get", "       notification.getSlotsByBundle(bundleoption, (err, data) => {\n        "], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getSlotsByBundle", "api_method_all": "function getSlotsByBundle(bundle: BundleOption): Promise<Array<NotificationSlot>>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 17, "since": 0, "api_used": "\u662f", "lines": ["      and then call getSlotsByBundle query results.(promise)\n     */\n       ", "       notification.getSlotsByBundle(bundleoption).then((data) => {\n        ", "      and then call getSlotsByBundle query results.(callback)\n     */\n      "], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getSlotNumByBundle", "api_method_all": "function getSlotNumByBundle(bundle: BundleOption, callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 15, "since": 0, "api_used": "\u662f", "lines": ["       notification.getSlotNumByBundle(bundleoption, (err, data) => {\n        ", "r adding slot, call getSlotNumByBundle for information.(promise)\n     */\n     ", "  *                 getSlotNumByBundle to get information.(promise)\n     */\n  ", "tc.desc      : Call getSlotNumByBundle for information.(promise)\n     */\n    i", "               call getSlotNumByBundle for information.(callback)\n     */\n    ", "tc.desc      : Call getSlotNumByBundle for information.(callback)\n     */\n    ", "r adding slot, call getSlotNumByBundle for information.(callback)\n     */\n    ", "  *                 getSlotNumByBundle to get information.(callback)\n     */\n ", "               call getSlotNumByBundle for information.(promise)\n     */\n     ", "               call getSlotNumByBundle for information.(promise)\n     */\n    i"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getSlotNumByBundle", "api_method_all": "function getSlotNumByBundle(bundle: BundleOption): Promise<number>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 0, "api_used": "\u662f", "lines": ["       notification.getSlotNumByBundle(bundleoption).then((data) => {\n        "], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "remove", "api_method_all": "function remove(bundle: BundleOption, notificationKey: NotificationKey, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 564, "since": 8, "api_used": "\u662f", "lines": ["Code\n        notify.remove(hashCode,removeCallBack);\n        conso", "move_0500 onConsume remove=============>\");\n        console.info(\"", "move_0900 onConsume remove==================>\");\n        console.i", "    }\n\n    function removeNonComplianceHashCallBack(err, data) {\n ", "\n    }\n    function removeErrHashCodeCallBack(err) {\n        conso", "====ANS_Remove_0300 removeCallBack end=======================>\");\n", "====ANS_Remove_0700 removeCallBack err=================>\" + JSON.s", "====ANS_Remove_0700 removeCallBack end=======================>\");\n", "a));\n        notify.remove(\"9999_9999_9\",removeNotExistHashCodeCal", "lBackCancelLabelIsUnremoveable);\n        console.info('========ANS", "move_0600 onConsume remove err:=============>\" + JSON.stringify(er", "====ANS_Remove_0100 removeCallBack data : =======================>", "move_0800 onConsume remove err:==========>\" + JSON.stringify(err))", "ify.remove(hashCode,removeCallBack);\n        console.info(\"=======", "ove(\"errorHashCode\",removeErrHashCodeCallBack);\n        console.in", "emove(\"9999_9999_9\",removeNotExistHashCodeCallBack);\n        conso", "notify.remove(\"\u54c8\u5e0c\u7801\",removeNonComplianceHashCallBack);\n        cons", "====ANS_Remove_0300 removeCallBack start==============>\");\n       ", "====ANS_Remove_0300 removeCallBack err====================>\" + JSO", "====ANS_Remove_0900 removeCallBack start=======================>\")", "    }\n\n    function removeCallBack(err, data) {\n        console.in", "nsumeCancelLabelIsUnremoveable,\n            onCancel:onCancelCance", "move_0800 onConsume remove data:=========>\" + JSON.stringify(data)", "ancelCancelLabelIsUnremoveable,\n        }\n        await notify.sub", "de);\n        notify.remove(hashCode);\n        console.info(\"======", "move_0700 onConsume remove===================>\");\n        console.", "====ANS_Remove_0500 removeCallBack end=================>\");\n    }\n", "ancelCancelLabelIsUnremoveablePromise(data) {\n        console.info", "move_0400 onConsume remove err:============>\" + JSON.stringify(err", "====ANS_Remove_0700 removeCallBack start==========>\");\n        con", "   notify.remove('',removeCallBackUseEmptyCharacter);\n        cons", "====ANS_Remove_0500 removeCallBack start===============>\");\n      ", "a));\n        notify.remove(\"errorHashCode\",removeErrHashCodeCallBa", "ancelCancelLabelIsUnremoveable(data) {\n        console.info('=====", "nsumeCancelLabelIsUnremoveablePromise(data) {\n        console.info", "====ANS_Remove_0100 removeCallBack err=========>\" + JSON.stringify", "    }\n\n    function removeNotExistHashCodeCallBack(err) {\n        ", "ancelCancelLabelIsUnremoveablePromise,\n        }\n        await not", "move_0100 onConsume remove=======================>\");\n        cons", "move_0200 onConsume remove============>\");\n        console.info(\"=", "nsumeCancelLabelIsUnremoveablePromise,\n            onCancel:onCanc", "====ANS_Remove_0500 removeCallBack err=================>\" + JSON.s", "move_0300 onConsume remove=======================>\");\n        cons", "a));\n        notify.remove('',removeCallBackUseEmptyCharacter);\n  ", "lBackCancelLabelIsUnremoveable(err){\n        console.info('=======", "move_0400 onConsume remove data:===========>\" + JSON.stringify(dat", "a));\n        notify.remove(\"\u54c8\u5e0c\u7801\",removeNonComplianceHashCallBack);", "    }\n\n    function removeCallBackUseEmptyCharacter(err) {\n       ", "move_0600 onConsume remove data:============>\" + JSON.stringify(da", "nsumeCancelLabelIsUnremoveable(data) {\n        console.info('====="], "files": ["ExampleJsunit.test.js", "getAllActive.js", "ActsAnsNotificationCancel.test.js", "activeotherapp.js", "doNotDisturbTest.js", "ActsAnsRemoveGroup.js", "index.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "remove", "api_method_all": "function remove(bundle: BundleOption, notificationKey: NotificationKey): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 13, "since": 8, "api_used": "\u662f", "lines": ["a));\n        notify.remove(data.request.hashCode).then((data)=>{\n ", ">\");\n        notify.removeGroupByBundle(bundleOption, \"\").then(()=", "a));\n        notify.remove(\"9999_9999_9\").then((data)=>{\n         ", "       notification.removeAllSlots().then(()=>{\n            consol", " });\n        notify.remove(data.request.hashCode).then((data)=>{\n ", "NS_RemoveGroup_0800 removeGroupByBundle then==================>\");", "a));\n        notify.remove(\"\u54c8\u5e0c\u7801\").then((data)=>{\n            conso", "a));\n        notify.remove(\"errorHashCode\").then((data)=>{\n       ", ">\");\n        notify.remove(bundleOption, notificationKey).then((da", "a));\n        notify.remove('').then((data)=>{\n            console.", "   }\n        notify.remove(bundleOption, notificationKey).then((da", "a));\n        notify.remove(data.request.hashCode).then(()=>{\n     "], "files": ["ExampleJsunit.test.js", "ActsAnsRemoveGroup.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "remove", "api_method_all": "function remove(hashCode: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 564, "since": 8, "api_used": "\u662f", "lines": ["Code\n        notify.remove(hashCode,removeCallBack);\n        conso", "move_0500 onConsume remove=============>\");\n        console.info(\"", "move_0900 onConsume remove==================>\");\n        console.i", "    }\n\n    function removeNonComplianceHashCallBack(err, data) {\n ", "\n    }\n    function removeErrHashCodeCallBack(err) {\n        conso", "====ANS_Remove_0300 removeCallBack end=======================>\");\n", "====ANS_Remove_0700 removeCallBack err=================>\" + JSON.s", "====ANS_Remove_0700 removeCallBack end=======================>\");\n", "a));\n        notify.remove(\"9999_9999_9\",removeNotExistHashCodeCal", "lBackCancelLabelIsUnremoveable);\n        console.info('========ANS", "move_0600 onConsume remove err:=============>\" + JSON.stringify(er", "====ANS_Remove_0100 removeCallBack data : =======================>", "move_0800 onConsume remove err:==========>\" + JSON.stringify(err))", "ify.remove(hashCode,removeCallBack);\n        console.info(\"=======", "ove(\"errorHashCode\",removeErrHashCodeCallBack);\n        console.in", "emove(\"9999_9999_9\",removeNotExistHashCodeCallBack);\n        conso", "notify.remove(\"\u54c8\u5e0c\u7801\",removeNonComplianceHashCallBack);\n        cons", "====ANS_Remove_0300 removeCallBack start==============>\");\n       ", "====ANS_Remove_0300 removeCallBack err====================>\" + JSO", "====ANS_Remove_0900 removeCallBack start=======================>\")", "    }\n\n    function removeCallBack(err, data) {\n        console.in", "nsumeCancelLabelIsUnremoveable,\n            onCancel:onCancelCance", "move_0800 onConsume remove data:=========>\" + JSON.stringify(data)", "ancelCancelLabelIsUnremoveable,\n        }\n        await notify.sub", "de);\n        notify.remove(hashCode);\n        console.info(\"======", "move_0700 onConsume remove===================>\");\n        console.", "====ANS_Remove_0500 removeCallBack end=================>\");\n    }\n", "ancelCancelLabelIsUnremoveablePromise(data) {\n        console.info", "move_0400 onConsume remove err:============>\" + JSON.stringify(err", "====ANS_Remove_0700 removeCallBack start==========>\");\n        con", "   notify.remove('',removeCallBackUseEmptyCharacter);\n        cons", "====ANS_Remove_0500 removeCallBack start===============>\");\n      ", "a));\n        notify.remove(\"errorHashCode\",removeErrHashCodeCallBa", "ancelCancelLabelIsUnremoveable(data) {\n        console.info('=====", "nsumeCancelLabelIsUnremoveablePromise(data) {\n        console.info", "====ANS_Remove_0100 removeCallBack err=========>\" + JSON.stringify", "    }\n\n    function removeNotExistHashCodeCallBack(err) {\n        ", "ancelCancelLabelIsUnremoveablePromise,\n        }\n        await not", "move_0100 onConsume remove=======================>\");\n        cons", "move_0200 onConsume remove============>\");\n        console.info(\"=", "nsumeCancelLabelIsUnremoveablePromise,\n            onCancel:onCanc", "====ANS_Remove_0500 removeCallBack err=================>\" + JSON.s", "move_0300 onConsume remove=======================>\");\n        cons", "a));\n        notify.remove('',removeCallBackUseEmptyCharacter);\n  ", "lBackCancelLabelIsUnremoveable(err){\n        console.info('=======", "move_0400 onConsume remove data:===========>\" + JSON.stringify(dat", "a));\n        notify.remove(\"\u54c8\u5e0c\u7801\",removeNonComplianceHashCallBack);", "    }\n\n    function removeCallBackUseEmptyCharacter(err) {\n       ", "move_0600 onConsume remove data:============>\" + JSON.stringify(da", "nsumeCancelLabelIsUnremoveable(data) {\n        console.info('====="], "files": ["ExampleJsunit.test.js", "getAllActive.js", "ActsAnsNotificationCancel.test.js", "activeotherapp.js", "doNotDisturbTest.js", "ActsAnsRemoveGroup.js", "index.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "remove", "api_method_all": "function remove(hashCode: string): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 13, "since": 8, "api_used": "\u662f", "lines": ["a));\n        notify.remove(data.request.hashCode).then((data)=>{\n ", ">\");\n        notify.removeGroupByBundle(bundleOption, \"\").then(()=", "a));\n        notify.remove(\"9999_9999_9\").then((data)=>{\n         ", "       notification.removeAllSlots().then(()=>{\n            consol", " });\n        notify.remove(data.request.hashCode).then((data)=>{\n ", "NS_RemoveGroup_0800 removeGroupByBundle then==================>\");", "a));\n        notify.remove(\"\u54c8\u5e0c\u7801\").then((data)=>{\n            conso", "a));\n        notify.remove(\"errorHashCode\").then((data)=>{\n       ", ">\");\n        notify.remove(bundleOption, notificationKey).then((da", "a));\n        notify.remove('').then((data)=>{\n            console.", "   }\n        notify.remove(bundleOption, notificationKey).then((da", "a));\n        notify.remove(data.request.hashCode).then(()=>{\n     "], "files": ["ExampleJsunit.test.js", "ActsAnsRemoveGroup.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "removeAll", "api_method_all": "function removeAll(bundle: BundleOption, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 149, "since": 8, "api_used": "\u662f", "lines": ["\n    }\n    function removeAllByBundleOptionCallBackWrongBundleWrongUi", "   function onCancelremoveAllByBundleOptionwrongBundleCorrectUid(data", "\n    }\n    function removeAllByBundleOptionCallBackWrongBundleCorrect", "====ANS_Remove_1900 removeAllCallback err=============>\" + JSON.strin", "====ANS_Remove_1900 removeAllCallback end=============>\");\n    }\n\n   ", "====ANS_Remove_2000 removeAllCallBack start============>\");\n        c", "00\n     * @tc.name: removeAll(bundle: BundleOption, callback: AsyncCa", "====ANS_Remove_1800 removeAllCallBack start==========>\");\n        con", "====ANS_Remove_2000 removeAllCallBack err==============>\" + JSON.stri", "====ANS_Remove_1700 removeAllCallBack err===============>\" + JSON.str", "\n            notify.removeAll(bundleOption,removeAllByBundleOptionCal", "move_1900 onConsume removeAll===========>\");\n        console.info(\"==", "====ANS_Remove_1800 removeAllCallBack end==========>\");\n    }\n\n    /*", "   }\n        notify.removeAll(bundleOption,removeAllByBundleOptionCal", "====ANS_Remove_1700 removeAllCallBack end=======================>\");\n", "====ANS_Remove_1700 removeAllCallBack start=============>\");\n        ", "\n    }\n    function removeAllByBundleOptionCallBackWrongUid(err) {\n  ", "====ANS_Remove_1500 removeAllCallBack end===================>\");\n    ", "\n    }\n    function removeAllByBundleOptionCallBack(data) {\n        c", "====ANS_Remove_1600 removeAllCallBack end===============>\");\n    }\n\n ", "\n    }\n    function removeAllByBundleOptionCallBackNullUid(err) {\n   ", "oveAll(bundleOption,removeAllByBundleOptionCallBack);\n            con", "====ANS_Remove_1800 removeAllCallBack err============>\" + JSON.string", "====ANS_Remove_1500 removeAllCallBack start=================>\");\n    ", "oveAll(bundleOption,removeAllByBundleOptionCallBackWrongUid);\n       ", "====ANS_Remove_2000 removeAllCallBack end=============>\");\n    }\n\n   ", "====ANS_Remove_1600 removeAllCallBack start=============>\");\n        ", "oveAll(bundleOption,removeAllByBundleOptionCallBackNullUid);\n        ", "====ANS_Remove_1600 removeAllCallBack err===============>\" + JSON.str", "   onCancel:onCancelremoveAllByBundleOptionwrongBundleCorrectUid,\n   ", "====ANS_Remove_1500 removeAllCallBack data==================>\" + JSON", "\n    }\n    function removeAllByBundleOptionCallBackNullCharacterBundl", "oveAll(bundleOption,removeAllByBundleOptionCallBackWrongBundleCorrect", "oveAll(bundleOption,removeAllByBundleOptionCallBackNullCharacterBundl", "e calling interface removeAll(bundle: BundleOption, callback: AsyncCa", "oveAll(bundleOption,removeAllByBundleOptionCallBackWrongBundleWrongUi", "====ANS_Remove_1900 removeAllCallback start===========>\");\n        co"], "files": ["ExampleJsunit.test.js", "getAllActive.js", "activeotherapp.js", "index.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "removeAll", "api_method_all": "function removeAll(callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 149, "since": 8, "api_used": "\u662f", "lines": ["\n    }\n    function removeAllByBundleOptionCallBackWrongBundleWrongUi", "   function onCancelremoveAllByBundleOptionwrongBundleCorrectUid(data", "\n    }\n    function removeAllByBundleOptionCallBackWrongBundleCorrect", "====ANS_Remove_1900 removeAllCallback err=============>\" + JSON.strin", "====ANS_Remove_1900 removeAllCallback end=============>\");\n    }\n\n   ", "====ANS_Remove_2000 removeAllCallBack start============>\");\n        c", "00\n     * @tc.name: removeAll(bundle: BundleOption, callback: AsyncCa", "====ANS_Remove_1800 removeAllCallBack start==========>\");\n        con", "====ANS_Remove_2000 removeAllCallBack err==============>\" + JSON.stri", "====ANS_Remove_1700 removeAllCallBack err===============>\" + JSON.str", "\n            notify.removeAll(bundleOption,removeAllByBundleOptionCal", "move_1900 onConsume removeAll===========>\");\n        console.info(\"==", "====ANS_Remove_1800 removeAllCallBack end==========>\");\n    }\n\n    /*", "   }\n        notify.removeAll(bundleOption,removeAllByBundleOptionCal", "====ANS_Remove_1700 removeAllCallBack end=======================>\");\n", "====ANS_Remove_1700 removeAllCallBack start=============>\");\n        ", "\n    }\n    function removeAllByBundleOptionCallBackWrongUid(err) {\n  ", "====ANS_Remove_1500 removeAllCallBack end===================>\");\n    ", "\n    }\n    function removeAllByBundleOptionCallBack(data) {\n        c", "====ANS_Remove_1600 removeAllCallBack end===============>\");\n    }\n\n ", "\n    }\n    function removeAllByBundleOptionCallBackNullUid(err) {\n   ", "oveAll(bundleOption,removeAllByBundleOptionCallBack);\n            con", "====ANS_Remove_1800 removeAllCallBack err============>\" + JSON.string", "====ANS_Remove_1500 removeAllCallBack start=================>\");\n    ", "oveAll(bundleOption,removeAllByBundleOptionCallBackWrongUid);\n       ", "====ANS_Remove_2000 removeAllCallBack end=============>\");\n    }\n\n   ", "====ANS_Remove_1600 removeAllCallBack start=============>\");\n        ", "oveAll(bundleOption,removeAllByBundleOptionCallBackNullUid);\n        ", "====ANS_Remove_1600 removeAllCallBack err===============>\" + JSON.str", "   onCancel:onCancelremoveAllByBundleOptionwrongBundleCorrectUid,\n   ", "====ANS_Remove_1500 removeAllCallBack data==================>\" + JSON", "\n    }\n    function removeAllByBundleOptionCallBackNullCharacterBundl", "oveAll(bundleOption,removeAllByBundleOptionCallBackWrongBundleCorrect", "oveAll(bundleOption,removeAllByBundleOptionCallBackNullCharacterBundl", "e calling interface removeAll(bundle: BundleOption, callback: AsyncCa", "oveAll(bundleOption,removeAllByBundleOptionCallBackWrongBundleWrongUi", "====ANS_Remove_1900 removeAllCallback start===========>\");\n        co"], "files": ["ExampleJsunit.test.js", "getAllActive.js", "activeotherapp.js", "index.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "removeAll", "api_method_all": "function removeAll(userId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 149, "since": 8, "api_used": "\u662f", "lines": ["\n    }\n    function removeAllByBundleOptionCallBackWrongBundleWrongUi", "   function onCancelremoveAllByBundleOptionwrongBundleCorrectUid(data", "\n    }\n    function removeAllByBundleOptionCallBackWrongBundleCorrect", "====ANS_Remove_1900 removeAllCallback err=============>\" + JSON.strin", "====ANS_Remove_1900 removeAllCallback end=============>\");\n    }\n\n   ", "====ANS_Remove_2000 removeAllCallBack start============>\");\n        c", "00\n     * @tc.name: removeAll(bundle: BundleOption, callback: AsyncCa", "====ANS_Remove_1800 removeAllCallBack start==========>\");\n        con", "====ANS_Remove_2000 removeAllCallBack err==============>\" + JSON.stri", "====ANS_Remove_1700 removeAllCallBack err===============>\" + JSON.str", "\n            notify.removeAll(bundleOption,removeAllByBundleOptionCal", "move_1900 onConsume removeAll===========>\");\n        console.info(\"==", "====ANS_Remove_1800 removeAllCallBack end==========>\");\n    }\n\n    /*", "   }\n        notify.removeAll(bundleOption,removeAllByBundleOptionCal", "====ANS_Remove_1700 removeAllCallBack end=======================>\");\n", "====ANS_Remove_1700 removeAllCallBack start=============>\");\n        ", "\n    }\n    function removeAllByBundleOptionCallBackWrongUid(err) {\n  ", "====ANS_Remove_1500 removeAllCallBack end===================>\");\n    ", "\n    }\n    function removeAllByBundleOptionCallBack(data) {\n        c", "====ANS_Remove_1600 removeAllCallBack end===============>\");\n    }\n\n ", "\n    }\n    function removeAllByBundleOptionCallBackNullUid(err) {\n   ", "oveAll(bundleOption,removeAllByBundleOptionCallBack);\n            con", "====ANS_Remove_1800 removeAllCallBack err============>\" + JSON.string", "====ANS_Remove_1500 removeAllCallBack start=================>\");\n    ", "oveAll(bundleOption,removeAllByBundleOptionCallBackWrongUid);\n       ", "====ANS_Remove_2000 removeAllCallBack end=============>\");\n    }\n\n   ", "====ANS_Remove_1600 removeAllCallBack start=============>\");\n        ", "oveAll(bundleOption,removeAllByBundleOptionCallBackNullUid);\n        ", "====ANS_Remove_1600 removeAllCallBack err===============>\" + JSON.str", "   onCancel:onCancelremoveAllByBundleOptionwrongBundleCorrectUid,\n   ", "====ANS_Remove_1500 removeAllCallBack data==================>\" + JSON", "\n    }\n    function removeAllByBundleOptionCallBackNullCharacterBundl", "oveAll(bundleOption,removeAllByBundleOptionCallBackWrongBundleCorrect", "oveAll(bundleOption,removeAllByBundleOptionCallBackNullCharacterBundl", "e calling interface removeAll(bundle: BundleOption, callback: AsyncCa", "oveAll(bundleOption,removeAllByBundleOptionCallBackWrongBundleWrongUi", "====ANS_Remove_1900 removeAllCallback start===========>\");\n        co"], "files": ["ExampleJsunit.test.js", "getAllActive.js", "activeotherapp.js", "index.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "removeAll", "api_method_all": "function removeAll(userId: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["       notification.removeAllSlots().then(()=>{\n            console.d"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "removeAll", "api_method_all": "function removeAll(bundle?: BundleOption): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["       notification.removeAllSlots().then(()=>{\n            console.d"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getAllActiveNotifications", "api_method_all": "function getAllActiveNotifications(callback: AsyncCallback<Array<NotificationRequest>>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 30, "since": 0, "api_used": "\u662f", "lines": ["l();\n        notify.getAllActiveNotifications(getAllCallbackSeven);\n        console.d", "s_GetAllActive_0700 getAllActiveNotifications end==================>\");\n        setTi", "s_GetAllActive_0900 getAllActiveNotifications end==================>\");\n        setTi", "000\n    * @tc.name: getAllActiveNotifications(): Promise<Array<NotificationRequest>>;", "s_GetAllActive_0400 getAllActiveNotifications end==================>\");\n        setTi", ">\");\n        notify.getAllActiveNotifications(getAllCallback);\n        console.debug(", "Data = await notify.getAllActiveNotifications();\n        var i;\n        for (i = 0; i", "Data = await notify.getAllActiveNotifications();\n        expect(promiseData.length).a", "Data = await notify.getAllActiveNotifications();\n        console.debug(\"=========Ans_", "900\n    * @tc.name: getAllActiveNotifications(callback: AsyncCallback<Array<Notificat", "s_GetAllActive_0100 getAllActiveNotifications end==================>\");\n        setTi", "s_GetAllActive_0500 getAllActiveNotifications end==================>\");\n        setTi", "0\");\n        notify.getAllActiveNotifications(getAllCallbackThree);\n        console.d", "Data = await notify.getAllActiveNotifications();\n        console.debug(\"=============", ">\");\n        notify.getAllActiveNotifications(getAllCallbackNine);\n        console.de", "s_GetAllActive_0300 getAllActiveNotifications end==================>\");\n        setTi", "l();\n        notify.getAllActiveNotifications(getAllCallbackFive);\n        console.de"], "files": ["getAllActive.js", "getActive.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getAllActiveNotifications", "api_method_all": "function getAllActiveNotifications(): Promise<Array<NotificationRequest>>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["       await notify.getAllActiveNotifications().then(()=>{\n            console.debug("], "files": ["getActive.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getActiveNotificationCount", "api_method_all": "function getActiveNotificationCount(callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 18, "since": 0, "api_used": "\u662f", "lines": ["000\n    * @tc.name: getActiveNotificationCount(): Promise<number>;\n    * @tc.desc: Ver", ">\");\n        notify.getActiveNotificationCount(getCountCallback);\n        console.debu", ">\");\n        notify.getActiveNotificationCount(getCountCallbackFive);\n        console.", "=Ans_GetActive_1100 getActiveNotificationCount end==================>\");\n        setTi", "=Ans_GetActive_1300 getActiveNotificationCount end==================>\");\n        setTi", "ount = await notify.getActiveNotificationCount();\n        expect(promiseCount).assertE", "800\n    * @tc.name: getActiveNotificationCount(): Promise<number>;\n    * @tc.desc: Ver", "l();\n        notify.getActiveNotificationCount(getCountCallbackThree);\n        console", "900\n    * @tc.name: getActiveNotificationCount(callback: AsyncCallback<number>): void;", "600\n    * @tc.name: getActiveNotificationCount(): Promise<number>;\n    * @tc.desc: Ver", ">\");\n        notify.getActiveNotificationCount(getCountCallbackTwo);\n        console.d", ">\");\n        notify.getActiveNotificationCount(getCountCallbackFour);\n        console.", "=Ans_GetActive_1500 getActiveNotificationCount end==================>\");\n        setTi", "700\n    * @tc.name: getActiveNotificationCount(callback: AsyncCallback<number>): void;"], "files": ["getActive.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getActiveNotificationCount", "api_method_all": "function getActiveNotificationCount(): Promise<number>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getActiveNotifications", "api_method_all": "function getActiveNotifications(callback: AsyncCallback<Array<NotificationRequest>>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 23, "since": 0, "api_used": "\u662f", "lines": ["=Ans_GetActive_0900 getActiveNotifications end==================>\");\n        setTi", ">\");\n        notify.getActiveNotifications(getCallbackFive);\n        console.debug", "Data = await notify.getActiveNotifications();\n        console.log(\"Ans_GetActive_1", ">\");\n        notify.getActiveNotifications(getCallbackTwo);\n        console.debug(", "=Ans_GetActive_0800 getActiveNotifications end==================>\");\n        setTi", "=Ans_GetActive_1900 getActiveNotifications end==================>\");\n        setTi", "=Ans_GetActive_0600 getActiveNotifications end==================>\");\n        expec", "=Ans_GetActive_0300 getActiveNotifications end==================>\");\n        setTi", "=Ans_GetActive_0100 getActiveNotifications end==================>\");\n        setTi", "=Ans_GetActive_0400 getActiveNotifications end==================>\");\n        setTi", "Data = await notify.getActiveNotifications();\n        expect(promiseData.length).a", "=Ans_GetActive_1000 getActiveNotifications end==================>\");\n        setTi", ">\");\n        notify.getActiveNotifications(getCallback);\n        console.debug(\"==", "=Ans_GetActive_0700 getActiveNotifications end==================>\");\n        setTi", "=Ans_GetActive_1700 getActiveNotifications end==================>\");\n        setTi", "Data = await notify.getActiveNotifications();\n        console.debug(\"=============", ">\");\n        notify.getActiveNotifications(getCallbackFour);\n        console.debug", "=Ans_GetActive_0200 getActiveNotifications end==================>\");\n        setTi", "s_GetAllActive_0200 getActiveNotifications end==================>\");\n        expec", "l();\n        notify.getActiveNotifications((err, data)=>{\n            console.log(", "Data = await notify.getActiveNotifications();\n        var i;\n        for (i = 0; i"], "files": ["getAllActive.js", "getActive.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getActiveNotifications", "api_method_all": "function getActiveNotifications(): Promise<Array<NotificationRequest>>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "cancelGroup", "api_method_all": "function cancelGroup(groupName: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 48, "since": 8, "api_used": "\u662f", "lines": ["NS_CancelGroup_0700 cancelGroupCallbackFour start==>\");\n        console", "a));\n        notify.cancelGroup(\"group_wrong\", cancelGroupCallbackFive)", "    }\n\n    function cancelGroupCallbackFive(err){\n        console.info(", "    }\n\n    function cancelGroupByBundleCallbackThree(err){\n        cons", ">\");\n        notify.cancelGroup(\"\", cancelGroupCallbackFour);\n        s", "roup(\"group_wrong\", cancelGroupCallbackFive);\n        console.info(\"===", "roup_0500 onConsume cancelGroup======>\");\n        console.info(\"=======", "a));\n        notify.cancelGroup(\"group_wrong\");\n        console.info(\"=", "    }\n\n    function cancelGroupByBundleCallbackThree2(err){\n        con", "a));\n        notify.cancelGroup(\"group_0100\", CancelGroupCallbackOne);\n", "roup_0100 onConsume cancelGroup======>\");\n        console.info(\"=======", "NS_CancelGroup_0300 cancelGroupCallbackTwo start====>\");\n        consol", "    }\n\n    function cancelGroupCallbackTwo(err){\n        console.info(\"", "roup_0400 onConsume cancelGroup Promise======>\");\n        }\n        con", "roup_1000 onConsume cancelGroup======>\");\n        console.info(\"=======", "NS_CancelGroup_0800 cancelGroup err==================>\"+err.code);\n    ", "NS_CancelGroup_0500 cancelGroupByBundleCallbackThree2 start==>\");\n     ", "\n            notify.cancelGroup(\"group_0600\");\n            console.info", "roup_0900 onConsume cancelGroup======>\");\n        console.info(\"=======", "a));\n        notify.cancelGroup(\"group_0200\");\n        console.info(\"==", "Group(\"group_0500\", cancelGroupByBundleCallbackThree);\n        console.", "roup_0600 onConsume cancelGroup======>\");\n        console.info(\"=======", "NS_CancelGroup_0700 cancelGroupCallbackFour err====>\"+JSON.stringify(er", "a));\n        notify.cancelGroup(\"group_0500\", cancelGroupByBundleCallba", "Group_0600 onCancel cancelGroup:==========>\");\n        }else if(timesOf", "\n            notify.cancelGroup(\"group_0500\", cancelGroupByBundleCallba", "NS_CancelGroup_0900 cancelGroupCallbackFive end====>\");\n    }\n\n    \n   ", "Group(\"group_0300\", cancelGroupCallbackTwo);\n            console.info(\"", "NS_CancelGroup_0800 cancelGroup catch==================>\");\n           ", "roup_0200 onConsume cancelGroup======>\");\n        console.info(\"=======", "NS_CancelGroup_0500 cancelGroupByBundleCallbackThree start==>\");\n      ", "NS_CancelGroup_0900 cancelGroupCallbackFive err====>\"+JSON.stringify(er", "NS_CancelGroup_0500 cancelGroupByBundleCallbackThree err====>\"+JSON.str", "NS_CancelGroup_0500 cancelGroupByBundleCallbackThree2 err====>\"+JSON.st", "ify.cancelGroup(\"\", cancelGroupCallbackFour);\n        setTimeout((async", "\n            notify.cancelGroup(\"group_0400\");\n            console.info", "roup_0300 onConsume cancelGroup======>\");\n        }\n        console.inf", "NS_CancelGroup_0300 cancelGroupCallbackTwo err======>\" + JSON.stringify", "NS_CancelGroup_0300 cancelGroupCallbackTwo end======>\");\n    }\n\n    \n  ", "Group(\"group_0500\", cancelGroupByBundleCallbackThree2);\n            con", "\n            notify.cancelGroup(\"group_0300\", cancelGroupCallbackTwo);\n", "NS_CancelGroup_0500 cancelGroupByBundleCallbackThree end====>\");\n    }\n", "NS_CancelGroup_0500 cancelGroupByBundleCallbackThree2 end====>\");\n    }", "NS_CancelGroup_0700 cancelGroupCallbackFour end====>\");\n    }\n\n    \n   ", "Group_0500 onCancel cancelGroup:======>\");\n        } else if (timesOfOn", "   })\n\n    function cancelGroupCallbackFour(err){\n        console.info(", "a));\n        notify.cancelGroup(\"group_0600\");\n        console.info(\"==", "NS_CancelGroup_0900 cancelGroupCallbackFive start==>\");\n        console"], "files": ["ActsAnsCancelGroup.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "cancelGroup", "api_method_all": "function cancelGroup(groupName: string): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["NS_CancelGroup_0800 cancelGroup then==================>\");\n        }).c", ">\");\n        notify.cancelGroup(\"\").then(()=>{\n            console.info"], "files": ["ActsAnsCancelGroup.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "removeGroupByBundle", "api_method_all": "function removeGroupByBundle(bundle: BundleOption, groupName: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 53, "since": 8, "api_used": "\u662f", "lines": ["   })\n\n    function removeGroupByBundleCallbackFour(err){\n        console.info(", "NS_RemoveGroup_0100 removeGroupByBundleCallbackOne err====>\"+JSON.stringify(err", "NS_RemoveGroup_0100 removeGroupByBundleCallbackOne end====>\");\n    }\n\n    \n    ", "    }\n\n    function removeGroupByBundleCallbackThree(err){\n        console.info", "roup_0200 onConsume removeGroupByBundle======>\");\n        console.info(\"=======", "NS_RemoveGroup_0500 removeGroupByBundleCallbackThree2 end====>\");\n    }\n\n    \n ", "NS_RemoveGroup_0300 removeGroupByBundleCallback err======>\" + JSON.stringify(er", "e(bundleOption, \"\", removeGroupByBundleCallbackFour);\n        setTimeout((async", "NS_RemoveGroup_0700 removeGroupByBundleCallbackFour err====>\"+JSON.stringify(er", "tion, \"group_0300\", removeGroupByBundleCallback);\n            console.info(\"===", "a));\n        notify.removeGroupByBundle(bundleOption, \"group_wrong\", removeGrou", "a));\n        notify.removeGroupByBundle(bundleOption, \"group_0500\", removeGroup", "tion, \"group_0100\", removeGroupByBundleCallbackOne);\n        console.info(\"====", "a));\n        notify.removeGroupByBundle(bundleOption, \"group_0200\");\n        co", "NS_RemoveGroup_0500 removeGroupByBundleCallbackThree err====>\"+JSON.stringify(e", "NS_RemoveGroup_0900 removeGroupByBundleCallbackOne start==>\");\n        console.", "tion, \"group_0500\", removeGroupByBundleCallbackThree2);\n            console.inf", "NS_RemoveGroup_0700 removeGroupByBundleCallbackFour end====>\");\n    }\n\n    \n   ", "\n            notify.removeGroupByBundle(bundleOption, \"group_0500\", removeGroup", "Group_0600 onCancel removeGroupByBundle:==========>\");\n        }else if(timesOf", "NS_RemoveGroup_0800 removeGroupByBundle err==================>\"+err.code);\n    ", "    }\n\n    function removeGroupByBundleCallbackOne(err){\n        console.info(\"", "a));\n        notify.removeGroupByBundle(bundleOption, \"group_0100\", removeGroup", "    }\n\n    function removeGroupByBundleCallbackFive(err){\n        console.info(", "a));\n        notify.removeGroupByBundle(bundleOption, \"group_0600\");\n        co", "NS_RemoveGroup_0500 removeGroupByBundleCallbackThree end====>\");\n    }\n\n    fun", "roup_0300 onConsume removeGroupByBundle======>\");\n        }\n        console.inf", "    }\n\n    function removeGroupByBundleCallback(err){\n        console.info(\"===", ">\");\n        notify.removeGroupByBundle(bundleOption, \"\", removeGroupByBundleCa", "roup_0400 onConsume removeGroupByBundle Promise======>\");\n        }\n        con", "NS_RemoveGroup_0700 removeGroupByBundleCallbackFour start==>\");\n        console", "ion, \"group_wrong\", removeGroupByBundleCallbackFive);\n        console.info(\"===", "roup_0900 onConsume removeGroupByBundle======>\");\n        console.info(\"=======", "Group_0500 onCancel removeGroupByBundle:======>\");\n        } else if (timesOfOn", "NS_RemoveGroup_0500 removeGroupByBundleCallbackThree start==>\");\n        consol", "NS_RemoveGroup_0500 removeGroupByBundleCallbackThree2 err====>\"+JSON.stringify(", "\n            notify.removeGroupByBundle(bundleOption, \"group_0300\", removeGroup", "\n            notify.removeGroupByBundle(bundleOption, \"group_0400\");\n          ", "roup_0600 onConsume removeGroupByBundle======>\");\n        console.info(\"=======", "NS_RemoveGroup_0300 removeGroupByBundleCallback end======>\");\n    }\n\n    \n    i", "NS_RemoveGroup_0900 removeGroupByBundleCallbackOne err====>\"+JSON.stringify(err", "tion, \"group_0500\", removeGroupByBundleCallbackThree);\n        console.info(\"==", "NS_RemoveGroup_0300 removeGroupByBundleCallback start====>\");\n        console.i", "NS_RemoveGroup_0500 removeGroupByBundleCallbackThree2 start==>\");\n        conso", "\n            notify.removeGroupByBundle(bundleOption, \"group_0600\");\n          ", "NS_RemoveGroup_0800 removeGroupByBundle catch==================>\");\n           ", "NS_RemoveGroup_0100 removeGroupByBundleCallbackOne start==>\");\n        console.", "roup_0500 onConsume removeGroupByBundle======>\");\n        console.info(\"=======", "roup_0100 onConsume removeGroupByBundle======>\");\n        console.info(\"=======", "    }\n\n    function removeGroupByBundleCallbackThree2(err){\n        console.inf"], "files": ["ActsAnsRemoveGroup.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "removeGroupByBundle", "api_method_all": "function removeGroupByBundle(bundle: BundleOption, groupName: string): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["NS_RemoveGroup_0800 removeGroupByBundle then==================>\");\n        }).c", ">\");\n        notify.removeGroupByBundle(bundleOption, \"\").then(()=>{\n          "], "files": ["ActsAnsRemoveGroup.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "setDoNotDisturbDate", "api_method_all": "function setDoNotDisturbDate(date: DoNotDisturbDate, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 69, "since": 8, "api_used": "\u662f", "lines": ["kb);\n        notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", "+20)\n        notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", "       await notify.setDoNotDisturbDate({\n                type:notify.DoNotDist", "00\n     * @tc.name: setDoNotDisturbDate()\n     * @tc.desc: verify the function ", "       await notify.setDoNotDisturbDate({\n                        type:notify.D", "ate)\n        notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", "te);\n        notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", "ify the function of setDoNotDisturbDate\n     */\n    it('ActsSetDoNotDisturbTest", "       await notify.setDoNotDisturbDate({\n                    type:notify.DoNot", ".log(\"===>test_1700 setDoNotDisturbDate===>\"+JSON.stringify(err));\n            ", "ar promise = notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", ".log(\"===>test_2200 setDoNotDisturbDate===>\")\n        })\n    })\n\n    /*\n     * ", "s())\n        notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", "       await notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", ".log(\"===>test_1800 setDoNotDisturbDate fail===>\"+JSON.stringify(err))\n        "], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "setDoNotDisturbDate", "api_method_all": "function setDoNotDisturbDate(date: DoNotDisturbDate): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "setDoNotDisturbDate", "api_method_all": "function setDoNotDisturbDate(date: DoNotDisturbDate, userId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 69, "since": 8, "api_used": "\u662f", "lines": ["kb);\n        notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", "+20)\n        notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", "       await notify.setDoNotDisturbDate({\n                type:notify.DoNotDist", "00\n     * @tc.name: setDoNotDisturbDate()\n     * @tc.desc: verify the function ", "       await notify.setDoNotDisturbDate({\n                        type:notify.D", "ate)\n        notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", "te);\n        notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", "ify the function of setDoNotDisturbDate\n     */\n    it('ActsSetDoNotDisturbTest", "       await notify.setDoNotDisturbDate({\n                    type:notify.DoNot", ".log(\"===>test_1700 setDoNotDisturbDate===>\"+JSON.stringify(err));\n            ", "ar promise = notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", ".log(\"===>test_2200 setDoNotDisturbDate===>\")\n        })\n    })\n\n    /*\n     * ", "s())\n        notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", "       await notify.setDoNotDisturbDate({\n            type:notify.DoNotDisturbT", ".log(\"===>test_1800 setDoNotDisturbDate fail===>\"+JSON.stringify(err))\n        "], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "setDoNotDisturbDate", "api_method_all": "function setDoNotDisturbDate(date: DoNotDisturbDate, userId: number): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getDoNotDisturbDate", "api_method_all": "function getDoNotDisturbDate(callback: AsyncCallback<DoNotDisturbDate>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 29, "since": 8, "api_used": "\u662f", "lines": ["   console.log(\"===>getDoNotDisturbDate DoNotDateE===>\"+DoNotDateE)\n           ", ".log(\"===>test_1900 getDoNotDisturbDate success===>\"+err.code+JSON.stringify(da", "       await notify.getDoNotDisturbDate(async(err,data)=>{\n                    ", ".log(\"===>test_0400 getDoNotDisturbDate===>\"+JSON.stringify(data));\n           ", ".log(\"===>test_0500 getDoNotDisturbDate===>\"+err.code+JSON.stringify(data))\n   ", "\n            notify.getDoNotDisturbDate(async(err,data)=>{\n                cons", "   console.log(\"===>getDoNotDisturbDate endDate===>\"+data.end)\n                ", "       await notify.getDoNotDisturbDate((err,data)=>{\n                console.l", ".log(\"===>test_2100 getDoNotDisturbDate===>\"+err.code+JSON.stringify(data))\n   ", ".log(\"===>test_1100 getDoNotDisturbDate===>\"+err.code+JSON.stringify(data))\n   ", ".log(\"===>test_0300 getDoNotDisturbDate===>\"+err.code+JSON.stringify(data))\n   ", ".log(\"===>test_1000 getDoNotDisturbDate===>\"+JSON.stringify(data))\n            ", "   console.log(\"===>getDoNotDisturbDate beginDate===>\"+data.begin)\n            ", ".log(\"===>test_1400 getDoNotDisturbDate===>\"+err.code+JSON.stringify(data))\n   ", ".log(\"===>test_1200 getDoNotDisturbDate fail===>\"+JSON.stringify(err))\n        ", ".log(\"===>test_1400 getDoNotDisturbDate fail===>\"+JSON.stringify(err))\n        ", ".log(\"===>test_0700 getDoNotDisturbDate===>\"+JSON.stringify(data))\n            ", ".log(\"===>test_2200 getDoNotDisturbDate===>\"+JSON.stringify(data));\n           ", ".log(\"===>test_0900 getDoNotDisturbDate===>\"+JSON.stringify(data))\n            ", "       await notify.getDoNotDisturbDate(async(err,data)=>{\n                cons", ".log(\"===>test_1300 getDoNotDisturbDate success===>\"+err.code+JSON.stringify(da", ".log(\"===>test_1200 getDoNotDisturbDate===>\"+err.code+JSON.stringify(data));\n  ", "       await notify.getDoNotDisturbDate((err,data) => {\n            console.log", "       await notify.getDoNotDisturbDate(async (err,data)=>{\n                con"], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getDoNotDisturbDate", "api_method_all": "function getDoNotDisturbDate(): Promise<DoNotDisturbDate>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["\n            notify.getDoNotDisturbDate().then(async(data)=>{\n                c", "\n            notify.getDoNotDisturbDate().then((data)=>{\n                consol", "       await notify.getDoNotDisturbDate().then(async(data)=>{\n                 ", "ne) {\n       notify.getDoNotDisturbDate().then((promise)=>{\n                 co"], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getDoNotDisturbDate", "api_method_all": "function getDoNotDisturbDate(userId: number, callback: AsyncCallback<DoNotDisturbDate>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 29, "since": 8, "api_used": "\u662f", "lines": ["   console.log(\"===>getDoNotDisturbDate DoNotDateE===>\"+DoNotDateE)\n           ", ".log(\"===>test_1900 getDoNotDisturbDate success===>\"+err.code+JSON.stringify(da", "       await notify.getDoNotDisturbDate(async(err,data)=>{\n                    ", ".log(\"===>test_0400 getDoNotDisturbDate===>\"+JSON.stringify(data));\n           ", ".log(\"===>test_0500 getDoNotDisturbDate===>\"+err.code+JSON.stringify(data))\n   ", "\n            notify.getDoNotDisturbDate(async(err,data)=>{\n                cons", "   console.log(\"===>getDoNotDisturbDate endDate===>\"+data.end)\n                ", "       await notify.getDoNotDisturbDate((err,data)=>{\n                console.l", ".log(\"===>test_2100 getDoNotDisturbDate===>\"+err.code+JSON.stringify(data))\n   ", ".log(\"===>test_1100 getDoNotDisturbDate===>\"+err.code+JSON.stringify(data))\n   ", ".log(\"===>test_0300 getDoNotDisturbDate===>\"+err.code+JSON.stringify(data))\n   ", ".log(\"===>test_1000 getDoNotDisturbDate===>\"+JSON.stringify(data))\n            ", "   console.log(\"===>getDoNotDisturbDate beginDate===>\"+data.begin)\n            ", ".log(\"===>test_1400 getDoNotDisturbDate===>\"+err.code+JSON.stringify(data))\n   ", ".log(\"===>test_1200 getDoNotDisturbDate fail===>\"+JSON.stringify(err))\n        ", ".log(\"===>test_1400 getDoNotDisturbDate fail===>\"+JSON.stringify(err))\n        ", ".log(\"===>test_0700 getDoNotDisturbDate===>\"+JSON.stringify(data))\n            ", ".log(\"===>test_2200 getDoNotDisturbDate===>\"+JSON.stringify(data));\n           ", ".log(\"===>test_0900 getDoNotDisturbDate===>\"+JSON.stringify(data))\n            ", "       await notify.getDoNotDisturbDate(async(err,data)=>{\n                cons", ".log(\"===>test_1300 getDoNotDisturbDate success===>\"+err.code+JSON.stringify(da", ".log(\"===>test_1200 getDoNotDisturbDate===>\"+err.code+JSON.stringify(data));\n  ", "       await notify.getDoNotDisturbDate((err,data) => {\n            console.log", "       await notify.getDoNotDisturbDate(async (err,data)=>{\n                con"], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getDoNotDisturbDate", "api_method_all": "function getDoNotDisturbDate(userId: number): Promise<DoNotDisturbDate>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["\n            notify.getDoNotDisturbDate().then(async(data)=>{\n                c", "\n            notify.getDoNotDisturbDate().then((data)=>{\n                consol", "       await notify.getDoNotDisturbDate().then(async(data)=>{\n                 ", "ne) {\n       notify.getDoNotDisturbDate().then((promise)=>{\n                 co"], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "supportDoNotDisturbMode", "api_method_all": "function supportDoNotDisturbMode(callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["ify the function of supportDoNotDisturbMode\n     */\n    it('ActsGetDoNotDisturbTest", "00\n     * @tc.name: supportDoNotDisturbMode()\n     * @tc.desc: verify the function ", "       await notify.supportDoNotDisturbMode((err,data) => {\n            console.log"], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "supportDoNotDisturbMode", "api_method_all": "function supportDoNotDisturbMode(): Promise<boolean>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["e) {\n        notify.supportDoNotDisturbMode().then((promise)=>{\n            console"], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isSupportTemplate", "api_method_all": "function isSupportTemplate(templateName: string, callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isSupportTemplate", "api_method_all": "function isSupportTemplate(templateName: string): Promise<boolean>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "requestEnableNotification", "api_method_all": "function requestEnableNotification(callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["       await notify.requestEnableNotification((err) => {\n                console.log("], "files": ["actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "requestEnableNotification", "api_method_all": "function requestEnableNotification(): Promise<void>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "enableDistributed", "api_method_all": "function enableDistributed(enable: boolean, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["       await notify.enableDistributed(false,async() => {\n            await no", "       await notify.enableDistributedByBundle({\n            bundle:\"com.examp", "       await notify.enableDistributedSelf(true);\n        console.info(\"======", "       await notify.enableDistributed(true);\n        await notify.enableDistr"], "files": ["actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "enableDistributed", "api_method_all": "function enableDistributed(enable: boolean): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isDistributedEnabled", "api_method_all": "function isDistributedEnabled(callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["       await notify.isDistributedEnabled((err,data) => {\n                console"], "files": ["actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isDistributedEnabled", "api_method_all": "function isDistributedEnabled(): Promise<boolean>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "enableDistributedByBundle", "api_method_all": "function enableDistributedByBundle(bundle: BundleOption, enable: boolean, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["       await notify.enableDistributedByBundle({\n            bundle:\"com.example.actsa"], "files": ["actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "enableDistributedByBundle", "api_method_all": "function enableDistributedByBundle(bundle: BundleOption, enable: boolean): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isDistributedEnabledByBundle", "api_method_all": "function isDistributedEnabledByBundle(bundle: BundleOption, callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "isDistributedEnabledByBundle", "api_method_all": "function isDistributedEnabledByBundle(bundle: BundleOption): Promise<boolean>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getDeviceRemindType", "api_method_all": "function getDeviceRemindType(callback: AsyncCallback<DeviceRemindType>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["       await notify.getDeviceRemindType((err,data) => {\n            console.deb"], "files": ["actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "getDeviceRemindType", "api_method_all": "function getDeviceRemindType(): Promise<DeviceRemindType>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "type", "api_method_all": "type: DoNotDisturbType", "api_type": "", "api_args_count": 1, "api_level": 31, "api_used_count": 483, "since": 8, "api_used": "\u662f", "lines": ["ef = Object.getPrototypeOf(global) || global", "     expect(data[0].type).assertEqual(2)\n   ", "     expect(data[0].type).assertEqual(65535)", "        expect(data.type).assertEqual(notifi", "     expect(data[0].type).assertEqual(1)\n   ", "  {\n                type: notification.SlotT", "     expect(data[0].type).assertEqual(3)\n   "], "files": ["ExampleJsunit.test.js", "BadgeDisplay.js", "EnableNotification.js", "doNotDisturbTest.js", "ActsAnsPublishInput.js", "WantAgent.test.js", "index.js", "ActiveButton.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "begin", "api_method_all": "begin: Date", "api_type": "", "api_args_count": 1, "api_level": 31, "api_used_count": 342, "since": 8, "api_used": "\u662f", "lines": ["                    beginDate.getHours()+8,\n ", "E_NONE,\n            begin:beginDate,\n        ", "eButton_test_0700===begin===>\");\n\n        var", "eButton_test_0400===begin===>\");\n\n        var", "                    begin:beginDate,\n        ", "                    beginDate.getMonth(),\n   ", " endDate = new Date(beginDate.getFullYear(),\n", "eButton_test_0300===begin===>\");\n\n        var", "     expect(promise.begin.toString()).assertE", "              begin:beginDate,\n              ", "beginDate===>\"+data.begin)\n                co", "                    beginDate.getMinutes())\n ", "                    beginDate.getMinutes()+20", "        expect(data.begin.toString()).assertE", "done) {\n        var beginDate = new Date()\n  ", "                    beginDate.getHours(),\n   ", ",\n            begin:beginDate,\n            en", "getDoNotDisturbDate beginDate===>\"+data.begin", "scriber_test_0100===begin===>\");\n\n        var", "eButton_test_0500===begin===>\");\n\n        var", "shImage_test_0400===begin===>\");\n        Buff", "E_ONCE,\n            begin:beginDate,\n        ", "shImage_test_0300===begin===>\");\n        Buff", "eButton_test_0600===begin===>\");\n\n        var", "                    beginDate.getDate(),\n    ", "shImage_test_0200===begin===>\");\n\n        var", "NotDateE = new Date(beginDate.getFullYear(),\n", "eButton_test_0100===begin===>\");\n        var ", "eButton_test_0200===begin===>\");\n        var "], "files": ["doNotDisturbTest.js", "Subscriber.js", "publishImage.js", "WantAgent.test.js", "ActiveButton.js"], "is_white": " ", "desc": " "}, {"api_class_name": "notification", "api_method_name": "end", "api_method_all": "end: Date", "api_type": "", "api_args_count": 1, "api_level": 31, "api_used_count": 998, "since": 8, "api_used": "\u662f", "lines": ["1100 cancelCallBack end===================>", "0900 cancelCallBack end==================>'", "ncel_1200 onConsume end====================", "ancel_0100 onCancel end====================", "ancel_1000 onCancel end===============>');\n", "ncel_0500 onConsume end====================", "ancel_0900 onCancel end================>');", "ncel_0900 onConsume end================>');", "ncel_0800 onConsume end===============>');\n", "ancel_0700 onCancel end====================", "e cancelAll 2times2 end======>');\n        c", "0 cancelAllCallBack end===============>');\n", "ancel_1100 onCancel end====================", "ancel_1200 onCancel end====================", "ancel_0500 onCancel end===============>');\n", "ancel_0400 onCancel end===============>');\n", "ncel_0600 onConsume end========>');\n    }\n ", "          'id': 'extend'\n        })\n       ", "ncel_0400 onConsume end===========>');\n    ", "ancel_0600 onCancel end=============>');\n  ", "1000 cancelCallBack end=================>')", "     const expectExtend = new ExpectExtend(", "ncel_1100 onConsume end====================", "ncel_0300 onConsume end====================", "('expect', expectExtend)\n        core.init(", "500 publish promise end==============>');\n ", "cancelAllCallBack1  end===========>');\n    ", "ancel_0200 onCancel end====================", "0 cancelAllCallBack end================>');", "Timeout unsubscribe end==================>'", "ncel_0200 onConsume end===============>');\n", "ort {Core, ExpectExtend} from 'deccjsunit/i", "ncel_0700 onConsume end============>');\n   ", "tend = new ExpectExtend({\n            'id':", "e cancelAll 2times1 end======>');\n        n", "ancel_0800 onCancel end================>');", " cancelAllCallBack2 end===============>');\n", "0 cancelAllCallBack end====================", "ncel_1000 onConsume end============>');\n   ", "ncel_0100 onConsume end====================", "ancel_0300 onCancel end================>');"], "files": ["ExampleJsunit.test.js", "getAllActive.js", "ActsSubscriber_test_unorder.js", "ActsAnsNotificationCancel.test.js", "activeotherapp.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "Subscriber.js", "ActsAnsPublishInput.js", "ActsAnsRemoveGroup.js", "getActive.js", "ActsAnsPublishConversation.js", "index.js", "publish.js", "ActiveButton.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SlotType", "api_method_all": "export enum SlotType {\n    \n    UNKNOWN_TYPE = 0,\n\n    \n    SOCIAL_COMMUNICATION = 1,\n\n    \n    SERVICE_INFORMATION = 2,\n\n    \n    CONTENT_INFORMATION = 3,\n\n    \n    OTHER_TYPES = 0xFFFF,\n  }", "api_method_name": "SlotType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 1233, "since": 0, "api_used": "\u662f", "lines": ["  slotType : notify.SlotType.OTHER_TYPES,\n      "], "files": ["ExampleJsunit.test.js", "publishIcon.js", "ActsAnsNotificationCancel.test.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "publishImage.js", "ActsAnsPublishInput.js", "Subscriber.js", "ActsAnsRemoveGroup.js", "actsansdistributedtest.js", "getActive.js", "publish.js", "ActiveButton.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SlotType", "api_method_name": "UNKNOWN_TYPE", "api_method_all": "UNKNOWN_TYPE = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 97, "since": 0, "api_used": "\u662f", "lines": ["tification.SlotType.UNKNOWN_TYPE).then((data) => {\n ", "tification.SlotType.UNKNOWN_TYPE).then((data)=>{\n   ", "===>getSlot Promise UNKNOWN_TYPE ActsAnsGetSlotTestP", " adding slottype to UNKNOWN_TYPE's slot,\n     *     ", "ddSlotByTypePromise UNKNOWN_TYPE enter====>\");\n     ", "tification.SlotType.UNKNOWN_TYPE, getSlotCallback);\n", "tification.SlotType.UNKNOWN_TYPE,\n                lo", "debug(\"====>addSlot UNKNOWN_TYPE====>\");\n        awa", "==>getSlot SlotType.UNKNOWN_TYPE====>\");\n           ", "t callback SlotType.UNKNOWN_TYPE====>\");\n        awa", "tification.SlotType.UNKNOWN_TYPE);\n        console.d", "==>addSlot SlotType.UNKNOWN_TYPE start====>\");\n     ", "tification.SlotType.UNKNOWN_TYPE,\n                le", "tification.SlotType.UNKNOWN_TYPE,\n            level:", "ug(\"====>removeSlot UNKNOWN_TYPE====>\");\n           ", "tification.SlotType.UNKNOWN_TYPE).then(()=>{\n       ", "   : Verify getSlot UNKNOWN_TYPE\n     * @tc.desc    ", "tification.SlotType.UNKNOWN_TYPE, getSlotCallbackFif", "==>getSlot SlotType.UNKNOWN_TYPE====>\");\n        not", "tification.SlotType.UNKNOWN_TYPE, (err)=>{\n         ", "tification.SlotType.UNKNOWN_TYPE);\n        }\n       ", "debug(\"====>addSlot UNKNOWN_TYPE callback====>\");\n  ", "==>getSlot SlotType.UNKNOWN_TYPE start====>\");\n     ", "tification.SlotType.UNKNOWN_TYPE, removeSlotCallbck)", "tification.SlotType.UNKNOWN_TYPE,() => {\n           ", "removeSlot SlotType.UNKNOWN_TYPE====>\");\n        not", "====>getSlotPromise UNKNOWN_TYPE ActsAnsGetSlotTestP", "==>getSlot SlotType.UNKNOWN_TYPE====>\");\n        var"], "files": ["publish.js", "ExampleJsunit.test.js", "WantAgent.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SlotType", "api_method_name": "SOCIAL_COMMUNICATION", "api_method_all": "SOCIAL_COMMUNICATION = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 238, "since": 0, "api_used": "\u662f", "lines": ["==>getSlot SlotType.SOCIAL_COMMUNICATION start====>\");\n     ", "ug(\"====>removeSlot SOCIAL_COMMUNICATION enter====>\");\n     ", ").assertEqual(\"slot_SOCIAL_COMMUNICATION_sound\");\n        ex", "==>addSlot SlotType.SOCIAL_COMMUNICATION start====>\");\n     ", ").assertEqual(\"slot_SOCIAL_COMMUNICATION_desc\");\n           ", "tification.SlotType.SOCIAL_COMMUNICATION);\n        console.d", ").assertEqual(\"slot_SOCIAL_COMMUNICATION_sound\");\n          ", "       sound: \"slot_SOCIAL_COMMUNICATION_sound\",\n           ", "tification.SlotType.SOCIAL_COMMUNICATION);\n        expect(da", "debug(\"====>addSlot SOCIAL_COMMUNICATION callback====>\");\n  ", "tification.SlotType.SOCIAL_COMMUNICATION, getSlotCallback);\n", "tification.SlotType.SOCIAL_COMMUNICATION);\n        }\n       ", "tification.SlotType.SOCIAL_COMMUNICATION).then(()=>{\n       ", "t callback SlotType.SOCIAL_COMMUNICATION====>\");\n        awa", "tification.SlotType.SOCIAL_COMMUNICATION, removeSlotCallbck)", "==>getSlot SlotType.SOCIAL_COMMUNICATION====>\");\n           ", "debug(\"====>addSlot SOCIAL_COMMUNICATION====>\");\n        not", "tification.SlotType.SOCIAL_COMMUNICATION).then((data) => {\n ", "==>getSlot SlotType.SOCIAL_COMMUNICATION====>\");\n        var", "tification.SlotType.SOCIAL_COMMUNICATION);\n            expec", "debug(\"====>addSlot SOCIAL_COMMUNICATION====>\");\n        awa", "removeSlot SlotType.SOCIAL_COMMUNICATION====>\");\n        not", "tification.SlotType.SOCIAL_COMMUNICATION,\n                le", "        desc: \"slot_SOCIAL_COMMUNICATION_desc\",\n            ", "==>getSlot SlotType.SOCIAL_COMMUNICATION====>\");\n        not", "tification.SlotType.SOCIAL_COMMUNICATION).then((data)=>{\n   ", "ug(\"====>removeSlot SOCIAL_COMMUNICATION err:\" + JSON.string", "tification.SlotType.SOCIAL_COMMUNICATION, (err)=>{\n         ", "tification.SlotType.SOCIAL_COMMUNICATION, (err, data)=>{\n   ", ").assertEqual(\"slot_SOCIAL_COMMUNICATION_desc\");\n        exp", "tification.SlotType.SOCIAL_COMMUNICATION);\n                e"], "files": ["publish.js", "ExampleJsunit.test.js", "doNotDisturbTest.js", "publishImage.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SlotType", "api_method_name": "SERVICE_INFORMATION", "api_method_all": "SERVICE_INFORMATION = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 241, "since": 0, "api_used": "\u662f", "lines": ["tification.SlotType.SERVICE_INFORMATION, (err)=>{\n         ", "tification.SlotType.SERVICE_INFORMATION, getSlotCallback);\n", "==>getSlot SlotType.SERVICE_INFORMATION====>\");\n        not", ").assertEqual(\"slot_SERVICE_INFORMATION_desc\");\n           ", "tification.SlotType.SERVICE_INFORMATION);\n        expect(da", "===>getSlot Promise SERVICE_INFORMATION ActsAnsGetSlotTestP", ").assertEqual(\"slot_SERVICE_INFORMATION_desc\");\n        exp", "==>getSlot SlotType.SERVICE_INFORMATION====>\");\n        var", ").assertEqual(\"slot_SERVICE_INFORMATION_sound\");\n        ex", "debug(\"====>addSlot SERVICE_INFORMATION====>\");\n        awa", "tification.SlotType.SERVICE_INFORMATION, getSlotCallbackSec", "ug(\"====>removeSlot SERVICE_INFORMATION err:\" + JSON.string", "ug(\"====>removeSlot SERVICE_INFORMATION enter====>\");\n     ", "tification.SlotType.SERVICE_INFORMATION).then((data) => {\n ", "tification.SlotType.SERVICE_INFORMATION);\n            expec", "==>addSlot SlotType.SERVICE_INFORMATION start====>\");\n     ", "debug(\"====>addSlot SERVICE_INFORMATION====>\");\n        not", "        desc: \"slot_SERVICE_INFORMATION_desc\",\n            ", "tification.SlotType.SERVICE_INFORMATION,\n                le", "==>getSlot SlotType.SERVICE_INFORMATION====>\");\n           ", "t callback SlotType.SERVICE_INFORMATION====>\");\n        awa", "tification.SlotType.SERVICE_INFORMATION, removeSlotCallbck)", "tification.SlotType.SERVICE_INFORMATION, (err, data)=>{\n   ", "==>getSlot SlotType.SERVICE_INFORMATION start====>\");\n     ", "tification.SlotType.SERVICE_INFORMATION).then((data)=>{\n   ", "tification.SlotType.SERVICE_INFORMATION);\n        console.d", ").assertEqual(\"slot_SERVICE_INFORMATION_sound\");\n          ", "tification.SlotType.SERVICE_INFORMATION);\n        notificat", "       sound: \"slot_SERVICE_INFORMATION_sound\",\n           ", "tification.SlotType.SERVICE_INFORMATION);\n        }\n       ", "debug(\"====>addSlot SERVICE_INFORMATION callback====>\");\n  "], "files": ["ActsAnsPublishInput.js", "ExampleJsunit.test.js", "publish.js", "ActiveButton.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SlotType", "api_method_name": "CONTENT_INFORMATION", "api_method_all": "CONTENT_INFORMATION = 3,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 174, "since": 0, "api_used": "\u662f", "lines": ["tification.SlotType.CONTENT_INFORMATION).then((data) => {\n ", "ug(\"====>removeSlot CONTENT_INFORMATION enter====>\");\n     ", "tification.SlotType.CONTENT_INFORMATION).then(()=>{\n       ", "removeSlot SlotType.CONTENT_INFORMATION====>\");\n        not", "t callback SlotType.CONTENT_INFORMATION====>\");\n        awa", ").assertEqual(\"slot_CONTENT_INFORMATION_sound\");\n          ", "tification.SlotType.CONTENT_INFORMATION).then((data)=>{\n   ", ").assertEqual(\"slot_CONTENT_INFORMATION_sound\");\n        ex", "===>getSlot Promise CONTENT_INFORMATION ActsAnsGetSlotTestP", ").assertEqual(\"slot_CONTENT_INFORMATION_desc\");\n           ", "tification.SlotType.CONTENT_INFORMATION, getSlotCallbackThi", ").assertEqual(\"slot_CONTENT_INFORMATION_desc\");\n        exp", "tification.SlotType.CONTENT_INFORMATION);\n        expect(da", "ug(\"====>removeSlot CONTENT_INFORMATION====>\");\n           ", "tification.SlotType.CONTENT_INFORMATION, (err)=>{\n         ", "tification.SlotType.CONTENT_INFORMATION,\n                le", "debug(\"====>addSlot CONTENT_INFORMATION====>\");\n        awa", "debug(\"====>addSlot CONTENT_INFORMATION====>\");\n        not", "tification.SlotType.CONTENT_INFORMATION, getSlotCallback);\n", "        desc: \"slot_CONTENT_INFORMATION_desc\",\n            ", "       sound: \"slot_CONTENT_INFORMATION_sound\",\n           ", "ug(\"====>removeSlot CONTENT_INFORMATION err:\" + JSON.string", "==>getSlot SlotType.CONTENT_INFORMATION start====>\");\n     ", "tification.SlotType.CONTENT_INFORMATION);\n        }\n       ", "ddSlotByTypePromise CONTENT_INFORMATION enter====>\");\n     ", "tification.SlotType.CONTENT_INFORMATION, removeSlotCallbck)", "==>getSlot SlotType.CONTENT_INFORMATION====>\");\n        var", "debug(\"====>addSlot CONTENT_INFORMATION callback====>\");\n  ", "tification.SlotType.CONTENT_INFORMATION);\n        console.d", "tification.SlotType.CONTENT_INFORMATION);\n            expec", "==>getSlot SlotType.CONTENT_INFORMATION====>\");\n        not", "==>addSlot SlotType.CONTENT_INFORMATION start====>\");\n     ", "==>getSlot SlotType.CONTENT_INFORMATION====>\");\n           "], "files": ["publish.js", "ExampleJsunit.test.js", "actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SlotType", "api_method_name": "OTHER_TYPES", "api_method_all": "OTHER_TYPES = 0xFFFF,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 291, "since": 0, "api_used": "\u662f", "lines": ["e : notify.SlotType.OTHER_TYPES,\n            isOngo"], "files": ["ExampleJsunit.test.js", "publishIcon.js", "ActsAnsNotificationCancel.test.js", "ActsAnsCancelGroup.js", "ActsAnsRemoveGroup.js", "getActive.js", "publish.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ContentType", "api_method_all": "export enum ContentType {\n    \n    NOTIFICATION_CONTENT_BASIC_TEXT,\n\n    \n    NOTIFICATION_CONTENT_LONG_TEXT,\n\n    \n    NOTIFICATION_CONTENT_PICTURE,\n\n    \n    NOTIFICATION_CONTENT_CONVERSATION,\n\n    \n    NOTIFICATION_CONTENT_MULTILINE,\n  }", "api_method_name": "ContentType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 292, "since": 7, "api_used": "\u662f", "lines": ["contentType: notify.ContentType.NOTIFICATION_CONTEN"], "files": ["publishIcon.js", "getAllActive.js", "ExampleJsunit.test.js", "ActsAnsNotificationCancel.test.js", "activeotherapp.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "publishImage.js", "ActsAnsPublishInput.js", "ActsAnsRemoveGroup.js", "actsansdistributedtest.js", "ActsAnsPublishConversation.js", "getActive.js", "publish.js", "ActiveButton.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ContentType", "api_method_name": "NOTIFICATION_CONTENT_BASIC_TEXT", "api_method_all": "NOTIFICATION_CONTENT_BASIC_TEXT,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 288, "since": 0, "api_used": "\u662f", "lines": [" notify.ContentType.NOTIFICATION_CONTENT_BASIC_TEXT,\n                no"], "files": ["publishIcon.js", "getAllActive.js", "ExampleJsunit.test.js", "ActsAnsNotificationCancel.test.js", "activeotherapp.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "ActsAnsRemoveGroup.js", "actsansdistributedtest.js", "getActive.js", "publish.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ContentType", "api_method_name": "NOTIFICATION_CONTENT_LONG_TEXT", "api_method_all": "NOTIFICATION_CONTENT_LONG_TEXT,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 16, "since": 0, "api_used": "\u662f", "lines": ["ication.ContentType.NOTIFICATION_CONTENT_LONG_TEXT,\n                lo", " notify.ContentType.NOTIFICATION_CONTENT_LONG_TEXT,\n                  ", " notify.ContentType.NOTIFICATION_CONTENT_LONG_TEXT,\n                lo"], "files": ["ActsAnsPublishInput.js", "ExampleJsunit.test.js", "publish.js", "ActiveButton.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ContentType", "api_method_name": "NOTIFICATION_CONTENT_PICTURE", "api_method_all": "NOTIFICATION_CONTENT_PICTURE,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 8, "since": 0, "api_used": "\u662f", "lines": ["ication.ContentType.NOTIFICATION_CONTENT_PICTURE,\n                mu", " notify.ContentType.NOTIFICATION_CONTENT_PICTURE,\n                  ", " notify.ContentType.NOTIFICATION_CONTENT_PICTURE,\n                mu", "ication.ContentType.NOTIFICATION_CONTENT_PICTURE,\n                  "], "files": ["publish.js", "ExampleJsunit.test.js", "publishImage.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ContentType", "api_method_name": "NOTIFICATION_CONTENT_CONVERSATION", "api_method_all": "NOTIFICATION_CONTENT_CONVERSATION,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["(notify.ContentType.NOTIFICATION_CONTENT_CONVERSATION);\n        expect(da", " notify.ContentType.NOTIFICATION_CONTENT_CONVERSATION,\n                co"], "files": ["ActsAnsPublishConversation.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ContentType", "api_method_name": "NOTIFICATION_CONTENT_MULTILINE", "api_method_all": "NOTIFICATION_CONTENT_MULTILINE,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 8, "since": 0, "api_used": "\u662f", "lines": [" notify.ContentType.NOTIFICATION_CONTENT_MULTILINE,\n                mu", "ication.ContentType.NOTIFICATION_CONTENT_MULTILINE,\n                  ", "ication.ContentType.NOTIFICATION_CONTENT_MULTILINE,\n                mu"], "files": ["publish.js", "ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SlotLevel", "api_method_all": "export enum SlotLevel {\n    \n    LEVEL_NONE = 0,\n\n    \n    LEVEL_MIN = 1,\n\n    \n    LEVEL_LOW = 2,\n\n    \n    LEVEL_DEFAULT = 3,\n\n    \n    LEVEL_HIGH = 4,\n  }", "api_method_name": "SlotLevel", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 90, "since": 0, "api_used": "\u662f", "lines": ["tEqual(notification.SlotLevel.LEVEL_DEFAULT);\n   ", "tEqual(notification.SlotLevel.LEVEL_NONE);\n      ", "level: notification.SlotLevel.LEVEL_HIGH,\n       ", "level: notification.SlotLevel.LEVEL_MIN,\n        ", "level: notification.SlotLevel.LEVEL_DEFAULT,\n    ", "level: notification.SlotLevel.LEVEL_LOW,\n        ", "level: notification.SlotLevel.LEVEL_NONE,\n       ", "tEqual(notification.SlotLevel.LEVEL_MIN);\n       ", "tEqual(notification.SlotLevel.LEVEL_LOW);\n       "], "files": ["ExampleJsunit.test.js", "doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SlotLevel", "api_method_name": "LEVEL_NONE", "api_method_all": "LEVEL_NONE = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 26, "since": 0, "api_used": "\u662f", "lines": ["ification.SlotLevel.LEVEL_NONE,\n                de", "ification.SlotLevel.LEVEL_NONE,\n                  ", "ification.SlotLevel.LEVEL_NONE);\n            expec", "ification.SlotLevel.LEVEL_NONE);\n                e", "el:notify.SlotLevel.LEVEL_NONE,\n            desc:\"", "ification.SlotLevel.LEVEL_NONE);\n        expect(da", "ification.SlotLevel.LEVEL_NONE);\n                 "], "files": ["ExampleJsunit.test.js", "doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SlotLevel", "api_method_name": "LEVEL_MIN", "api_method_all": "LEVEL_MIN = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 18, "since": 0, "api_used": "\u662f", "lines": ["ification.SlotLevel.LEVEL_MIN,\n                de", "ification.SlotLevel.LEVEL_MIN,\n                  ", "ification.SlotLevel.LEVEL_MIN);\n            expec", "ification.SlotLevel.LEVEL_MIN);\n                 ", "ification.SlotLevel.LEVEL_MIN);\n                e", "ification.SlotLevel.LEVEL_MIN);\n        expect(da"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SlotLevel", "api_method_name": "LEVEL_LOW", "api_method_all": "LEVEL_LOW = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 18, "since": 0, "api_used": "\u662f", "lines": ["ification.SlotLevel.LEVEL_LOW);\n            expec", "ification.SlotLevel.LEVEL_LOW,\n                  ", "ification.SlotLevel.LEVEL_LOW);\n        expect(da", "ification.SlotLevel.LEVEL_LOW);\n                 ", "ification.SlotLevel.LEVEL_LOW,\n                de", "ification.SlotLevel.LEVEL_LOW);\n                e"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SlotLevel", "api_method_name": "LEVEL_DEFAULT", "api_method_all": "LEVEL_DEFAULT = 3,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 26, "since": 0, "api_used": "\u662f", "lines": ["ification.SlotLevel.LEVEL_DEFAULT,\n                de", "ification.SlotLevel.LEVEL_DEFAULT);\n        expect(da", "ification.SlotLevel.LEVEL_DEFAULT);\n                e", "ification.SlotLevel.LEVEL_DEFAULT);\n            expec", "ification.SlotLevel.LEVEL_DEFAULT,\n                  ", "ification.SlotLevel.LEVEL_DEFAULT);\n                 "], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SlotLevel", "api_method_name": "LEVEL_HIGH", "api_method_all": "LEVEL_HIGH = 4,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["ification.SlotLevel.LEVEL_HIGH,\n                de"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleOption", "api_method_all": "export interface BundleOption {\n    bundle: string;\n    uid?: number;\n  }", "api_method_name": "BundleOption", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 112, "since": 8, "api_used": "\u662f", "lines": ["OnConsumeRemoveAllByBundleOptionNullUid + 1\n        ", "leOption,removeAllByBundleOptionCallBackNullUid);\n  ", "leOption,removeAllByBundleOptionCallBackWrongUid);\n ", "OnConsumeRemoveAllByBundleOptionNullUid == 2){\n     ", " onCancelRemoveAllByBundleOption(data) {\n        tim", "fOnCancelRemoveAllByBundleOption = timesOfOnCancelRe", "leOption,removeAllByBundleOptionCallBackWrongBundleC", "onConsumeRemoveAllByBundleOptionNullCharacterBundleC", "onConsumeRemoveAllByBundleOptionNullUid,\n           ", "function removeAllByBundleOptionCallBackWrongBundleC", "onConsumeRemoveAllByBundleOptionWrongUid,\n          ", "fOnCancelRemoveAllByBundleOption + 1\n        console", "onConsumeRemoveAllByBundleOption,\n            onCanc", "fOnCancelRemoveAllByBundleOption == 2){\n            ", ":onCancelRemoveAllByBundleOptionNullUid,\n        }\n ", "information through BundleOption Correct bundle, wro", "OnConsumeRemoveAllByBundleOption == 2){\n            ", "OnConsumeRemoveAllByBundleOption + 1\n        console", "e removeAll(bundle: BundleOption, callback: AsyncCal", "onConsumeRemoveAllByBundleOptionNullUid(data) {\n    ", "OnConsumeRemoveAllByBundleOptionNullUid = timesOfOnC", "OnConsumeRemoveAllByBundleOptionNullUid = 0\n        ", " onCancelRemoveAllByBundleOptionWrongUid(data) {\n   ", ": removeAll(bundle: BundleOption, callback: AsyncCal", "onConsumeRemoveAllByBundleOption(data) {\n        tim", "fOnCancelRemoveAllByBundleOption\n    function onCanc", "fOnCancelRemoveAllByBundleOption == 1){\n            ", "OnConsumeRemoveAllByBundleOption = 0\n        let sub", ":onCancelRemoveAllByBundleOptionWrongUid,\n        }\n", "information through BundleOption Correct bundle, 0 u", "onConsumeRemoveAllByBundleOptionWrongBundleCorrectUi", ":onCancelRemoveAllByBundleOption,\n        }\n        ", "function removeAllByBundleOptionCallBackNullUid(err)", " onCancelRemoveAllByBundleOptionNullUid(data) {\n    ", "leOption,removeAllByBundleOptionCallBack);\n         ", "OnConsumeRemoveAllByBundleOption = timesOfOnConsumeR", "function removeAllByBundleOptionCallBackWrongUid(err", "information through BundleOption wrong bundle, corre", "function removeAllByBundleOptionCallBack(data) {\n   ", "onConsumeRemoveAllByBundleOptionWrongUid(data) {\n   ", ":onCancelremoveAllByBundleOptionwrongBundleCorrectUi", " onCancelremoveAllByBundleOptionwrongBundleCorrectUi", "OnConsumeRemoveAllByBundleOptionNullUid\n    function", "fOnCancelRemoveAllByBundleOption = 0\n        timesOf", "OnConsumeRemoveAllByBundleOption\n    function onCons"], "files": ["ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleOption", "api_method_name": "bundle", "api_method_all": "bundle: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 562, "since": 8, "api_used": "\u662f", "lines": ["ion = {\n            bundle:\"wrongBundleName\",\n", "@tc.name: removeAll(bundle: BundleOption, call", "undleOption Correct bundle, 0 uid.\n     */\n   ", "undleOption Correct bundle, wrong uid.\n     */", "   notify.removeAll(bundleOption,removeAllByBu", "@tc.name: removeAll(bundle?: BundleOption): Pr", "tion null character bundle, correct uid.\n     ", " that the removeAll(bundle?: BundleOption): Pr", "interface removeAll(bundle?: BundleOption): Pr", "ion = {\n            bundle:data.request.creato", " BundleOption wrong bundle, wrong uid.\n     */", "interface removeAll(bundle: BundleOption, call", "ion = {\n            bundle:\"\",\n            uid", "data));\n        let bundleOption = {\n         ", "tion null character bundle, wrong uid.\n     */", " BundleOption wrong bundle, correct uid.\n     ", " that the removeAll(bundle: BundleOption, call"], "files": ["ExampleJsunit.test.js", "ActsSubscriber_test_unorder.js", "BadgeDisplay.js", "EnableNotification.js", "ActsSubscriber_test_ordered.js", "ActsAnsCancelGroup.js", "Subscriber.js", "ActsAnsPublishInput.js", "ActsAnsRemoveGroup.js", "WantAgent.test.js", "actsansdistributedtest.js", "index.js", "ActiveButton.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "BundleOption", "api_method_name": "uid", "api_method_all": "uid?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 25, "since": 0, "api_used": "\u662f", "lines": ["acter bundle, wrong uid.\n     */\n    it('AN", "eName\",\n            uid:0,\n        }\n      ", "dle:\"\",\n            uid:data.request.creato", "ificationChanged001 uid===>\"+JSON.stringify", "eName\",\n            uid:123456789,\n        ", "JSON.stringify(data.uid))\n            conso", "JSON.stringify(data.uid)).assertEqual(\"4542", "ong bundle, correct uid.\n     */\n    it('AN", "n Correct bundle, 0 uid.\n     */\n    it('AN", "leName,\n            uid:123456789\n        }", "wrong bundle, wrong uid.\n     */\n    it('AN", "eName\",\n            uid:data.request.creato", "leName,\n            uid:data.request.creato", "dle:\"\",\n            uid:123456789,\n        ", "ter bundle, correct uid.\n     */\n    it('AN", "rrect bundle, wrong uid.\n     */\n    it('AN", "leName,\n            uid:0,\n        }\n      "], "files": ["actsansdistributedtest.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationKey", "api_method_all": "export interface NotificationKey {\n    id: number;\n    label?: string;\n  }", "api_method_name": "NotificationKey", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 70, "since": 0, "api_used": "\u662f", "lines": ["ion OnCancelRemoveByNotificationKeyWrongBundle(data) {\n", "ion onCancelRemoveByNotificationKeyPromise(data) {\n    ", "ion onCancelRemoveByNotificationKeyWrongBundlePromise(d", "cel:onCancelRemoveByNotificationKeyPromise,\n        }\n ", "on OnConsumeRemoveByNotificationKeyWrongBundle(data) {\n", "cel:onCancelRemoveByNotificationKey,\n        }\n        ", "   function removeByNotificationKey2Times2CB(err,data) ", "on onConsumeRemoveByNotificationKeyWrongBundlePromise(d", "   function removeByNotificationKey2Times1CB(err,data) ", "ficationKey,removeByNotificationKeyCB);\n        console", "nd\n     *           NotificationKey correct bundleOptio", "on onConsumeRemoveByNotificationKeyWrongKeyPromise(data", "nd\n     *           NotificationKey wrong bundleOption,", "me:onConsumeRemoveByNotificationKeyWrongBundlePromise,\n", "cel:onCancelRemoveByNotificationKeyWrongBundlePromise,\n", "on onConsumeRemoveByNotificationKeyWrongKey(data) {\n   ", "ion onCancelRemoveByNotificationKey(data) {\n        con", "cel:onCancelRemoveByNotificationKeyWrongKey,\n        }\n", "me:onConsumeRemoveByNotificationKeyWrongKey,\n          ", "   function removeByNotificationKeyCBWrongBundle(err, d", "me:onConsumeRemoveByNotificationKey,\n            onCanc", "n, notificationKey: NotificationKey): Promise<void>\n   ", "ion onCancelRemoveByNotificationKeyWrongKeyPromise(data", "ficationKey,removeByNotificationKeyCBWrongBundle);\n    ", "n, notificationKey: NotificationKey, callback: AsyncCal", "n, notificationKey: NotificationKey): Promise<void>;\n  ", "ion onCancelRemoveByNotificationKeyWrongKey(data) {\n   ", "on onConsumeRemoveByNotificationKeyPromise(data) {\n    ", "gh BundleOption and NotificationKey correct\n     *     ", "cel:onCancelRemoveByNotificationKeyWrongKeyPromise,\n   ", "cel:OnCancelRemoveByNotificationKeyWrongBundle,\n       ", "me:onConsumeRemoveByNotificationKeyWrongKeyPromise,\n   ", "me:onConsumeRemoveByNotificationKeyPromise,\n           ", "nd\n     *           NotificationKey\n     */\n    it('ANS", "me:OnConsumeRemoveByNotificationKeyWrongBundle,\n       ", "   function removeByNotificationKeyCBWrongKey(err, data", "n, notificationKey: NotificationKey):\n     *           ", "n, notificationKey: NotificationKey,\n     *           c", "ficationKey,removeByNotificationKeyCBWrongKey);\n       ", "   function removeByNotificationKeyCB(err, data) {\n    ", "gh BundleOption and NotificationKey\n     */\n    it('ANS", "on onConsumeRemoveByNotificationKey(data) {\n        con"], "files": ["ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationKey", "api_method_name": "id", "api_method_all": "id: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 967, "since": 8, "api_used": "\u662f", "lines": ["cancel(data.request.id,cancelCallBackCance", "     },\n            id: 11,\n            sl", "1200 = data.request.id\n        notify.canc", "t);\n    })\n\n    let id1200\n    function on", "expect(data.request.id).assertEqual(5);\n  ", "     },\n            id: 13,\n            sl", "     },\n            id: 2,\n            slo", "ncel_1100 onConsume id: ==================", "ncel_1400 onConsume id:===================", "     },\n            id: 9,\n            slo", "expect(data.request.id).assertEqual(6);\n  ", "==>' + data.request.id);\n            notif", "expect(data.request.id).assertEqual(12);\n ", "==>' + data.request.id);\n        id1200 = ", "ncel_1000 onConsume id:================>' ", "ncel_1200 onConsume id:===================", "expect(data.request.id).assertEqual(13);\n ", "tend({\n            'id': 'extend'\n        ", "==>' + data.request.id);\n        notify.ca", "expect(data.request.id).assertEqual(7);\n  ", "ncel_1300 onConsume id: ==============>' +", "     },\n            id: 8,\n            slo", "     },\n            id: 12,\n            sl", "ancel_1100 onCancel id:================>' ", "==>' + data.request.id);\n        expect(da", "     },\n            id: 6,\n            slo", "expect(data.request.id).assertEqual(8);\n  ", "expect(data.request.id).assertEqual(2);\n  ", "     },\n            id: 1,\n            slo", "expect(data.request.id).assertEqual(11);\n ", "equest.id);\n        id1200 = data.request.", "cancel(data.request.id, data.request.label", "     },\n            id: 5,\n            slo", "      notify.cancel(id1200, cancelCallBack", "expect(data.request.id).assertEqual(0);\n  ", "ancel_1300 onCancel id:============>' + da", "expect(data.request.id).assertEqual(9);\n  ", "     },\n            id: 10,\n            sl", "     },\n            id: 7,\n            slo", "ancel_1200 onCancel id:===================", "expect(data.request.id).assertEqual(1);\n  "], "files": ["publishIcon.js", "getAllActive.js", "activeotherapp.js", "EmitterTest.js", "Subscriber.js", "ExampleJsunit.test.js", "ActsAnsPublishInput.js", "WantAgent.test.js", "ActsAnsPublishConversation.js", "getActive.js", "ActiveButton.js", "ActsAnsNotificationCancel.test.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "publishImage.js", "ActsAnsRemoveGroup.js", "index.js", "publish.js", "ActsAnsNotificationRemove.test.js", "actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationKey", "api_method_name": "label", "api_method_all": "label?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 447, "since": 0, "api_used": "\u662f", "lines": ["face is called, the label is wrong and the ID", "st.id, data.request.label)\n        console.in", "ancel_1300 onCancel label:============>' + da", ": true,\n            label: '0500',\n          ", "expect(data.request.label).assertEqual('1400'", "ncel_1400 onConsume label:================>' ", ": true,\n            label: '1500',\n          ", ": true,\n            label: '1000',\n          ", "st.id, data.request.label);\n        console.i", " cancel(id: number, label?: string): Promise<", "ncel_1200 onConsume label:===================", "expect(data.request.label).assertEqual('1300'", ": true,\n            label: '0800',\n          ", " cancel(id: number, label: string, callback: ", ": true,\n            label: '0100_1',\n        ", "ncel_1300 onConsume label: ===========>' + da", "expect(data.request.label).assertEqual('1600'", "ncel_1500 onConsume label:===================", "ncel_1100 onConsume label:==============>' + ", ": true,\n            label: '1400',\n          ", "ncel_1000 onConsume label:=============>' + d", "st.id, data.request.label, cancelCallBackCanc", "ancel_1600 onCancel label : =================", ": true,\n            label: '0600',\n          ", ": true,\n            label: '1600',\n          ", "ancel_1400 onCancel label:================>' ", "ncel_1700 onConsume label:==============>' + ", "expect(data.request.label).assertEqual('1500'", "ancel_1500 onCancel label : =================", ": true,\n            label: '0700',\n          ", "==>' + data.request.label);\n        console.i", ": true,\n            label: '1300',\n          ", "ncel_1600 onConsume label:=================>'", ": true,\n            label: '0100_2',\n        ", ": true,\n            label: '0200',\n          "], "files": ["publishIcon.js", "getAllActive.js", "ExampleJsunit.test.js", "ActsAnsNotificationCancel.test.js", "activeotherapp.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "Subscriber.js", "ActsAnsRemoveGroup.js", "actsansdistributedtest.js", "getActive.js", "publish.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DoNotDisturbType", "api_method_all": "export enum DoNotDisturbType {\n    \n    TYPE_NONE = 0,\n\n    \n    TYPE_ONCE = 1,\n\n    \n    TYPE_DAILY = 2,\n\n    \n    TYPE_CLEARLY = 3,\n  }", "api_method_name": "DoNotDisturbType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 46, "since": 8, "api_used": "\u662f", "lines": ["        type:notify.DoNotDisturbType.TYPE_NONE,\n        ", "        type:notify.DoNotDisturbType.TYPE_DAILY,\n       ", "        type:notify.DoNotDisturbType.TYPE_CLEARLY ,\n    ", "        type:notify.DoNotDisturbType.TYPE_CLEARLY,\n     ", "        type:notify.DoNotDisturbType.TYPE_ONCE,\n        "], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DoNotDisturbType", "api_method_name": "TYPE_NONE", "api_method_all": "TYPE_NONE = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 24, "since": 0, "api_used": "\u662f", "lines": ["fy.DoNotDisturbType.TYPE_NONE,\n                  ", "fy.DoNotDisturbType.TYPE_NONE,\n                be", "fy.DoNotDisturbType.TYPE_NONE,\n            begin:"], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DoNotDisturbType", "api_method_name": "TYPE_ONCE", "api_method_all": "TYPE_ONCE = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["fy.DoNotDisturbType.TYPE_ONCE,\n            begin:"], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DoNotDisturbType", "api_method_name": "TYPE_DAILY", "api_method_all": "TYPE_DAILY = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 8, "since": 0, "api_used": "\u662f", "lines": ["fy.DoNotDisturbType.TYPE_DAILY,\n            begin:"], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DoNotDisturbType", "api_method_name": "TYPE_CLEARLY", "api_method_all": "TYPE_CLEARLY = 3,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 12, "since": 0, "api_used": "\u662f", "lines": ["fy.DoNotDisturbType.TYPE_CLEARLY,\n            begin:", "fy.DoNotDisturbType.TYPE_CLEARLY ,\n            begin"], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DoNotDisturbDate", "api_method_all": "export interface DoNotDisturbDate {\n    \n    type: DoNotDisturbType;\n\n    \n    begin: Date;\n\n    \n    end: Date;\n  }", "api_method_name": "DoNotDisturbDate", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 118, "since": 8, "api_used": "\u662f", "lines": ["          notify.getDoNotDisturbDate().then((data)=>{\n  ", "          notify.getDoNotDisturbDate().then(async(data)=", "g(\"===>test_0300 getDoNotDisturbDate===>\"+err.code+JSON.", ")\n        notify.setDoNotDisturbDate({\n            type:", "g(\"===>test_1000 getDoNotDisturbDate===>\"+JSON.stringify", "    await notify.getDoNotDisturbDate(async (err,data)=>{", "    await notify.getDoNotDisturbDate(async(err,data)=>{\n", "    await notify.getDoNotDisturbDate((err,data) => {\n   ", "g(\"===>test_1100 getDoNotDisturbDate===>\"+err.code+JSON.", " {\n       notify.getDoNotDisturbDate().then((promise)=>{", "console.log(\"===>getDoNotDisturbDate beginDate===>\"+data", "    await notify.setDoNotDisturbDate({\n                t", "g(\"===>test_0700 getDoNotDisturbDate===>\"+JSON.stringify", "    await notify.setDoNotDisturbDate({\n            type:", "g(\"===>test_1300 getDoNotDisturbDate success===>\"+err.co", "g(\"===>test_1200 getDoNotDisturbDate fail===>\"+JSON.stri", "    await notify.setDoNotDisturbDate({\n                 ", "    await notify.getDoNotDisturbDate((err,data)=>{\n     ", "g(\"===>test_1400 getDoNotDisturbDate===>\"+err.code+JSON.", "g(\"===>test_1200 getDoNotDisturbDate===>\"+err.code+JSON.", "          notify.getDoNotDisturbDate(async(err,data)=>{\n", "g(\"===>test_0400 getDoNotDisturbDate===>\"+JSON.stringify", "console.log(\"===>getDoNotDisturbDate DoNotDateE===>\"+DoN", "g(\"===>test_0900 getDoNotDisturbDate===>\"+JSON.stringify", "g(\"===>test_0500 getDoNotDisturbDate===>\"+err.code+JSON.", "console.log(\"===>getDoNotDisturbDate endDate===>\"+data.e"], "files": ["doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DoNotDisturbDate", "api_method_name": "type", "api_method_all": "type: DoNotDisturbType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 483, "since": 8, "api_used": "\u662f", "lines": ["ef = Object.getPrototypeOf(global) || global", "     expect(data[0].type).assertEqual(2)\n   ", "     expect(data[0].type).assertEqual(65535)", "        expect(data.type).assertEqual(notifi", "     expect(data[0].type).assertEqual(1)\n   ", "  {\n                type: notification.SlotT", "     expect(data[0].type).assertEqual(3)\n   "], "files": ["ExampleJsunit.test.js", "BadgeDisplay.js", "EnableNotification.js", "doNotDisturbTest.js", "ActsAnsPublishInput.js", "WantAgent.test.js", "index.js", "ActiveButton.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DoNotDisturbDate", "api_method_name": "begin", "api_method_all": "begin: Date", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 342, "since": 8, "api_used": "\u662f", "lines": ["                    beginDate.getHours()+8,\n ", "E_NONE,\n            begin:beginDate,\n        ", "eButton_test_0700===begin===>\");\n\n        var", "eButton_test_0400===begin===>\");\n\n        var", "                    begin:beginDate,\n        ", "                    beginDate.getMonth(),\n   ", " endDate = new Date(beginDate.getFullYear(),\n", "eButton_test_0300===begin===>\");\n\n        var", "     expect(promise.begin.toString()).assertE", "              begin:beginDate,\n              ", "beginDate===>\"+data.begin)\n                co", "                    beginDate.getMinutes())\n ", "                    beginDate.getMinutes()+20", "        expect(data.begin.toString()).assertE", "done) {\n        var beginDate = new Date()\n  ", "                    beginDate.getHours(),\n   ", ",\n            begin:beginDate,\n            en", "getDoNotDisturbDate beginDate===>\"+data.begin", "scriber_test_0100===begin===>\");\n\n        var", "eButton_test_0500===begin===>\");\n\n        var", "shImage_test_0400===begin===>\");\n        Buff", "E_ONCE,\n            begin:beginDate,\n        ", "shImage_test_0300===begin===>\");\n        Buff", "eButton_test_0600===begin===>\");\n\n        var", "                    beginDate.getDate(),\n    ", "shImage_test_0200===begin===>\");\n\n        var", "NotDateE = new Date(beginDate.getFullYear(),\n", "eButton_test_0100===begin===>\");\n        var ", "eButton_test_0200===begin===>\");\n        var "], "files": ["doNotDisturbTest.js", "Subscriber.js", "publishImage.js", "WantAgent.test.js", "ActiveButton.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DoNotDisturbDate", "api_method_name": "end", "api_method_all": "end: Date", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 998, "since": 8, "api_used": "\u662f", "lines": ["1100 cancelCallBack end===================>", "0900 cancelCallBack end==================>'", "ncel_1200 onConsume end====================", "ancel_0100 onCancel end====================", "ancel_1000 onCancel end===============>');\n", "ncel_0500 onConsume end====================", "ancel_0900 onCancel end================>');", "ncel_0900 onConsume end================>');", "ncel_0800 onConsume end===============>');\n", "ancel_0700 onCancel end====================", "e cancelAll 2times2 end======>');\n        c", "0 cancelAllCallBack end===============>');\n", "ancel_1100 onCancel end====================", "ancel_1200 onCancel end====================", "ancel_0500 onCancel end===============>');\n", "ancel_0400 onCancel end===============>');\n", "ncel_0600 onConsume end========>');\n    }\n ", "          'id': 'extend'\n        })\n       ", "ncel_0400 onConsume end===========>');\n    ", "ancel_0600 onCancel end=============>');\n  ", "1000 cancelCallBack end=================>')", "     const expectExtend = new ExpectExtend(", "ncel_1100 onConsume end====================", "ncel_0300 onConsume end====================", "('expect', expectExtend)\n        core.init(", "500 publish promise end==============>');\n ", "cancelAllCallBack1  end===========>');\n    ", "ancel_0200 onCancel end====================", "0 cancelAllCallBack end================>');", "Timeout unsubscribe end==================>'", "ncel_0200 onConsume end===============>');\n", "ort {Core, ExpectExtend} from 'deccjsunit/i", "ncel_0700 onConsume end============>');\n   ", "tend = new ExpectExtend({\n            'id':", "e cancelAll 2times1 end======>');\n        n", "ancel_0800 onCancel end================>');", " cancelAllCallBack2 end===============>');\n", "0 cancelAllCallBack end====================", "ncel_1000 onConsume end============>');\n   ", "ncel_0100 onConsume end====================", "ancel_0300 onCancel end================>');"], "files": ["ExampleJsunit.test.js", "getAllActive.js", "ActsSubscriber_test_unorder.js", "ActsAnsNotificationCancel.test.js", "activeotherapp.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "Subscriber.js", "ActsAnsPublishInput.js", "ActsAnsRemoveGroup.js", "getActive.js", "ActsAnsPublishConversation.js", "index.js", "publish.js", "ActiveButton.js", "ActsAnsNotificationRemove.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceRemindType", "api_method_all": "export enum DeviceRemindType {\n    \n    IDLE_DONOT_REMIND = 0,\n\n    \n    IDLE_REMIND = 1,\n\n    \n    ACTIVE_DONOT_REMIND = 2,\n\n    \n    ACTIVE_REMIND = 3,\n  }", "api_method_name": "DeviceRemindType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 9, "since": 8, "api_used": "\u662f", "lines": ["\t\t&& data != notify.DeviceRemindType.ACTIVE_REMIND )\n\t\t\t", "emindType != notify.DeviceRemindType.ACTIVE_DONOT_REMIND", "\tif (data != notify.DeviceRemindType.IDLE_DONOT_REMIND \n", "emindType != notify.DeviceRemindType.IDLE_REMIND\n\t\t\t\t&& ", "emindType != notify.DeviceRemindType.ACTIVE_REMIND )\t\t\n\t", "    await notify.getDeviceRemindType((err,data) => {\n   ", "emindType != notify.DeviceRemindType.IDLE_DONOT_REMIND \n", "\t\t&& data != notify.DeviceRemindType.IDLE_REMIND\n\t\t\t\t&& ", "\t\t&& data != notify.DeviceRemindType.ACTIVE_DONOT_REMIND"], "files": ["actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceRemindType", "api_method_name": "IDLE_DONOT_REMIND", "api_method_all": "IDLE_DONOT_REMIND = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["fy.DeviceRemindType.IDLE_DONOT_REMIND \n\t\t\t\t&& data.reques", "fy.DeviceRemindType.IDLE_DONOT_REMIND \n\t\t\t\t&& data != not"], "files": ["actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceRemindType", "api_method_name": "IDLE_REMIND", "api_method_all": "IDLE_REMIND = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["fy.DeviceRemindType.IDLE_REMIND\n\t\t\t\t&& data != noti", "fy.DeviceRemindType.IDLE_REMIND\n\t\t\t\t&& data.request"], "files": ["actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceRemindType", "api_method_name": "ACTIVE_DONOT_REMIND", "api_method_all": "ACTIVE_DONOT_REMIND = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["fy.DeviceRemindType.ACTIVE_DONOT_REMIND\n\t\t\t\t&& data != noti", "fy.DeviceRemindType.ACTIVE_DONOT_REMIND\n\t\t\t\t&& data.request"], "files": ["actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "DeviceRemindType", "api_method_name": "ACTIVE_REMIND", "api_method_all": "ACTIVE_REMIND = 3,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["fy.DeviceRemindType.ACTIVE_REMIND )\n\t\t\t\t{\n\t\t\t\t\texpect", "fy.DeviceRemindType.ACTIVE_REMIND )\t\t\n\t\t\t\t{\n\t\t\t\t\texpe"], "files": ["actsansdistributedtest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SourceType", "api_method_all": "export enum SourceType {\n    \n    TYPE_NORMAL = 0,\n\n    \n    TYPE_CONTINUOUS = 1,\n\n    \n    TYPE_TIMER = 2,\n  }", "api_method_name": "SourceType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SourceType", "api_method_name": "TYPE_NORMAL", "api_method_all": "TYPE_NORMAL = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SourceType", "api_method_name": "TYPE_CONTINUOUS", "api_method_all": "TYPE_CONTINUOUS = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SourceType", "api_method_name": "TYPE_TIMER", "api_method_all": "TYPE_TIMER = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}