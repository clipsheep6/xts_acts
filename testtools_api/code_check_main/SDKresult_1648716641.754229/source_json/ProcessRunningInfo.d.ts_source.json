{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\application\\ProcessRunningInfo", "api": [{"api_class_name": "ProcessRunningInfo", "api_method_all": "export interface ProcessRunningInfo {\r\n    \r\n     pid: number;\r\n\r\n     \r\n     uid: number;\r\n\r\n     \r\n     processName: string;\r\n\r\n     \r\n     bundleNames: Array<string>;\r\n}", "api_method_name": "ProcessRunningInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 66, "since": 8, "api_used": "\u662f", "lines": ["await appManager.getProcessRunningInfos()\n        console.", "thAccountFA_0300 getProcessRunningInfos ======> '\n        ", "ts_Ams_test_0200 getProcessRunningInfo[' + i + \"]: \" + JSO", "untFA_0700 ==1== getProcessRunningInfos ======> '\n        ", "ts_Ams_test_3400 getProcessRunningInfo[' + i + \"]: \" + JSO", "thAccountFA_0400 getProcessRunningInfos =1= ======> '\n    ", "await appManager.getProcessRunningInfos()\n                ", "ts_Ams_test_5000 getProcessRunningInfo[' + i + \"]: \" + JSO", "await appManager.getProcessRunningInfos();\n        console", "untFA_0400 ==1== getProcessRunningInfos ======> '\n        ", "      appManager.getProcessRunningInfos(\n            (erro", "thAccountFA_0100 getProcessRunningInfos ======> '\n        ", "ts_Ams_test_6600 getProcessRunningInfo[' + i + \"]: \" + JSO", "ts_Ams_test_3300 getProcessRunningInfos JSON String: ' + J", "untFA_0300 ==1== getProcessRunningInfos ======> '\n        ", "thAccountFA_0300 getProcessRunningInfos =1= ======> '\n    ", "untFA_0400 ==2== getProcessRunningInfos ======>'\n         ", "await appManager.getProcessRunningInfos()\n            cons", "untFA_0100 ==1== getProcessRunningInfos ======> '\n        ", "ts_Ams_test_3300 getProcessRunningInfo[' + i + \"]: \" + JSO", "ts_Ams_test_1800 getProcessRunningInfos error.code \\\n     ", "ts_Ams_test_0100 getProcessRunningInfo[' + i + \"]: \" + JSO", "ts_Ams_test_5000 getProcessRunningInfos error.code \\\n     ", "await appManager.getProcessRunningInfos();\n        expect(", "thAccountFA_0700 getProcessRunningInfos =1= ======> '\n    ", "ts_Ams_test_1700 getProcessRunningInfo[' + i + \"]: \" + JSO", "ts_Ams_test_1800 getProcessRunningInfo[' + i + \"]: \" + JSO", "untFA_0500 ==1== getProcessRunningInfos ======> '\n        ", "thAccountFA_0500 getProcessRunningInfos ======> '\n        ", "ts_Ams_test_3400 getProcessRunningInfos error.code \\\n     ", "ts_Ams_test_6600 getProcessRunningInfos error.code \\\n     ", "ts_Ams_test_0200 getProcessRunningInfos error.code \\\n     "], "files": ["MangerAbilityJsunit.test.js", "ActsKillProcessTest.test.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ProcessRunningInfo", "api_method_name": "pid", "api_method_all": "pid: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 39, "since": 8, "api_used": "\u662f", "lines": ["JSON.stringify(list.pid))\n        expect(li", "     expect(data[i].pid > 0).assertTrue();\n", "        expect(list.pid > 0).assertTrue()\n ", "     expect(data[0].pid > 0).assertTrue();\n", "expect(typeof (info.pid)).assertEqual(\"numb", "ect(typeof (info[i].pid)).assertEqual(\"numb", "g(\"checkProcessInfo pid : \" + info.pid);\n\n ", "     expect(info[i].pid).assertLarger(0);\n\n", "console.log('==list.pid==>' + JSON.stringif", " expect(dataInfo[i].pid).assertLarger(500);", "Info pid : \" + info.pid);\n\n        expect(t", "ons = {\n            pid :0,\n            uid"], "files": ["Getactive.test.js", "MangerAbilityJsunit.test.js", "startFULL.test.js", "FeatureAbilityJsunit.test.js", "ContextJsunit.test.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ProcessRunningInfo", "api_method_name": "uid", "api_method_all": "uid: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 45, "since": 8, "api_used": "\u662f", "lines": ["      uid :datainfo.uid\n        }\n        v", "     expect(data[0].uid > 0).assertTrue();\n", " expect(dataInfo[i].uid).assertLarger(2000)", "\n        expect(app.uid > 0).assertTrue();\n", "console.log('==list.uid==>' + JSON.stringif", "JSON.stringify(list.uid))\n    }\n\n    functi", "     expect(data[i].uid > 0).assertTrue();\n", "      uid :datainfo.uid\n        }\n        c", "        expect(list.uid > 0).assertTrue()\n ", "ect(typeof (info[i].uid)).assertEqual(\"numb", "     expect(info[i].uid).assertLarger(0);\n ", " expect(dataInfo[i].uid).assertLarger(10000", "pid :0,\n            uid :datainfo.uid\n     "], "files": ["MangerAbilityJsunit.test.js", "startFULL.test.js", "ContextJsunit.test.js", "ActsProcessManageJsTest.test.js", "Getactive.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ProcessRunningInfo", "api_method_name": "processName", "api_method_all": "processName: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 44, "since": 8, "api_used": "\u662f", "lines": ["g(\"checkProcessName processName : \" + info);\n      ", "     expect(data[0].processName !=  null).assertTru", "        expect(info.processName).assertEqual(\"proce", "g(\"checkProcessInfo processName : \" + info.processN", "    if (dataInfo[i].processName == name) {\n        ", "Infos(processInfos, processName) {\n        for (var", "expect(typeof (info.processName)).assertEqual(\"stri", "     expect(info[i].processName.length).assertLarge", "ect(typeof (info[i].processName)).assertEqual(\"stri", "     expect(data[i].processName !=  null).assertTru", "s[i].processName == processName) {\n                ", "if (processInfos[i].processName == systemAMultiProc", "if (processInfos[i].processName == processName) {\n ", "if (processInfos[i].processName == systemAProcessNa", "cessName : \" + info.processName);\n        console.l", "Infos(processInfos, processName));\n                ", "ckPromiseExistDelay(processName) {\n        return n"], "files": ["MangerAbilityJsunit.test.js", "FeatureAbilityJsunit.test.js", "ActsKillProcessTest.test.js", "ActsProcessManageJsTest.test.js", "Getactive.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ProcessRunningInfo", "api_method_name": "bundleNames", "api_method_all": "bundleNames: Array<string>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 24, "since": 0, "api_used": "\u662f", "lines": ["     expect(data[0].bundleNames !=  null).assertTru", "     expect(data[i].bundleNames !=  null).assertTru", "ray.isArray(info[i].bundleNames)).assertEqual(true)", "     expect(info[i].bundleNames.length).assertEqual"], "files": ["MangerAbilityJsunit.test.js", "Getactive.test.js"], "is_white": " ", "desc": " "}]}