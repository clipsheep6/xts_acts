{"subsystem_ch": "\u7535\u8bdd\u670d\u52a1\u5b50\u7cfb\u7edf", "subsystem_en": "telephony", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.telephony.sms", "api": [{"api_class_name": "sms", "api_method_all": "declare namespace sms {\n  \n  function splitMessage(content: string, callback: AsyncCallback<Array<string>>): void;\n  function splitMessage(content: string): Promise<Array<string>>;\n\n  \n  function createMessage(pdu: Array<number>, specification: string, callback: AsyncCallback<ShortMessage>): void;\n  function createMessage(pdu: Array<number>, specification: string): Promise<ShortMessage>;\n\n  \n  function sendMessage(options: SendMessageOptions): void;\n\n  \n  function setDefaultSmsSlotId(slotId: number, callback: AsyncCallback<void>): void;\n  function setDefaultSmsSlotId(slotId: number): Promise<void>;\n\n  \n  function getDefaultSmsSlotId(callback: AsyncCallback<number>): void;\n  function getDefaultSmsSlotId(): Promise<number>;\n\n  \n  function setSmscAddr(slotId: number, smscAddr: string, callback: AsyncCallback<void>): void;\n  function setSmscAddr(slotId: number, smscAddr: string): Promise<void>;\n\n  \n  function getSmscAddr(slotId: number, callback: AsyncCallback<string>): void;\n  function getSmscAddr(slotId: number): Promise<string>;\n\n  \n  function hasSmsCapability(): boolean;\n\n  \n  function addSimMessage(options: SimMessageOptions, callback: AsyncCallback<void>): void;\n  function addSimMessage(options: SimMessageOptions): Promise<void>;\n\n  \n  function delSimMessage(slotId: number, msgIndex: number, callback: AsyncCallback<void>): void;\n  function delSimMessage(slotId: number, msgIndex: number): Promise<void>;\n\n  \n  function updateSimMessage(options: UpdateSimMessageOptions, callback: AsyncCallback<void>): void;\n  function updateSimMessage(options: UpdateSimMessageOptions): Promise<void>;\n\n  \n  function getAllSimMessages(slotId: number, callback: AsyncCallback<Array<SimShortMessage>>): void;\n  function getAllSimMessages(slotId: number): Promise<Array<SimShortMessage>>;\n\n  \n  function setCBConfig(options: CBConfigOptions, callback: AsyncCallback<void>): void;\n  function setCBConfig(options: CBConfigOptions): Promise<void>;\n\n  \n  function getSmsSegmentsInfo(slotId: number, message: string, force7bit: boolean, callback: AsyncCallback<SmsSegmentsInfo>): void;\n  function getSmsSegmentsInfo(slotId: number, message: string, force7bit: boolean): Promise<SmsSegmentsInfo>;\n\n  \n  function isImsSmsSupported(callback: AsyncCallback<boolean>): void;\n  function isImsSmsSupported(): Promise<boolean>;\n\n  \n  function getImsShortMessageFormat(callback: AsyncCallback<string>): void;\n  function getImsShortMessageFormat(): Promise<string>;\n\n  \n  function decodeMms(mmsFilePathName: string | Array<number>, callback: AsyncCallback<MmsInformation>): void;\n  function decodeMms(mmsFilePathName: string | Array<number>): Promise<MmsInformation>;\n\n  \n  function encodeMms(mms: MmsInformation, callback: AsyncCallback<Array<number>>): void;\n  function encodeMms(mms: MmsInformation): Promise<Array<number>>;\n\n  \n  export interface MmsInformation {\n    messageType: MessageType;\n    mmsType: MmsSendReq | MmsSendConf | MmsNotificationInd | MmsRespInd | MmsRetrieveConf | MmsAcknowledgeInd | MmsDeliveryInd | MmsReadOrigInd | MmsReadRecInd;\n    attachment?: Array<MmsAttachment>;\n  }\n\n  \n  export interface MmsSendReq {\n    from: MmsAddress;\n    transactionId: string;\n    contentType: string;\n    version: MmsVersionType;\n    to?: Array<MmsAddress>;\n    date?: number;\n    cc?: Array<MmsAddress>;\n    bcc?: Array<MmsAddress>;\n    subject?: string;\n    messageClass?: number;\n    expiry?: number;\n    priority?: MmsPriorityType;\n    senderVisibility?: number;\n    deliveryReport?: number;\n    readReport?: number;\n  }\n\n  \n  export interface MmsSendConf {\n    responseState: number;\n    transactionId: string;\n    version: MmsVersionType;\n    messageId?: string;\n  }\n\n  \n  export interface MmsNotificationInd {\n    transactionId: string;\n    messageClass: number;\n    messageSize: number;\n    expiry: number;\n    contentLocation: string;\n    version: MmsVersionType;\n    from?: MmsAddress;\n    subject?: string;\n    deliveryReport?: number;\n    contentClass?: number;\n  }\n\n  \n  export interface MmsRespInd {\n    transactionId: string;\n    status: number;\n    version: MmsVersionType;\n    reportAllowed?: ReportType;\n  }\n\n  \n  export interface MmsRetrieveConf {\n    transactionId: string;\n    messageId: string;\n    date: number;\n    contentType: string;\n    to: Array<MmsAddress>;\n    version: MmsVersionType;\n    from?: MmsAddress;\n    cc?: Array<MmsAddress>;\n    subject?: string;\n    priority?: MmsPriorityType;\n    deliveryReport?: number;\n    readReport?: number;\n    retrieveStatus?: number;\n    retrieveText?: string;\n  }\n\n  \n  export interface MmsAcknowledgeInd {\n    transactionId: string;\n    version: MmsVersionType;\n    reportAllowed?: ReportType;\n  }\n\n  \n  export interface MmsDeliveryInd {\n    messageId: string;\n    date: number;\n    to: Array<MmsAddress>;\n    status: number;\n    version: MmsVersionType;\n  }\n\n  \n  export interface MmsReadOrigInd {\n    version: MmsVersionType;\n    messageId: string;\n    to: Array<MmsAddress>;\n    from: MmsAddress;\n    date: number;\n    readStatus: number;\n  }\n\n  \n  export interface MmsReadRecInd {\n    version: MmsVersionType;\n    messageId: string;\n    to: Array<MmsAddress>;\n    from: MmsAddress;\n    readStatus: number;\n    date?: number;\n  }\n\n  \n  export interface MmsAttachment {\n    contentId: string;\n    contentLocation: string;\n    contentDisposition: DispositionType;\n    contentTransferEncoding: string;\n    contentType: string;\n    isSmil: boolean;\n    path?: string;\n    inBuff?: Array<number>;\n    fileName?: string;\n    charset?: MmsCharSets;\n  }\n\n  \n  export interface MmsAddress {\n    address: string;\n    charset: MmsCharSets;\n  }\n\n  \n  export enum MessageType {\n    TYPE_MMS_SEND_REQ = 128,\n    TYPE_MMS_SEND_CONF,\n    TYPE_MMS_NOTIFICATION_IND,\n    TYPE_MMS_RESP_IND,\n    TYPE_MMS_RETRIEVE_CONF,\n    TYPE_MMS_ACKNOWLEDGE_IND,\n    TYPE_MMS_DELIVERY_IND,\n    TYPE_MMS_READ_REC_IND,\n    TYPE_MMS_READ_ORIG_IND,\n  }\n\n  \n  export enum MmsPriorityType {\n    MMS_LOW = 128,\n    MMS_NORMAL,\n    MMS_HIGH,\n  }\n\n  \n  export enum MmsVersionType {\n    MMS_VERSION_1_0 = 0x10,\n    MMS_VERSION_1_1,\n    MMS_VERSION_1_2,\n    MMS_VERSION_1_3,\n  }\n\n  \n  export enum MmsCharSets {\n    BIG5 = 0X07EA,\n    ISO_10646_UCS_2 = 0X03E8,\n    ISO_8859_1 = 0X04,\n    ISO_8859_2,\n    ISO_8859_3,\n    ISO_8859_4,\n    ISO_8859_5,\n    ISO_8859_6,\n    ISO_8859_7,\n    ISO_8859_8,\n    ISO_8859_9,\n    SHIFT_JIS = 0X11,\n    US_ASCII = 0X03,\n    UTF_8 = 0X6A,\n  }\n\n  \n  export enum DispositionType {\n    FROM_DATA = 0,\n    ATTACHMENT,\n    INLINE,\n  }\n\n  \n  export enum ReportType {\n    MMS_YES = 128,\n    MMS_NO,\n  }\n\n  \n  export interface CBConfigOptions {\n    slotId: number;\n    enable: boolean;\n    startMessageId: number;\n    endMessageId: number;\n    ranType: RanType;\n  }\n\n  \n  export interface SimMessageOptions {\n    slotId: number;\n    smsc: string;\n    pdu: string;\n    status: SimMessageStatus;\n  }\n\n  \n  export interface UpdateSimMessageOptions {\n    slotId: number;\n    msgIndex: number;\n    newStatus: SimMessageStatus;\n    pdu: string;\n    smsc: string;\n  }\n\n  export interface ShortMessage {\n    \n    visibleMessageBody: string;\n    \n    visibleRawAddress: string;\n    \n    messageClass: ShortMessageClass;\n    \n    protocolId: number;\n    \n    scAddress: string;\n    \n    scTimestamp: number;\n    \n    isReplaceMessage: boolean;\n    \n    hasReplyPath: boolean;\n    \n    pdu: Array<number>;\n    \n    status: number;\n    \n    isSmsStatusReportMessage: boolean;\n  }\n\n  \n  export interface SimShortMessage {\n    shortMessage: ShortMessage;\n\n    \n    simMessageStatus: SimMessageStatus;\n    \n    indexOnSim: number;\n  }\n\n  \n  export enum SimMessageStatus {\n    \n    SIM_MESSAGE_STATUS_FREE = 0,\n    \n    SIM_MESSAGE_STATUS_READ = 1,\n    \n    SIM_MESSAGE_STATUS_UNREAD = 3,\n    \n    SIM_MESSAGE_STATUS_SENT = 5,\n    \n    SIM_MESSAGE_STATUS_UNSENT = 7,\n  }\n\n  export enum ShortMessageClass {\n    \n    UNKNOWN,\n    \n    INSTANT_MESSAGE,\n    \n    OPTIONAL_MESSAGE,\n    \n    SIM_MESSAGE,\n    \n    FORWARD_MESSAGE\n  }\n\n  export interface SendMessageOptions {\n    \n    slotId: number;\n    \n    destinationHost: string;\n    \n    serviceCenter?: string;\n    \n    content: string | Array<number>;\n    \n    destinationPort?: number;\n    \n    sendCallback?: AsyncCallback<ISendShortMessageCallback>;\n    \n    deliveryCallback?: AsyncCallback<IDeliveryShortMessageCallback>;\n  }\n\n  export interface ISendShortMessageCallback {\n    \n    result: SendSmsResult;\n    \n    url: string;\n    \n    isLastPart: boolean;\n  }\n\n  export interface IDeliveryShortMessageCallback {\n    \n    pdu: Array<number>;\n  }\n\n  export enum SendSmsResult {\n    \n    SEND_SMS_SUCCESS = 0,\n\n    \n    SEND_SMS_FAILURE_UNKNOWN = 1,\n\n    \n    SEND_SMS_FAILURE_RADIO_OFF = 2,\n\n    \n    SEND_SMS_FAILURE_SERVICE_UNAVAILABLE = 3\n  }\n\n  \n  export enum RanType {\n    TYPE_GSM = 1, // GSM\n    TYPE_CDMA = 2, // CDMA\n  }\n\n  \n  export interface SmsSegmentsInfo {\n    splitCount: number;\n    encodeCount: number;\n    encodeCountRemaining: number;\n    scheme: SmsEncodingScheme;\n  }\n\n  \n  export enum SmsEncodingScheme {\n    SMS_ENCODING_UNKNOWN = 0,\n    SMS_ENCODING_7BIT,\n    SMS_ENCODING_8BIT,\n    SMS_ENCODING_16BIT,\n  }\n}", "api_method_name": "sms", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 128, "since": 0, "api_used": "\u662f", "lines": ["", "finish');\n          sms.delSimMessage(TRUE_", "rue();\n      expect(sms.ISO_8859_2 == 0X05)", "UE_SLOT_ID,\n        smsc: '',\n        pdu: ", "rue();\n      expect(sms.INSTANT_MESSAGE == ", "rue();\n      expect(sms.ISO_8859_3 == 0X06)", "nish');\n            sms.getAllSimMessages(T", "rue();\n      expect(sms.ISO_10646_UCS_2 == ", "rue();\n      expect(sms.SEND_SMS_FAILURE_SE", " finish ');\n        sms.getAllSimMessages(T", "imMessageStatus === sms.SIM_MESSAGE_STATUS_", "     }\n      expect(sms.SMS_ENCODING_UNKNOW", "om '@ohos.telephony.sms';\nimport utils from", "TUS_SENT\n    };\n    sms.addSimMessage(data,", "     }\n      expect(sms.SEND_SMS_FAILURE_RA", "rue();\n      expect(sms.SHIFT_JIS == 0X11).", "turn;\n      }\n      sms.sendMessage({\n     ", "rue();\n      expect(sms.ISO_8859_6 == 0X09)", "_PDU,\n      status: sms.SIM_MESSAGE_STATUS_", "rue();\n      expect(sms.ISO_8859_8 == 0X12)", "t(result.scheme === sms.SMS_ENCODING_7BIT).", "rue();\n      expect(sms.SMS_ENCODING_16BIT ", "rue();\n      expect(sms.OPTIONAL_MESSAGE ==", "rue();\n      expect(sms.ISO_8859_4 == 0X07)", "rue();\n      expect(sms.SMS_ENCODING_7BIT =", ";\n  callJsunit();\n  smsUiJsunit();\n  conver", "rue();\n      expect(sms.UTF_8 == 0X6A).asse", "it.test.ets'\nimport smsUiJsunit from './Sms", "ge.messageClass === sms.FORWARD_MESSAGE).as", "rt default function smsUiJsunit() {\n  descr", "turn;\n      }\n      sms.createMessage(rawAr", "     }\n      expect(sms.SIM_MESSAGE_STATUS_", "rue();\n      expect(sms.ISO_8859_1 == 0X04)", "rue();\n      expect(sms.SMS_ENCODING_8BIT =", "rue();\n      expect(sms.ISO_8859_9 == 0X13)", "SENT\n      };\n      sms.addSimMessage(data,", "ALSE_SLOT_ID,\n      smsc: '',\n      pdu: CO", "rue();\n      expect(sms.US_ASCII == 0X03).a", "rue();\n      expect(sms.SIM_MESSAGE_STATUS_", "ct(value.result === sms.SEND_SMS_SUCCESS).a", "DU,\n        status: sms.SIM_MESSAGE_STATUS_", "om '@ohos.telephony.sms';\nimport {\n  descri", "_GSM\n      };\n      sms.setCBConfig(data, (", "rue();\n      expect(sms.ISO_8859_7 == 0X10)", "tCode = true;\n      sms.getSmsSegmentsInfo(", "rue();\n      expect(sms.ISO_8859_5 == 0X08)", "     }\n      expect(sms.BIG5 == 0X07EA).ass"], "files": ["List.test.ets", "SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "splitMessage", "api_method_all": "function splitMessage(content: string, callback: AsyncCallback<Array<string>>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 14, "since": 8, "api_used": "\u662f", "lines": ["t('Telephony_SmsMms_splitMessage_Promise_1600', 0, async function (done)", "tMessage_Async_1600 splitMessage on value = \" + JSON.stringify(result));", "g('Telephony_SmsMms_splitMessage_Async_1600 finish');\n      }\n      done", "r  Telephony_SmsMms_splitMessage_Promise_1600\n   * @tc.name    Call the ", "g(\"Telephony_SmsMms_splitMessage_Async_1600 splitMessage on value = \" + ", " result = await sms.splitMessage(message);\n      console.log('Telephony_", "g('Telephony_SmsMms_splitMessage_Promise_1600 fail');\n    }\n    done();\n", "g(\"Telephony_SmsMms_splitMessage_Async_1600 splitMessage on error becaus", "t('Telephony_SmsMms_splitMessage_Async_1600', 0, async function (done) {", "g('Telephony_SmsMms_splitMessage_Async_1600 fail');\n      } else {\n     ", "ssage = '';\n    sms.splitMessage(message, (error, result) => {\n      if ", "r  Telephony_SmsMms_splitMessage_Async_1600\n   * @tc.name    Call the in", "g('Telephony_SmsMms_splitMessage_Promise_1600 finish');\n      expect(res", "tMessage_Async_1600 splitMessage on error because \" + error.message);\n  "], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "splitMessage", "api_method_all": "function splitMessage(content: string): Promise<Array<string>>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "createMessage", "api_method_all": "function createMessage(pdu: Array<number>, specification: string, callback: AsyncCallback<ShortMessage>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 15, "since": 0, "api_used": "\u662f", "lines": ["on (done) {\n    sms.createMessage(rawArrayNull, '3gpp', (err, shortMessag", "g('Telephony_SmsMms_createMessage_Async_0200 finish');\n\t\texcept(shortMess", "g('Telephony_SmsMms_createMessage_Promise_0200 fail');\n      done();\n    ", "g('Telephony_SmsMms_createMessage_Promise_0200 finish');\n      done();\n  ", "t('Telephony_SmsMms_createMessage_Async_0100', 0, async function (done) {", ";\n      }\n      sms.createMessage(rawArray, '3gpp', (err, shortMessage) =", "t('Telephony_SmsMms_createMessage_Async_0200', 0, async function (done) {", "y {\n      await sms.createMessage(rawArrayNull, '3gpp');\n      expect().a", "g('Telephony_SmsMms_createMessage_Promise_0200  finish ');\n      done();\n", "g('Telephony_SmsMms_createMessage_Async_0200 fail');\n      done();\n    })", "g('Telephony_SmsMms_createMessage_Async_0100 fail');\n          done();\n  ", "g('Telephony_SmsMms_createMessage_Async_0100 finish');\n        done();\n  ", "t('Telephony_SmsMms_createMessage_Promise_0200', 0, async function (done)", "r  Telephony_SmsMms_createMessage_Promise_0200\n   * @tc.name    Call inte"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "createMessage", "api_method_all": "function createMessage(pdu: Array<number>, specification: string): Promise<ShortMessage>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "sendMessage", "api_method_all": "function sendMessage(options: SendMessageOptions): void;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 12, "since": 0, "api_used": "\u662f", "lines": ["g('Telephony_SmsMms_sendMessage_0200 fail');\n      ", "g('Telephony_SmsMms_sendMessage_0100 sendCallback f", "g('Telephony_SmsMms_sendMessage_0200 finish');\n    ", ";\n      }\n      sms.sendMessage({\n        slotId: T", "r  Telephony_SmsMms_sendMessage_0200\n   * @tc.name ", "t('Telephony_SmsMms_sendMessage_0200', 0, async fun", "on (done) {\n    sms.sendMessage({\n      slotId: FAL", " Call the interface sendMessage, set the card slot ", "g('Telephony_SmsMms_sendMessage_0100 deliveryCallba", "t('Telephony_SmsMms_sendMessage_0100', 0, async fun"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "setDefaultSmsSlotId", "api_method_all": "function setDefaultSmsSlotId(slotId: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["   Telephony_SmsMms_setDefaultSmsSlotId_Async_0200\n   * @tc.name     The defaul", "on (done) {\n    sms.setDefaultSmsSlotId(FALSE_SLOT_ID, (err) => {\n      if (err", "t('Telephony_SmsMms_setDefaultSmsSlotId_Async_0200', 0, async function (done) {", "t('Telephony_SmsMms_setDefaultSmsSlotId_Promise_0200', 0, async function (done)", "y {\n      await sms.setDefaultSmsSlotId(FALSE_SLOT_ID);\n      expect().assertFa", "g('Telephony_SmsMms_setDefaultSmsSlotId_Promise_0200  finish');\n      done();\n ", "g('Telephony_SmsMms_setDefaultSmsSlotId_Async_0200 finish');\n        done();\n  ", "   Telephony_SmsMms_setDefaultSmsSlotId_Promise_0200\n   * @tc.name     The defa", "g('Telephony_SmsMms_setDefaultSmsSlotId_Promise_0200  fail');\n      done();\n   ", "g('Telephony_SmsMms_setDefaultSmsSlotId_Async_0200 fail');\n      done();\n    })"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "setDefaultSmsSlotId", "api_method_all": "function setDefaultSmsSlotId(slotId: number): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "getDefaultSmsSlotId", "api_method_all": "function getDefaultSmsSlotId(callback: AsyncCallback<number>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["g('Telephony_SmsMms_getDefaultSmsSlotId_Async_0100 fail');\n      done();\n    })", "g('Telephony_SmsMms_getDefaultSmsSlotId_Promise_0100 finish');\n      done();\n  ", "   Telephony_SmsMms_getDefaultSmsSlotId_Promise_0100\n   * @tc.name     Set the ", "on (done) {\n    sms.getDefaultSmsSlotId((getErr, getResult) => {\n      if (getE", "g('Telephony_SmsMms_getDefaultSmsSlotId_Promise_0100 fail');\n      done();\n    ", "tResult = await sms.getDefaultSmsSlotId();\n      console.log('Telephony_SmsMms_", "   Telephony_SmsMms_getDefaultSmsSlotId_Async_0100\n   * @tc.name     Set the de", "g('Telephony_SmsMms_getDefaultSmsSlotId_Async_0100 finish');\n        done();\n  ", "t('Telephony_SmsMms_getDefaultSmsSlotId_Promise_0100', 0, async function (done)", "t('Telephony_SmsMms_getDefaultSmsSlotId_Async_0100', 0, async function (done) {"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "getDefaultSmsSlotId", "api_method_all": "function getDefaultSmsSlotId(): Promise<number>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "setSmscAddr", "api_method_all": "function setSmscAddr(slotId: number, smscAddr: string, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["on (done) {\n    sms.setSmscAddr(FALSE_SLOT_ID, '', (err) => {\n      if ", "t('Telephony_SmsMms_setSmscAddr_Promise_0200', 0, async function (done)", "g('Telephony_SmsMms_setSmscAddr_Async_0200 finish');\n        done();\n  ", "g('Telephony_SmsMms_setSmscAddr_Async_0200 fail');\n      done();\n    })", "t('Telephony_SmsMms_setSmscAddr_Async_0200', 0, async function (done) {", "y {\n      await sms.setSmscAddr(FALSE_SLOT_ID, '');\n      expect().asse", "   Telephony_SmsMms_setSmscAddr_Async_0200\n   * @tc.name     When \"SLOT", "   Telephony_SmsMms_setSmscAddr_Promise_0200\n   * @tc.name     When \"SL"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "setSmscAddr", "api_method_all": "function setSmscAddr(slotId: number, smscAddr: string): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "getSmscAddr", "api_method_all": "function getSmscAddr(slotId: number, callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["g('Telephony_SmsMms_getSmscAddr_Promise_0200 finish');\n      done();\n  ", "on (done) {\n    sms.getSmscAddr(FALSE_SLOT_ID, (err, getResult) => {\n  ", "promise = await sms.getSmscAddr(FALSE_SLOT_ID);\n      expect(promise ==", "   Telephony_SmsMms_getSmscAddr_Promise_0200\n   * @tc.name     When \"SL", "t('Telephony_SmsMms_getSmscAddr_Async_0200', 0, async function (done) {", "   Telephony_SmsMms_getSmscAddr_Async_0200\n   * @tc.name     When \"SLOT", "g('Telephony_SmsMms_getSmscAddr_Promise_0200 fail');\n      expect().ass", "g('Telephony_SmsMms_getSmscAddr_Async_0200 finish');\n      done();\n    ", "t('Telephony_SmsMms_getSmscAddr_Promise_0200', 0, async function (done)", "g('Telephony_SmsMms_getSmscAddr_Async_0200 fail');\n        done();\n    "], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "getSmscAddr", "api_method_all": "function getSmscAddr(slotId: number): Promise<string>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "hasSmsCapability", "api_method_all": "function hasSmsCapability(): boolean;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["   let result = sms.hasSmsCapability();\n    console.log(", "g('Telephony_SmsMms_hasSmsCapability_0100 result : ' + r", "r  Telephony_SmsMms_hasSmsCapability_0100\n   * @tc.name ", "t('Telephony_SmsMms_hasSmsCapability_0100', 0, async fun"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "addSimMessage", "api_method_all": "function addSimMessage(options: SimMessageOptions, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 40, "since": 7, "api_used": "\u662f", "lines": ["essage_Promise_1400 addSimMessage finish');\n      done();\n    }\n  });\n\n  ", "g('Telephony_SmsMms_addSimMessage_Promise_1800 finish ');\n      done();\n ", "g('Telephony_SmsMms_addSimMessage_Async_1700 addSimMessage fail');\n      ", "t('Telephony_SmsMms_addSimMessage_Promise_1800', 0, async function (done)", "g('Telephony_SmsMms_addSimMessage_Async_0200 fail');\n      done();\n    })", "t('Telephony_SmsMms_addSimMessage_Promise_1400', 0, async function (done)", "READ\n    };\n    sms.addSimMessage(data, (addErr) => {\n      if (addErr) {", "g('Telephony_SmsMms_addSimMessage_Async_1700 getAllSimMessages getResult.", "t('Telephony_SmsMms_addSimMessage_Async_0200', 0, async function (done) {", "SENT\n    };\n    sms.addSimMessage(data, (addErr) => {\n      if (addErr) {", "g('Telephony_SmsMms_addSimMessage_Async_1800 getAllSimMessages getResult ", "g('Telephony_SmsMms_addSimMessage_Async_1800 getAllSimMessages finish');\n", "mMessage_Async_1800 addSimMessage fail');\n        done();\n      }\n    });", "g('Telephony_SmsMms_addSimMessage_Promise_0200 finish');\n      done();\n  ", "g('Telephony_SmsMms_addSimMessage_Promise_1800 add fail');\n      done();\n", "g('Telephony_SmsMms_addSimMessage_Promise_1700 finish ');\n      done();\n ", "g('Telephony_SmsMms_addSimMessage_Async_1700 getAllSimMessages finish');\n", "t('Telephony_SmsMms_addSimMessage_Async_1400', 0, async function (done) {", "g('Telephony_SmsMms_addSimMessage_Async_1700 getAllSimMessages fail');\n  ", "g('Telephony_SmsMms_addSimMessage_Promise_1700 add fail');\n      done();\n", "g('Telephony_SmsMms_addSimMessage_Async_1800 addSimMessage fail');\n      ", "g('Telephony_SmsMms_addSimMessage_Promise_0200 fail');\n      done();\n    ", "g('Telephony_SmsMms_addSimMessage_Async_1400 finish');\n        done();\n  ", "SENT\n    };\n    sms.addSimMessage(data, (err, result) => {\n      if (err)", "t('Telephony_SmsMms_addSimMessage_Async_1800', 0, async function (done) {", "g('Telephony_SmsMms_addSimMessage_Promise_1400 fail ');\n    } catch (err)", "mMessage_Async_1700 addSimMessage fail');\n        done();\n      }\n    });", "y {\n      await sms.addSimMessage(data);\n      expect().assertFail();\n   ", "t('Telephony_SmsMms_addSimMessage_Async_1700', 0, async function (done) {", "g('Telephony_SmsMms_addSimMessage_Async_0200 finish');\n        done();\n  ", "y {\n      await sms.addSimMessage(data);\n      console.log('Telephony_Sms", "g('Telephony_SmsMms_addSimMessage_Promise_1400 addSimMessage finish');\n  ", "\n      };\n      sms.addSimMessage(data, (adderr) => {\n        if (adderr)", "g('Telephony_SmsMms_addSimMessage_Async_1400 add fail ');\n    });\n  });\n\n", "t('Telephony_SmsMms_addSimMessage_Promise_1700', 0, async function (done)", "g('Telephony_SmsMms_addSimMessage_Async_1800 getAllSimMessages fail');\n  ", "t('Telephony_SmsMms_addSimMessage_Promise_0200', 0, async function (done)"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "addSimMessage", "api_method_all": "function addSimMessage(options: SimMessageOptions): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "delSimMessage", "api_method_all": "function delSimMessage(slotId: number, msgIndex: number, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 3, "api_level": null, "api_used_count": 11, "since": 7, "api_used": "\u662f", "lines": ["g('Telephony_SmsMms_delSimMessage_Async_0200 delSimMessage finish');\n    ", "t('Telephony_SmsMms_delSimMessage_Async_0200', 0, async function (done) {", "g('Telephony_SmsMms_delSimMessage_Async_0200 fail');\n      done();\n    })", "y {\n      await sms.delSimMessage(FALSE_SLOT_ID, 0);\n      expect().asser", "g('Telephony_SmsMms_delSimMessage_Promise_0200 fail');\n      done();\n    ", "on (done) {\n    sms.delSimMessage(FALSE_SLOT_ID, 0, (err) => {\n      if (", "ges_CDMA_Async_0100 delSimMessage finish');\n            sms.getAllSimMess", "sh');\n          sms.delSimMessage(TRUE_SLOT_ID, getresult[0].indexOnSim, ", "g('Telephony_SmsMms_delSimMessage_Promise_0200 finish');\n      done();\n  ", "t('Telephony_SmsMms_delSimMessage_Promise_0200', 0, async function (done)", "mMessage_Async_0200 delSimMessage finish');\n        done();\n        retur"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "delSimMessage", "api_method_all": "function delSimMessage(slotId: number, msgIndex: number): Promise<void>;", "api_type": "Promise", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "updateSimMessage", "api_method_all": "function updateSimMessage(options: UpdateSimMessageOptions, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["g('Telephony_SmsMms_updateSimMessage_Async_0100 update fail');\n      done();", "y {\n      await sms.updateSimMessage(upData);\n      expect().assertFail();\n ", ": ''\n    };\n    sms.updateSimMessage(upData, (err) => {\n      if (err) {\n   ", "g('Telephony_SmsMms_updateSimMessage_Promise_0100 getAllSimMessages cur fini", "g('Telephony_SmsMms_updateSimMessage_Promise_0100 fail');\n      done();\n    ", "g('Telephony_SmsMms_updateSimMessage_Async_0100 update finish');\n        don", "t('Telephony_SmsMms_updateSimMessage_Async_0100', 0, async function (done) {", "t('Telephony_SmsMms_updateSimMessage_Promise_0100', 0, async function (done)"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "updateSimMessage", "api_method_all": "function updateSimMessage(options: UpdateSimMessageOptions): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "getAllSimMessages", "api_method_all": "function getAllSimMessages(slotId: number, callback: AsyncCallback<Array<SimShortMessage>>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 25, "since": 7, "api_used": "\u662f", "lines": ["g('Telephony_SmsMms_getAllSimMessages_CDMA_Async_0100 getAllSimMessages cur f", "g('Telephony_SmsMms_getAllSimMessages_CDMA_Async_0100 del fail');\n           ", "mMessage_Async_1800 getAllSimMessages fail');\n            done();\n           ", "ges_CDMA_Async_0100 getAllSimMessages cur finish');\n              done();\n   ", "mMessage_Async_1700 getAllSimMessages getResult.length = '\n            + getR", "g('Telephony_SmsMms_getAllSimMessages_CDMA_Async_0100 get 2 fail');\n         ", "ges_CDMA_Async_0100 getAllSimMessages cur finish');\n          sms.delSimMessa", "essage_Promise_0100 getAllSimMessages cur finish');\n      done();\n    }\n  });", "mMessage_Async_1800 getAllSimMessages finish');\n          done();\n        });", "mMessage_Async_1800 getAllSimMessages getResult = ' + getResult.length);\n    ", "on (done) {\n    sms.getAllSimMessages(FALSE_SLOT_ID, (err, result) => {\n     ", "dErr) {\n        sms.getAllSimMessages(TRUE_SLOT_ID, (getErr, getResult) => {\n", "ish ');\n        sms.getAllSimMessages(TRUE_SLOT_ID, (geterr, getresult) => {\n", "mMessage_Async_1700 getAllSimMessages finish');\n          done();\n        });", "g('Telephony_SmsMms_getAllSimMessages_CDMA_Async_0100 delSimMessage finish');", "mMessage_Async_1700 getAllSimMessages fail');\n            done();\n           ", "g('Telephony_SmsMms_getAllSimMessages_CDMA_Async_0100 finish ');\n        sms.", "g('Telephony_SmsMms_getAllSimMessages_CDMA_Async_0100 add fail');\n          d", "t('Telephony_SmsMms_getAllSimMessages_CDMA_Async_0100', 0, async function (do", "ssages_Promise_0200 getAllSimMessages cur finish');\n      done();\n    } catch", "');\n            sms.getAllSimMessages(TRUE_SLOT_ID, (geterr, getresult) => {\n", "g('Telephony_SmsMms_getAllSimMessages_CDMA_Async_0100 get fail');\n           ", "promise = await sms.getAllSimMessages(FALSE_SLOT_ID);\n      expect(promise =="], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "getAllSimMessages", "api_method_all": "function getAllSimMessages(slotId: number): Promise<Array<SimShortMessage>>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "setCBConfig", "api_method_all": "function setCBConfig(options: CBConfigOptions, callback: AsyncCallback<void>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["t('Telephony_SmsMms_setCBConfig_Async_0600', 0, async function (done) {", "g('Telephony_SmsMms_setCBConfig_Async_0100 fail');\n          done();\n  ", "y {\n      await sms.setCBConfig(data);\n      expect().assertFail();\n   ", "g('Telephony_SmsMms_setCBConfig_Async_0100 finish');\n        done();\n  ", "   Telephony_SmsMms_setCBConfig_Async_0600\n   * @tc.name     When \"SLOT", "_GSM\n    };\n    sms.setCBConfig(data, (err) => {\n      if (err) {\n     ", "g(`Telephony_SmsMms_setCBConfig_Async_0600 finish err : ${err.message}`", "t('Telephony_SmsMms_setCBConfig_Promise_0600', 0, async function (done)", "t('Telephony_SmsMms_setCBConfig_Async_0100', 0, async function (done) {", "\n      };\n      sms.setCBConfig(data, (err) => {\n        if (err) {\n   ", "   Telephony_SmsMms_setCBConfig_Promise_0600\n   * @tc.name     When \"SL", "g('Telephony_SmsMms_setCBConfig_Promise_0600 fail');\n      done();\n    ", "g('Telephony_SmsMms_setCBConfig_Promise_0600 finish');\n      done();\n  ", "g('Telephony_SmsMms_setCBConfig_Async_0600 fail');\n      done();\n    })"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "setCBConfig", "api_method_all": "function setCBConfig(options: CBConfigOptions): Promise<void>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "getSmsSegmentsInfo", "api_method_all": "function getSmsSegmentsInfo(slotId: number, message: string, force7bit: boolean, callback: AsyncCallback<SmsSegmentsInfo>): void;", "api_type": "callback", "api_args_count": 4, "api_level": null, "api_used_count": 23, "since": 8, "api_used": "\u662f", "lines": ["g('Telephony_SmsMms_getSmsSegmentsInfo_Promise_2000 finish');\n    }\n    done()", "g('Telephony_SmsMms_getSmsSegmentsInfo_Async_2000 finish');\n      } else {\n   ", "g('Telephony_SmsMms_getSmsSegmentsInfo_Async_0100 finish');\n        }\n        ", "r  Telephony_SmsMms_getSmsSegmentsInfo_Async_2000\n   * @tc.name    The passed ", "g(\"Telephony_SmsMms_getSmsSegmentsInfo_Async_2000 getSmsSegmentsInfo error \" +", "t('Telephony_SmsMms_getSmsSegmentsInfo_Async_2000', 0, async function (done) {", "entsInfo_Async_0100 getSmsSegmentsInfoon error \" + error.message);\n          c", "g(\"Telephony_SmsMms_getSmsSegmentsInfo_Async_0100   scheme \" + result.scheme);", "entsInfo_Async_2000 getSmsSegmentsInfo error \" + error.message);\n        conso", "g('Telephony_SmsMms_getSmsSegmentsInfo_Promise_2000 fail');\n      expect().ass", " '\u4e2d';\n    }\n    sms.getSmsSegmentsInfo(FALSE_SLOT_ID, message, true, (error, r", "t('Telephony_SmsMms_getSmsSegmentsInfo_Promise_2000', 0, async function (done)", "r  Telephony_SmsMms_getSmsSegmentsInfo_Promise_2000\n   * @tc.name    The passe", "g('Telephony_SmsMms_getSmsSegmentsInfo_Async_0100 fail');\n          expect().a", "e = true;\n      sms.getSmsSegmentsInfo(TRUE_SLOT_ID, message, force7BitCode, (", "g(\"Telephony_SmsMms_getSmsSegmentsInfo_Async_0100   splitCount \" + result.spli", "g(\"Telephony_SmsMms_getSmsSegmentsInfo_Async_0100 getSmsSegmentsInfoon error \"", "g(\"Telephony_SmsMms_getSmsSegmentsInfo_Async_0100   encodeCount \" + result.enc", " result = await sms.getSmsSegmentsInfo(FALSE_SLOT_ID, message, true);\n      co", "g('Telephony_SmsMms_getSmsSegmentsInfo_Async_2000 fail');\n      }\n      done()", "g(\"Telephony_SmsMms_getSmsSegmentsInfo_Async_0100   encodeCountRemaining \" +\n ", "t('Telephony_SmsMms_getSmsSegmentsInfo_Async_0100', 0, async function (done) {", "g(\"Telephony_SmsMms_getSmsSegmentsInfo_Async_0100   remaining \" + remaining);\n"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "getSmsSegmentsInfo", "api_method_all": "function getSmsSegmentsInfo(slotId: number, message: string, force7bit: boolean): Promise<SmsSegmentsInfo>;", "api_type": "Promise", "api_args_count": 3, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "isImsSmsSupported", "api_method_all": "function isImsSmsSupported(callback: AsyncCallback<boolean>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 10, "since": 8, "api_used": "\u662f", "lines": ["r  Telephony_SmsMms_isImsSmsSupported_Promise_0100\n   * @tc.name    Check whe", "t('Telephony_SmsMms_isImsSmsSupported_Async_0100', 0, async function (done) {", "g('Telephony_SmsMms_isImsSmsSupported_Promise_0100 fail');\n    }\n    done();\n", "g('Telephony_SmsMms_isImsSmsSupported_Async_0100 finish');\n      }\n      done", "g('Telephony_SmsMms_isImsSmsSupported_Async_0100 fail');\n      } else {\n     ", "on (done) {\n    sms.isImsSmsSupported((error, result) => {\n      if (error) {", "g('Telephony_SmsMms_isImsSmsSupported_Promise_0100 finish');\n    } catch (err", " result = await sms.isImsSmsSupported();\n      expect(result === false || res", "t('Telephony_SmsMms_isImsSmsSupported_Promise_0100', 0, async function (done)", "r  Telephony_SmsMms_isImsSmsSupported_Async_0100\n   * @tc.name    Check wheth"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "isImsSmsSupported", "api_method_all": "function isImsSmsSupported(): Promise<boolean>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "getImsShortMessageFormat", "api_method_all": "function getImsShortMessageFormat(callback: AsyncCallback<string>): void;", "api_type": "callback", "api_args_count": 1, "api_level": null, "api_used_count": 12, "since": 8, "api_used": "\u662f", "lines": ["g('Telephony_SmsMms_getImsShortMessageFormat_Promise_0100 fail');\n    }\n    done();\n", "r  Telephony_SmsMms_getImsShortMessageFormat_Promise_0100\n   * @tc.name    call the ", "on (done) {\n    sms.getImsShortMessageFormat((error, result) => {\n      if (error) {", "g('Telephony_SmsMms_getImsShortMessageFormat_Async_0100 fail');\n        expect().ass", "t('Telephony_SmsMms_getImsShortMessageFormat_Async_0100', 0, async function (done) {", "g('Telephony_SmsMms_getImsShortMessageFormat_Async_0100 result = ' + result);\n      ", " result = await sms.getImsShortMessageFormat();\n      expect(result === undefined ||", "t('Telephony_SmsMms_getImsShortMessageFormat_Promise_0100', 0, async function (done)", "g('Telephony_SmsMms_getImsShortMessageFormat_Async_0100 finish');\n      }\n      done", "g('Telephony_SmsMms_getImsShortMessageFormat_Promise_0100 finish');\n    } catch (err", "r  Telephony_SmsMms_getImsShortMessageFormat_Async_0100\n   * @tc.name    call the in"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "getImsShortMessageFormat", "api_method_all": "function getImsShortMessageFormat(): Promise<string>;", "api_type": "Promise", "api_args_count": 0, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "decodeMms", "api_method_all": "function decodeMms(mmsFilePathName: string | Array<number>, callback: AsyncCallback<MmsInformation>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 24, "since": 8, "api_used": "\u662f", "lines": ["   Telephony_SmsMms_decodeMms_Promise_1000\n   * @tc.name     Passing ", "finish');\n      sms.decodeMms(encodeData, (err, data) => {\n        if", "nish');\n        mms.decodeMms(encodeData, (err, data) => {\n          ", "g('Telephony_SmsMms_decodeMms_Async_1000 finish');\n        done();\n  ", "t('Telephony_SmsMms_decodeMms_Async_1000', 0, async function (done) {", "   Telephony_SmsMms_decodeMms_Async_1000\n   * @tc.name     Passing in", "g('Telephony_SmsMms_decodeMms_Promise_0900 finish');\n      done();\n  ", "g('Telephony_SmsMms_decodeMms_Async_1000 fail');\n      done();\n    })", "on (done) {\n    sms.decodeMms(eorroMessagePath, (err, data) => {\n    ", "g('Telephony_SmsMms_decodeMms_Promise_0900 fail');\n      done();\n    ", "g('Telephony_SmsMms_decodeMms_Promise_1000 fail');\n      expect().ass", "promise = await sms.decodeMms(encodePromise);\n      expect(promise.me", "t('Telephony_SmsMms_decodeMms_Promise_1000', 0, async function (done)", "g('Telephony_SmsMms_decodeMms_Promise_1000 finish');\n      done();\n  ", "y {\n      await sms.decodeMms(eorroMessagePath);\n      console.log('T"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "decodeMms", "api_method_all": "function decodeMms(mmsFilePathName: string | Array<number>): Promise<MmsInformation>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "encodeMms", "api_method_all": "function encodeMms(mms: MmsInformation, callback: AsyncCallback<Array<number>>): void;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 94, "since": 8, "api_used": "\u662f", "lines": ["g('Telephony_SmsMms_encodeMms_Async_0500 encodeMms finish');\n        ", "g('Telephony_SmsMms_encodeMms_Async_0600 finish');\n          done();\n", "ncodeMms_Async_0200 encodeMms fail');\n          done();\n          ret", "g('Telephony_SmsMms_encodeMms_Async_0300 fail');\n            done();\n", "g('Telephony_SmsMms_encodeMms_Async_0400 finish');\n          done();\n", "ncodeMms_Async_0400 encodeMms fail');\n          done();\n          ret", "\n      };\n      mms.encodeMms({\n        messageType: mms.TYPE_MMS_RET", "     }];\n\n      mms.encodeMms({\n        messageType: mms.TYPE_MMS_SEN", "g('Telephony_SmsMms_encodeMms_Async_0100 encodeMms finish');\n        ", "g('Telephony_SmsMms_encodeMms_Async_0400 fail');\n            done();\n", "g('Telephony_SmsMms_encodeMms_Async_0400 encodeMms fail');\n          ", "g('Telephony_SmsMms_encodeMms_Async_0100 encodeMms fail');\n          ", "t('Telephony_SmsMms_encodeMms_Async_0700', 0, async function (done) {", "ncodeMms_Async_0100 encodeMms fail');\n          done();\n          ret", "\n      };\n      mms.encodeMms({\n        messageType: mms.TYPE_MMS_SEN", "ncodeMms_Async_0600 encodeMms finish');\n        mms.decodeMms(encodeD", "ncodeMms_Async_0600 encodeMms fail');\n          done();\n          ret", "ncodeMms_Async_0300 encodeMms finish');\n        mms.decodeMms(encodeD", "g('Telephony_SmsMms_encodeMms_Async_0300 finish');\n          done();\n", "g('Telephony_SmsMms_encodeMms_Async_0500 finish');\n          done();\n", "t('Telephony_SmsMms_encodeMms_Async_0300', 0, async function (done) {", "ncodeMms_Async_0400 encodeMms finish');\n        mms.decodeMms(encodeD", "ncodeMms_Async_0500 encodeMms finish');\n        mms.decodeMms(encodeD", "g('Telephony_SmsMms_encodeMms_Async_0500 fail');\n            done();\n", "g('Telephony_SmsMms_encodeMms_Async_0600 fail');\n            done();\n", "t('Telephony_SmsMms_encodeMms_Async_0200', 0, async function (done) {", "ncodeMms_Async_0200 encodeMms finish');\n        mms.decodeMms(encodeD", "g('Telephony_SmsMms_encodeMms_Async_0200 finish');\n          done();\n", "g('Telephony_SmsMms_encodeMms_Async_0200 encodeMms finish');\n        ", "g('Telephony_SmsMms_encodeMms_Async_0500 encodeMms fail');\n          ", "ncodeMms_Async_0500 encodeMms fail');\n          done();\n          ret", "g('Telephony_SmsMms_encodeMms_Async_0300 encodeMms fail');\n          ", "\n      };\n      mms.encodeMms({\n        messageType: mms.TYPE_MMS_DEL", "t('Telephony_SmsMms_encodeMms_Async_0600', 0, async function (done) {", "g('Telephony_SmsMms_encodeMms_Async_0100 fail');\n            done();\n", "g('Telephony_SmsMms_encodeMms_Async_0200 fail');\n            done();\n", "\n      };\n      mms.encodeMms({\n        messageType: mms.TYPE_MMS_RES", "g('Telephony_SmsMms_encodeMms_Async_0400 encodeMms finish');\n        ", "t('Telephony_SmsMms_encodeMms_Async_0100', 0, async function (done) {", "g('Telephony_SmsMms_encodeMms_Async_0600 encodeMms finish');\n        ", "ncodeMms_Async_0300 encodeMms fail');\n          done();\n          ret", "t('Telephony_SmsMms_encodeMms_Async_0400', 0, async function (done) {", "g('Telephony_SmsMms_encodeMms_Async_0600 encodeMms fail');\n          ", "\n      };\n      mms.encodeMms({\n        messageType: mms.TYPE_MMS_NOT", "t('Telephony_SmsMms_encodeMms_Async_0500', 0, async function (done) {", "g('Telephony_SmsMms_encodeMms_Async_0100 finish');\n          }\n      ", "g('Telephony_SmsMms_encodeMms_Async_0300 encodeMms finish');\n        ", "ncodeMms_Async_0100 encodeMms finish');\n        mms.decodeMms(encodeD", "g('Telephony_SmsMms_encodeMms_Async_0200 encodeMms fail');\n          ", "\n      };\n      mms.encodeMms({\n        messageType: mms.TYPE_MMS_ACK"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "sms", "api_method_name": "encodeMms", "api_method_all": "function encodeMms(mms: MmsInformation): Promise<Array<number>>;", "api_type": "Promise", "api_args_count": 1, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsInformation", "api_method_all": "export interface MmsInformation {\n    messageType: MessageType;\n    mmsType: MmsSendReq | MmsSendConf | MmsNotificationInd | MmsRespInd | MmsRetrieveConf | MmsAcknowledgeInd | MmsDeliveryInd | MmsReadOrigInd | MmsReadRecInd;\n    attachment?: Array<MmsAttachment>;\n  }", "api_method_name": "MmsInformation", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsInformation", "api_method_name": "messageType", "api_method_all": "messageType: MessageType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 24, "since": 8, "api_used": "\u662f", "lines": ["        expect(data.messageType === mms.TYPE_MMS_RE", "        expect(data.messageType === mms.TYPE_MMS_AC", "encodeMms({\n        messageType: mms.TYPE_MMS_READ_", "     expect(promise.messageType === sms.TYPE_MMS_RE", "        expect(data.messageType === mms.TYPE_MMS_NO", "encodeMms({\n        messageType: mms.TYPE_MMS_RETRI", "        expect(data.messageType === mms.TYPE_MMS_SE", "\n    sms.encodeMms({messageType: sms.TYPE_MMS_READ_", "encodeMms({\n        messageType: mms.TYPE_MMS_ACKNO", "        expect(data.messageType === sms.TYPE_MMS_RE", "encodeMms({\n        messageType: mms.TYPE_MMS_DELIV", "wait sms.encodeMms({messageType: sms.TYPE_MMS_READ_", "        expect(data.messageType === mms.TYPE_MMS_DE", "encodeMms({\n        messageType: mms.TYPE_MMS_NOTIF", "encodeMms({\n        messageType: mms.TYPE_MMS_RESP_", "encodeMms({\n        messageType: mms.TYPE_MMS_SEND_"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsInformation", "api_method_name": "mmsType", "api_method_all": "mmsType: MmsSendReq | MmsSendConf | MmsNotificationInd | MmsRespInd | MmsRetrieveConf | MmsAcknowledgeInd | MmsDeliveryInd | MmsReadOrigInd | MmsReadRecInd", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 149, "since": 8, "api_used": "\u662f", "lines": ["        expect(data.mmsType.deliveryReport === ", "        expect(data.mmsType.status === 128).ass", "        expect(data.mmsType.to[0].charset === m", "        expect(data.mmsType.priority === mms.MM", "        expect(data.mmsType.subject === 'Test m", ";\n      }\n      let mmsType = {\n        \"from\":", "        expect(data.mmsType.messageClass === 12", "        expect(data.mmsType.transactionId === '", "        expect(data.mmsType.bcc[0].address === ", "        expect(data.mmsType.to.length > 0).asse", "        expect(data.mmsType.cc[0].address === '", "        expect(data.mmsType.from.address.length", "        expect(data.mmsType.to[0].address === '", "        expect(data.mmsType.reportAllowed === m", ".TYPE_MMS_RESP_IND, mmsType\n      }, (err, enco", "        expect(data.mmsType.bcc.length > 0).ass", "        expect(data.mmsType.messageId === '0001", "        expect(data.mmsType.readReport === 129)", "TYPE_MMS_SEND_CONF, mmsType\n      }, (err, enco", "        expect(data.mmsType.cc.length > 0).asse", "        expect(data.mmsType.from.address === '+", ".TYPE_MMS_SEND_REQ, mmsType, attachment\n      }", "        expect(data.mmsType.responseState === 1", "        expect(data.mmsType.senderVisibility ==", "        expect(data.mmsType.contentClass === 12", "        expect(data.mmsType.expiry !== 0).asser", "        expect(data.mmsType.from.charset === mm", "        expect(data.mmsType.messageSize === 123", "        expect(data.mmsType.version === mms.MMS", "        expect(data.mmsType.bcc[0].charset === ", "        expect(data.mmsType.contentLocation ===", " (done) {\n      let mmsType = {\n        transac", "        expect(data.mmsType.date > 0).assertTru", ";\n      }\n      let mmsType = {\n        respons", "        expect(data.mmsType.contentType === 'ap", "        expect(data.mmsType.messageClass === 13", "S_NOTIFICATION_IND, mmsType\n      }, (err, enco", "        expect(data.mmsType.cc[0].charset === m"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsInformation", "api_method_name": "attachment", "api_method_all": "attachment?: Array<MmsAttachment>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 34, "since": 8, "api_used": "\u662f", "lines": ["        expect(data.attachment[2].isSmil).assertFa", "        expect(data.attachment[2].charset === mms.", "        expect(data.attachment[2].fileName === 'pi", "\n      };\n      let attachment = [\n        {\n     ", "        expect(data.attachment[1].contentId === '<", "        expect(data.attachment[2].contentLocation ", "        expect(data.attachment[1].contentLocation ", "        expect(data.attachment[1].isSmil).assertFa", "        expect(data.attachment[2].contentDispositi", "        expect(data.attachment[0].contentTransferE", "        expect(data.attachment[0].charset === mms.", "        expect(data.attachment[2].contentId === '<", "        expect(data.attachment[2].contentType === ", "        expect(data.attachment[1].contentDispositi", "        expect(data.attachment[0].inBuff.length > ", "        expect(data.attachment[1].inBuff.length > ", "        expect(data.attachment[2].path === '').ass", "        expect(data.attachment[2].contentTransferE", "        expect(data.attachment[2].inBuff.length > ", "        expect(data.attachment[0].contentId === '<", "\n          if (data.attachment != null) {\n        ", "        expect(data.attachment[1].contentType === ", "        expect(data.attachment[0].isSmil).assertTr", "        expect(data.attachment[1].path === '').ass", "        expect(data.attachment[0].contentType === ", "        expect(data.attachment[1].contentTransferE", "        expect(data.attachment[1].charset === mms.", "        expect(data.attachment[0].contentLocation ", "        expect(data.attachment[0].path === '').ass", "        expect(data.attachment[0].fileName === '61", "_SEND_REQ, mmsType, attachment\n      }, (err, enco", "        expect(data.attachment[0].contentDispositi", "        expect(data.attachment[1].fileName === 'co", "        expect(data.attachment.length > 0).assertT"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_all": "export interface MmsSendReq {\n    from: MmsAddress;\n    transactionId: string;\n    contentType: string;\n    version: MmsVersionType;\n    to?: Array<MmsAddress>;\n    date?: number;\n    cc?: Array<MmsAddress>;\n    bcc?: Array<MmsAddress>;\n    subject?: string;\n    messageClass?: number;\n    expiry?: number;\n    priority?: MmsPriorityType;\n    senderVisibility?: number;\n    deliveryReport?: number;\n    readReport?: number;\n  }", "api_method_name": "MmsSendReq", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "from", "api_method_all": "from: MmsAddress", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 297, "since": 8, "api_used": "\u662f", "lines": ["", "STATUS_DISCONNECTED from` +\n        ` ${time", " {TEST_RELY_NUMBER} from './Const.js';\n// pa", "\n\nimport {toString} from './ApiToPromise.js'", "ocheck\n\nimport file from '@system.file';\n\nim", "rt ContactClassTest from './contact/ContactC", ".app'\nimport device from '@system.device'\nim", "tLog, ReportExtend} from \"deccjsunit/index.e", "vice'\nimport router from '@system.router'\nim", "import RecoveryTest from './contact/recovery", "'\nimport GroupsTest from './contact/Groups_t", "achCallEventState\n} from './lib/ScenceInCall", "_MODE_DEACTIVATION} from './Const.js';\nimpor", "l';\nimport observer from '@ohos.telephony.ob", ";\nimport {toString} from './lib/ApiToPromise", "L_CONFERENCE_IDLE\n} from './lib/Const.js';\ni", "ort ContactCardTest from './contact/ContactC", "cribe, it, expect } from \"deccjsunit/index\";", "Core, ExpectExtend} from 'deccjsunit/index'\n", "check\nimport router from '@system.router'\n\nv", "ObjectInterfaceTest from './contact/ObjectIn", "NT, PERF_GOAL_TIME} from './Const.js';\nimpor", "\nimport CalllogTest from './contact/Calllog_", ";\nimport {toString} from './ApiToPromise.js'", "import ContactsTest from './contact/Contacts", "AFTER_HANUP_TIMES\n} from './Const.js';\nimpor", "mport VoicemailTest from './contact/Voicemai", "port featureAbility from \"@ohos.ability.feat", "se.js';\nimport call from '@ohos.telephony.ca", "\";\nimport testsuite from \"../test/List.test.", "foreAll, afterEach} from 'deccjsunit/index';", "em.file'\nimport app from '@system.app'\nimpor"], "files": ["ConnectionJsunit.test.ets", "Stability_test.js", "SimJsunit.test.ets", "SocketJsunit.test.ets", "ScenceInCalling.js", "DataJsunit.test.ets", "Performance_test.js", "WebSocketJsunit.test.ets", "RowSplit.ets", "NetworkSearchErrors.test.js", "RadioSecondJsunit.test.ets", "ObjectInterface_test.js", "RadioJsunit.test.ets", "Text.ets", "HttpRequestOptionsJsunit.test.ets", "RequestMethodJsunit.test.ets", "ScenceLimitCalling.js", "Stack.ets", "HttpJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConnectionSecondJsUnit.test.ets", "recovery_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "DataPanel.ets", "ContactClass_test.js", "HttpRequestJsunit.test.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "HttpResponseJsunit.test.ets", "ContacterJsunit.ets", "ResponseCodeJsunit.test.ets", "CallJsunit.test.ets", "ObserverJsunit.test.ets", "SimManager.test.js", "Voicemail_test.js", "ScenceTransfer.js", "index.js", "StatisticsJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Groups_test.js", "ApiToPromisePerfomance.js", "index.ets", "Divider.ets", "CellularDataAbnorma.test.js", "Calllog_test.js", "Button.ets", "ApiToPromiseReliability.js", "List.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "transactionId", "api_method_all": "transactionId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.transactionId === '2080.142730').", "mmsType = {\n        transactionId: \"3077.142410\",\n   ", "expect(data.mmsType.transactionId === '2077.142735845", "        }],\n        transactionId: '2077.142735845141", "expect(data.mmsType.transactionId === '27.14210').ass", "expect(data.mmsType.transactionId === '3077.142410').", "mmsType = {\n        transactionId: \"2080.142730\",\n   ", "State: 128,\n        transactionId: '2077.142735845141", "mmsType = {\n        transactionId: \"27.14210\",\n      ", "expect(data.mmsType.transactionId === '2920.1410').as", "mmsType = {\n        transactionId: '2920.1410',\n     "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "contentType", "api_method_all": "contentType: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 12, "since": 8, "api_used": "\u662f", "lines": ["eport: 129,\n        contentType: \"application/vnd.w", "expect(data.mmsType.contentType === 'application/vn", "'base64',\n          contentType: 'text/plain',\n    ", "(data.attachment[2].contentType === 'image/gif').as", "xt: \"0002\",\n        contentType: \"application/vnd.w", "'base64',\n          contentType: 'image/gif',\n     ", "'base64',\n          contentType: 'application/smil'", "(data.attachment[1].contentType === 'text/plain').a", "(data.attachment[0].contentType === 'application/sm"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "version", "api_method_all": "version: MmsVersionType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 110, "since": 8, "api_used": "\u662f", "lines": ["ml =\n        '<?xml version=\"1.0\" encoding=\"utf", "var result = '<?xml version=\"1.0\" encoding=\"utf", "n\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "3\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "read_only\", \"0\"], [\"version\", \"1\"], [\"is_prefer", "           map.set(\"version\", \"2\");\n           ", "ccount_id\", \"8\"], [\"version\", \"2\"], [\"sort\", \"8", "d\": 8,\n            \"version\": 2,\n            \"s", "ccount_id\", \"1\"], [\"version\", \"1\"], [\"sort\", \"6", "claration\":{\"123\":{\"version\":\"1.0\",'+\n      '\"e", "d\": 1,\n            \"version\": 1,\n            \"s", "read_only\", \"0\"], [\"version\", \"0\"], [\"is_prefer"], "files": ["SmsMmsJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "SmsMmsError.test.js", "HttpRequestOptionsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "to", "api_method_all": "to?: Array<MmsAddress>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2819, "since": 8, "api_used": "\u662f", "lines": [":${\n                toString(error)}`);\n  ", "ny_CallManager_IMS_stopRTT_Promise_0200', ", "angupCall success ${toString(data)}`);\n   ", "tions {\n    constructor (str) {\n        th", "e.log(`${caseName} stopRTT success,case fa", "/Const.js';\nimport {toString} from './lib/", "ase success,error:${toString(error)}`);\n  ", ",case failed,data:${toString(data)}`);\n   ", "bel/runtime/regenerator')\n\nexport default ", "ny_CallManager_IMS_stopRTT_Async_0200', 0,", "l\ninjectRef.regeneratorRuntime = require('", "phony_CallManager ${toString(callAttribute", "tions {\n    constructor (num) {\n        th", "tions {\n    constructor (accountNumber, sp", "me    Run function stopRTT by args callId ", "ny_CallManager_IMS_stopRTT_Async_0200';\n  ", "ny_CallManager_IMS_stopRTT_Promise_0200\n  ", "e.log(`${caseName} stopRTT ${callId} error", "200';\n        call.stopRTT(CALL_ID_NOT_EXI", "tRef = Object.getPrototypeOf(global) || gl", "phony_CallManager ${toString(error)}`);\n  ", "                    toString(error)}`);\n  "], "files": ["ConnectionJsunit.test.ets", "Utils.ets", "Stability_test.js", "SimJsunit.test.ets", "Flex.ets", "SocketJsunit.test.ets", "ScenceInCalling.js", "DataJsunit.test.ets", "Performance_test.js", "Navigator.ets", "WebSocketJsunit.test.ets", "NetworkSearchErrors.test.js", "RadioSecondJsunit.test.ets", "ObjectInterface_test.js", "Text.ets", "Counter.ets", "ScenceLimitCalling.js", "Stack.ets", "Contacts_test.js", "ContactCard_test.js", "Progress.ets", "Panel.ets", "ConvertOptionsJsunit.test.ets", "Badge.ets", "common.js", "Scroll.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "CallJsunit.test.ets", "SimManager.test.js", "ApiToPromise.js", "Rating.ets", "Voicemail_test.js", "ScenceTransfer.js", "GridContainer.ets", "index.js", "StatisticsJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Groups_test.js", "Const.js", "Divider.ets", "ApiToPromisePerfomance.js", "CellularDataAbnorma.test.js", "Calllog_test.js", "Button.ets", "Image.ets", "Column.ets", "ApiToPromiseReliability.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "date", "api_method_all": "date?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1591, "since": 7, "api_used": "\u662f", "lines": ["_update_test_500: updateCode = \" + updateCod", ".log(`${caseName} updateImsCallMode2 success", "y_CallManager_IMS_updateImsCallMode_Promise_", "_update_test_400: update error = \" + error);", "ogDelete(\"calllog_update_test_500\");\n       ", "ogMessage calllog_update_test_400: updateCod", "            await updateOneCalllog();\n      ", " = await DAHelper.update(calllogUri, common.", "            await updateAllCalllog();\n      ", " updateCode = \" + updateCode);\n             ", "ogMessage calllog_update_test_500: calllogId", "           expect(updateCode == 0).assertTru", "ogMessage calllog_update_test_400: calllogId", ".log(`${caseName} updateImsCallMode2 error,c", "      it(\"calllog_update_test_400\", 0, async", "   async function updateAllCalllog() {\n     ", "pdate(calllogUri, updateValues, condition)\n ", " common.getCallLogUpdateMap();\n             ", "ALL(map, \"calllog_update_test_500\");\n       ", "e    Run function updateImsCallMode by args ", "              var updateCode = await DAHelpe", " = await DAHelper.update(calllogUri, updateV", "ogMessage calllog_update_test_400: update er", "ogMessage calllog_update_test_400 is startin", "ogMessage calllog_update_test_500: updateCod", "ogMessage calllog_update_test_500: calllog i", "              var updateValues = {\n         ", "00';\n        call.updateImsCallMode(CALL_ID_", "      it(\"calllog_update_test_500\", 0, async", "export function validate (error, data, func)", "ogMessage calllog_update_test_500: update er", "_update_test_400: updateCode = \" + updateCod", "   async function updateOneCalllog() {\n     ", "ogDelete(\"calllog_update_test_400\");\n       ", ".log(`${caseName} updateImsCallMode error,ca", ".log(`${caseName} updateImsCallMode success,", "ALL(map, \"calllog_update_test_400\");\n       ", "ogMessage calllog_update_test_500 is startin", "y_CallManager_IMS_updateImsCallMode_Async_07", " common.getCallLogUpdate(), condition);\n    ", "ogMessage calllog_update_test_400: calllog i"], "files": ["Calllog_test.js", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "Stability_test.js", "CallManageAll.test.js", "ContactCard_test.js", "Contacts_test.js", "recovery_test.js", "Performance_test.js", "NetworkSearchErrors.test.js", "Voicemail_test.js", "SimManager.test.js", "ObjectInterface_test.js", "common.js", "SmsMmsError.test.js", "Groups_test.js", "ApiToPromisePerfomance.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "cc", "api_method_all": "cc?: Array<MmsAddress>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 840, "since": 8, "api_used": "\u662f", "lines": ["artTime,\n        isEcc, callType, callId, ", "neOn;\n        this.accountId = accountId;\n", "allPreferenceMode success');\n        } cat", "caseName} stopRTT success,case failed,data", "AttributeOptions.isEcc === IS_ECC).assertT", "combineConference success,case failed,data", "r, speakerphoneOn, accountId, videoState, ", "allId} error,case success,error:${toString", "r enableImsSwitch success');\n            a", "bleLteEnhanceMode success,case failed,data", " afterEach} from 'deccjsunit/index';\nimpor", "    this.isEcc = isEcc;\n        this.callT", "EXIST} error,case success,error:${toString", "eparateConference success,case failed,data", "te) {\n        this.accountNumber = account", "llAttributeOptions.accountId === DEFAULT_S", "lMode2 error,case success,error:${toString", "EXIST} error,case success,error:${\n       ", "ceMode error,case success,error:${toString", "is.accountNumber = accountNumber;\n        ", "anager hangupCall success ${toString(data)", "nhanceModeEnabled success,case failed,data", "{\n    constructor (accountNumber, speakerp", "aseName} startRTT success,case failed,data", "me;\n        this.isEcc = isEcc;\n        th", "  this.accountId = accountId;\n        this", "pectExtend} from 'deccjsunit/index'\n\nconst", "e} joinConference success,case failed,data", "nabled error,case success,error:${toString", "llAttributeOptions.accountNumber === AUTO_"], "files": ["ConnectionJsunit.test.ets", "Stability_test.js", "SimJsunit.test.ets", "SocketJsunit.test.ets", "ScenceInCalling.js", "DataJsunit.test.ets", "Performance_test.js", "WebSocketJsunit.test.ets", "NetworkSearchErrors.test.js", "RadioSecondJsunit.test.ets", "ObjectInterface_test.js", "RadioJsunit.test.ets", "HttpRequestOptionsJsunit.test.ets", "RequestMethodJsunit.test.ets", "ScenceLimitCalling.js", "HttpJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConnectionSecondJsUnit.test.ets", "recovery_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "ContactClass_test.js", "HttpRequestJsunit.test.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "HttpResponseJsunit.test.ets", "ContacterJsunit.ets", "ResponseCodeJsunit.test.ets", "CallJsunit.test.ets", "ObserverJsunit.test.ets", "SimManager.test.js", "Voicemail_test.js", "ScenceTransfer.js", "index.js", "StatisticsJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Groups_test.js", "index.ets", "CellularDataAbnorma.test.js", "Calllog_test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "bcc", "api_method_all": "bcc?: Array<MmsAddress>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.bcc[0].address === '+86", "expect(data.mmsType.bcc[0].charset === mms.", "        }],\n        bcc: [{\n               ", "expect(data.mmsType.bcc.length > 0).assertT"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "subject", "api_method_all": "subject?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["\n        },\n        subject: \"Test mms\",\n      ", "        }],\n        subject: \"Test mms\",\n      ", "expect(data.mmsType.subject === 'Test mms').ass"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "messageClass", "api_method_all": "messageClass?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["except(shortMessage.messageClass != 'sms.FORWARD_MES", "expect(data.mmsType.messageClass === 130).assertTrue", "\"Test mms\",\n        messageClass: 130,\n        expir", "expect(shortMessage.messageClass === sms.FORWARD_MES", "80.142730\",\n        messageClass: 128,\n        messa", "expect(data.mmsType.messageClass === 128).assertTrue"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "expiry", "api_method_all": "expiry?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.expiry !== 0).assertTrue()", "Class: 130,\n        expiry: 1639378126,\n      ", ": 12345678,\n        expiry: 1639378126,\n      "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "priority", "api_method_all": "priority?: MmsPriorityType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.priority === mms.MMS_HIGH).a", "\"Test mms\",\n        priority: mms.MMS_NORMAL,\n  ", "\"Test mms\",\n        priority: mms.MMS_HIGH,\n    ", "expect(data.mmsType.priority === mms.MMS_LOW).as", "expect(data.mmsType.priority === mms.MMS_NORMAL)", "1639378126,\n        priority: mms.MMS_LOW,\n     "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "senderVisibility", "api_method_all": "senderVisibility?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.senderVisibility === 129).assertTrue", "ms.MMS_LOW,\n        senderVisibility: 129,\n        deliv"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "deliveryReport", "api_method_all": "deliveryReport?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.deliveryReport === 128).assertTrue", "MMS_NORMAL,\n        deliveryReport: 128,\n        readR", "ility: 129,\n        deliveryReport: 128,\n        readR", "\"Test mms\",\n        deliveryReport: 128,\n        conte", "s.MMS_HIGH,\n        deliveryReport: 128,\n        readR"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendReq", "api_method_name": "readReport", "api_method_all": "readReport?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["eport: 128,\n        readReport: 128,\n        retri", "eport: 128,\n        readReport: 129,\n        conte", "expect(data.mmsType.readReport === 129).assertTrue", "expect(data.mmsType.readReport === 128).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendConf", "api_method_all": "export interface MmsSendConf {\n    responseState: number;\n    transactionId: string;\n    version: MmsVersionType;\n    messageId?: string;\n  }", "api_method_name": "MmsSendConf", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendConf", "api_method_name": "responseState", "api_method_all": "responseState: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.responseState === 128).assertTrue", "mmsType = {\n        responseState: 128,\n        trans"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendConf", "api_method_name": "transactionId", "api_method_all": "transactionId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.transactionId === '2080.142730').", "mmsType = {\n        transactionId: \"3077.142410\",\n   ", "expect(data.mmsType.transactionId === '2077.142735845", "        }],\n        transactionId: '2077.142735845141", "expect(data.mmsType.transactionId === '27.14210').ass", "expect(data.mmsType.transactionId === '3077.142410').", "mmsType = {\n        transactionId: \"2080.142730\",\n   ", "State: 128,\n        transactionId: '2077.142735845141", "mmsType = {\n        transactionId: \"27.14210\",\n      ", "expect(data.mmsType.transactionId === '2920.1410').as", "mmsType = {\n        transactionId: '2920.1410',\n     "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendConf", "api_method_name": "version", "api_method_all": "version: MmsVersionType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 110, "since": 8, "api_used": "\u662f", "lines": ["ml =\n        '<?xml version=\"1.0\" encoding=\"utf", "var result = '<?xml version=\"1.0\" encoding=\"utf", "n\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "3\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "read_only\", \"0\"], [\"version\", \"1\"], [\"is_prefer", "           map.set(\"version\", \"2\");\n           ", "ccount_id\", \"8\"], [\"version\", \"2\"], [\"sort\", \"8", "d\": 8,\n            \"version\": 2,\n            \"s", "ccount_id\", \"1\"], [\"version\", \"1\"], [\"sort\", \"6", "claration\":{\"123\":{\"version\":\"1.0\",'+\n      '\"e", "d\": 1,\n            \"version\": 1,\n            \"s", "read_only\", \"0\"], [\"version\", \"0\"], [\"is_prefer"], "files": ["SmsMmsJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "SmsMmsError.test.js", "HttpRequestOptionsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsSendConf", "api_method_name": "messageId", "api_method_all": "messageId?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 16, "since": 8, "api_used": "\u662f", "lines": ["mmsType = {\n        messageId: \"0001\",\n        da", "ect(promise.mmsType.messageId === '0001').assertT", "_VERSION_1_1,\n      messageId: \"0001\",\n      to: ", "77.142410\",\n        messageId: \"0001\",\n        da", "ERSION_1_0,\n        messageId: \"0001\",\n        to", "expect(data.mmsType.messageId === '0001').assertT", "ERSION_1_1,\n        messageId: \"0001\",\n        to", "ERSION_1_1,\n        messageId: '0001',\n      };\n "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsNotificationInd", "api_method_all": "export interface MmsNotificationInd {\n    transactionId: string;\n    messageClass: number;\n    messageSize: number;\n    expiry: number;\n    contentLocation: string;\n    version: MmsVersionType;\n    from?: MmsAddress;\n    subject?: string;\n    deliveryReport?: number;\n    contentClass?: number;\n  }", "api_method_name": "MmsNotificationInd", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsNotificationInd", "api_method_name": "transactionId", "api_method_all": "transactionId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.transactionId === '2080.142730').", "mmsType = {\n        transactionId: \"3077.142410\",\n   ", "expect(data.mmsType.transactionId === '2077.142735845", "        }],\n        transactionId: '2077.142735845141", "expect(data.mmsType.transactionId === '27.14210').ass", "expect(data.mmsType.transactionId === '3077.142410').", "mmsType = {\n        transactionId: \"2080.142730\",\n   ", "State: 128,\n        transactionId: '2077.142735845141", "mmsType = {\n        transactionId: \"27.14210\",\n      ", "expect(data.mmsType.transactionId === '2920.1410').as", "mmsType = {\n        transactionId: '2920.1410',\n     "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsNotificationInd", "api_method_name": "messageClass", "api_method_all": "messageClass: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["except(shortMessage.messageClass != 'sms.FORWARD_MES", "expect(data.mmsType.messageClass === 130).assertTrue", "\"Test mms\",\n        messageClass: 130,\n        expir", "expect(shortMessage.messageClass === sms.FORWARD_MES", "80.142730\",\n        messageClass: 128,\n        messa", "expect(data.mmsType.messageClass === 128).assertTrue"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsNotificationInd", "api_method_name": "messageSize", "api_method_all": "messageSize: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["Class: 128,\n        messageSize: 12345678,\n        ", "expect(data.mmsType.messageSize === 12345678).asser"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsNotificationInd", "api_method_name": "expiry", "api_method_all": "expiry: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.expiry !== 0).assertTrue()", "Class: 130,\n        expiry: 1639378126,\n      ", ": 12345678,\n        expiry: 1639378126,\n      "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsNotificationInd", "api_method_name": "contentLocation", "api_method_all": "contentLocation: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["(data.attachment[2].contentLocation === 'picture.gif').", "expect(data.mmsType.contentLocation === 'Test').assertT", "'<0000>',\n          contentLocation: '618C0A89.smil',\n ", "(data.attachment[0].contentLocation === '618C0A89.smil'", "eport: 128,\n        contentLocation: \"Test\",\n        co", "re.gif>',\n          contentLocation: 'picture.gif',\n   ", "t.text>',\n          contentLocation: 'content.text',\n  ", "(data.attachment[1].contentLocation === 'content.text')"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsNotificationInd", "api_method_name": "version", "api_method_all": "version: MmsVersionType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 110, "since": 8, "api_used": "\u662f", "lines": ["ml =\n        '<?xml version=\"1.0\" encoding=\"utf", "var result = '<?xml version=\"1.0\" encoding=\"utf", "n\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "3\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "read_only\", \"0\"], [\"version\", \"1\"], [\"is_prefer", "           map.set(\"version\", \"2\");\n           ", "ccount_id\", \"8\"], [\"version\", \"2\"], [\"sort\", \"8", "d\": 8,\n            \"version\": 2,\n            \"s", "ccount_id\", \"1\"], [\"version\", \"1\"], [\"sort\", \"6", "claration\":{\"123\":{\"version\":\"1.0\",'+\n      '\"e", "d\": 1,\n            \"version\": 1,\n            \"s", "read_only\", \"0\"], [\"version\", \"0\"], [\"is_prefer"], "files": ["SmsMmsJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "SmsMmsError.test.js", "HttpRequestOptionsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsNotificationInd", "api_method_name": "from", "api_method_all": "from?: MmsAddress", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 297, "since": 8, "api_used": "\u662f", "lines": ["", "STATUS_DISCONNECTED from` +\n        ` ${time", " {TEST_RELY_NUMBER} from './Const.js';\n// pa", "\n\nimport {toString} from './ApiToPromise.js'", "ocheck\n\nimport file from '@system.file';\n\nim", "rt ContactClassTest from './contact/ContactC", ".app'\nimport device from '@system.device'\nim", "tLog, ReportExtend} from \"deccjsunit/index.e", "vice'\nimport router from '@system.router'\nim", "import RecoveryTest from './contact/recovery", "'\nimport GroupsTest from './contact/Groups_t", "achCallEventState\n} from './lib/ScenceInCall", "_MODE_DEACTIVATION} from './Const.js';\nimpor", "l';\nimport observer from '@ohos.telephony.ob", ";\nimport {toString} from './lib/ApiToPromise", "L_CONFERENCE_IDLE\n} from './lib/Const.js';\ni", "ort ContactCardTest from './contact/ContactC", "cribe, it, expect } from \"deccjsunit/index\";", "Core, ExpectExtend} from 'deccjsunit/index'\n", "check\nimport router from '@system.router'\n\nv", "ObjectInterfaceTest from './contact/ObjectIn", "NT, PERF_GOAL_TIME} from './Const.js';\nimpor", "\nimport CalllogTest from './contact/Calllog_", ";\nimport {toString} from './ApiToPromise.js'", "import ContactsTest from './contact/Contacts", "AFTER_HANUP_TIMES\n} from './Const.js';\nimpor", "mport VoicemailTest from './contact/Voicemai", "port featureAbility from \"@ohos.ability.feat", "se.js';\nimport call from '@ohos.telephony.ca", "\";\nimport testsuite from \"../test/List.test.", "foreAll, afterEach} from 'deccjsunit/index';", "em.file'\nimport app from '@system.app'\nimpor"], "files": ["ConnectionJsunit.test.ets", "Stability_test.js", "SimJsunit.test.ets", "SocketJsunit.test.ets", "ScenceInCalling.js", "DataJsunit.test.ets", "Performance_test.js", "WebSocketJsunit.test.ets", "RowSplit.ets", "NetworkSearchErrors.test.js", "RadioSecondJsunit.test.ets", "ObjectInterface_test.js", "RadioJsunit.test.ets", "Text.ets", "HttpRequestOptionsJsunit.test.ets", "RequestMethodJsunit.test.ets", "ScenceLimitCalling.js", "Stack.ets", "HttpJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConnectionSecondJsUnit.test.ets", "recovery_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "DataPanel.ets", "ContactClass_test.js", "HttpRequestJsunit.test.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "HttpResponseJsunit.test.ets", "ContacterJsunit.ets", "ResponseCodeJsunit.test.ets", "CallJsunit.test.ets", "ObserverJsunit.test.ets", "SimManager.test.js", "Voicemail_test.js", "ScenceTransfer.js", "index.js", "StatisticsJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Groups_test.js", "ApiToPromisePerfomance.js", "index.ets", "Divider.ets", "CellularDataAbnorma.test.js", "Calllog_test.js", "Button.ets", "ApiToPromiseReliability.js", "List.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsNotificationInd", "api_method_name": "subject", "api_method_all": "subject?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["\n        },\n        subject: \"Test mms\",\n      ", "        }],\n        subject: \"Test mms\",\n      ", "expect(data.mmsType.subject === 'Test mms').ass"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsNotificationInd", "api_method_name": "deliveryReport", "api_method_all": "deliveryReport?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.deliveryReport === 128).assertTrue", "MMS_NORMAL,\n        deliveryReport: 128,\n        readR", "ility: 129,\n        deliveryReport: 128,\n        readR", "\"Test mms\",\n        deliveryReport: 128,\n        conte", "s.MMS_HIGH,\n        deliveryReport: 128,\n        readR"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsNotificationInd", "api_method_name": "contentClass", "api_method_all": "contentClass?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.contentClass === 128).assertTrue", "on: \"Test\",\n        contentClass: 128,\n      };\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRespInd", "api_method_all": "export interface MmsRespInd {\n    transactionId: string;\n    status: number;\n    version: MmsVersionType;\n    reportAllowed?: ReportType;\n  }", "api_method_name": "MmsRespInd", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRespInd", "api_method_name": "transactionId", "api_method_all": "transactionId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.transactionId === '2080.142730').", "mmsType = {\n        transactionId: \"3077.142410\",\n   ", "expect(data.mmsType.transactionId === '2077.142735845", "        }],\n        transactionId: '2077.142735845141", "expect(data.mmsType.transactionId === '27.14210').ass", "expect(data.mmsType.transactionId === '3077.142410').", "mmsType = {\n        transactionId: \"2080.142730\",\n   ", "State: 128,\n        transactionId: '2077.142735845141", "mmsType = {\n        transactionId: \"27.14210\",\n      ", "expect(data.mmsType.transactionId === '2920.1410').as", "mmsType = {\n        transactionId: '2920.1410',\n     "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRespInd", "api_method_name": "status", "api_method_all": "status: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 99, "since": 8, "api_used": "\u662f", "lines": ["xiaohong\"], [\"voice_status\", \"0\"]]);\n        v", "4454445254\", \"voice_status\": 0\n            };\n", "            [\"merge_status\", \"1\"], [\"is_merge_", " voice mailbox with status 0 or id and return ", ": \"2800name\", voice_statuss: \"0\"\n             ", "pdate the voicemail status, pass in a non-exis", "             \"voice_status\": 1\n               ", "et the current call status.\n     *            ", "            [\"voice_status\", \"0\"]\n        ]);\n", ": \"xiaofen\", \"voice_status\": 1\n            };\n", "\"xiaohei\"], [\"voice_status\", \"0\"]]);\n        v", " \"xiaoming\", \"voice_status\": 1\n            };\n", "eting the voicemail status, pass in a non-exis", "xiaoming\"], [\"voice_status\", \"0\"]]);\n        v", "  mapOne.set(\"voice_status\", \"1\");\n           ", ": \"1557254\", \"voice_status\": 1\n            };\n", ": \"xiaohei\", \"voice_status\": 0\n            };\n", ": \"xiaohei\", \"voice_status\": 1\n            };\n", " When the voicemail status is added, a non-exi", "   Insert voicemail status 0\n     * @tc.desc  ", " \"xiaoming\", \"voice_status\": 0\n            };\n", "     map.set(\"voice_status\", \"0\");\n           ", "5754445254\", \"voice_status\": 1\n               ", " \"xiaohong\", \"voice_status\": 0\n            };\n", " \"18862013\", \"voice_status\": 0\n            };\n", ": \"2700name\", voice_statuss: \"1\"\n             ", "\"xiaofen\"], [\"voice_status\", \"0\"]]);\n        v", "5444445254\", \"voice_status\": 0\n            };\n", "tion.equalTo(\"voice_status\", \"0\");\n           ", ": \"1557254\", \"voice_status\": 0\n            };\n", "o get the idle call status, call getCallState(", "\"xiaohei\"], [\"voice_status\", \"1\"]]);\n        v", "     map.set(\"voice_status\", \"1\");\n           ", ": \"2800name\", voice_status: \"1\"\n              ", "             \"voice_status\": 0\n               ", "\"100578615\", \"voice_status\": 1\n            };\n", "tion.equalTo(\"voice_status\", \"1\");\n           ", "4452542200\", \"voice_status\": 0\n            };\n", "5754445254\", \"voice_status\": 0\n            };\n"], "files": ["ConnectionJsunit.test.ets", "SmsMmsJsunit.test.ets", "SimJsunit.test.ets", "SocketJsunit.test.ets", "CallManageAll.test.js", "CallJsunit.test.ets", "SimManager.test.js", "RadioSecondJsunit.test.ets", "Voicemail_test.js", "common.js", "SmsMmsError.test.js", "Const.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRespInd", "api_method_name": "version", "api_method_all": "version: MmsVersionType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 110, "since": 8, "api_used": "\u662f", "lines": ["ml =\n        '<?xml version=\"1.0\" encoding=\"utf", "var result = '<?xml version=\"1.0\" encoding=\"utf", "n\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "3\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "read_only\", \"0\"], [\"version\", \"1\"], [\"is_prefer", "           map.set(\"version\", \"2\");\n           ", "ccount_id\", \"8\"], [\"version\", \"2\"], [\"sort\", \"8", "d\": 8,\n            \"version\": 2,\n            \"s", "ccount_id\", \"1\"], [\"version\", \"1\"], [\"sort\", \"6", "claration\":{\"123\":{\"version\":\"1.0\",'+\n      '\"e", "d\": 1,\n            \"version\": 1,\n            \"s", "read_only\", \"0\"], [\"version\", \"0\"], [\"is_prefer"], "files": ["SmsMmsJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "SmsMmsError.test.js", "HttpRequestOptionsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRespInd", "api_method_name": "reportAllowed", "api_method_all": "reportAllowed?: ReportType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["ERSION_1_0,\n        reportAllowed: mms.MMS_YES,\n     ", "expect(data.mmsType.reportAllowed === mms.MMS_NO).ass", "ERSION_1_2,\n        reportAllowed: mms.MMS_NO,\n      ", "expect(data.mmsType.reportAllowed === mms.MMS_YES).as"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_all": "export interface MmsRetrieveConf {\n    transactionId: string;\n    messageId: string;\n    date: number;\n    contentType: string;\n    to: Array<MmsAddress>;\n    version: MmsVersionType;\n    from?: MmsAddress;\n    cc?: Array<MmsAddress>;\n    subject?: string;\n    priority?: MmsPriorityType;\n    deliveryReport?: number;\n    readReport?: number;\n    retrieveStatus?: number;\n    retrieveText?: string;\n  }", "api_method_name": "MmsRetrieveConf", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "transactionId", "api_method_all": "transactionId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.transactionId === '2080.142730').", "mmsType = {\n        transactionId: \"3077.142410\",\n   ", "expect(data.mmsType.transactionId === '2077.142735845", "        }],\n        transactionId: '2077.142735845141", "expect(data.mmsType.transactionId === '27.14210').ass", "expect(data.mmsType.transactionId === '3077.142410').", "mmsType = {\n        transactionId: \"2080.142730\",\n   ", "State: 128,\n        transactionId: '2077.142735845141", "mmsType = {\n        transactionId: \"27.14210\",\n      ", "expect(data.mmsType.transactionId === '2920.1410').as", "mmsType = {\n        transactionId: '2920.1410',\n     "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "messageId", "api_method_all": "messageId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 16, "since": 8, "api_used": "\u662f", "lines": ["mmsType = {\n        messageId: \"0001\",\n        da", "ect(promise.mmsType.messageId === '0001').assertT", "_VERSION_1_1,\n      messageId: \"0001\",\n      to: ", "77.142410\",\n        messageId: \"0001\",\n        da", "ERSION_1_0,\n        messageId: \"0001\",\n        to", "expect(data.mmsType.messageId === '0001').assertT", "ERSION_1_1,\n        messageId: \"0001\",\n        to", "ERSION_1_1,\n        messageId: '0001',\n      };\n "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "date", "api_method_all": "date: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1591, "since": 7, "api_used": "\u662f", "lines": ["_update_test_500: updateCode = \" + updateCod", ".log(`${caseName} updateImsCallMode2 success", "y_CallManager_IMS_updateImsCallMode_Promise_", "_update_test_400: update error = \" + error);", "ogDelete(\"calllog_update_test_500\");\n       ", "ogMessage calllog_update_test_400: updateCod", "            await updateOneCalllog();\n      ", " = await DAHelper.update(calllogUri, common.", "            await updateAllCalllog();\n      ", " updateCode = \" + updateCode);\n             ", "ogMessage calllog_update_test_500: calllogId", "           expect(updateCode == 0).assertTru", "ogMessage calllog_update_test_400: calllogId", ".log(`${caseName} updateImsCallMode2 error,c", "      it(\"calllog_update_test_400\", 0, async", "   async function updateAllCalllog() {\n     ", "pdate(calllogUri, updateValues, condition)\n ", " common.getCallLogUpdateMap();\n             ", "ALL(map, \"calllog_update_test_500\");\n       ", "e    Run function updateImsCallMode by args ", "              var updateCode = await DAHelpe", " = await DAHelper.update(calllogUri, updateV", "ogMessage calllog_update_test_400: update er", "ogMessage calllog_update_test_400 is startin", "ogMessage calllog_update_test_500: updateCod", "ogMessage calllog_update_test_500: calllog i", "              var updateValues = {\n         ", "00';\n        call.updateImsCallMode(CALL_ID_", "      it(\"calllog_update_test_500\", 0, async", "export function validate (error, data, func)", "ogMessage calllog_update_test_500: update er", "_update_test_400: updateCode = \" + updateCod", "   async function updateOneCalllog() {\n     ", "ogDelete(\"calllog_update_test_400\");\n       ", ".log(`${caseName} updateImsCallMode error,ca", ".log(`${caseName} updateImsCallMode success,", "ALL(map, \"calllog_update_test_400\");\n       ", "ogMessage calllog_update_test_500 is startin", "y_CallManager_IMS_updateImsCallMode_Async_07", " common.getCallLogUpdate(), condition);\n    ", "ogMessage calllog_update_test_400: calllog i"], "files": ["Calllog_test.js", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "Stability_test.js", "CallManageAll.test.js", "ContactCard_test.js", "Contacts_test.js", "recovery_test.js", "Performance_test.js", "NetworkSearchErrors.test.js", "Voicemail_test.js", "SimManager.test.js", "ObjectInterface_test.js", "common.js", "SmsMmsError.test.js", "Groups_test.js", "ApiToPromisePerfomance.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "contentType", "api_method_all": "contentType: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 12, "since": 8, "api_used": "\u662f", "lines": ["eport: 129,\n        contentType: \"application/vnd.w", "expect(data.mmsType.contentType === 'application/vn", "'base64',\n          contentType: 'text/plain',\n    ", "(data.attachment[2].contentType === 'image/gif').as", "xt: \"0002\",\n        contentType: \"application/vnd.w", "'base64',\n          contentType: 'image/gif',\n     ", "'base64',\n          contentType: 'application/smil'", "(data.attachment[1].contentType === 'text/plain').a", "(data.attachment[0].contentType === 'application/sm"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "to", "api_method_all": "to: Array<MmsAddress>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2819, "since": 8, "api_used": "\u662f", "lines": [":${\n                toString(error)}`);\n  ", "ny_CallManager_IMS_stopRTT_Promise_0200', ", "angupCall success ${toString(data)}`);\n   ", "tions {\n    constructor (str) {\n        th", "e.log(`${caseName} stopRTT success,case fa", "/Const.js';\nimport {toString} from './lib/", "ase success,error:${toString(error)}`);\n  ", ",case failed,data:${toString(data)}`);\n   ", "bel/runtime/regenerator')\n\nexport default ", "ny_CallManager_IMS_stopRTT_Async_0200', 0,", "l\ninjectRef.regeneratorRuntime = require('", "phony_CallManager ${toString(callAttribute", "tions {\n    constructor (num) {\n        th", "tions {\n    constructor (accountNumber, sp", "me    Run function stopRTT by args callId ", "ny_CallManager_IMS_stopRTT_Async_0200';\n  ", "ny_CallManager_IMS_stopRTT_Promise_0200\n  ", "e.log(`${caseName} stopRTT ${callId} error", "200';\n        call.stopRTT(CALL_ID_NOT_EXI", "tRef = Object.getPrototypeOf(global) || gl", "phony_CallManager ${toString(error)}`);\n  ", "                    toString(error)}`);\n  "], "files": ["ConnectionJsunit.test.ets", "Utils.ets", "Stability_test.js", "SimJsunit.test.ets", "Flex.ets", "SocketJsunit.test.ets", "ScenceInCalling.js", "DataJsunit.test.ets", "Performance_test.js", "Navigator.ets", "WebSocketJsunit.test.ets", "NetworkSearchErrors.test.js", "RadioSecondJsunit.test.ets", "ObjectInterface_test.js", "Text.ets", "Counter.ets", "ScenceLimitCalling.js", "Stack.ets", "Contacts_test.js", "ContactCard_test.js", "Progress.ets", "Panel.ets", "ConvertOptionsJsunit.test.ets", "Badge.ets", "common.js", "Scroll.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "CallJsunit.test.ets", "SimManager.test.js", "ApiToPromise.js", "Rating.ets", "Voicemail_test.js", "ScenceTransfer.js", "GridContainer.ets", "index.js", "StatisticsJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Groups_test.js", "Const.js", "Divider.ets", "ApiToPromisePerfomance.js", "CellularDataAbnorma.test.js", "Calllog_test.js", "Button.ets", "Image.ets", "Column.ets", "ApiToPromiseReliability.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "version", "api_method_all": "version: MmsVersionType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 110, "since": 8, "api_used": "\u662f", "lines": ["ml =\n        '<?xml version=\"1.0\" encoding=\"utf", "var result = '<?xml version=\"1.0\" encoding=\"utf", "n\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "3\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "read_only\", \"0\"], [\"version\", \"1\"], [\"is_prefer", "           map.set(\"version\", \"2\");\n           ", "ccount_id\", \"8\"], [\"version\", \"2\"], [\"sort\", \"8", "d\": 8,\n            \"version\": 2,\n            \"s", "ccount_id\", \"1\"], [\"version\", \"1\"], [\"sort\", \"6", "claration\":{\"123\":{\"version\":\"1.0\",'+\n      '\"e", "d\": 1,\n            \"version\": 1,\n            \"s", "read_only\", \"0\"], [\"version\", \"0\"], [\"is_prefer"], "files": ["SmsMmsJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "SmsMmsError.test.js", "HttpRequestOptionsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "from", "api_method_all": "from?: MmsAddress", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 297, "since": 8, "api_used": "\u662f", "lines": ["", "STATUS_DISCONNECTED from` +\n        ` ${time", " {TEST_RELY_NUMBER} from './Const.js';\n// pa", "\n\nimport {toString} from './ApiToPromise.js'", "ocheck\n\nimport file from '@system.file';\n\nim", "rt ContactClassTest from './contact/ContactC", ".app'\nimport device from '@system.device'\nim", "tLog, ReportExtend} from \"deccjsunit/index.e", "vice'\nimport router from '@system.router'\nim", "import RecoveryTest from './contact/recovery", "'\nimport GroupsTest from './contact/Groups_t", "achCallEventState\n} from './lib/ScenceInCall", "_MODE_DEACTIVATION} from './Const.js';\nimpor", "l';\nimport observer from '@ohos.telephony.ob", ";\nimport {toString} from './lib/ApiToPromise", "L_CONFERENCE_IDLE\n} from './lib/Const.js';\ni", "ort ContactCardTest from './contact/ContactC", "cribe, it, expect } from \"deccjsunit/index\";", "Core, ExpectExtend} from 'deccjsunit/index'\n", "check\nimport router from '@system.router'\n\nv", "ObjectInterfaceTest from './contact/ObjectIn", "NT, PERF_GOAL_TIME} from './Const.js';\nimpor", "\nimport CalllogTest from './contact/Calllog_", ";\nimport {toString} from './ApiToPromise.js'", "import ContactsTest from './contact/Contacts", "AFTER_HANUP_TIMES\n} from './Const.js';\nimpor", "mport VoicemailTest from './contact/Voicemai", "port featureAbility from \"@ohos.ability.feat", "se.js';\nimport call from '@ohos.telephony.ca", "\";\nimport testsuite from \"../test/List.test.", "foreAll, afterEach} from 'deccjsunit/index';", "em.file'\nimport app from '@system.app'\nimpor"], "files": ["ConnectionJsunit.test.ets", "Stability_test.js", "SimJsunit.test.ets", "SocketJsunit.test.ets", "ScenceInCalling.js", "DataJsunit.test.ets", "Performance_test.js", "WebSocketJsunit.test.ets", "RowSplit.ets", "NetworkSearchErrors.test.js", "RadioSecondJsunit.test.ets", "ObjectInterface_test.js", "RadioJsunit.test.ets", "Text.ets", "HttpRequestOptionsJsunit.test.ets", "RequestMethodJsunit.test.ets", "ScenceLimitCalling.js", "Stack.ets", "HttpJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConnectionSecondJsUnit.test.ets", "recovery_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "DataPanel.ets", "ContactClass_test.js", "HttpRequestJsunit.test.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "HttpResponseJsunit.test.ets", "ContacterJsunit.ets", "ResponseCodeJsunit.test.ets", "CallJsunit.test.ets", "ObserverJsunit.test.ets", "SimManager.test.js", "Voicemail_test.js", "ScenceTransfer.js", "index.js", "StatisticsJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Groups_test.js", "ApiToPromisePerfomance.js", "index.ets", "Divider.ets", "CellularDataAbnorma.test.js", "Calllog_test.js", "Button.ets", "ApiToPromiseReliability.js", "List.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "cc", "api_method_all": "cc?: Array<MmsAddress>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 840, "since": 8, "api_used": "\u662f", "lines": ["artTime,\n        isEcc, callType, callId, ", "neOn;\n        this.accountId = accountId;\n", "allPreferenceMode success');\n        } cat", "caseName} stopRTT success,case failed,data", "AttributeOptions.isEcc === IS_ECC).assertT", "combineConference success,case failed,data", "r, speakerphoneOn, accountId, videoState, ", "allId} error,case success,error:${toString", "r enableImsSwitch success');\n            a", "bleLteEnhanceMode success,case failed,data", " afterEach} from 'deccjsunit/index';\nimpor", "    this.isEcc = isEcc;\n        this.callT", "EXIST} error,case success,error:${toString", "eparateConference success,case failed,data", "te) {\n        this.accountNumber = account", "llAttributeOptions.accountId === DEFAULT_S", "lMode2 error,case success,error:${toString", "EXIST} error,case success,error:${\n       ", "ceMode error,case success,error:${toString", "is.accountNumber = accountNumber;\n        ", "anager hangupCall success ${toString(data)", "nhanceModeEnabled success,case failed,data", "{\n    constructor (accountNumber, speakerp", "aseName} startRTT success,case failed,data", "me;\n        this.isEcc = isEcc;\n        th", "  this.accountId = accountId;\n        this", "pectExtend} from 'deccjsunit/index'\n\nconst", "e} joinConference success,case failed,data", "nabled error,case success,error:${toString", "llAttributeOptions.accountNumber === AUTO_"], "files": ["ConnectionJsunit.test.ets", "Stability_test.js", "SimJsunit.test.ets", "SocketJsunit.test.ets", "ScenceInCalling.js", "DataJsunit.test.ets", "Performance_test.js", "WebSocketJsunit.test.ets", "NetworkSearchErrors.test.js", "RadioSecondJsunit.test.ets", "ObjectInterface_test.js", "RadioJsunit.test.ets", "HttpRequestOptionsJsunit.test.ets", "RequestMethodJsunit.test.ets", "ScenceLimitCalling.js", "HttpJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConnectionSecondJsUnit.test.ets", "recovery_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "ContactClass_test.js", "HttpRequestJsunit.test.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "HttpResponseJsunit.test.ets", "ContacterJsunit.ets", "ResponseCodeJsunit.test.ets", "CallJsunit.test.ets", "ObserverJsunit.test.ets", "SimManager.test.js", "Voicemail_test.js", "ScenceTransfer.js", "index.js", "StatisticsJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Groups_test.js", "index.ets", "CellularDataAbnorma.test.js", "Calllog_test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "subject", "api_method_all": "subject?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["\n        },\n        subject: \"Test mms\",\n      ", "        }],\n        subject: \"Test mms\",\n      ", "expect(data.mmsType.subject === 'Test mms').ass"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "priority", "api_method_all": "priority?: MmsPriorityType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.priority === mms.MMS_HIGH).a", "\"Test mms\",\n        priority: mms.MMS_NORMAL,\n  ", "\"Test mms\",\n        priority: mms.MMS_HIGH,\n    ", "expect(data.mmsType.priority === mms.MMS_LOW).as", "expect(data.mmsType.priority === mms.MMS_NORMAL)", "1639378126,\n        priority: mms.MMS_LOW,\n     "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "deliveryReport", "api_method_all": "deliveryReport?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.deliveryReport === 128).assertTrue", "MMS_NORMAL,\n        deliveryReport: 128,\n        readR", "ility: 129,\n        deliveryReport: 128,\n        readR", "\"Test mms\",\n        deliveryReport: 128,\n        conte", "s.MMS_HIGH,\n        deliveryReport: 128,\n        readR"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "readReport", "api_method_all": "readReport?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["eport: 128,\n        readReport: 128,\n        retri", "eport: 128,\n        readReport: 129,\n        conte", "expect(data.mmsType.readReport === 129).assertTrue", "expect(data.mmsType.readReport === 128).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "retrieveStatus", "api_method_all": "retrieveStatus?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.retrieveStatus === 128).assertTrue", "eport: 128,\n        retrieveStatus: 128,\n        retri"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsRetrieveConf", "api_method_name": "retrieveText", "api_method_all": "retrieveText?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["tatus: 128,\n        retrieveText: \"0002\",\n        co", "expect(data.mmsType.retrieveText === '0002').assertT"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAcknowledgeInd", "api_method_all": "export interface MmsAcknowledgeInd {\n    transactionId: string;\n    version: MmsVersionType;\n    reportAllowed?: ReportType;\n  }", "api_method_name": "MmsAcknowledgeInd", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAcknowledgeInd", "api_method_name": "transactionId", "api_method_all": "transactionId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 8, "api_used": "\u662f", "lines": ["expect(data.mmsType.transactionId === '2080.142730').", "mmsType = {\n        transactionId: \"3077.142410\",\n   ", "expect(data.mmsType.transactionId === '2077.142735845", "        }],\n        transactionId: '2077.142735845141", "expect(data.mmsType.transactionId === '27.14210').ass", "expect(data.mmsType.transactionId === '3077.142410').", "mmsType = {\n        transactionId: \"2080.142730\",\n   ", "State: 128,\n        transactionId: '2077.142735845141", "mmsType = {\n        transactionId: \"27.14210\",\n      ", "expect(data.mmsType.transactionId === '2920.1410').as", "mmsType = {\n        transactionId: '2920.1410',\n     "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAcknowledgeInd", "api_method_name": "version", "api_method_all": "version: MmsVersionType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 110, "since": 8, "api_used": "\u662f", "lines": ["ml =\n        '<?xml version=\"1.0\" encoding=\"utf", "var result = '<?xml version=\"1.0\" encoding=\"utf", "n\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "3\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "read_only\", \"0\"], [\"version\", \"1\"], [\"is_prefer", "           map.set(\"version\", \"2\");\n           ", "ccount_id\", \"8\"], [\"version\", \"2\"], [\"sort\", \"8", "d\": 8,\n            \"version\": 2,\n            \"s", "ccount_id\", \"1\"], [\"version\", \"1\"], [\"sort\", \"6", "claration\":{\"123\":{\"version\":\"1.0\",'+\n      '\"e", "d\": 1,\n            \"version\": 1,\n            \"s", "read_only\", \"0\"], [\"version\", \"0\"], [\"is_prefer"], "files": ["SmsMmsJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "SmsMmsError.test.js", "HttpRequestOptionsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAcknowledgeInd", "api_method_name": "reportAllowed", "api_method_all": "reportAllowed?: ReportType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["ERSION_1_0,\n        reportAllowed: mms.MMS_YES,\n     ", "expect(data.mmsType.reportAllowed === mms.MMS_NO).ass", "ERSION_1_2,\n        reportAllowed: mms.MMS_NO,\n      ", "expect(data.mmsType.reportAllowed === mms.MMS_YES).as"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsDeliveryInd", "api_method_all": "export interface MmsDeliveryInd {\n    messageId: string;\n    date: number;\n    to: Array<MmsAddress>;\n    status: number;\n    version: MmsVersionType;\n  }", "api_method_name": "MmsDeliveryInd", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsDeliveryInd", "api_method_name": "messageId", "api_method_all": "messageId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 16, "since": 8, "api_used": "\u662f", "lines": ["mmsType = {\n        messageId: \"0001\",\n        da", "ect(promise.mmsType.messageId === '0001').assertT", "_VERSION_1_1,\n      messageId: \"0001\",\n      to: ", "77.142410\",\n        messageId: \"0001\",\n        da", "ERSION_1_0,\n        messageId: \"0001\",\n        to", "expect(data.mmsType.messageId === '0001').assertT", "ERSION_1_1,\n        messageId: \"0001\",\n        to", "ERSION_1_1,\n        messageId: '0001',\n      };\n "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsDeliveryInd", "api_method_name": "date", "api_method_all": "date: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1591, "since": 7, "api_used": "\u662f", "lines": ["_update_test_500: updateCode = \" + updateCod", ".log(`${caseName} updateImsCallMode2 success", "y_CallManager_IMS_updateImsCallMode_Promise_", "_update_test_400: update error = \" + error);", "ogDelete(\"calllog_update_test_500\");\n       ", "ogMessage calllog_update_test_400: updateCod", "            await updateOneCalllog();\n      ", " = await DAHelper.update(calllogUri, common.", "            await updateAllCalllog();\n      ", " updateCode = \" + updateCode);\n             ", "ogMessage calllog_update_test_500: calllogId", "           expect(updateCode == 0).assertTru", "ogMessage calllog_update_test_400: calllogId", ".log(`${caseName} updateImsCallMode2 error,c", "      it(\"calllog_update_test_400\", 0, async", "   async function updateAllCalllog() {\n     ", "pdate(calllogUri, updateValues, condition)\n ", " common.getCallLogUpdateMap();\n             ", "ALL(map, \"calllog_update_test_500\");\n       ", "e    Run function updateImsCallMode by args ", "              var updateCode = await DAHelpe", " = await DAHelper.update(calllogUri, updateV", "ogMessage calllog_update_test_400: update er", "ogMessage calllog_update_test_400 is startin", "ogMessage calllog_update_test_500: updateCod", "ogMessage calllog_update_test_500: calllog i", "              var updateValues = {\n         ", "00';\n        call.updateImsCallMode(CALL_ID_", "      it(\"calllog_update_test_500\", 0, async", "export function validate (error, data, func)", "ogMessage calllog_update_test_500: update er", "_update_test_400: updateCode = \" + updateCod", "   async function updateOneCalllog() {\n     ", "ogDelete(\"calllog_update_test_400\");\n       ", ".log(`${caseName} updateImsCallMode error,ca", ".log(`${caseName} updateImsCallMode success,", "ALL(map, \"calllog_update_test_400\");\n       ", "ogMessage calllog_update_test_500 is startin", "y_CallManager_IMS_updateImsCallMode_Async_07", " common.getCallLogUpdate(), condition);\n    ", "ogMessage calllog_update_test_400: calllog i"], "files": ["Calllog_test.js", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "Stability_test.js", "CallManageAll.test.js", "ContactCard_test.js", "Contacts_test.js", "recovery_test.js", "Performance_test.js", "NetworkSearchErrors.test.js", "Voicemail_test.js", "SimManager.test.js", "ObjectInterface_test.js", "common.js", "SmsMmsError.test.js", "Groups_test.js", "ApiToPromisePerfomance.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsDeliveryInd", "api_method_name": "to", "api_method_all": "to: Array<MmsAddress>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2819, "since": 8, "api_used": "\u662f", "lines": [":${\n                toString(error)}`);\n  ", "ny_CallManager_IMS_stopRTT_Promise_0200', ", "angupCall success ${toString(data)}`);\n   ", "tions {\n    constructor (str) {\n        th", "e.log(`${caseName} stopRTT success,case fa", "/Const.js';\nimport {toString} from './lib/", "ase success,error:${toString(error)}`);\n  ", ",case failed,data:${toString(data)}`);\n   ", "bel/runtime/regenerator')\n\nexport default ", "ny_CallManager_IMS_stopRTT_Async_0200', 0,", "l\ninjectRef.regeneratorRuntime = require('", "phony_CallManager ${toString(callAttribute", "tions {\n    constructor (num) {\n        th", "tions {\n    constructor (accountNumber, sp", "me    Run function stopRTT by args callId ", "ny_CallManager_IMS_stopRTT_Async_0200';\n  ", "ny_CallManager_IMS_stopRTT_Promise_0200\n  ", "e.log(`${caseName} stopRTT ${callId} error", "200';\n        call.stopRTT(CALL_ID_NOT_EXI", "tRef = Object.getPrototypeOf(global) || gl", "phony_CallManager ${toString(error)}`);\n  ", "                    toString(error)}`);\n  "], "files": ["ConnectionJsunit.test.ets", "Utils.ets", "Stability_test.js", "SimJsunit.test.ets", "Flex.ets", "SocketJsunit.test.ets", "ScenceInCalling.js", "DataJsunit.test.ets", "Performance_test.js", "Navigator.ets", "WebSocketJsunit.test.ets", "NetworkSearchErrors.test.js", "RadioSecondJsunit.test.ets", "ObjectInterface_test.js", "Text.ets", "Counter.ets", "ScenceLimitCalling.js", "Stack.ets", "Contacts_test.js", "ContactCard_test.js", "Progress.ets", "Panel.ets", "ConvertOptionsJsunit.test.ets", "Badge.ets", "common.js", "Scroll.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "CallJsunit.test.ets", "SimManager.test.js", "ApiToPromise.js", "Rating.ets", "Voicemail_test.js", "ScenceTransfer.js", "GridContainer.ets", "index.js", "StatisticsJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Groups_test.js", "Const.js", "Divider.ets", "ApiToPromisePerfomance.js", "CellularDataAbnorma.test.js", "Calllog_test.js", "Button.ets", "Image.ets", "Column.ets", "ApiToPromiseReliability.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsDeliveryInd", "api_method_name": "status", "api_method_all": "status: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 99, "since": 8, "api_used": "\u662f", "lines": ["xiaohong\"], [\"voice_status\", \"0\"]]);\n        v", "4454445254\", \"voice_status\": 0\n            };\n", "            [\"merge_status\", \"1\"], [\"is_merge_", " voice mailbox with status 0 or id and return ", ": \"2800name\", voice_statuss: \"0\"\n             ", "pdate the voicemail status, pass in a non-exis", "             \"voice_status\": 1\n               ", "et the current call status.\n     *            ", "            [\"voice_status\", \"0\"]\n        ]);\n", ": \"xiaofen\", \"voice_status\": 1\n            };\n", "\"xiaohei\"], [\"voice_status\", \"0\"]]);\n        v", " \"xiaoming\", \"voice_status\": 1\n            };\n", "eting the voicemail status, pass in a non-exis", "xiaoming\"], [\"voice_status\", \"0\"]]);\n        v", "  mapOne.set(\"voice_status\", \"1\");\n           ", ": \"1557254\", \"voice_status\": 1\n            };\n", ": \"xiaohei\", \"voice_status\": 0\n            };\n", ": \"xiaohei\", \"voice_status\": 1\n            };\n", " When the voicemail status is added, a non-exi", "   Insert voicemail status 0\n     * @tc.desc  ", " \"xiaoming\", \"voice_status\": 0\n            };\n", "     map.set(\"voice_status\", \"0\");\n           ", "5754445254\", \"voice_status\": 1\n               ", " \"xiaohong\", \"voice_status\": 0\n            };\n", " \"18862013\", \"voice_status\": 0\n            };\n", ": \"2700name\", voice_statuss: \"1\"\n             ", "\"xiaofen\"], [\"voice_status\", \"0\"]]);\n        v", "5444445254\", \"voice_status\": 0\n            };\n", "tion.equalTo(\"voice_status\", \"0\");\n           ", ": \"1557254\", \"voice_status\": 0\n            };\n", "o get the idle call status, call getCallState(", "\"xiaohei\"], [\"voice_status\", \"1\"]]);\n        v", "     map.set(\"voice_status\", \"1\");\n           ", ": \"2800name\", voice_status: \"1\"\n              ", "             \"voice_status\": 0\n               ", "\"100578615\", \"voice_status\": 1\n            };\n", "tion.equalTo(\"voice_status\", \"1\");\n           ", "4452542200\", \"voice_status\": 0\n            };\n", "5754445254\", \"voice_status\": 0\n            };\n"], "files": ["ConnectionJsunit.test.ets", "SmsMmsJsunit.test.ets", "SimJsunit.test.ets", "SocketJsunit.test.ets", "CallManageAll.test.js", "CallJsunit.test.ets", "SimManager.test.js", "RadioSecondJsunit.test.ets", "Voicemail_test.js", "common.js", "SmsMmsError.test.js", "Const.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsDeliveryInd", "api_method_name": "version", "api_method_all": "version: MmsVersionType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 110, "since": 8, "api_used": "\u662f", "lines": ["ml =\n        '<?xml version=\"1.0\" encoding=\"utf", "var result = '<?xml version=\"1.0\" encoding=\"utf", "n\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "3\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "read_only\", \"0\"], [\"version\", \"1\"], [\"is_prefer", "           map.set(\"version\", \"2\");\n           ", "ccount_id\", \"8\"], [\"version\", \"2\"], [\"sort\", \"8", "d\": 8,\n            \"version\": 2,\n            \"s", "ccount_id\", \"1\"], [\"version\", \"1\"], [\"sort\", \"6", "claration\":{\"123\":{\"version\":\"1.0\",'+\n      '\"e", "d\": 1,\n            \"version\": 1,\n            \"s", "read_only\", \"0\"], [\"version\", \"0\"], [\"is_prefer"], "files": ["SmsMmsJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "SmsMmsError.test.js", "HttpRequestOptionsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadOrigInd", "api_method_all": "export interface MmsReadOrigInd {\n    version: MmsVersionType;\n    messageId: string;\n    to: Array<MmsAddress>;\n    from: MmsAddress;\n    date: number;\n    readStatus: number;\n  }", "api_method_name": "MmsReadOrigInd", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadOrigInd", "api_method_name": "version", "api_method_all": "version: MmsVersionType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 110, "since": 8, "api_used": "\u662f", "lines": ["ml =\n        '<?xml version=\"1.0\" encoding=\"utf", "var result = '<?xml version=\"1.0\" encoding=\"utf", "n\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "3\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "read_only\", \"0\"], [\"version\", \"1\"], [\"is_prefer", "           map.set(\"version\", \"2\");\n           ", "ccount_id\", \"8\"], [\"version\", \"2\"], [\"sort\", \"8", "d\": 8,\n            \"version\": 2,\n            \"s", "ccount_id\", \"1\"], [\"version\", \"1\"], [\"sort\", \"6", "claration\":{\"123\":{\"version\":\"1.0\",'+\n      '\"e", "d\": 1,\n            \"version\": 1,\n            \"s", "read_only\", \"0\"], [\"version\", \"0\"], [\"is_prefer"], "files": ["SmsMmsJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "SmsMmsError.test.js", "HttpRequestOptionsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadOrigInd", "api_method_name": "messageId", "api_method_all": "messageId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 16, "since": 8, "api_used": "\u662f", "lines": ["mmsType = {\n        messageId: \"0001\",\n        da", "ect(promise.mmsType.messageId === '0001').assertT", "_VERSION_1_1,\n      messageId: \"0001\",\n      to: ", "77.142410\",\n        messageId: \"0001\",\n        da", "ERSION_1_0,\n        messageId: \"0001\",\n        to", "expect(data.mmsType.messageId === '0001').assertT", "ERSION_1_1,\n        messageId: \"0001\",\n        to", "ERSION_1_1,\n        messageId: '0001',\n      };\n "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadOrigInd", "api_method_name": "to", "api_method_all": "to: Array<MmsAddress>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2819, "since": 8, "api_used": "\u662f", "lines": [":${\n                toString(error)}`);\n  ", "ny_CallManager_IMS_stopRTT_Promise_0200', ", "angupCall success ${toString(data)}`);\n   ", "tions {\n    constructor (str) {\n        th", "e.log(`${caseName} stopRTT success,case fa", "/Const.js';\nimport {toString} from './lib/", "ase success,error:${toString(error)}`);\n  ", ",case failed,data:${toString(data)}`);\n   ", "bel/runtime/regenerator')\n\nexport default ", "ny_CallManager_IMS_stopRTT_Async_0200', 0,", "l\ninjectRef.regeneratorRuntime = require('", "phony_CallManager ${toString(callAttribute", "tions {\n    constructor (num) {\n        th", "tions {\n    constructor (accountNumber, sp", "me    Run function stopRTT by args callId ", "ny_CallManager_IMS_stopRTT_Async_0200';\n  ", "ny_CallManager_IMS_stopRTT_Promise_0200\n  ", "e.log(`${caseName} stopRTT ${callId} error", "200';\n        call.stopRTT(CALL_ID_NOT_EXI", "tRef = Object.getPrototypeOf(global) || gl", "phony_CallManager ${toString(error)}`);\n  ", "                    toString(error)}`);\n  "], "files": ["ConnectionJsunit.test.ets", "Utils.ets", "Stability_test.js", "SimJsunit.test.ets", "Flex.ets", "SocketJsunit.test.ets", "ScenceInCalling.js", "DataJsunit.test.ets", "Performance_test.js", "Navigator.ets", "WebSocketJsunit.test.ets", "NetworkSearchErrors.test.js", "RadioSecondJsunit.test.ets", "ObjectInterface_test.js", "Text.ets", "Counter.ets", "ScenceLimitCalling.js", "Stack.ets", "Contacts_test.js", "ContactCard_test.js", "Progress.ets", "Panel.ets", "ConvertOptionsJsunit.test.ets", "Badge.ets", "common.js", "Scroll.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "CallJsunit.test.ets", "SimManager.test.js", "ApiToPromise.js", "Rating.ets", "Voicemail_test.js", "ScenceTransfer.js", "GridContainer.ets", "index.js", "StatisticsJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Groups_test.js", "Const.js", "Divider.ets", "ApiToPromisePerfomance.js", "CellularDataAbnorma.test.js", "Calllog_test.js", "Button.ets", "Image.ets", "Column.ets", "ApiToPromiseReliability.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadOrigInd", "api_method_name": "from", "api_method_all": "from: MmsAddress", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 297, "since": 8, "api_used": "\u662f", "lines": ["", "STATUS_DISCONNECTED from` +\n        ` ${time", " {TEST_RELY_NUMBER} from './Const.js';\n// pa", "\n\nimport {toString} from './ApiToPromise.js'", "ocheck\n\nimport file from '@system.file';\n\nim", "rt ContactClassTest from './contact/ContactC", ".app'\nimport device from '@system.device'\nim", "tLog, ReportExtend} from \"deccjsunit/index.e", "vice'\nimport router from '@system.router'\nim", "import RecoveryTest from './contact/recovery", "'\nimport GroupsTest from './contact/Groups_t", "achCallEventState\n} from './lib/ScenceInCall", "_MODE_DEACTIVATION} from './Const.js';\nimpor", "l';\nimport observer from '@ohos.telephony.ob", ";\nimport {toString} from './lib/ApiToPromise", "L_CONFERENCE_IDLE\n} from './lib/Const.js';\ni", "ort ContactCardTest from './contact/ContactC", "cribe, it, expect } from \"deccjsunit/index\";", "Core, ExpectExtend} from 'deccjsunit/index'\n", "check\nimport router from '@system.router'\n\nv", "ObjectInterfaceTest from './contact/ObjectIn", "NT, PERF_GOAL_TIME} from './Const.js';\nimpor", "\nimport CalllogTest from './contact/Calllog_", ";\nimport {toString} from './ApiToPromise.js'", "import ContactsTest from './contact/Contacts", "AFTER_HANUP_TIMES\n} from './Const.js';\nimpor", "mport VoicemailTest from './contact/Voicemai", "port featureAbility from \"@ohos.ability.feat", "se.js';\nimport call from '@ohos.telephony.ca", "\";\nimport testsuite from \"../test/List.test.", "foreAll, afterEach} from 'deccjsunit/index';", "em.file'\nimport app from '@system.app'\nimpor"], "files": ["ConnectionJsunit.test.ets", "Stability_test.js", "SimJsunit.test.ets", "SocketJsunit.test.ets", "ScenceInCalling.js", "DataJsunit.test.ets", "Performance_test.js", "WebSocketJsunit.test.ets", "RowSplit.ets", "NetworkSearchErrors.test.js", "RadioSecondJsunit.test.ets", "ObjectInterface_test.js", "RadioJsunit.test.ets", "Text.ets", "HttpRequestOptionsJsunit.test.ets", "RequestMethodJsunit.test.ets", "ScenceLimitCalling.js", "Stack.ets", "HttpJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConnectionSecondJsUnit.test.ets", "recovery_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "DataPanel.ets", "ContactClass_test.js", "HttpRequestJsunit.test.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "HttpResponseJsunit.test.ets", "ContacterJsunit.ets", "ResponseCodeJsunit.test.ets", "CallJsunit.test.ets", "ObserverJsunit.test.ets", "SimManager.test.js", "Voicemail_test.js", "ScenceTransfer.js", "index.js", "StatisticsJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Groups_test.js", "ApiToPromisePerfomance.js", "index.ets", "Divider.ets", "CellularDataAbnorma.test.js", "Calllog_test.js", "Button.ets", "ApiToPromiseReliability.js", "List.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadOrigInd", "api_method_name": "date", "api_method_all": "date: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1591, "since": 7, "api_used": "\u662f", "lines": ["_update_test_500: updateCode = \" + updateCod", ".log(`${caseName} updateImsCallMode2 success", "y_CallManager_IMS_updateImsCallMode_Promise_", "_update_test_400: update error = \" + error);", "ogDelete(\"calllog_update_test_500\");\n       ", "ogMessage calllog_update_test_400: updateCod", "            await updateOneCalllog();\n      ", " = await DAHelper.update(calllogUri, common.", "            await updateAllCalllog();\n      ", " updateCode = \" + updateCode);\n             ", "ogMessage calllog_update_test_500: calllogId", "           expect(updateCode == 0).assertTru", "ogMessage calllog_update_test_400: calllogId", ".log(`${caseName} updateImsCallMode2 error,c", "      it(\"calllog_update_test_400\", 0, async", "   async function updateAllCalllog() {\n     ", "pdate(calllogUri, updateValues, condition)\n ", " common.getCallLogUpdateMap();\n             ", "ALL(map, \"calllog_update_test_500\");\n       ", "e    Run function updateImsCallMode by args ", "              var updateCode = await DAHelpe", " = await DAHelper.update(calllogUri, updateV", "ogMessage calllog_update_test_400: update er", "ogMessage calllog_update_test_400 is startin", "ogMessage calllog_update_test_500: updateCod", "ogMessage calllog_update_test_500: calllog i", "              var updateValues = {\n         ", "00';\n        call.updateImsCallMode(CALL_ID_", "      it(\"calllog_update_test_500\", 0, async", "export function validate (error, data, func)", "ogMessage calllog_update_test_500: update er", "_update_test_400: updateCode = \" + updateCod", "   async function updateOneCalllog() {\n     ", "ogDelete(\"calllog_update_test_400\");\n       ", ".log(`${caseName} updateImsCallMode error,ca", ".log(`${caseName} updateImsCallMode success,", "ALL(map, \"calllog_update_test_400\");\n       ", "ogMessage calllog_update_test_500 is startin", "y_CallManager_IMS_updateImsCallMode_Async_07", " common.getCallLogUpdate(), condition);\n    ", "ogMessage calllog_update_test_400: calllog i"], "files": ["Calllog_test.js", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "Stability_test.js", "CallManageAll.test.js", "ContactCard_test.js", "Contacts_test.js", "recovery_test.js", "Performance_test.js", "NetworkSearchErrors.test.js", "Voicemail_test.js", "SimManager.test.js", "ObjectInterface_test.js", "common.js", "SmsMmsError.test.js", "Groups_test.js", "ApiToPromisePerfomance.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadOrigInd", "api_method_name": "readStatus", "api_method_all": "readStatus: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["\n        },\n        readStatus: 129,\n        date:", ": 1639378126,\n      readStatus: 129,\n    };\n    tr", "expect(data.mmsType.readStatus === 129).assertTrue", "1639378126,\n        readStatus: 128,\n      };\n    ", ": sms.UTF_8},\n      readStatus: 129,\n      date: 1", "expect(data.mmsType.readStatus === 128).assertTrue", "ect(promise.mmsType.readStatus === 129).assertTrue"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadRecInd", "api_method_all": "export interface MmsReadRecInd {\n    version: MmsVersionType;\n    messageId: string;\n    to: Array<MmsAddress>;\n    from: MmsAddress;\n    readStatus: number;\n    date?: number;\n  }", "api_method_name": "MmsReadRecInd", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadRecInd", "api_method_name": "version", "api_method_all": "version: MmsVersionType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 110, "since": 8, "api_used": "\u662f", "lines": ["ml =\n        '<?xml version=\"1.0\" encoding=\"utf", "var result = '<?xml version=\"1.0\" encoding=\"utf", "n\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "3\":{\"_attributes\":{\"version\":\"1.0\",'+\n      '\"e", "read_only\", \"0\"], [\"version\", \"1\"], [\"is_prefer", "           map.set(\"version\", \"2\");\n           ", "ccount_id\", \"8\"], [\"version\", \"2\"], [\"sort\", \"8", "d\": 8,\n            \"version\": 2,\n            \"s", "ccount_id\", \"1\"], [\"version\", \"1\"], [\"sort\", \"6", "claration\":{\"123\":{\"version\":\"1.0\",'+\n      '\"e", "d\": 1,\n            \"version\": 1,\n            \"s", "read_only\", \"0\"], [\"version\", \"0\"], [\"is_prefer"], "files": ["SmsMmsJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "SmsMmsError.test.js", "HttpRequestOptionsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadRecInd", "api_method_name": "messageId", "api_method_all": "messageId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 16, "since": 8, "api_used": "\u662f", "lines": ["mmsType = {\n        messageId: \"0001\",\n        da", "ect(promise.mmsType.messageId === '0001').assertT", "_VERSION_1_1,\n      messageId: \"0001\",\n      to: ", "77.142410\",\n        messageId: \"0001\",\n        da", "ERSION_1_0,\n        messageId: \"0001\",\n        to", "expect(data.mmsType.messageId === '0001').assertT", "ERSION_1_1,\n        messageId: \"0001\",\n        to", "ERSION_1_1,\n        messageId: '0001',\n      };\n "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadRecInd", "api_method_name": "to", "api_method_all": "to: Array<MmsAddress>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2819, "since": 8, "api_used": "\u662f", "lines": [":${\n                toString(error)}`);\n  ", "ny_CallManager_IMS_stopRTT_Promise_0200', ", "angupCall success ${toString(data)}`);\n   ", "tions {\n    constructor (str) {\n        th", "e.log(`${caseName} stopRTT success,case fa", "/Const.js';\nimport {toString} from './lib/", "ase success,error:${toString(error)}`);\n  ", ",case failed,data:${toString(data)}`);\n   ", "bel/runtime/regenerator')\n\nexport default ", "ny_CallManager_IMS_stopRTT_Async_0200', 0,", "l\ninjectRef.regeneratorRuntime = require('", "phony_CallManager ${toString(callAttribute", "tions {\n    constructor (num) {\n        th", "tions {\n    constructor (accountNumber, sp", "me    Run function stopRTT by args callId ", "ny_CallManager_IMS_stopRTT_Async_0200';\n  ", "ny_CallManager_IMS_stopRTT_Promise_0200\n  ", "e.log(`${caseName} stopRTT ${callId} error", "200';\n        call.stopRTT(CALL_ID_NOT_EXI", "tRef = Object.getPrototypeOf(global) || gl", "phony_CallManager ${toString(error)}`);\n  ", "                    toString(error)}`);\n  "], "files": ["ConnectionJsunit.test.ets", "Utils.ets", "Stability_test.js", "SimJsunit.test.ets", "Flex.ets", "SocketJsunit.test.ets", "ScenceInCalling.js", "DataJsunit.test.ets", "Performance_test.js", "Navigator.ets", "WebSocketJsunit.test.ets", "NetworkSearchErrors.test.js", "RadioSecondJsunit.test.ets", "ObjectInterface_test.js", "Text.ets", "Counter.ets", "ScenceLimitCalling.js", "Stack.ets", "Contacts_test.js", "ContactCard_test.js", "Progress.ets", "Panel.ets", "ConvertOptionsJsunit.test.ets", "Badge.ets", "common.js", "Scroll.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "CallJsunit.test.ets", "SimManager.test.js", "ApiToPromise.js", "Rating.ets", "Voicemail_test.js", "ScenceTransfer.js", "GridContainer.ets", "index.js", "StatisticsJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Groups_test.js", "Const.js", "Divider.ets", "ApiToPromisePerfomance.js", "CellularDataAbnorma.test.js", "Calllog_test.js", "Button.ets", "Image.ets", "Column.ets", "ApiToPromiseReliability.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadRecInd", "api_method_name": "from", "api_method_all": "from: MmsAddress", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 297, "since": 8, "api_used": "\u662f", "lines": ["", "STATUS_DISCONNECTED from` +\n        ` ${time", " {TEST_RELY_NUMBER} from './Const.js';\n// pa", "\n\nimport {toString} from './ApiToPromise.js'", "ocheck\n\nimport file from '@system.file';\n\nim", "rt ContactClassTest from './contact/ContactC", ".app'\nimport device from '@system.device'\nim", "tLog, ReportExtend} from \"deccjsunit/index.e", "vice'\nimport router from '@system.router'\nim", "import RecoveryTest from './contact/recovery", "'\nimport GroupsTest from './contact/Groups_t", "achCallEventState\n} from './lib/ScenceInCall", "_MODE_DEACTIVATION} from './Const.js';\nimpor", "l';\nimport observer from '@ohos.telephony.ob", ";\nimport {toString} from './lib/ApiToPromise", "L_CONFERENCE_IDLE\n} from './lib/Const.js';\ni", "ort ContactCardTest from './contact/ContactC", "cribe, it, expect } from \"deccjsunit/index\";", "Core, ExpectExtend} from 'deccjsunit/index'\n", "check\nimport router from '@system.router'\n\nv", "ObjectInterfaceTest from './contact/ObjectIn", "NT, PERF_GOAL_TIME} from './Const.js';\nimpor", "\nimport CalllogTest from './contact/Calllog_", ";\nimport {toString} from './ApiToPromise.js'", "import ContactsTest from './contact/Contacts", "AFTER_HANUP_TIMES\n} from './Const.js';\nimpor", "mport VoicemailTest from './contact/Voicemai", "port featureAbility from \"@ohos.ability.feat", "se.js';\nimport call from '@ohos.telephony.ca", "\";\nimport testsuite from \"../test/List.test.", "foreAll, afterEach} from 'deccjsunit/index';", "em.file'\nimport app from '@system.app'\nimpor"], "files": ["ConnectionJsunit.test.ets", "Stability_test.js", "SimJsunit.test.ets", "SocketJsunit.test.ets", "ScenceInCalling.js", "DataJsunit.test.ets", "Performance_test.js", "WebSocketJsunit.test.ets", "RowSplit.ets", "NetworkSearchErrors.test.js", "RadioSecondJsunit.test.ets", "ObjectInterface_test.js", "RadioJsunit.test.ets", "Text.ets", "HttpRequestOptionsJsunit.test.ets", "RequestMethodJsunit.test.ets", "ScenceLimitCalling.js", "Stack.ets", "HttpJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConnectionSecondJsUnit.test.ets", "recovery_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "DataPanel.ets", "ContactClass_test.js", "HttpRequestJsunit.test.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "HttpResponseJsunit.test.ets", "ContacterJsunit.ets", "ResponseCodeJsunit.test.ets", "CallJsunit.test.ets", "ObserverJsunit.test.ets", "SimManager.test.js", "Voicemail_test.js", "ScenceTransfer.js", "index.js", "StatisticsJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Groups_test.js", "ApiToPromisePerfomance.js", "index.ets", "Divider.ets", "CellularDataAbnorma.test.js", "Calllog_test.js", "Button.ets", "ApiToPromiseReliability.js", "List.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadRecInd", "api_method_name": "readStatus", "api_method_all": "readStatus: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["\n        },\n        readStatus: 129,\n        date:", ": 1639378126,\n      readStatus: 129,\n    };\n    tr", "expect(data.mmsType.readStatus === 129).assertTrue", "1639378126,\n        readStatus: 128,\n      };\n    ", ": sms.UTF_8},\n      readStatus: 129,\n      date: 1", "expect(data.mmsType.readStatus === 128).assertTrue", "ect(promise.mmsType.readStatus === 129).assertTrue"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsReadRecInd", "api_method_name": "date", "api_method_all": "date?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1591, "since": 7, "api_used": "\u662f", "lines": ["_update_test_500: updateCode = \" + updateCod", ".log(`${caseName} updateImsCallMode2 success", "y_CallManager_IMS_updateImsCallMode_Promise_", "_update_test_400: update error = \" + error);", "ogDelete(\"calllog_update_test_500\");\n       ", "ogMessage calllog_update_test_400: updateCod", "            await updateOneCalllog();\n      ", " = await DAHelper.update(calllogUri, common.", "            await updateAllCalllog();\n      ", " updateCode = \" + updateCode);\n             ", "ogMessage calllog_update_test_500: calllogId", "           expect(updateCode == 0).assertTru", "ogMessage calllog_update_test_400: calllogId", ".log(`${caseName} updateImsCallMode2 error,c", "      it(\"calllog_update_test_400\", 0, async", "   async function updateAllCalllog() {\n     ", "pdate(calllogUri, updateValues, condition)\n ", " common.getCallLogUpdateMap();\n             ", "ALL(map, \"calllog_update_test_500\");\n       ", "e    Run function updateImsCallMode by args ", "              var updateCode = await DAHelpe", " = await DAHelper.update(calllogUri, updateV", "ogMessage calllog_update_test_400: update er", "ogMessage calllog_update_test_400 is startin", "ogMessage calllog_update_test_500: updateCod", "ogMessage calllog_update_test_500: calllog i", "              var updateValues = {\n         ", "00';\n        call.updateImsCallMode(CALL_ID_", "      it(\"calllog_update_test_500\", 0, async", "export function validate (error, data, func)", "ogMessage calllog_update_test_500: update er", "_update_test_400: updateCode = \" + updateCod", "   async function updateOneCalllog() {\n     ", "ogDelete(\"calllog_update_test_400\");\n       ", ".log(`${caseName} updateImsCallMode error,ca", ".log(`${caseName} updateImsCallMode success,", "ALL(map, \"calllog_update_test_400\");\n       ", "ogMessage calllog_update_test_500 is startin", "y_CallManager_IMS_updateImsCallMode_Async_07", " common.getCallLogUpdate(), condition);\n    ", "ogMessage calllog_update_test_400: calllog i"], "files": ["Calllog_test.js", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "Stability_test.js", "CallManageAll.test.js", "ContactCard_test.js", "Contacts_test.js", "recovery_test.js", "Performance_test.js", "NetworkSearchErrors.test.js", "Voicemail_test.js", "SimManager.test.js", "ObjectInterface_test.js", "common.js", "SmsMmsError.test.js", "Groups_test.js", "ApiToPromisePerfomance.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAttachment", "api_method_all": "export interface MmsAttachment {\n    contentId: string;\n    contentLocation: string;\n    contentDisposition: DispositionType;\n    contentTransferEncoding: string;\n    contentType: string;\n    isSmil: boolean;\n    path?: string;\n    inBuff?: Array<number>;\n    fileName?: string;\n    charset?: MmsCharSets;\n  }", "api_method_name": "MmsAttachment", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAttachment", "api_method_name": "contentId", "api_method_all": "contentId: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["nt.text',\n          contentId: '<content.text>',\n", "ure.gif',\n          contentId: '<picture.gif>',\n ", "(data.attachment[2].contentId === '<picture.gif>'", "(data.attachment[1].contentId === '<content.text>", "(data.attachment[0].contentId === '<0000>').asser", "89.smil',\n          contentId: '<0000>',\n        "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAttachment", "api_method_name": "contentLocation", "api_method_all": "contentLocation: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["(data.attachment[2].contentLocation === 'picture.gif').", "expect(data.mmsType.contentLocation === 'Test').assertT", "'<0000>',\n          contentLocation: '618C0A89.smil',\n ", "(data.attachment[0].contentLocation === '618C0A89.smil'", "eport: 128,\n        contentLocation: \"Test\",\n        co", "re.gif>',\n          contentLocation: 'picture.gif',\n   ", "t.text>',\n          contentLocation: 'content.text',\n  ", "(data.attachment[1].contentLocation === 'content.text')"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAttachment", "api_method_name": "contentDisposition", "api_method_all": "contentDisposition: DispositionType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["nt.text',\n          contentDisposition: mms.FROM_DATA,\n   ", "(data.attachment[2].contentDisposition === mms.INLINE).ass", "(data.attachment[0].contentDisposition === mms.ATTACHMENT)", "ure.gif',\n          contentDisposition: mms.INLINE,\n      ", "89.smil',\n          contentDisposition: mms.ATTACHMENT,\n  ", "(data.attachment[1].contentDisposition === mms.FROM_DATA)."], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAttachment", "api_method_name": "contentTransferEncoding", "api_method_all": "contentTransferEncoding: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["(data.attachment[2].contentTransferEncoding === 'base64').asser", "(data.attachment[0].contentTransferEncoding === 'base64').asser", "TACHMENT,\n          contentTransferEncoding: 'base64',\n        ", "ROM_DATA,\n          contentTransferEncoding: 'base64',\n        ", "s.INLINE,\n          contentTransferEncoding: 'base64',\n        ", "(data.attachment[1].contentTransferEncoding === 'base64').asser"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAttachment", "api_method_name": "contentType", "api_method_all": "contentType: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 12, "since": 8, "api_used": "\u662f", "lines": ["eport: 129,\n        contentType: \"application/vnd.w", "expect(data.mmsType.contentType === 'application/vn", "'base64',\n          contentType: 'text/plain',\n    ", "(data.attachment[2].contentType === 'image/gif').as", "xt: \"0002\",\n        contentType: \"application/vnd.w", "'base64',\n          contentType: 'image/gif',\n     ", "'base64',\n          contentType: 'application/smil'", "(data.attachment[1].contentType === 'text/plain').a", "(data.attachment[0].contentType === 'application/sm"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAttachment", "api_method_name": "isSmil", "api_method_all": "isSmil: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["(data.attachment[0].isSmil).assertTrue();\n    ", "on/smil',\n          isSmil: true,\n          in", "age/gif',\n          isSmil: false,\n          i", "(data.attachment[2].isSmil).assertFalse();\n   ", "(data.attachment[1].isSmil).assertFalse();\n   ", "t/plain',\n          isSmil: false,\n          i"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAttachment", "api_method_name": "path", "api_method_all": "path?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 11, "since": 8, "api_used": "\u662f", "lines": ["(data.attachment[1].path === '').assertTrue(", "        {\n          path: '/data/telephony/e", "            by args path IMAGE_LOCAL_ERROR_P", "(data.attachment[2].path === '').assertTrue(", "\n     *             path IMAGE_LOCAL_ERROR_P", "(data.attachment[0].path === '').assertTrue(", "callManager/notexistpath.png';\nexport const ", "ng in the exception path, Parse failure\n   *"], "files": ["CallManageAll.test.js", "SmsMmsError.test.js", "SmsMmsJsunit.test.ets", "Const.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAttachment", "api_method_name": "inBuff", "api_method_all": "inBuff?: Array<number>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["(data.attachment[0].inBuff.length > 0).assertT", "(data.attachment[2].inBuff.length > 0).assertT", "l: false,\n          inBuff: [],\n          char", "il: true,\n          inBuff: [],\n          char", "(data.attachment[1].inBuff.length > 0).assertT"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAttachment", "api_method_name": "fileName", "api_method_all": "fileName?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["(data.attachment[2].fileName === 'picture.gif').", "(data.attachment[1].fileName === 'content.text')", "(data.attachment[0].fileName === '618C0A89.smil'", "nt.text',\n          fileName: 'content.text',\n  ", "89.smil',\n          fileName: '618C0A89.smil',\n ", "ure.gif',\n          fileName: 'picture.gif',\n   "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAttachment", "api_method_name": "charset", "api_method_all": "charset?: MmsCharSets", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 46, "since": 8, "api_used": "\u662f", "lines": ["234****/TYPE=PLMN', charset: mms.UTF_8\n        ", "(data.attachment[1].charset === mms.UTF_8).asse", "(data.attachment[2].charset === mms.UTF_8).asse", "234****/TYPE=PLMN\", charset: sms.UTF_8},\n      ", "t(data.mmsType.from.charset === sms.UTF_8).asse", "888****/TYPE=PLMN\", charset: mms.UTF_8\n        ", "(data.mmsType.cc[0].charset === mms.UTF_8).asse", "romise.mmsType.from.charset === sms.UTF_8).asse", "t(data.mmsType.from.charset === mms.UTF_8).asse", "234****/TYPE=PLMN\", charset: mms.UTF_8\n        ", "data.mmsType.bcc[0].charset === mms.UTF_8).asse", "222****/TYPE=PLMN\", charset: mms.UTF_8\n        ", "(data.mmsType.to[0].charset === sms.UTF_8).asse", "888****/TYPE=PLMN', charset: mms.UTF_8\n        ", "111****/TYPE=PLMN', charset: mms.UTF_8\n        ", "(data.mmsType.to[0].charset === mms.UTF_8).asse", "888****/TYPE=PLMN\", charset: sms.UTF_8}],\n     ", "(data.mmsType.cc[0].charset == mms.UTF_8).asser", "(data.attachment[0].charset === mms.UTF_8).asse", "Buff: [],\n          charset: mms.UTF_8\n        ", "omise.mmsType.to[0].charset === sms.UTF_8).asse", "111****/TYPE=PLMN\", charset: mms.UTF_8\n        "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAddress", "api_method_all": "export interface MmsAddress {\n    address: string;\n    charset: MmsCharSets;\n  }", "api_method_name": "MmsAddress", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAddress", "api_method_name": "address", "api_method_all": "address: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 138, "since": 8, "api_used": "\u662f", "lines": ["                    address: {\n                ", "     address: \"test address\",\n        family: 1", "contact_data postal_address insert error = \" + ", "me to obtain all IP addresses based on the defa", "                    address: \"192.168.1.3\"\n    ", "     : Binds the IP address and port number.\n  ", "le.getAddressByName(addressBaidu, (error, value", "dress: \"second test address\"\n      }\n      sock", "tent_type\": \"postal_address\",\n                \"", "Address = {\n        address: \"second test addre", "test data\",\n        address: {\n          addres", "     address: \"test address\",\n        family: '", "s.address === \"test address\").assertTrue()\n    ", " = 1 data is postal_address\n            conditi", "                    address: \"192.168.1.2\"\n    ", "ddress: {\n          address: \"test address\",\n  ", "  expect(netAddress.address === \"test address\")", "wContactId, \"postal_address\", \"dddd\", \"\");\n    ", "Options = {\n        address: {\n          addres", "                    address: \"192.168.1.1\"\n    ", ".getAddressesByName(addressBaidu, (error, value", "_data in batches of address book\n     * @tc.des", "tent_type\": \"postal_address\",\n                 ", "Address = {\n        address: \"test address\",\n  ", "oteInfo = {\n        address: \"test address\",\n  ", "     address: \"test address\",\n          family:"], "files": ["ConnectionJsunit.test.ets", "SmsMmsJsunit.test.ets", "SocketJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConnectionSecondJsUnit.test.ets", "SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsAddress", "api_method_name": "charset", "api_method_all": "charset: MmsCharSets", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 46, "since": 8, "api_used": "\u662f", "lines": ["234****/TYPE=PLMN', charset: mms.UTF_8\n        ", "(data.attachment[1].charset === mms.UTF_8).asse", "(data.attachment[2].charset === mms.UTF_8).asse", "234****/TYPE=PLMN\", charset: sms.UTF_8},\n      ", "t(data.mmsType.from.charset === sms.UTF_8).asse", "888****/TYPE=PLMN\", charset: mms.UTF_8\n        ", "(data.mmsType.cc[0].charset === mms.UTF_8).asse", "romise.mmsType.from.charset === sms.UTF_8).asse", "t(data.mmsType.from.charset === mms.UTF_8).asse", "234****/TYPE=PLMN\", charset: mms.UTF_8\n        ", "data.mmsType.bcc[0].charset === mms.UTF_8).asse", "222****/TYPE=PLMN\", charset: mms.UTF_8\n        ", "(data.mmsType.to[0].charset === sms.UTF_8).asse", "888****/TYPE=PLMN', charset: mms.UTF_8\n        ", "111****/TYPE=PLMN', charset: mms.UTF_8\n        ", "(data.mmsType.to[0].charset === mms.UTF_8).asse", "888****/TYPE=PLMN\", charset: sms.UTF_8}],\n     ", "(data.mmsType.cc[0].charset == mms.UTF_8).asser", "(data.attachment[0].charset === mms.UTF_8).asse", "Buff: [],\n          charset: mms.UTF_8\n        ", "omise.mmsType.to[0].charset === sms.UTF_8).asse", "111****/TYPE=PLMN\", charset: mms.UTF_8\n        "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageType", "api_method_all": "export enum MessageType {\n    TYPE_MMS_SEND_REQ = 128,\n    TYPE_MMS_SEND_CONF,\n    TYPE_MMS_NOTIFICATION_IND,\n    TYPE_MMS_RESP_IND,\n    TYPE_MMS_RETRIEVE_CONF,\n    TYPE_MMS_ACKNOWLEDGE_IND,\n    TYPE_MMS_DELIVERY_IND,\n    TYPE_MMS_READ_REC_IND,\n    TYPE_MMS_READ_ORIG_IND,\n  }", "api_method_name": "MessageType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MessageType", "api_method_name": "TYPE_MMS_SEND_REQ", "api_method_all": "TYPE_MMS_SEND_REQ = 128,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["   messageType: mms.TYPE_MMS_SEND_REQ, mmsType, attachmen", "messageType === mms.TYPE_MMS_SEND_REQ).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageType", "api_method_name": "TYPE_MMS_SEND_CONF", "api_method_all": "TYPE_MMS_SEND_CONF,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["messageType === mms.TYPE_MMS_SEND_CONF).assertTrue();\n    ", "   messageType: mms.TYPE_MMS_SEND_CONF, mmsType\n      }, ("], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageType", "api_method_name": "TYPE_MMS_NOTIFICATION_IND", "api_method_all": "TYPE_MMS_NOTIFICATION_IND,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["messageType === mms.TYPE_MMS_NOTIFICATION_IND).assertTrue();\n    ", "   messageType: mms.TYPE_MMS_NOTIFICATION_IND, mmsType\n      }, ("], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageType", "api_method_name": "TYPE_MMS_RESP_IND", "api_method_all": "TYPE_MMS_RESP_IND,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["messageType === mms.TYPE_MMS_RESP_IND).assertTrue();\n    ", "   messageType: mms.TYPE_MMS_RESP_IND, mmsType\n      }, ("], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageType", "api_method_name": "TYPE_MMS_RETRIEVE_CONF", "api_method_all": "TYPE_MMS_RETRIEVE_CONF,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["   messageType: mms.TYPE_MMS_RETRIEVE_CONF, mmsType\n      }, (", "messageType === mms.TYPE_MMS_RETRIEVE_CONF).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageType", "api_method_name": "TYPE_MMS_ACKNOWLEDGE_IND", "api_method_all": "TYPE_MMS_ACKNOWLEDGE_IND,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["messageType === mms.TYPE_MMS_ACKNOWLEDGE_IND).assertTrue();\n    ", "   messageType: mms.TYPE_MMS_ACKNOWLEDGE_IND, mmsType\n      }, ("], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageType", "api_method_name": "TYPE_MMS_DELIVERY_IND", "api_method_all": "TYPE_MMS_DELIVERY_IND,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["   messageType: mms.TYPE_MMS_DELIVERY_IND, mmsType\n      }, (", "messageType === mms.TYPE_MMS_DELIVERY_IND).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageType", "api_method_name": "TYPE_MMS_READ_REC_IND", "api_method_all": "TYPE_MMS_READ_REC_IND,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["   messageType: mms.TYPE_MMS_READ_REC_IND, mmsType\n      }, (", "messageType === mms.TYPE_MMS_READ_REC_IND).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MessageType", "api_method_name": "TYPE_MMS_READ_ORIG_IND", "api_method_all": "TYPE_MMS_READ_ORIG_IND,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["   messageType: mms.TYPE_MMS_READ_ORIG_IND, mmsType\n      }, (", "messageType === sms.TYPE_MMS_READ_ORIG_IND).assertTrue();\n    ", "s({messageType: sms.TYPE_MMS_READ_ORIG_IND, mmsType});\n      e", "s({messageType: sms.TYPE_MMS_READ_ORIG_IND, mmsType}, (err, en", "messageType === mms.TYPE_MMS_READ_ORIG_IND).assertTrue();\n    "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsPriorityType", "api_method_all": "export enum MmsPriorityType {\n    MMS_LOW = 128,\n    MMS_NORMAL,\n    MMS_HIGH,\n  }", "api_method_name": "MmsPriorityType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsPriorityType", "api_method_name": "MMS_LOW", "api_method_all": "MMS_LOW = 128,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["      priority: mms.MMS_LOW,\n        senderVisi", "pe.priority === mms.MMS_LOW).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsPriorityType", "api_method_name": "MMS_NORMAL", "api_method_all": "MMS_NORMAL,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["      priority: mms.MMS_NORMAL,\n        deliveryRe", "pe.priority === mms.MMS_NORMAL).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsPriorityType", "api_method_name": "MMS_HIGH", "api_method_all": "MMS_HIGH,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["      priority: mms.MMS_HIGH,\n        deliveryRe", "pe.priority === mms.MMS_HIGH).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsVersionType", "api_method_all": "export enum MmsVersionType {\n    MMS_VERSION_1_0 = 0x10,\n    MMS_VERSION_1_1,\n    MMS_VERSION_1_2,\n    MMS_VERSION_1_3,\n  }", "api_method_name": "MmsVersionType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "MmsVersionType", "api_method_name": "MMS_VERSION_1_0", "api_method_all": "MMS_VERSION_1_0 = 0x10,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["       version: mms.MMS_VERSION_1_0,\n        messageId:", "       version: mms.MMS_VERSION_1_0,\n        reportAllo", "ype.version === mms.MMS_VERSION_1_0).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsVersionType", "api_method_name": "MMS_VERSION_1_1", "api_method_all": "MMS_VERSION_1_1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 8, "since": 8, "api_used": "\u662f", "lines": ["       version: mms.MMS_VERSION_1_1,\n        messageId:", "\n      version: sms.MMS_VERSION_1_1,\n      messageId: \"", "ype.version === mms.MMS_VERSION_1_1).assertTrue();\n    ", "ype.version === sms.MMS_VERSION_1_1).assertTrue();\n    "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsVersionType", "api_method_name": "MMS_VERSION_1_2", "api_method_all": "MMS_VERSION_1_2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 10, "since": 8, "api_used": "\u662f", "lines": ["       version: mms.MMS_VERSION_1_2,\n        to: [{\n   ", "ype.version === mms.MMS_VERSION_1_2).assertTrue();\n    ", "       version: mms.MMS_VERSION_1_2,\n        reportAllo", "       version: mms.MMS_VERSION_1_2,\n      };\n      mms", "       version: mms.MMS_VERSION_1_2,\n        date: 1639"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsVersionType", "api_method_name": "MMS_VERSION_1_3", "api_method_all": "MMS_VERSION_1_3,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["ype.version === mms.MMS_VERSION_1_3).assertTrue();\n    ", "       version: mms.MMS_VERSION_1_3,\n        \"from\": {\n"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_all": "export enum MmsCharSets {\n    BIG5 = 0X07EA,\n    ISO_10646_UCS_2 = 0X03E8,\n    ISO_8859_1 = 0X04,\n    ISO_8859_2,\n    ISO_8859_3,\n    ISO_8859_4,\n    ISO_8859_5,\n    ISO_8859_6,\n    ISO_8859_7,\n    ISO_8859_8,\n    ISO_8859_9,\n    SHIFT_JIS = 0X11,\n    US_ASCII = 0X03,\n    UTF_8 = 0X6A,\n  }", "api_method_name": "MmsCharSets", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["Telephony_SmsMms_getMmsCharSets_Async_0100\n   * @tc", "Telephony_SmsMms_getMmsCharSets_Async_0100', 0, asy"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "BIG5", "api_method_all": "BIG5 = 0X07EA,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [" }\n      expect(sms.BIG5 == 0X07EA).assertTr"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "ISO_10646_UCS_2", "api_method_all": "ISO_10646_UCS_2 = 0X03E8,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [");\n      expect(sms.ISO_10646_UCS_2 == 0X03E8).assertTr"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "ISO_8859_1", "api_method_all": "ISO_8859_1 = 0X04,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [");\n      expect(sms.ISO_8859_1 == 0X04).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "ISO_8859_2", "api_method_all": "ISO_8859_2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [");\n      expect(sms.ISO_8859_2 == 0X05).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "ISO_8859_3", "api_method_all": "ISO_8859_3,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [");\n      expect(sms.ISO_8859_3 == 0X06).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "ISO_8859_4", "api_method_all": "ISO_8859_4,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [");\n      expect(sms.ISO_8859_4 == 0X07).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "ISO_8859_5", "api_method_all": "ISO_8859_5,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [");\n      expect(sms.ISO_8859_5 == 0X08).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "ISO_8859_6", "api_method_all": "ISO_8859_6,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [");\n      expect(sms.ISO_8859_6 == 0X09).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "ISO_8859_7", "api_method_all": "ISO_8859_7,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [");\n      expect(sms.ISO_8859_7 == 0X10).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "ISO_8859_8", "api_method_all": "ISO_8859_8,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [");\n      expect(sms.ISO_8859_8 == 0X12).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "ISO_8859_9", "api_method_all": "ISO_8859_9,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [");\n      expect(sms.ISO_8859_9 == 0X13).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "SHIFT_JIS", "api_method_all": "SHIFT_JIS = 0X11,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [");\n      expect(sms.SHIFT_JIS == 0X11).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "US_ASCII", "api_method_all": "US_ASCII = 0X03,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": [");\n      expect(sms.US_ASCII == 0X03).assertTrue"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "MmsCharSets", "api_method_name": "UTF_8", "api_method_all": "UTF_8 = 0X6A,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 47, "since": 8, "api_used": "\u662f", "lines": ["rom.charset === mms.UTF_8).assertTrue();\n    ", "PLMN\", charset: mms.UTF_8\n        },\n        ", "PLMN\", charset: sms.UTF_8},\n      readStatus:", "       charset: mms.UTF_8\n        },\n        ", "[1].charset === mms.UTF_8).assertTrue();\n    ", "PLMN\", charset: sms.UTF_8},\n      date: 16393", "PLMN\", charset: mms.UTF_8\n              }],\n ", "PLMN', charset: mms.UTF_8\n             }],\n  ", "rom.charset === sms.UTF_8).assertTrue();\n    ", "c[0].charset == mms.UTF_8).assertTrue();\n    ", "[2].charset === mms.UTF_8).assertTrue();\n    ", "PLMN\", charset: mms.UTF_8\n             }],\n  ", "       charset: mms.UTF_8\n        }];\n\n      ", "PLMN', charset: mms.UTF_8\n        },\n        ", "[0].charset === mms.UTF_8).assertTrue();\n    ", ");\n      expect(sms.UTF_8 == 0X6A).assertTrue", "[0].charset === sms.UTF_8).assertTrue();\n    ", "PLMN\", charset: sms.UTF_8}],\n      \"from\": {a"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "DispositionType", "api_method_all": "export enum DispositionType {\n    FROM_DATA = 0,\n    ATTACHMENT,\n    INLINE,\n  }", "api_method_name": "DispositionType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "DispositionType", "api_method_name": "FROM_DATA", "api_method_all": "FROM_DATA = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["entDisposition: mms.FROM_DATA,\n          contentT", "Disposition === mms.FROM_DATA).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "DispositionType", "api_method_name": "ATTACHMENT", "api_method_all": "ATTACHMENT,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["entDisposition: mms.ATTACHMENT,\n          contentT", "Disposition === mms.ATTACHMENT).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "DispositionType", "api_method_name": "INLINE", "api_method_all": "INLINE,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["Disposition === mms.INLINE).assertTrue();\n    ", "entDisposition: mms.INLINE,\n          contentT"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ReportType", "api_method_all": "export enum ReportType {\n    MMS_YES = 128,\n    MMS_NO,\n  }", "api_method_name": "ReportType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ReportType", "api_method_name": "MMS_YES", "api_method_all": "MMS_YES = 128,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": [" reportAllowed: mms.MMS_YES,\n      };\n      mms", "portAllowed === mms.MMS_YES).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ReportType", "api_method_name": "MMS_NO", "api_method_all": "MMS_NO,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": [" reportAllowed: mms.MMS_NO,\n      };\n      mms", "geType === mms.TYPE_MMS_NOTIFICATION_IND).asse", "ssageType: mms.TYPE_MMS_NOTIFICATION_IND, mmsT", "pe.priority === mms.MMS_NORMAL).assertTrue();\n", "portAllowed === mms.MMS_NO).assertTrue();\n    ", "      priority: mms.MMS_NORMAL,\n        delive"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CBConfigOptions", "api_method_all": "export interface CBConfigOptions {\n    slotId: number;\n    enable: boolean;\n    startMessageId: number;\n    endMessageId: number;\n    ranType: RanType;\n  }", "api_method_name": "CBConfigOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "CBConfigOptions", "api_method_name": "slotId", "api_method_all": "slotId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 113, "since": 7, "api_used": "\u662f", "lines": ["ignalInfoChange', { slotId: SLOT_0 }, (network", "'callStateChange', {slotId: DEFAULT_SLOT_ID}, ", "d test observer.on({slotId:0}) to view the cal", "seName, type, mode, slotId) {\n    return new P", "ransferInfo by args slotId SLOT_ID_INVALID,\n  ", " abnormal input of \"slotId\", test getPreferred", "             by arg slotId SLOT_ID_INVALID typ", "eChange', {\n        slotId: SLOT_0\n      }, (d", "name    Verify the \"slotId\" abnormal input, te", "num) {\n        this.slotId = num;\n    }\n}\nclas", "el (caseName, type, slotId) {\n    return new P", "eChange', {\n        slotId: SLOT_0\n      }, (n", "et data = {\n        slotId: TRUE_SLOT_ID,\n    ", " abnormal input of \"slotId\", test getOperatorN", "face is tested, and slotId is abnormal.\n    * ", "'callStateChange', {slotId:DEFAULT_SLOT_ID}, (", "itingStatus by args slotId SLOT_ID_INVALID by ", "estriction(slotId ? slotId : DEFAULT_SLOT_ID, ", "oChange', {\n        slotId: SLOT_0\n      }, (s", ".setCallRestriction(slotId ? slotId : DEFAULT_", "ingEnabled, set the slotId to error values (3)", "ode = {\n            slotId: 55, //set the erro", "tting parameters as slotId error value (3), to", "ndMessage({\n        slotId: TRUE_SLOT_ID,\n    ", " by callback by arg slotId\n     *             ", "wChange', {\n        slotId: SLOT_0\n      }, (d", "oChange', {\n        slotId: SLOT_0\n      }, (c", "CallWaiting by args slotId SLOT_ID_INVALID act", "allTransfer by args slotId SLOT_ID_INVALID,set", "workStateChange', { slotId: SLOT_0 }, (network", "s by promise by arg slotId (that is at SLOT_ID", "  *             The slotId parameter is abnorm", " abnormal input of \"slotId\", test setPreferred"], "files": ["CellularDataAbnorma.test.js", "SmsMmsJsunit.test.ets", "ScenceLimitCalling.js", "ScenceInCalling.js", "ObserverJsunit.test.ets", "NetworkSearchErrors.test.js", "SimManager.test.js", "CallManageAll.test.js", "SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "CBConfigOptions", "api_method_name": "enable", "api_method_all": "enable: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 91, "since": 7, "api_used": "\u662f", "lines": ["ty.Visible\n  @State enabled: boolean = false\n ", "ularData_Async_0100 enableCellularData finish\"", "   Run the function enableImsSwitch by args ca", "ony_CallManager_IMS_enableImsSwitch_Promise_04", " {\n        cellular.enableCellularData((err) =", "le.log(`${caseName} enableImsSwitch error,case", "     await cellular.enableCellularDataRoaming(", "le.log(`${caseName} enableImsSwitch success,ca", "ony_CallManager_IMS_enableImsSwitch_Async_0400", "lephony_CallManager enableImsSwitch success');", "le.log(`${caseName} enableLteEnhanceMode error", "ephony_CellularData_enableCellularDataRoaming_", "ephony_CellularData_enableCellularData_Async_0", "ephony_CellularData_enableCellularData_Promise", "     await cellular.enableCellularData();\n    ", "ularData_Async_0100 enableCellularData fail\");", "aRoaming_Async_0300 enableCellularData fail\");", "0400';\n        call.enableLteEnhanceMode(SLOT_", "le.log(`${caseName} enableLteEnhanceMode succe", "* @tc.name     Call enableCellularDataRoaming ", "isibility)\n        .enabled(this.enabled)\n    ", "         await call.enableImsSwitch(DEFAULT_SL", "ony_CallManager_IMS_enableLteEnhanceMode_Async", "aRoaming_Async_0300 enableCellularData finish\"", "llPreferenceMode or enableImsSwitch error,erro", "ony_CallManager_IMS_enableLteEnhanceMode_Promi", " {\n        cellular.enableCellularDataRoaming(", "0400';\n        call.enableImsSwitch(SLOT_ID_IN"], "files": ["ConnectionJsunit.test.ets", "SmsMmsJsunit.test.ets", "CellularDataAbnorma.test.js", "CallManageAll.test.js", "SmsMmsError.test.js", "Text.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CBConfigOptions", "api_method_name": "startMessageId", "api_method_all": "startMessageId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["able: true,\n        startMessageId: IDENTIFIER_MIN,\n  ", "enable: true,\n      startMessageId: IDENTIFIER_MIN,\n  "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CBConfigOptions", "api_method_name": "endMessageId", "api_method_all": "endMessageId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["TIFIER_MIN,\n        endMessageId: IDENTIFIER_MIN,\n  ", "ENTIFIER_MIN,\n      endMessageId: IDENTIFIER_MAX,\n  "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "CBConfigOptions", "api_method_name": "ranType", "api_method_all": "ranType: RanType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["ENTIFIER_MAX,\n      ranType: RANTYPE_GSM\n    };", "TIFIER_MIN,\n        ranType: RANTYPE_GSM\n      "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SimMessageOptions", "api_method_all": "export interface SimMessageOptions {\n    slotId: number;\n    smsc: string;\n    pdu: string;\n    status: SimMessageStatus;\n  }", "api_method_name": "SimMessageOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SimMessageOptions", "api_method_name": "slotId", "api_method_all": "slotId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 113, "since": 7, "api_used": "\u662f", "lines": ["ignalInfoChange', { slotId: SLOT_0 }, (network", "'callStateChange', {slotId: DEFAULT_SLOT_ID}, ", "d test observer.on({slotId:0}) to view the cal", "seName, type, mode, slotId) {\n    return new P", "ransferInfo by args slotId SLOT_ID_INVALID,\n  ", " abnormal input of \"slotId\", test getPreferred", "             by arg slotId SLOT_ID_INVALID typ", "eChange', {\n        slotId: SLOT_0\n      }, (d", "name    Verify the \"slotId\" abnormal input, te", "num) {\n        this.slotId = num;\n    }\n}\nclas", "el (caseName, type, slotId) {\n    return new P", "eChange', {\n        slotId: SLOT_0\n      }, (n", "et data = {\n        slotId: TRUE_SLOT_ID,\n    ", " abnormal input of \"slotId\", test getOperatorN", "face is tested, and slotId is abnormal.\n    * ", "'callStateChange', {slotId:DEFAULT_SLOT_ID}, (", "itingStatus by args slotId SLOT_ID_INVALID by ", "estriction(slotId ? slotId : DEFAULT_SLOT_ID, ", "oChange', {\n        slotId: SLOT_0\n      }, (s", ".setCallRestriction(slotId ? slotId : DEFAULT_", "ingEnabled, set the slotId to error values (3)", "ode = {\n            slotId: 55, //set the erro", "tting parameters as slotId error value (3), to", "ndMessage({\n        slotId: TRUE_SLOT_ID,\n    ", " by callback by arg slotId\n     *             ", "wChange', {\n        slotId: SLOT_0\n      }, (d", "oChange', {\n        slotId: SLOT_0\n      }, (c", "CallWaiting by args slotId SLOT_ID_INVALID act", "allTransfer by args slotId SLOT_ID_INVALID,set", "workStateChange', { slotId: SLOT_0 }, (network", "s by promise by arg slotId (that is at SLOT_ID", "  *             The slotId parameter is abnorm", " abnormal input of \"slotId\", test setPreferred"], "files": ["CellularDataAbnorma.test.js", "SmsMmsJsunit.test.ets", "ScenceLimitCalling.js", "ScenceInCalling.js", "ObserverJsunit.test.ets", "NetworkSearchErrors.test.js", "SimManager.test.js", "CallManageAll.test.js", "SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SimMessageOptions", "api_method_name": "smsc", "api_method_all": "smsc: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 11, "since": 7, "api_used": "\u662f", "lines": ["TRUE_SLOT_ID,\n      smsc: '',\n      pdu: REC", "UE_SLOT_ID,\n        smsc: '',\n        pdu: C", "RECT_SMS_PDU,\n      smsc: ''\n    };\n    sms.", "RECT_SMS_PDU,\n      smsc: ''\n    };\n    try ", "ALSE_SLOT_ID,\n      smsc: '',\n      pdu: COR", "TRUE_SLOT_ID,\n      smsc: '',\n      pdu: COR"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SimMessageOptions", "api_method_name": "pdu", "api_method_all": "pdu: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["ult[0].shortMessage.pdu);\n          let isA", "    smsc: '',\n      pdu: CORRECT_SMS_PDU,\n ", "expect(shortMessage.pdu.length > 0).assertT", "  smsc: '',\n        pdu: CORRECT_SMS_PDU,\n ", "_STATUS_SENT,\n      pdu: CORRECT_SMS_PDU,\n ", "       expect(value.pdu.length !== 0).asser", "    smsc: '',\n      pdu: RECEIVE_SMS_PDU,\n "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SimMessageOptions", "api_method_name": "status", "api_method_all": "status: SimMessageStatus", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 99, "since": 8, "api_used": "\u662f", "lines": ["xiaohong\"], [\"voice_status\", \"0\"]]);\n        v", "4454445254\", \"voice_status\": 0\n            };\n", "            [\"merge_status\", \"1\"], [\"is_merge_", " voice mailbox with status 0 or id and return ", ": \"2800name\", voice_statuss: \"0\"\n             ", "pdate the voicemail status, pass in a non-exis", "             \"voice_status\": 1\n               ", "et the current call status.\n     *            ", "            [\"voice_status\", \"0\"]\n        ]);\n", ": \"xiaofen\", \"voice_status\": 1\n            };\n", "\"xiaohei\"], [\"voice_status\", \"0\"]]);\n        v", " \"xiaoming\", \"voice_status\": 1\n            };\n", "eting the voicemail status, pass in a non-exis", "xiaoming\"], [\"voice_status\", \"0\"]]);\n        v", "  mapOne.set(\"voice_status\", \"1\");\n           ", ": \"1557254\", \"voice_status\": 1\n            };\n", ": \"xiaohei\", \"voice_status\": 0\n            };\n", ": \"xiaohei\", \"voice_status\": 1\n            };\n", " When the voicemail status is added, a non-exi", "   Insert voicemail status 0\n     * @tc.desc  ", " \"xiaoming\", \"voice_status\": 0\n            };\n", "     map.set(\"voice_status\", \"0\");\n           ", "5754445254\", \"voice_status\": 1\n               ", " \"xiaohong\", \"voice_status\": 0\n            };\n", " \"18862013\", \"voice_status\": 0\n            };\n", ": \"2700name\", voice_statuss: \"1\"\n             ", "\"xiaofen\"], [\"voice_status\", \"0\"]]);\n        v", "5444445254\", \"voice_status\": 0\n            };\n", "tion.equalTo(\"voice_status\", \"0\");\n           ", ": \"1557254\", \"voice_status\": 0\n            };\n", "o get the idle call status, call getCallState(", "\"xiaohei\"], [\"voice_status\", \"1\"]]);\n        v", "     map.set(\"voice_status\", \"1\");\n           ", ": \"2800name\", voice_status: \"1\"\n              ", "             \"voice_status\": 0\n               ", "\"100578615\", \"voice_status\": 1\n            };\n", "tion.equalTo(\"voice_status\", \"1\");\n           ", "4452542200\", \"voice_status\": 0\n            };\n", "5754445254\", \"voice_status\": 0\n            };\n"], "files": ["ConnectionJsunit.test.ets", "SmsMmsJsunit.test.ets", "SimJsunit.test.ets", "SocketJsunit.test.ets", "CallManageAll.test.js", "CallJsunit.test.ets", "SimManager.test.js", "RadioSecondJsunit.test.ets", "Voicemail_test.js", "common.js", "SmsMmsError.test.js", "Const.js"], "is_white": " ", "desc": " "}, {"api_class_name": "UpdateSimMessageOptions", "api_method_all": "export interface UpdateSimMessageOptions {\n    slotId: number;\n    msgIndex: number;\n    newStatus: SimMessageStatus;\n    pdu: string;\n    smsc: string;\n  }", "api_method_name": "UpdateSimMessageOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "UpdateSimMessageOptions", "api_method_name": "slotId", "api_method_all": "slotId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 113, "since": 7, "api_used": "\u662f", "lines": ["ignalInfoChange', { slotId: SLOT_0 }, (network", "'callStateChange', {slotId: DEFAULT_SLOT_ID}, ", "d test observer.on({slotId:0}) to view the cal", "seName, type, mode, slotId) {\n    return new P", "ransferInfo by args slotId SLOT_ID_INVALID,\n  ", " abnormal input of \"slotId\", test getPreferred", "             by arg slotId SLOT_ID_INVALID typ", "eChange', {\n        slotId: SLOT_0\n      }, (d", "name    Verify the \"slotId\" abnormal input, te", "num) {\n        this.slotId = num;\n    }\n}\nclas", "el (caseName, type, slotId) {\n    return new P", "eChange', {\n        slotId: SLOT_0\n      }, (n", "et data = {\n        slotId: TRUE_SLOT_ID,\n    ", " abnormal input of \"slotId\", test getOperatorN", "face is tested, and slotId is abnormal.\n    * ", "'callStateChange', {slotId:DEFAULT_SLOT_ID}, (", "itingStatus by args slotId SLOT_ID_INVALID by ", "estriction(slotId ? slotId : DEFAULT_SLOT_ID, ", "oChange', {\n        slotId: SLOT_0\n      }, (s", ".setCallRestriction(slotId ? slotId : DEFAULT_", "ingEnabled, set the slotId to error values (3)", "ode = {\n            slotId: 55, //set the erro", "tting parameters as slotId error value (3), to", "ndMessage({\n        slotId: TRUE_SLOT_ID,\n    ", " by callback by arg slotId\n     *             ", "wChange', {\n        slotId: SLOT_0\n      }, (d", "oChange', {\n        slotId: SLOT_0\n      }, (c", "CallWaiting by args slotId SLOT_ID_INVALID act", "allTransfer by args slotId SLOT_ID_INVALID,set", "workStateChange', { slotId: SLOT_0 }, (network", "s by promise by arg slotId (that is at SLOT_ID", "  *             The slotId parameter is abnorm", " abnormal input of \"slotId\", test setPreferred"], "files": ["CellularDataAbnorma.test.js", "SmsMmsJsunit.test.ets", "ScenceLimitCalling.js", "ScenceInCalling.js", "ObserverJsunit.test.ets", "NetworkSearchErrors.test.js", "SimManager.test.js", "CallManageAll.test.js", "SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "UpdateSimMessageOptions", "api_method_name": "msgIndex", "api_method_all": "msgIndex: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["ALSE_SLOT_ID,\n      msgIndex: 0,\n      newStatus"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "UpdateSimMessageOptions", "api_method_name": "newStatus", "api_method_all": "newStatus: SimMessageStatus", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" msgIndex: 0,\n      newStatus: sms.SIM_MESSAGE_ST"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "UpdateSimMessageOptions", "api_method_name": "pdu", "api_method_all": "pdu: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["ult[0].shortMessage.pdu);\n          let isA", "    smsc: '',\n      pdu: CORRECT_SMS_PDU,\n ", "expect(shortMessage.pdu.length > 0).assertT", "  smsc: '',\n        pdu: CORRECT_SMS_PDU,\n ", "_STATUS_SENT,\n      pdu: CORRECT_SMS_PDU,\n ", "       expect(value.pdu.length !== 0).asser", "    smsc: '',\n      pdu: RECEIVE_SMS_PDU,\n "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "UpdateSimMessageOptions", "api_method_name": "smsc", "api_method_all": "smsc: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 11, "since": 7, "api_used": "\u662f", "lines": ["TRUE_SLOT_ID,\n      smsc: '',\n      pdu: REC", "UE_SLOT_ID,\n        smsc: '',\n        pdu: C", "RECT_SMS_PDU,\n      smsc: ''\n    };\n    sms.", "RECT_SMS_PDU,\n      smsc: ''\n    };\n    try ", "ALSE_SLOT_ID,\n      smsc: '',\n      pdu: COR", "TRUE_SLOT_ID,\n      smsc: '',\n      pdu: COR"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessage", "api_method_all": "export interface ShortMessage {\n    \n    visibleMessageBody: string;\n    \n    visibleRawAddress: string;\n    \n    messageClass: ShortMessageClass;\n    \n    protocolId: number;\n    \n    scAddress: string;\n    \n    scTimestamp: number;\n    \n    isReplaceMessage: boolean;\n    \n    hasReplyPath: boolean;\n    \n    pdu: Array<number>;\n    \n    status: number;\n    \n    isSmsStatusReportMessage: boolean;\n  }", "api_method_name": "ShortMessage", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["ephony_SmsMms_getImsShortMessageFormat_Async_0100', ", "ephony_SmsMms_getImsShortMessageFormat_Async_0100 fi", "r  Telephony_SmsMms_ShortMessageClass_Async_0100\n   ", "ephony_SmsMms_getImsShortMessageFormat_Promise_0100\n", "ne) {\n    sms.getImsShortMessageFormat((error, resul", "ephony_SmsMms_getImsShortMessageFormat_Async_0100\n  ", "ephony_SmsMms_getImsShortMessageFormat_Async_0100 fa", "ephony_SmsMms_getImsShortMessageFormat_Async_0100 re", "ephony_SmsMms_getImsShortMessageFormat_Promise_0100 ", "ephony_SmsMms_getImsShortMessageFormat_Promise_0100'", "t('Telephony_SmsMms_ShortMessageClass_Async_0100', 0", "t = await sms.getImsShortMessageFormat();\n      expe"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessage", "api_method_name": "visibleMessageBody", "api_method_all": "visibleMessageBody: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 0, "api_used": "\u662f", "lines": ["expect(shortMessage.visibleMessageBody === MESSAGEBODY).as", "except(shortMessage.visibleMessageBody != 'visibleMessageB", "ibleMessageBody != 'visibleMessageBody').assertTrue();\n\t\te"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessage", "api_method_name": "visibleRawAddress", "api_method_all": "visibleRawAddress: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 0, "api_used": "\u662f", "lines": ["expect(shortMessage.visibleRawAddress.length === ADDR_LEN", "sibleRawAddress != 'visibleRawAddress').assertTrue();\n\t\te", "except(shortMessage.visibleRawAddress != 'visibleRawAddre"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessage", "api_method_name": "messageClass", "api_method_all": "messageClass: ShortMessageClass", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["except(shortMessage.messageClass != 'sms.FORWARD_MES", "expect(data.mmsType.messageClass === 130).assertTrue", "\"Test mms\",\n        messageClass: 130,\n        expir", "expect(shortMessage.messageClass === sms.FORWARD_MES", "80.142730\",\n        messageClass: 128,\n        messa", "expect(data.mmsType.messageClass === 128).assertTrue"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessage", "api_method_name": "protocolId", "api_method_all": "protocolId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["expect(shortMessage.protocolId === 0).assertTrue()", "except(shortMessage.protocolId != -1).assertTrue()"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessage", "api_method_name": "scAddress", "api_method_all": "scAddress: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 0, "api_used": "\u662f", "lines": ["except(shortMessage.scAddress != 'scAddress').ass", "ssage.scAddress != 'scAddress').assertTrue();\n\t\te", "expect(shortMessage.scAddress.length === ADDR_LEN"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessage", "api_method_name": "scTimestamp", "api_method_all": "scTimestamp: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["except(shortMessage.scTimestamp != -1).assertTrue()", "expect(shortMessage.scTimestamp === SC_TIMESTAMP).a"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessage", "api_method_name": "isReplaceMessage", "api_method_all": "isReplaceMessage: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["expect(shortMessage.isReplaceMessage).assertFalse();\n   ", "except(shortMessage.isReplaceMessage != true).assertTrue"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessage", "api_method_name": "hasReplyPath", "api_method_all": "hasReplyPath: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["expect(shortMessage.hasReplyPath).assertFalse();\n   ", "except(shortMessage.hasReplyPath != true).assertTrue"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessage", "api_method_name": "pdu", "api_method_all": "pdu: Array<number>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["ult[0].shortMessage.pdu);\n          let isA", "    smsc: '',\n      pdu: CORRECT_SMS_PDU,\n ", "expect(shortMessage.pdu.length > 0).assertT", "  smsc: '',\n        pdu: CORRECT_SMS_PDU,\n ", "_STATUS_SENT,\n      pdu: CORRECT_SMS_PDU,\n ", "       expect(value.pdu.length !== 0).asser", "    smsc: '',\n      pdu: RECEIVE_SMS_PDU,\n "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessage", "api_method_name": "status", "api_method_all": "status: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 99, "since": 8, "api_used": "\u662f", "lines": ["xiaohong\"], [\"voice_status\", \"0\"]]);\n        v", "4454445254\", \"voice_status\": 0\n            };\n", "            [\"merge_status\", \"1\"], [\"is_merge_", " voice mailbox with status 0 or id and return ", ": \"2800name\", voice_statuss: \"0\"\n             ", "pdate the voicemail status, pass in a non-exis", "             \"voice_status\": 1\n               ", "et the current call status.\n     *            ", "            [\"voice_status\", \"0\"]\n        ]);\n", ": \"xiaofen\", \"voice_status\": 1\n            };\n", "\"xiaohei\"], [\"voice_status\", \"0\"]]);\n        v", " \"xiaoming\", \"voice_status\": 1\n            };\n", "eting the voicemail status, pass in a non-exis", "xiaoming\"], [\"voice_status\", \"0\"]]);\n        v", "  mapOne.set(\"voice_status\", \"1\");\n           ", ": \"1557254\", \"voice_status\": 1\n            };\n", ": \"xiaohei\", \"voice_status\": 0\n            };\n", ": \"xiaohei\", \"voice_status\": 1\n            };\n", " When the voicemail status is added, a non-exi", "   Insert voicemail status 0\n     * @tc.desc  ", " \"xiaoming\", \"voice_status\": 0\n            };\n", "     map.set(\"voice_status\", \"0\");\n           ", "5754445254\", \"voice_status\": 1\n               ", " \"xiaohong\", \"voice_status\": 0\n            };\n", " \"18862013\", \"voice_status\": 0\n            };\n", ": \"2700name\", voice_statuss: \"1\"\n             ", "\"xiaofen\"], [\"voice_status\", \"0\"]]);\n        v", "5444445254\", \"voice_status\": 0\n            };\n", "tion.equalTo(\"voice_status\", \"0\");\n           ", ": \"1557254\", \"voice_status\": 0\n            };\n", "o get the idle call status, call getCallState(", "\"xiaohei\"], [\"voice_status\", \"1\"]]);\n        v", "     map.set(\"voice_status\", \"1\");\n           ", ": \"2800name\", voice_status: \"1\"\n              ", "             \"voice_status\": 0\n               ", "\"100578615\", \"voice_status\": 1\n            };\n", "tion.equalTo(\"voice_status\", \"1\");\n           ", "4452542200\", \"voice_status\": 0\n            };\n", "5754445254\", \"voice_status\": 0\n            };\n"], "files": ["ConnectionJsunit.test.ets", "SmsMmsJsunit.test.ets", "SimJsunit.test.ets", "SocketJsunit.test.ets", "CallManageAll.test.js", "CallJsunit.test.ets", "SimManager.test.js", "RadioSecondJsunit.test.ets", "Voicemail_test.js", "common.js", "SmsMmsError.test.js", "Const.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessage", "api_method_name": "isSmsStatusReportMessage", "api_method_all": "isSmsStatusReportMessage: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["expect(shortMessage.isSmsStatusReportMessage).assertTrue();\n    ", "except(shortMessage.isSmsStatusReportMessage != true).assertTrue"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SimShortMessage", "api_method_all": "export interface SimShortMessage {\n    shortMessage: ShortMessage;\n\n    \n    simMessageStatus: SimMessageStatus;\n    \n    indexOnSim: number;\n  }", "api_method_name": "SimShortMessage", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SimShortMessage", "api_method_name": "shortMessage", "api_method_all": "shortMessage: ShortMessage", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 25, "since": 7, "api_used": "\u662f", "lines": ["e();\n        expect(shortMessage.isSmsStatusReportMe", "e();\n        expect(shortMessage.scAddress.length ==", "\t  except(result[0].shortMessage != null).assertTrue", "ionPdu(getresult[0].shortMessage.pdu);\n          let", "ertTrue();\n\t\texcept(shortMessage.protocolId != -1).a", "ertTrue();\n\t\texcept(shortMessage.status != -1).asser", " finish');\n\t\texcept(shortMessage.visibleMessageBody ", "ertTrue();\n\t\texcept(shortMessage.scAddress != 'scAdd", "e();\n        expect(shortMessage.pdu.length > 0).ass", "e();\n        expect(shortMessage.scTimestamp === SC_", "e();\n        expect(shortMessage.protocolId === 0).a", "ertTrue();\n\t\texcept(shortMessage.messageClass != 'sm", "ertTrue();\n\t\texcept(shortMessage.isSmsStatusReportMe", "e();\n        expect(shortMessage.hasReplyPath).asser", "   }\n        expect(shortMessage.visibleMessageBody ", "e();\n        expect(shortMessage.isReplaceMessage).a", "ertTrue();\n\t\texcept(shortMessage.visibleRawAddress !", "e();\n        expect(shortMessage.messageClass === sm", "rray, '3gpp', (err, shortMessage) => {\n        if (e", "e();\n        expect(shortMessage.visibleRawAddress.l", "Null, '3gpp', (err, shortMessage) => {\n      if (err", "e();\n        expect(shortMessage.status === 0).asser", "ertTrue();\n\t\texcept(shortMessage.hasReplyPath != tru", "ertTrue();\n\t\texcept(shortMessage.scTimestamp != -1).", "ertTrue();\n\t\texcept(shortMessage.isReplaceMessage !="], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SimShortMessage", "api_method_name": "simMessageStatus", "api_method_all": "simMessageStatus: SimMessageStatus", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["       getresult[0].simMessageStatus === sms.SIM_MESSAGE"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SimShortMessage", "api_method_name": "indexOnSim", "api_method_all": "indexOnSim: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["OT_ID, getresult[0].indexOnSim, (delerr) => {\n    ", "\t  except(result[0].indexOnSim != -1).assertTrue()"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SimMessageStatus", "api_method_all": "export enum SimMessageStatus {\n    \n    SIM_MESSAGE_STATUS_FREE = 0,\n    \n    SIM_MESSAGE_STATUS_READ = 1,\n    \n    SIM_MESSAGE_STATUS_UNREAD = 3,\n    \n    SIM_MESSAGE_STATUS_SENT = 5,\n    \n    SIM_MESSAGE_STATUS_UNSENT = 7,\n  }", "api_method_name": "SimMessageStatus", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SimMessageStatus", "api_method_name": "SIM_MESSAGE_STATUS_FREE", "api_method_all": "SIM_MESSAGE_STATUS_FREE = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": [");\n      expect(sms.SIM_MESSAGE_STATUS_FREE == 0).assertTrue();", " }\n      expect(sms.SIM_MESSAGE_STATUS_FREE == 0).assertTrue();"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SimMessageStatus", "api_method_name": "SIM_MESSAGE_STATUS_READ", "api_method_all": "SIM_MESSAGE_STATUS_READ = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": [",\n      status: sms.SIM_MESSAGE_STATUS_READ\n    };\n    sms.addS", ",\n      status: sms.SIM_MESSAGE_STATUS_READ\n    };\n    try {\n  "], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SimMessageStatus", "api_method_name": "SIM_MESSAGE_STATUS_UNREAD", "api_method_all": "SIM_MESSAGE_STATUS_UNREAD = 3,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": [",\n      status: sms.SIM_MESSAGE_STATUS_UNREAD\n    };\n    try {\n  ", ",\n      status: sms.SIM_MESSAGE_STATUS_UNREAD\n    };\n    sms.addS"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SimMessageStatus", "api_method_name": "SIM_MESSAGE_STATUS_SENT", "api_method_all": "SIM_MESSAGE_STATUS_SENT = 5,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 6, "since": 0, "api_used": "\u662f", "lines": [",\n      status: sms.SIM_MESSAGE_STATUS_SENT\n    };\n    sms.addS", "ssageStatus === sms.SIM_MESSAGE_STATUS_SENT);\n          expect(", "     newStatus: sms.SIM_MESSAGE_STATUS_SENT,\n      pdu: CORRECT", ",\n      status: sms.SIM_MESSAGE_STATUS_SENT\n    };\n    try {\n  ", "        status: sms.SIM_MESSAGE_STATUS_SENT\n      };\n      sms."], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SimMessageStatus", "api_method_name": "SIM_MESSAGE_STATUS_UNSENT", "api_method_all": "SIM_MESSAGE_STATUS_UNSENT = 7,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": [",\n      status: sms.SIM_MESSAGE_STATUS_UNSENT\n    };\n    sms.addS", ",\n      status: sms.SIM_MESSAGE_STATUS_UNSENT\n    };\n    try {\n  "], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessageClass", "api_method_all": "export enum ShortMessageClass {\n    \n    UNKNOWN,\n    \n    INSTANT_MESSAGE,\n    \n    OPTIONAL_MESSAGE,\n    \n    SIM_MESSAGE,\n    \n    FORWARD_MESSAGE\n  }", "api_method_name": "ShortMessageClass", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["r  Telephony_SmsMms_ShortMessageClass_Async_0100\n   * @tc", "t('Telephony_SmsMms_ShortMessageClass_Async_0100', 0, asy"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessageClass", "api_method_name": "UNKNOWN", "api_method_all": "UNKNOWN,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 27, "since": 0, "api_used": "\u662f", "lines": ["ectState.DATA_STATE_UNKNOWN);\n      console.log", "      radio.NETWORK_UNKNOWN,\n      radio.NETWOR", "e();\n    expect(sim.UNKNOWN_CARD === env.CONSTA", "ct(sms.SMS_ENCODING_UNKNOWN == 0).assertTrue();", "tate === CALL_STATE_UNKNOWN || callState === CA", " radio.NETWORK_TYPE_UNKNOWN,\n      radio.NETWOR", " type: sim.CardType.UNKNOWN_CARD\n      }\n      ", "ct(cardType === sim.UNKNOWN_CARD).assertTrue();", "IST,\n    CALL_STATE_UNKNOWN,\n    CALL_STATE_IDL", "o.NETWORK_SELECTION_UNKNOWN === 0).assertTrue()", "D === env.CONSTANTS.UNKNOWN_CARD).assertTrue();", "xpect(sim.SIM_STATE_UNKNOWN === env.CONSTANTS.S", "ate_DATA_DATA_STATE_UNKNOWN';\n      console.log", "(radio.NETWORK_TYPE_UNKNOWN === 0).assertTrue()", "=== radio.NR_OPTION_UNKNOWN).assertTrue();\n    ", "ectState_DATA_STATE_UNKNOWN\", 0, async function", "rt const CALL_STATE_UNKNOWN = -1;\nexport const ", "CONSTANTS.SIM_STATE_UNKNOWN).assertTrue();\n    ", "ectState.DATA_STATE_UNKNOWN,\n          cellular", "xpect(radio.NETWORK_UNKNOWN === 0).assertTrue()", "    radio.NR_OPTION_UNKNOWN,\n      radio.NR_OPT", "adioTech = [\n      'UNKNOWN', 'GSM', '1XRTT', '", ".SimState.SIM_STATE_UNKNOWN\n      }\n      expec", "ms.SEND_SMS_FAILURE_UNKNOWN).assertTrue();\n    ", "io.RADIO_TECHNOLOGY_UNKNOWN === 0).assertTrue()"], "files": ["SmsMmsJsunit.test.ets", "DataJsunit.test.ets", "ObserverJsunit.test.ets", "NetworkSearchErrors.test.js", "SimManager.test.js", "RadioSecondJsunit.test.ets", "CallManageAll.test.js", "SmsMmsError.test.js", "Const.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessageClass", "api_method_name": "INSTANT_MESSAGE", "api_method_all": "INSTANT_MESSAGE,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": [");\n      expect(sms.INSTANT_MESSAGE == 1).assertTrue();"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessageClass", "api_method_name": "OPTIONAL_MESSAGE", "api_method_all": "OPTIONAL_MESSAGE,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": [");\n      expect(sms.OPTIONAL_MESSAGE == 2).assertTrue();"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ShortMessageClass", "api_method_name": "SIM_MESSAGE", "api_method_all": "SIM_MESSAGE,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 14, "since": 0, "api_used": "\u662f", "lines": ["        status: sms.SIM_MESSAGE_STATUS_SENT\n      }", " }\n      expect(sms.SIM_MESSAGE_STATUS_FREE == 0).a", ",\n      status: sms.SIM_MESSAGE_STATUS_UNREAD\n    }", "     newStatus: sms.SIM_MESSAGE_STATUS_SENT,\n      ", ",\n      status: sms.SIM_MESSAGE_STATUS_UNSENT\n    }", ");\n      expect(sms.SIM_MESSAGE_STATUS_FREE == 0).a", ",\n      status: sms.SIM_MESSAGE_STATUS_READ\n    };\n", "ssageStatus === sms.SIM_MESSAGE_STATUS_SENT);\n     ", ",\n      status: sms.SIM_MESSAGE_STATUS_SENT\n    };\n"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SendMessageOptions", "api_method_all": "export interface SendMessageOptions {\n    \n    slotId: number;\n    \n    destinationHost: string;\n    \n    serviceCenter?: string;\n    \n    content: string | Array<number>;\n    \n    destinationPort?: number;\n    \n    sendCallback?: AsyncCallback<ISendShortMessageCallback>;\n    \n    deliveryCallback?: AsyncCallback<IDeliveryShortMessageCallback>;\n  }", "api_method_name": "SendMessageOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SendMessageOptions", "api_method_name": "slotId", "api_method_all": "slotId: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 113, "since": 7, "api_used": "\u662f", "lines": ["ignalInfoChange', { slotId: SLOT_0 }, (network", "'callStateChange', {slotId: DEFAULT_SLOT_ID}, ", "d test observer.on({slotId:0}) to view the cal", "seName, type, mode, slotId) {\n    return new P", "ransferInfo by args slotId SLOT_ID_INVALID,\n  ", " abnormal input of \"slotId\", test getPreferred", "             by arg slotId SLOT_ID_INVALID typ", "eChange', {\n        slotId: SLOT_0\n      }, (d", "name    Verify the \"slotId\" abnormal input, te", "num) {\n        this.slotId = num;\n    }\n}\nclas", "el (caseName, type, slotId) {\n    return new P", "eChange', {\n        slotId: SLOT_0\n      }, (n", "et data = {\n        slotId: TRUE_SLOT_ID,\n    ", " abnormal input of \"slotId\", test getOperatorN", "face is tested, and slotId is abnormal.\n    * ", "'callStateChange', {slotId:DEFAULT_SLOT_ID}, (", "itingStatus by args slotId SLOT_ID_INVALID by ", "estriction(slotId ? slotId : DEFAULT_SLOT_ID, ", "oChange', {\n        slotId: SLOT_0\n      }, (s", ".setCallRestriction(slotId ? slotId : DEFAULT_", "ingEnabled, set the slotId to error values (3)", "ode = {\n            slotId: 55, //set the erro", "tting parameters as slotId error value (3), to", "ndMessage({\n        slotId: TRUE_SLOT_ID,\n    ", " by callback by arg slotId\n     *             ", "wChange', {\n        slotId: SLOT_0\n      }, (d", "oChange', {\n        slotId: SLOT_0\n      }, (c", "CallWaiting by args slotId SLOT_ID_INVALID act", "allTransfer by args slotId SLOT_ID_INVALID,set", "workStateChange', { slotId: SLOT_0 }, (network", "s by promise by arg slotId (that is at SLOT_ID", "  *             The slotId parameter is abnorm", " abnormal input of \"slotId\", test setPreferred"], "files": ["CellularDataAbnorma.test.js", "SmsMmsJsunit.test.ets", "ScenceLimitCalling.js", "ScenceInCalling.js", "ObserverJsunit.test.ets", "NetworkSearchErrors.test.js", "SimManager.test.js", "CallManageAll.test.js", "SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SendMessageOptions", "api_method_name": "destinationHost", "api_method_all": "destinationHost: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["UE_SLOT_ID,\n        destinationHost: SMS_SEND_DST_NUMBE", "ALSE_SLOT_ID,\n      destinationHost: SMS_SEND_DST_NUMBE"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SendMessageOptions", "api_method_name": "serviceCenter", "api_method_all": "serviceCenter?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["SEND_DST_NUMBER,\n\t  serviceCenter: '',\n      content:"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SendMessageOptions", "api_method_name": "content", "api_method_all": "content: string | Array<number>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 416, "since": 8, "api_used": "\u662f", "lines": ["n = false\n  private content: string = \"GridCont", "n = false\n  private content: string = \"Counter ", "id\": rawContactId, \"content_type\": \"im\", \"detai", "nt.Bottom\n  private content: string = \"Stack Pa", "r\", \"987654321\"], [\"content\", \"danminghei\"], [\"", "ber\": \"123456789\", \"content\": \"heimingdan\"\n    ", "d,\n                \"content_type\": \"website\",\n ", "actId,\n            \"content_type\": \"email\",\n   ", "n = false\n  private content: string = \"Divider ", "d,\n                \"content_type\": \"nickname\",\n", "actId,\n            \"content_type\": \"nickname\",\n", "d,\n                \"content_type\": \"group_membe", "actId,\n            \"content_type\": \"organizatio", "actId,\n            \"content_type\": \"phone\",\n   ", "d,\n                \"content_type\": \"phone\",\n   ", "d,\n                \"content_type\": \"contact_mis", "n = false\n  private content: string = \"DataPane", "pe.Circle\n  private content: string = \"Button P", "d,\n                \"content_type\": \"email\",\n   ", "d,\n                \"content_type\": \"postal_addr", "d,\n                \"content_type\": \"note\",\n    ", "n = false\n  private content: string = \"badge Pa", "n = false\n  private content: string = \"Blank Pa", " Edge.Top\n  private content: string = \"Scroll P", "mnSplit {\n  private content: string = \"ColumnSp", "d,\n                \"content_type\": \"organizatio", "       Text(`${this.content}`)\n            .fon", "ct flex {\n  private content: string = \"Flex Pag", "actId,\n            \"content_type\": \"name\",\n    ", "d,\n                \"content_type\": \"contact_eve", "\n      Text(`${this.content}`)\n        .fontSiz", "4321\",\n            \"content\": \"danminghei\",\n   ", "id\": rawContactId, \"content_type\": type, \"detai", "ta = {\n            \"content_type\": \"name\",\n    ", "n = false\n  private content: string = \"Text Pag", "d,\n                \"content_type\": \"relation\",\n", "n = false\n  private content: string = \"rowSplit", "n = false\n  private content: string = \"Column P", "r\", \"123456789\"], [\"content\", \"heimingdan\"], [\"", "d,\n                \"content_type\": \"name\",\n    "], "files": ["Stability_test.js", "Flex.ets", "Performance_test.js", "RowSplit.ets", "ObjectInterface_test.js", "Text.ets", "HttpRequestOptionsJsunit.test.ets", "RequestMethodJsunit.test.ets", "Counter.ets", "Stack.ets", "Contacts_test.js", "ContactCard_test.js", "Blank.ets", "Badge.ets", "common.js", "Scroll.ets", "DataPanel.ets", "HttpRequestJsunit.test.ets", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "HttpResponseJsunit.test.ets", "GridContainer.ets", "SmsMmsError.test.js", "Divider.ets", "Button.ets", "Column.ets", "ColumnSplit.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SendMessageOptions", "api_method_name": "destinationPort", "api_method_all": "destinationPort?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["ontent: 'hello',\n\t  destinationPort: 0,\n      sendCallb"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SendMessageOptions", "api_method_name": "sendCallback", "api_method_all": "sendCallback?: AsyncCallback<ISendShortMessageCallback>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 5, "since": 0, "api_used": "\u662f", "lines": ["       console.log(`sendCallback success sendResult ", "ationPort: 0,\n      sendCallback: (err, value) => {\n", "ms_sendMessage_0100 sendCallback finish');\n         ", "ms_sendMessage_0100 sendCallback fail');\n           ", ": '111111',\n        sendCallback: (err, value) => {\n"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SendMessageOptions", "api_method_name": "deliveryCallback", "api_method_all": "deliveryCallback?: AsyncCallback<IDeliveryShortMessageCallback>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["\n        },\n        deliveryCallback: (err, value) => {\n", "ms_sendMessage_0100 deliveryCallback finish');\n         ", "ms_sendMessage_0100 deliveryCallback fail');\n           ", "e();\n      },\n      deliveryCallback: () => {}\n    });\n "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ISendShortMessageCallback", "api_method_all": "export interface ISendShortMessageCallback {\n    \n    result: SendSmsResult;\n    \n    url: string;\n    \n    isLastPart: boolean;\n  }", "api_method_name": "ISendShortMessageCallback", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ISendShortMessageCallback", "api_method_name": "result", "api_method_all": "result: SendSmsResult", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1757, "since": 0, "api_used": "\u662f", "lines": ["\");\n                resultSet.close();\n       ", "Set.rowCount > 0 && resultSet.goToFirstRow()) ", "             expect(resultSet.goToFirstRow() =", "lue ' + (value == dbresult));\n                ", "eryForBatchInsert dbresult :' + dbresult +\n   ", "  expect(value == dbresult).assertTrue();\n    ", "              var dbresult = resultSet.getStri", "00: columnNames:\" + resultSet.columnNames);\n  ", "           } while (resultSet.goToNextRow());\n", "e: goToFirstRow \" + resultSet.goToFirstRow());", "                if (resultSet.rowCount > 0 && ", "resultSet.getString(resultSet.getColumnIndex(k", "                var resultSet = await DAHelper", "             expect(resultSet.getString(0) == ", "  ' dbResult :' + dbresult + ' value : ' + val", "                if (resultSet.goToFirstRow()) ", "     var dbresult = resultSet.getString(result", "test_1100: id = ' + resultSet.getString(0));\n ", "     *              results\n     * @tc.desc   ", "         correction results\n     * @tc.desc   ", "r.query(calllogUri, resultColumns, condition);", "${caseName} ${func} result flag:${toString(fla", "ert dbresult :' + dbresult +\n                 ", "             expect(resultSet.getString(1) == ", "  expect(value == dbresult).assertEqual(true);", "r);\n            var resultColumns = common.get", " }\n\n                resultSet.close();\n       ", " phone_number = ' + resultSet.getString(1));\n ", "le.log(`${caseName} result ${func} flag:${toSt", "             expect(resultSet.rowCount == size", "                var resultColumns = [\"id\", \"ph", "00: columnCount:\" + resultSet.columnCount);\n  ", "));\n                resultSet.close();\n       "], "files": ["Stability_test.js", "SimJsunit.test.ets", "Performance_test.js", "NetworkSearchErrors.test.js", "ObjectInterface_test.js", "HttpRequestOptionsJsunit.test.ets", "Contacts_test.js", "ContactCard_test.js", "ConnectionSecondJsUnit.test.ets", "recovery_test.js", "ConvertOptionsJsunit.test.ets", "common.js", "SmsMmsJsunit.test.ets", "ContactMerge_test.js", "HttpResponseJsunit.test.ets", "SimManager.test.js", "Voicemail_test.js", "StatisticsJsunit.test.ets", "SmsMmsError.test.js", "Groups_test.js", "ApiToPromisePerfomance.js", "Calllog_test.js", "CellularDataAbnorma.test.js", "ApiToPromiseReliability.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ISendShortMessageCallback", "api_method_name": "url", "api_method_all": "url: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["t.connect({\n        url: \"www.baidu.com\"\n  "], "files": ["WebSocketJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ISendShortMessageCallback", "api_method_name": "isLastPart", "api_method_all": "isLastPart: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["       expect(value.isLastPart != true).assertTrue"], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "IDeliveryShortMessageCallback", "api_method_all": "export interface IDeliveryShortMessageCallback {\n    \n    pdu: Array<number>;\n  }", "api_method_name": "IDeliveryShortMessageCallback", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "IDeliveryShortMessageCallback", "api_method_name": "pdu", "api_method_all": "pdu: Array<number>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["ult[0].shortMessage.pdu);\n          let isA", "    smsc: '',\n      pdu: CORRECT_SMS_PDU,\n ", "expect(shortMessage.pdu.length > 0).assertT", "  smsc: '',\n        pdu: CORRECT_SMS_PDU,\n ", "_STATUS_SENT,\n      pdu: CORRECT_SMS_PDU,\n ", "       expect(value.pdu.length !== 0).asser", "    smsc: '',\n      pdu: RECEIVE_SMS_PDU,\n "], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SendSmsResult", "api_method_all": "export enum SendSmsResult {\n    \n    SEND_SMS_SUCCESS = 0,\n\n    \n    SEND_SMS_FAILURE_UNKNOWN = 1,\n\n    \n    SEND_SMS_FAILURE_RADIO_OFF = 2,\n\n    \n    SEND_SMS_FAILURE_SERVICE_UNAVAILABLE = 3\n  }", "api_method_name": "SendSmsResult", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": ["Telephony_SmsMms_getSendSmsResult_Async_0100', 0, asy", "Telephony_SmsMms_getSendSmsResult_Async_0100\n   * @tc"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SendSmsResult", "api_method_name": "SEND_SMS_SUCCESS", "api_method_all": "SEND_SMS_SUCCESS = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["alue.result === sms.SEND_SMS_SUCCESS).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SendSmsResult", "api_method_name": "SEND_SMS_FAILURE_UNKNOWN", "api_method_all": "SEND_SMS_FAILURE_UNKNOWN = 1,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["alue.result === sms.SEND_SMS_FAILURE_UNKNOWN).assertTrue();\n    "], "files": ["SmsMmsError.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SendSmsResult", "api_method_name": "SEND_SMS_FAILURE_RADIO_OFF", "api_method_all": "SEND_SMS_FAILURE_RADIO_OFF = 2,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": [" }\n      expect(sms.SEND_SMS_FAILURE_RADIO_OFF == 0).assertTrue();"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SendSmsResult", "api_method_name": "SEND_SMS_FAILURE_SERVICE_UNAVAILABLE", "api_method_all": "SEND_SMS_FAILURE_SERVICE_UNAVAILABLE = 3", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": [");\n      expect(sms.SEND_SMS_FAILURE_SERVICE_UNAVAILABLE == 1).assertTrue();"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "RanType", "api_method_all": "export enum RanType {\n    TYPE_GSM = 1, // GSM\n    TYPE_CDMA = 2, // CDMA\n  }", "api_method_name": "RanType", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "RanType", "api_method_name": "TYPE_GSM", "api_method_all": "TYPE_GSM = 1, // GSM", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["xpect(radio.NETWORK_TYPE_GSM === 1).assertTrue()", " 0xFFFF;\n  const RANTYPE_GSM = 1;\n  var rawArray", ",\n      ranType: RANTYPE_GSM\n    };\n    try {\n  ", ",\n      ranType: RANTYPE_GSM\n    };\n    sms.setC", "        ranType: RANTYPE_GSM\n      };\n      sms.", "      radio.NETWORK_TYPE_GSM,\n      radio.NETWOR", "e === radio.NETWORK_TYPE_GSM) {\n          expect", "xFFFF;\n    const RANTYPE_GSM = 1;\n    const RANT"], "files": ["RadioSecondJsunit.test.ets", "SmsMmsError.test.js", "SmsMmsJsunit.test.ets", "NetworkSearchErrors.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "RanType", "api_method_name": "TYPE_CDMA", "api_method_all": "TYPE_CDMA = 2, // CDMA", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["xpect(radio.NETWORK_TYPE_CDMA === 2).assertTrue()", "      radio.NETWORK_TYPE_CDMA,\n      radio.NETWOR", "M = 1;\n    const RANTYPE_CDMA = 2;\n    const RANT"], "files": ["RadioSecondJsunit.test.ets", "SmsMmsJsunit.test.ets", "NetworkSearchErrors.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SmsSegmentsInfo", "api_method_all": "export interface SmsSegmentsInfo {\n    splitCount: number;\n    encodeCount: number;\n    encodeCountRemaining: number;\n    scheme: SmsEncodingScheme;\n  }", "api_method_name": "SmsSegmentsInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 23, "since": 8, "api_used": "\u662f", "lines": ["Telephony_SmsMms_getSmsSegmentsInfo_Async_2000\n   * @tc", "Telephony_SmsMms_getSmsSegmentsInfo_Async_2000', 0, asy", "Telephony_SmsMms_getSmsSegmentsInfo_Async_0100   scheme", "Telephony_SmsMms_getSmsSegmentsInfo_Promise_2000 fail')", "Telephony_SmsMms_getSmsSegmentsInfo_Async_0100', 0, asy", "Telephony_SmsMms_getSmsSegmentsInfo_Async_0100 finish')", "Telephony_SmsMms_getSmsSegmentsInfo_Async_2000 finish')", " true;\n      sms.getSmsSegmentsInfo(TRUE_SLOT_ID, messa", "sInfo_Async_2000 getSmsSegmentsInfo error \" + error.mes", "Telephony_SmsMms_getSmsSegmentsInfo_Async_0100   encode", "Telephony_SmsMms_getSmsSegmentsInfo_Promise_2000\n   * @", "sInfo_Async_0100 getSmsSegmentsInfoon error \" + error.m", "Telephony_SmsMms_getSmsSegmentsInfo_Async_0100   splitC", "sult = await sms.getSmsSegmentsInfo(FALSE_SLOT_ID, mess", "Telephony_SmsMms_getSmsSegmentsInfo_Async_0100 getSmsSe", "Telephony_SmsMms_getSmsSegmentsInfo_Promise_2000 finish", "Telephony_SmsMms_getSmsSegmentsInfo_Async_2000 getSmsSe", "Telephony_SmsMms_getSmsSegmentsInfo_Async_0100   remain", "Telephony_SmsMms_getSmsSegmentsInfo_Async_2000 fail');\n", "';\n    }\n    sms.getSmsSegmentsInfo(FALSE_SLOT_ID, mess", "Telephony_SmsMms_getSmsSegmentsInfo_Async_0100 fail');\n", "Telephony_SmsMms_getSmsSegmentsInfo_Promise_2000', 0, a"], "files": ["SmsMmsError.test.js", "SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SmsSegmentsInfo", "api_method_name": "splitCount", "api_method_all": "splitCount: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 8, "api_used": "\u662f", "lines": ["litCount \" + result.splitCount);\n          console", "      expect(result.splitCount === DIVIDE_MESSAGE_", "tsInfo_Async_0100   splitCount \" + result.splitCou", " remaining = result.splitCount * MAX_CHAR_MESSAGE_"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SmsSegmentsInfo", "api_method_name": "encodeCount", "api_method_all": "encodeCount: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 7, "since": 8, "api_used": "\u662f", "lines": ["tsInfo_Async_0100   encodeCount \" + result.encodeCo", "SAGE_LENTH - result.encodeCount;\n          console.", " +\n          result.encodeCountRemaining);\n        ", "      expect(result.encodeCount === MAX_CHINESE_MES", "      expect(result.encodeCountRemaining === remain", "tsInfo_Async_0100   encodeCountRemaining \" +\n      ", "odeCount \" + result.encodeCount);\n          console"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SmsSegmentsInfo", "api_method_name": "encodeCountRemaining", "api_method_all": "encodeCountRemaining: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": [" +\n          result.encodeCountRemaining);\n          console", "tsInfo_Async_0100   encodeCountRemaining \" +\n          resul", "      expect(result.encodeCountRemaining === remaining).asse"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SmsSegmentsInfo", "api_method_name": "scheme", "api_method_all": "scheme: SmsEncodingScheme", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 8, "api_used": "\u662f", "lines": ["tsInfo_Async_0100   scheme \" + result.scheme);", "  scheme \" + result.scheme);\n\n          expect", "      expect(result.scheme === sms.SMS_ENCODIN"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SmsEncodingScheme", "api_method_all": "export enum SmsEncodingScheme {\n    SMS_ENCODING_UNKNOWN = 0,\n    SMS_ENCODING_7BIT,\n    SMS_ENCODING_8BIT,\n    SMS_ENCODING_16BIT,\n  }", "api_method_name": "SmsEncodingScheme", "api_type": "", "api_level": 40, "api_args_count": 0, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["Telephony_SmsMms_getSmsEncodingScheme_Async_0100\n   * @tc", "Telephony_SmsMms_getSmsEncodingScheme_Async_0100', 0, asy"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SmsEncodingScheme", "api_method_name": "SMS_ENCODING_UNKNOWN", "api_method_all": "SMS_ENCODING_UNKNOWN = 0,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": [" }\n      expect(sms.SMS_ENCODING_UNKNOWN == 0).assertTrue();"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SmsEncodingScheme", "api_method_name": "SMS_ENCODING_7BIT", "api_method_all": "SMS_ENCODING_7BIT,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 2, "since": 0, "api_used": "\u662f", "lines": [");\n      expect(sms.SMS_ENCODING_7BIT == 1).assertTrue();", "sult.scheme === sms.SMS_ENCODING_7BIT).assertTrue();\n    "], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SmsEncodingScheme", "api_method_name": "SMS_ENCODING_8BIT", "api_method_all": "SMS_ENCODING_8BIT,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": [");\n      expect(sms.SMS_ENCODING_8BIT == 2).assertTrue();"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SmsEncodingScheme", "api_method_name": "SMS_ENCODING_16BIT", "api_method_all": "SMS_ENCODING_16BIT,", "api_type": "", "api_args_count": 1, "api_level": 42, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": [");\n      expect(sms.SMS_ENCODING_16BIT == 3).assertTrue();"], "files": ["SmsMmsJsunit.test.ets"], "is_white": " ", "desc": " "}]}