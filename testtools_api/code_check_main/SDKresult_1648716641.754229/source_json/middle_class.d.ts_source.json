{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@internal\\component\\ets\\middle_class", "api": [{"api_class_name": "TSAttribute", "api_method_all": "declare class TSAlphabetIndexerAttribute extends CommonMethod<AlphabetIndexerAttribute> {\n  \n  pop(): AlphabetIndexerAttribute;\n  \n  debugLine(value: string): AlphabetIndexerAttribute;\n  \n  create(value: { arrayValue: Array<string>; selected: number }): AlphabetIndexerAttribute;\n}", "api_method_name": "TSAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSAttribute", "api_method_name": "pop", "api_method_all": "pop(): AlphabetIndexerAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): AlphabetIndexerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSAttribute", "api_method_name": "create", "api_method_all": "create(value: { arrayValue: Array<string>; selected: number }): AlphabetIndexerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSAnimatorAttribute", "api_method_all": "declare class TSAnimatorAttribute extends CommonMethod<AnimatorAttribute> {\n  \n  create(value: string): AnimatorAttribute;\n}", "api_method_name": "TSAnimatorAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSAnimatorAttribute", "api_method_name": "create", "api_method_all": "create(value: string): AnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSBadgeAttribute", "api_method_all": "declare class TSBadgeAttribute extends CommonMethod<BadgeAttribute> {\n  \n  pop(): BadgeAttribute;\n  \n  debugLine(value: string): BadgeAttribute;\n  \n  create(value: BadgeParamWithNumber | BadgeParamWithString): BadgeAttribute;\n}", "api_method_name": "TSBadgeAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSBadgeAttribute", "api_method_name": "pop", "api_method_all": "pop(): BadgeAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSBadgeAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): BadgeAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSBadgeAttribute", "api_method_name": "create", "api_method_all": "create(value: BadgeParamWithNumber | BadgeParamWithString): BadgeAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSBlankAttribute", "api_method_all": "declare class TSBlankAttribute extends CommonMethod<BlankAttribute> {\n  \n  create(min?: number | string): BlankAttribute;\n  \n  pop(): BlankAttribute;\n  \n  debugLine(value: string): BlankAttribute;\n}", "api_method_name": "TSBlankAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSBlankAttribute", "api_method_name": "create", "api_method_all": "create(min?: number | string): BlankAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSBlankAttribute", "api_method_name": "pop", "api_method_all": "pop(): BlankAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSBlankAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): BlankAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSButtonAttribute", "api_method_all": "declare class TSButtonAttribute extends CommonMethod<ButtonAttribute> {\n  \n  createWithChild(label?: ResourceStr, options?: ButtonOptions): ButtonAttribute;\n  \n  createWithLabel(label?: ResourceStr, options?: ButtonOptions): ButtonAttribute;\n  \n  pop(): ButtonAttribute;\n  \n  debugLine(value: string): ButtonAttribute;\n}", "api_method_name": "TSButtonAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSButtonAttribute", "api_method_name": "createWithChild", "api_method_all": "createWithChild(label?: ResourceStr, options?: ButtonOptions): ButtonAttribute;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSButtonAttribute", "api_method_name": "createWithLabel", "api_method_all": "createWithLabel(label?: ResourceStr, options?: ButtonOptions): ButtonAttribute;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSButtonAttribute", "api_method_name": "pop", "api_method_all": "pop(): ButtonAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSButtonAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ButtonAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCalendarAttribute", "api_method_all": "declare class TSCalendarAttribute {\n  \n  create(value: {\n    date: {\n      year: number;\n      month: number;\n      day: number;\n    };\n    currentData: MonthData;\n    preData: MonthData;\n    nextData: MonthData;\n    controller?: CalendarController;\n  }): CalendarAttribute;\n  \n  pop(): CalendarAttribute;\n  \n  debugLine(value: string): CalendarAttribute;\n}", "api_method_name": "TSCalendarAttribute", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSCalendarAttribute", "api_method_name": "create", "api_method_all": "create(value: {\n    date: {\n      year: number;\n      month: number;\n      day: number;\n    };\n    currentData: MonthData;\n    preData: MonthData;\n    nextData: MonthData;\n    controller?: CalendarController;\n  }): CalendarAttribute;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCalendarAttribute", "api_method_name": "pop", "api_method_all": "pop(): CalendarAttribute;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCalendarAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): CalendarAttribute;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCanvasAttribute", "api_method_all": "declare class TSCanvasAttribute extends CommonMethod<CanvasAttribute> {\n  \n  create(context?: CanvasRenderingContext2D): CanvasAttribute;\n  \n  pop(): CanvasAttribute;\n  \n  debugLine(value: string): CanvasAttribute;\n}", "api_method_name": "TSCanvasAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSCanvasAttribute", "api_method_name": "create", "api_method_all": "create(context?: CanvasRenderingContext2D): CanvasAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCanvasAttribute", "api_method_name": "pop", "api_method_all": "pop(): CanvasAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCanvasAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): CanvasAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCheckboxAttribute", "api_method_all": "declare class TSCheckboxAttribute extends CommonMethod<CheckboxAttribute> {\n  \n  create(options?: CheckboxOptions): CheckboxAttribute;\n  \n  pop(): CheckboxAttribute;\n  \n  debugLine(value: string): CheckboxAttribute;\n}", "api_method_name": "TSCheckboxAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSCheckboxAttribute", "api_method_name": "create", "api_method_all": "create(options?: CheckboxOptions): CheckboxAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCheckboxAttribute", "api_method_name": "pop", "api_method_all": "pop(): CheckboxAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCheckboxAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): CheckboxAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCheckboxGroupAttribute", "api_method_all": "declare class TSCheckboxGroupAttribute extends CommonMethod<CheckboxGroupAttribute> {\n  \n  create(options?: CheckboxGroupOptions): CheckboxGroupAttribute;\n  \n  pop(): CheckboxGroupAttribute;\n  \n  debugLine(value: string): CheckboxGroupAttribute;\n}", "api_method_name": "TSCheckboxGroupAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSCheckboxGroupAttribute", "api_method_name": "create", "api_method_all": "create(options?: CheckboxGroupOptions): CheckboxGroupAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCheckboxGroupAttribute", "api_method_name": "pop", "api_method_all": "pop(): CheckboxGroupAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCheckboxGroupAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): CheckboxGroupAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCircleAttributeextendsCommonShapeMethod", "api_method_all": "declare class TSCircleAttribute extends CommonShapeMethod<CircleAttribute> {\n  \n  create(value?: CircleOptions): CircleAttribute;\n  \n  debugLine(value: string): CircleAttribute;\n}", "api_method_name": "TSCircleAttributeextendsCommonShapeMethod", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSCircleAttributeextendsCommonShapeMethod", "api_method_name": "create", "api_method_all": "create(value?: CircleOptions): CircleAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCircleAttributeextendsCommonShapeMethod", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): CircleAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSColumnAttribute", "api_method_all": "declare class TSColumnAttribute extends CommonMethod<ColumnAttribute> {\n  \n  create(value?: { space?: string | number }): ColumnAttribute;\n  \n  pop(): ColumnAttribute;\n  \n  debugLine(value: string): ColumnAttribute;\n}", "api_method_name": "TSColumnAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSColumnAttribute", "api_method_name": "create", "api_method_all": "create(value?: { space?: string | number }): ColumnAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSColumnAttribute", "api_method_name": "pop", "api_method_all": "pop(): ColumnAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSColumnAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ColumnAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSColumnSplitAttribute", "api_method_all": "declare class TSColumnSplitAttribute extends CommonMethod<ColumnSplitAttribute> {\n  \n  create(): ColumnSplitAttribute;\n  \n  pop(): ColumnSplitAttribute;\n  \n  debugLine(value: string): ColumnSplitAttribute;\n}", "api_method_name": "TSColumnSplitAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSColumnSplitAttribute", "api_method_name": "create", "api_method_all": "create(): ColumnSplitAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSColumnSplitAttribute", "api_method_name": "pop", "api_method_all": "pop(): ColumnSplitAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSColumnSplitAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ColumnSplitAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCounterAttribute", "api_method_all": "declare class TSCounterAttribute extends CommonMethod<CounterAttribute> {\n  \n  create(): CounterAttribute;\n  \n  pop(): CounterAttribute;\n  \n  debugLine(value: string): CounterAttribute;\n}", "api_method_name": "TSCounterAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSCounterAttribute", "api_method_name": "create", "api_method_all": "create(): CounterAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCounterAttribute", "api_method_name": "pop", "api_method_all": "pop(): CounterAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSCounterAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): CounterAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSDataPanelAttribute", "api_method_all": "declare class TSDataPanelAttribute extends CommonMethod<DataPanelAttribute> {\n  \n  create(options: DataPanelOptions): DataPanelAttribute;\n  \n  pop(): DataPanelAttribute;\n  \n  debugLine(value: string): DataPanelAttribute;\n}", "api_method_name": "TSDataPanelAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSDataPanelAttribute", "api_method_name": "create", "api_method_all": "create(options: DataPanelOptions): DataPanelAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSDataPanelAttribute", "api_method_name": "pop", "api_method_all": "pop(): DataPanelAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSDataPanelAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): DataPanelAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSDatePickerAttribute", "api_method_all": "declare class TSDatePickerAttribute extends CommonMethod<DatePickerAttribute> {\n  \n  create(options?: DatePickerOptions): DatePickerAttribute;\n  \n  pop(): DatePickerAttribute;\n  \n  debugLine(value: string): DatePickerAttribute;\n}", "api_method_name": "TSDatePickerAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSDatePickerAttribute", "api_method_name": "create", "api_method_all": "create(options?: DatePickerOptions): DatePickerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSDatePickerAttribute", "api_method_name": "pop", "api_method_all": "pop(): DatePickerAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSDatePickerAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): DatePickerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSDividerAttribute", "api_method_all": "declare class TSDividerAttribute extends CommonMethod<DividerAttribute> {\n  \n  create(): DividerAttribute;\n  \n  debugLine(value: string): DividerAttribute;\n}", "api_method_name": "TSDividerAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSDividerAttribute", "api_method_name": "create", "api_method_all": "create(): DividerAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSDividerAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): DividerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSEllipseAttributeextendsCommonShapeMethod", "api_method_all": "declare class TSEllipseAttribute extends CommonShapeMethod<EllipseAttribute> {\n  \n  create(value?: { width?: string | number; height?: string | number }): EllipseAttribute;\n  \n  debugLine(value: string): EllipseAttribute;\n}", "api_method_name": "TSEllipseAttributeextendsCommonShapeMethod", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSEllipseAttributeextendsCommonShapeMethod", "api_method_name": "create", "api_method_all": "create(value?: { width?: string | number; height?: string | number }): EllipseAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSEllipseAttributeextendsCommonShapeMethod", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): EllipseAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSFlexAttribute", "api_method_all": "declare class TSFlexAttribute extends CommonMethod<FlexAttribute> {\n  \n  create(value?: FlexOptions): FlexAttribute;\n  \n  pop(): FlexAttribute;\n  \n  debugLine(value: string): FlexAttribute;\n}", "api_method_name": "TSFlexAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSFlexAttribute", "api_method_name": "create", "api_method_all": "create(value?: FlexOptions): FlexAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSFlexAttribute", "api_method_name": "pop", "api_method_all": "pop(): FlexAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSFlexAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): FlexAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSForEachInterface", "api_method_all": "declare class TSForEachInterface {\n  \n  create(\n    arr: Array<any>,\n    itemGenerator: (item: any, index?: number) => void,\n    keyGenerator?: (item: any, index?: number) => string,\n  ): ForEachInterface;\n  \n  pop(): ForEachInterface;\n  \n  debugLine(value: string): ForEachInterface;\n}", "api_method_name": "TSForEachInterface", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSForEachInterface", "api_method_name": "create     ", "api_method_all": "create(\n    arr: Array<any>,\n    itemGenerator: (item: any, index?: number) => void,\n    keyGenerator?: (item: any, index?: number) => string,\n  ): ForEachInterface;", "api_type": "", "api_args_count": 7, "api_level": 11, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSForEachInterface", "api_method_name": "itemGenerator", "api_method_all": "itemGenerator: (item: any, index?: number) => void,\n    keyGenerator?: (item: any, index?: number) => string,\n  ): ForEachInterface;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSForEachInterface", "api_method_name": "keyGenerator", "api_method_all": "keyGenerator?: (item: any, index?: number) => string,\n  ): ForEachInterface;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSForEachInterface", "api_method_name": "pop", "api_method_all": "pop(): ForEachInterface;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSForEachInterface", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ForEachInterface;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSFormComponentAttribute", "api_method_all": "declare class TSFormComponentAttribute extends CommonMethod<FormComponentAttribute> {\n  \n  create(value: {\n    id: number;\n    name: string;\n    bundle: string;\n    ability: string;\n    module: string;\n    dimension?: FormDimension;\n    temporary?: boolean;\n  }): FormComponentAttribute;\n  \n  debugLine(value: string): FormComponentAttribute;\n}", "api_method_name": "TSFormComponentAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSFormComponentAttribute", "api_method_name": "create", "api_method_all": "create(value: {\n    id: number;\n    name: string;\n    bundle: string;\n    ability: string;\n    module: string;\n    dimension?: FormDimension;\n    temporary?: boolean;\n  }): FormComponentAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSFormComponentAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): FormComponentAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGaugeAttribute", "api_method_all": "declare class TSGaugeAttribute extends CommonMethod<GaugeAttribute> {\n  \n  create(options: { value: number; min?: number; max?: number }): GaugeAttribute;\n  \n  debugLine(value: string): GaugeAttribute;\n}", "api_method_name": "TSGaugeAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSGaugeAttribute", "api_method_name": "create", "api_method_all": "create(options: { value: number; min?: number; max?: number }): GaugeAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGaugeAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): GaugeAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGridAttribute", "api_method_all": "declare class TSGridAttribute extends CommonMethod<GridAttribute> {\n  \n  create(scroller?: Scroller): GridAttribute;\n  \n  pop(): GridAttribute;\n  \n  debugLine(value: string): GridAttribute;\n}", "api_method_name": "TSGridAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSGridAttribute", "api_method_name": "create", "api_method_all": "create(scroller?: Scroller): GridAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGridAttribute", "api_method_name": "pop", "api_method_all": "pop(): GridAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGridAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): GridAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGridItemAttribute", "api_method_all": "declare class TSGridItemAttribute extends CommonMethod<GridItemAttribute> {\n  \n  create(): GridItemAttribute;\n  \n  pop(): GridItemAttribute;\n  \n  debugLine(value: string): GridItemAttribute;\n}", "api_method_name": "TSGridItemAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSGridItemAttribute", "api_method_name": "create", "api_method_all": "create(): GridItemAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGridItemAttribute", "api_method_name": "pop", "api_method_all": "pop(): GridItemAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGridItemAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): GridItemAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGridContainerAttribute", "api_method_all": "declare class TSGridContainerAttribute extends ColumnAttribute {\n  \n  create(value?: GridContainerOptions): GridContainerAttribute;\n  \n  pop(): GridContainerAttribute;\n  \n  debugLine(value: string): GridContainerAttribute;\n}", "api_method_name": "TSGridContainerAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSGridContainerAttribute", "api_method_name": "create", "api_method_all": "create(value?: GridContainerOptions): GridContainerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGridContainerAttribute", "api_method_name": "pop", "api_method_all": "pop(): GridContainerAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGridContainerAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): GridContainerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSImageAttribute", "api_method_all": "declare class TSImageAttribute extends CommonMethod<ImageAttribute> {\n  \n  create(src: string | PixelMap | Resource): ImageAttribute;\n  \n  debugLine(value: string): ImageAttribute;\n}", "api_method_name": "TSImageAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSImageAttribute", "api_method_name": "create", "api_method_all": "create(src: string | PixelMap | Resource): ImageAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSImageAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ImageAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSImageAnimatorAttribute", "api_method_all": "declare class TSImageAnimatorAttribute extends CommonMethod<ImageAnimatorAttribute> {\n  \n  create(): ImageAnimatorAttribute;\n  \n  debugLine(value: string): ImageAnimatorAttribute;\n}", "api_method_name": "TSImageAnimatorAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSImageAnimatorAttribute", "api_method_name": "create", "api_method_all": "create(): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSImageAnimatorAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ImageAnimatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSLazyForEachInterface", "api_method_all": "declare class TSLazyForEachInterface {\n  \n  create(\n    dataSource: IDataSource,\n    itemGenerator: (item: any, index?: number) => void,\n    keyGenerator?: (item: any, index?: number) => string,\n  ): LazyForEachInterface;\n  \n  pop(): LazyForEachInterface;\n  \n  debugLine(value: string): LazyForEachInterface;\n}", "api_method_name": "TSLazyForEachInterface", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSLazyForEachInterface", "api_method_name": "create     ", "api_method_all": "create(\n    dataSource: IDataSource,\n    itemGenerator: (item: any, index?: number) => void,\n    keyGenerator?: (item: any, index?: number) => string,\n  ): LazyForEachInterface;", "api_type": "", "api_args_count": 7, "api_level": 11, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSLazyForEachInterface", "api_method_name": "itemGenerator", "api_method_all": "itemGenerator: (item: any, index?: number) => void,\n    keyGenerator?: (item: any, index?: number) => string,\n  ): LazyForEachInterface;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSLazyForEachInterface", "api_method_name": "keyGenerator", "api_method_all": "keyGenerator?: (item: any, index?: number) => string,\n  ): LazyForEachInterface;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSLazyForEachInterface", "api_method_name": "pop", "api_method_all": "pop(): LazyForEachInterface;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSLazyForEachInterface", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): LazyForEachInterface;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSLineAttributeextendsCommonShapeMethod", "api_method_all": "declare class TSLineAttribute extends CommonShapeMethod<LineAttribute> {\n  \n  create(value?: { width?: string | number; height?: string | number }): LineAttribute;\n  \n  debugLine(value: string): LineAttribute;\n}", "api_method_name": "TSLineAttributeextendsCommonShapeMethod", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSLineAttributeextendsCommonShapeMethod", "api_method_name": "create", "api_method_all": "create(value?: { width?: string | number; height?: string | number }): LineAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSLineAttributeextendsCommonShapeMethod", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): LineAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSListAttribute", "api_method_all": "declare class TSListAttribute extends CommonMethod<ListAttribute> {\n  \n  create(value?: { initialIndex?: number; space?: number | string; scroller?: Scroller }): ListAttribute;\n  \n  pop(): ListAttribute;\n  \n  debugLine(value: string): ListAttribute;\n}", "api_method_name": "TSListAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSListAttribute", "api_method_name": "create", "api_method_all": "create(value?: { initialIndex?: number; space?: number | string; scroller?: Scroller }): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSListAttribute", "api_method_name": "pop", "api_method_all": "pop(): ListAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSListAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ListAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSListItemAttribute", "api_method_all": "declare class TSListItemAttribute extends CommonMethod<ListItemAttribute> {\n  \n  create(value?: string): ListItemAttribute;\n  \n  pop(): ListItemAttribute;\n  \n  debugLine(value: string): ListItemAttribute;\n}", "api_method_name": "TSListItemAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSListItemAttribute", "api_method_name": "create", "api_method_all": "create(value?: string): ListItemAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSListItemAttribute", "api_method_name": "pop", "api_method_all": "pop(): ListItemAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSListItemAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ListItemAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSLoadingProgressAttribute", "api_method_all": "declare class TSLoadingProgressAttribute extends CommonMethod<LoadingProgressAttribute> {\n  \n  create(): LoadingProgressAttribute;\n  \n  debugLine(value: string): LoadingProgressAttribute;\n  \n  color(value: ResourceColor): LoadingProgressAttribute;\n}", "api_method_name": "TSLoadingProgressAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSLoadingProgressAttribute", "api_method_name": "create", "api_method_all": "create(): LoadingProgressAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSLoadingProgressAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): LoadingProgressAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSLoadingProgressAttribute", "api_method_name": "color", "api_method_all": "color(value: ResourceColor): LoadingProgressAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 276, "since": 8, "api_used": "\u662f", "lines": ["(obj.$attrs.divider.color).assertEqual(\"#FFFF", "        radius: 20, color: Color.Gray, offset", "bjNew.$attrs.shadow.color).assertEqual(\"#FF00", " 2.000000;\n  @State color: string = 0xFFFFFF;", " { radius: 'error', color: 'error', offsetX: ", "rt default function colorGradientJsunit() {\n ", " if (eventData.data.colorValues != null) {\n  ", "ata: {\n            \"colorValues\": JSON.string", "  console.info(\"get colorGradient state pages", "ing = 150;\n  @State colorValues: Array = [[0x", "ull) {\n        this.color = eventData.data.co", "bjNew.$attrs.shadow.color).assertEqual(\"#8000", "bjNew.$attrs.shadow.color).assertEqual(\"#FF80", "ull) {\n        this.colorValues = JSON.parse(", "\n        }.border({ color: Color.Black, width", "TRS_SHADOW_COLOR = 'color'\nconst ATTRS_SHADOW", "ection.Top,\n        colors: [[0xAEE1E1, 0.0],", "        color: this.color,\n          startMar", "t(obj.$attrs.shadow.color).assertEqual(\"#FF80", ".border({ width: 5, color: 0x317AF7, radius: ", "    radius: 60,\n    colors:[[0xAEE1E1, 0.0], ", "r({ strokeWidth: 2, color: 0xFFFFFF, startMar", "ata: {\n            \"color\": '0xFF0000'\n      ", "(obj.$attrs.divider.color).assertEqual(\"#FF00", " console.info(\"push colorGradient page result", "radius: 0x7FFFFFFF, color: 0x7FFFFFFF, offset", "      console.info(\"colorGradient beforeEach ", "        uri: 'pages/colorGradient',\n      }\n ", "Direction.Left,\n    colors: [[0xAEE1E1, 0.0],", "s));\n        if (!(\"colorGradient\" == pages.n", " if (eventData.data.color != null) {\n        ", ",\n    end: 359,\n    colors: [[0xAEE1E1, 0.0],", "      console.info(\"colorGradient after each ", "    Text(`text font color ${this.fontColor}`)", "   Text('background color').fontSize(9).width", "arse(eventData.data.colorValues);\n      }\n   ", "ject= { radius: 10, color: Color.Gray, offset", "or = eventData.data.color;\n      }\n      if (", "console.error(\"push colorGradient page error:", "radius: 0x80000000, color: 0x80000000, offset", "bjNew.$attrs.shadow.color).assertEqual(\"#7FFF", "ata: {\n            \"color\": \"#FF0000FF\"\n     ", "fontColor)\n        .colorBlend(Color.Green)\n ", "right: 20, size: 2, color: Color.Blue })\n    ", "  if(eventData.data.colorValues != null) {\n  ", "= \"200px\";\n  @State color: Array = [[0x080808", "okeWidth,\n          color: this.color,\n      "], "files": ["ohosPrompt.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "Qrcode.ets", "Span.ets", "Progress.ets", "toolbarItemProps.test.js", "marquee.ets", "basicabilityapi.test.js", "DividerJsunit.test.ets", "Divider.ets", "border.ets", "systemPrompt.ets", "List.test.ets", "scrollCode.ets", "background.ets", "Text.ets", "SpanJsunit.test.ets", "gauge.ets", "TextJsunit.test.ets", "swiper.ets", "Blank.ets", "text.ets", "canvasProps.test.js", "BlankJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "edgeEffect.ets", "ProgressJsunit.test.ets", "labelProps.test.js", "image.ets", "ListJsunit.test.ets", "loadingProgress.ets", "stepperProps.test.js", "ratingProps.test.js", "ColorGradientJsunit.test.ets", "PatternLock.ets", "ShapeJsunit.test.ets", "badge.ets", "qrcodeProps.test.js", "textStyle.ets", "imageEffects.ets", "AlphabetIndexer.ets", "SubscribaleAbstractJsunit.test.ets", "stepperItemProps.test.js", "videoProps.test.js", "list.ets", "BackgroundJsunit.test.ets", "List.ets", "QrCode.ets", "dragEvent2.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "gradientDirection.ets", "backgroundAndSizeSetting.ets", "calendar.ets", "dragEvent.ets", "pickerProps.test.js", "selectProps.test.js", "span.ets", "NavigatorCode.ets", "BackgroundAndSizeSettingJsunit.test.ets", "mouseEvent.ets", "BadgeJsunit.test.ets", "pickerViewProps.test.js", "divProps.test.js", "divider.ets", "Constants.ets", "progress.ets", "sliderProps.test.js", "WebPage.ets", "inputProps.test.js", "index.js", "progressProps.test.js", "Badge.ets", "colorGradient.ets", "overlay.ets", "blank.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSMarqueeAttribute", "api_method_all": "declare class TSMarqueeAttribute extends CommonMethod<MarqueeAttribute> {\n  \n  create(value: { start: boolean; step?: number; loop?: number; fromStart?: boolean; src: string }): MarqueeAttribute;\n  \n  pop(): MarqueeAttribute;\n  \n  debugLine(value: string): MarqueeAttribute;\n}", "api_method_name": "TSMarqueeAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSMarqueeAttribute", "api_method_name": "create", "api_method_all": "create(value: { start: boolean; step?: number; loop?: number; fromStart?: boolean; src: string }): MarqueeAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSMarqueeAttribute", "api_method_name": "pop", "api_method_all": "pop(): MarqueeAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSMarqueeAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): MarqueeAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSNavigationAttribute", "api_method_all": "declare class TSNavigationAttribute extends CommonMethod<NavigationAttribute> {\n  \n  create(): NavigationAttribute;\n  \n  pop(): NavigationAttribute;\n  \n  debugLine(value: string): NavigationAttribute;\n}", "api_method_name": "TSNavigationAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSNavigationAttribute", "api_method_name": "create", "api_method_all": "create(): NavigationAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSNavigationAttribute", "api_method_name": "pop", "api_method_all": "pop(): NavigationAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSNavigationAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): NavigationAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSNavigatorAttribute", "api_method_all": "declare class TSNavigatorAttribute extends CommonMethod<NavigatorAttribute> {\n  \n  create(value?: { target: string; type?: NavigationType }): NavigatorAttribute;\n  \n  pop(): NavigatorAttribute;\n  \n  debugLine(value: string): NavigatorAttribute;\n}", "api_method_name": "TSNavigatorAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSNavigatorAttribute", "api_method_name": "create", "api_method_all": "create(value?: { target: string; type?: NavigationType }): NavigatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSNavigatorAttribute", "api_method_name": "pop", "api_method_all": "pop(): NavigatorAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSNavigatorAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): NavigatorAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPageTransitionEnterInterfaceextendsCommonTransition", "api_method_all": "declare class TSPageTransitionEnterInterface extends CommonTransition<PageTransitionEnterInterface> {\n  \n  create(value: {\n    type?: RouteType;\n    duration?: number;\n    curve?: Curve | string;\n    delay?: number;\n  }): PageTransitionEnterInterface;\n}", "api_method_name": "TSPageTransitionEnterInterfaceextendsCommonTransition", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSPageTransitionEnterInterfaceextendsCommonTransition", "api_method_name": "create", "api_method_all": "create(value: {\n    type?: RouteType;\n    duration?: number;\n    curve?: Curve | string;\n    delay?: number;\n  }): PageTransitionEnterInterface;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPageTransitionExitInterfaceextendsCommonTransition", "api_method_all": "declare class TSPageTransitionExitInterface extends CommonTransition<PageTransitionExitInterface> {\n  \n  create(value: {\n    type?: RouteType;\n    duration?: number;\n    curve?: Curve | string;\n    delay?: number;\n  }): PageTransitionExitInterface;\n}", "api_method_name": "TSPageTransitionExitInterfaceextendsCommonTransition", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSPageTransitionExitInterfaceextendsCommonTransition", "api_method_name": "create", "api_method_all": "create(value: {\n    type?: RouteType;\n    duration?: number;\n    curve?: Curve | string;\n    delay?: number;\n  }): PageTransitionExitInterface;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPanelAttribute", "api_method_all": "declare class TSPanelAttribute extends CommonMethod<PanelAttribute> {\n  \n  create(show: boolean): PanelAttribute;\n  \n  pop(): PanelAttribute;\n  \n  debugLine(value: string): PanelAttribute;\n}", "api_method_name": "TSPanelAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSPanelAttribute", "api_method_name": "create", "api_method_all": "create(show: boolean): PanelAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPanelAttribute", "api_method_name": "pop", "api_method_all": "pop(): PanelAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPanelAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): PanelAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPathAttributeextendsCommonShapeMethod", "api_method_all": "declare class TSPathAttribute extends CommonShapeMethod<PathAttribute> {\n  \n  create(value?: { width?: number | string; height?: number | string; commands?: string }): PathAttribute;\n  \n  pop(): PathAttribute;\n  \n  debugLine(value: string): PathAttribute;\n}", "api_method_name": "TSPathAttributeextendsCommonShapeMethod", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSPathAttributeextendsCommonShapeMethod", "api_method_name": "create", "api_method_all": "create(value?: { width?: number | string; height?: number | string; commands?: string }): PathAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPathAttributeextendsCommonShapeMethod", "api_method_name": "pop", "api_method_all": "pop(): PathAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPathAttributeextendsCommonShapeMethod", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): PathAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPatternLockAttribute", "api_method_all": "declare class TSPatternLockAttribute extends CommonMethod<TSPatternLockAttribute> {\n  \n  create(controller?: PatternLockController): TSPatternLockAttribute;\n  \n  pop(): TSPatternLockAttribute;\n  \n  debugLine(value: string): TSPatternLockAttribute;\n}", "api_method_name": "TSPatternLockAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSPatternLockAttribute", "api_method_name": "create", "api_method_all": "create(controller?: PatternLockController): TSPatternLockAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPatternLockAttribute", "api_method_name": "pop", "api_method_all": "pop(): TSPatternLockAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPatternLockAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): TSPatternLockAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPieceAttribute", "api_method_all": "declare class TSPieceAttribute extends CommonMethod<PieceAttribute> {\n  \n  create(options?: { content: string; icon?: string }): PieceAttribute;\n  \n  pop(): PieceAttribute;\n  \n  debugLine(value: string): PieceAttribute;\n}", "api_method_name": "TSPieceAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSPieceAttribute", "api_method_name": "create", "api_method_all": "create(options?: { content: string; icon?: string }): PieceAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPieceAttribute", "api_method_name": "pop", "api_method_all": "pop(): PieceAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPieceAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): PieceAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPluginComponentAttribute", "api_method_all": "declare class TSPluginComponentAttribute extends CommonMethod<PluginComponentAttribute> {\n  \n  create(value: { template: PluginComponentTemplate; data: any }): PluginComponentAttribute;\n  \n  pop(): PluginComponentAttribute;\n  \n  debugLine(value: string): PluginComponentAttribute;\n}", "api_method_name": "TSPluginComponentAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSPluginComponentAttribute", "api_method_name": "create", "api_method_all": "create(value: { template: PluginComponentTemplate; data: any }): PluginComponentAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPluginComponentAttribute", "api_method_name": "pop", "api_method_all": "pop(): PluginComponentAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPluginComponentAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): PluginComponentAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPolygonAttributeextendsCommonShapeMethod", "api_method_all": "declare class TSPolygonAttribute extends CommonShapeMethod<PolygonAttribute> {\n  \n  create(value?: { width?: string | number; height?: string | number }): PolygonAttribute;\n  \n  debugLine(value: string): PolygonAttribute;\n}", "api_method_name": "TSPolygonAttributeextendsCommonShapeMethod", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSPolygonAttributeextendsCommonShapeMethod", "api_method_name": "create", "api_method_all": "create(value?: { width?: string | number; height?: string | number }): PolygonAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPolygonAttributeextendsCommonShapeMethod", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): PolygonAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPolylineAttributeextendsCommonShapeMethod", "api_method_all": "declare class TSPolylineAttribute extends CommonShapeMethod<PolylineAttribute> {\n  \n  create(value?: { width?: string | number; height?: string | number }): PolylineAttribute;\n  \n  debugLine(value: string): PolylineAttribute;\n}", "api_method_name": "TSPolylineAttributeextendsCommonShapeMethod", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSPolylineAttributeextendsCommonShapeMethod", "api_method_name": "create", "api_method_all": "create(value?: { width?: string | number; height?: string | number }): PolylineAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPolylineAttributeextendsCommonShapeMethod", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): PolylineAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSProgressAttribute", "api_method_all": "declare class TSProgressAttribute extends CommonMethod<ProgressAttribute> {\n  \n  create(options: ProgressOptions): ProgressAttribute;\n  \n  debugLine(value: string): ProgressAttribute;\n}", "api_method_name": "TSProgressAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSProgressAttribute", "api_method_name": "create", "api_method_all": "create(options: ProgressOptions): ProgressAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSProgressAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ProgressAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSQRCodeAttribute", "api_method_all": "declare class TSQRCodeAttribute extends CommonMethod<QRCodeAttribute> {\n  \n  create(value: string): QRCodeAttribute;\n  \n  pop(): QRCodeAttribute;\n  \n  debugLine(value: string): QRCodeAttribute;\n}", "api_method_name": "TSQRCodeAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSQRCodeAttribute", "api_method_name": "create", "api_method_all": "create(value: string): QRCodeAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSQRCodeAttribute", "api_method_name": "pop", "api_method_all": "pop(): QRCodeAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSQRCodeAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): QRCodeAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRadioAttribute", "api_method_all": "declare class TSRadioAttribute extends CommonMethod<RadioAttribute> {\n  \n  create(options: RadioOptions): RadioAttribute;\n  \n  debugLine(value: string): RadioAttribute;\n}", "api_method_name": "TSRadioAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSRadioAttribute", "api_method_name": "create", "api_method_all": "create(options: RadioOptions): RadioAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRadioAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): RadioAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRatingAttribute", "api_method_all": "declare class TSRatingAttribute extends CommonMethod<RatingAttribute> {\n  \n  create(options?: { rating: number; indicator?: boolean }): RatingAttribute;\n  \n  pop(): RatingAttribute;\n  \n  debugLine(value: string): RatingAttribute;\n}", "api_method_name": "TSRatingAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSRatingAttribute", "api_method_name": "create", "api_method_all": "create(options?: { rating: number; indicator?: boolean }): RatingAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRatingAttribute", "api_method_name": "pop", "api_method_all": "pop(): RatingAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRatingAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): RatingAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRectAttributeextendsCommonShapeMethod", "api_method_all": "declare class TSRectAttribute extends CommonShapeMethod<RectAttribute> {\n  \n  create(\n    value?:\n      | {\n          width?: number | string;\n          height?: number | string;\n          radius?: number | string | Array<any>;\n        }\n      | {\n          width?: number | string;\n          height?: number | string;\n          radiusWidth?: number | string;\n          radiusHeight?: number | string;\n        },\n  ): RectAttribute;\n  \n  debugLine(value: string): RectAttribute;\n}", "api_method_name": "TSRectAttributeextendsCommonShapeMethod", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSRectAttributeextendsCommonShapeMethod", "api_method_name": "create", "api_method_all": "create(\n    value?:\n      | {\n          width?: number | string;\n          height?: number | string;\n          radius?: number | string | Array<any>;\n        }\n      | {\n          width?: number | string;\n          height?: number | string;\n          radiusWidth?: number | string;\n          radiusHeight?: number | string;\n        },\n  ): RectAttribute;", "api_type": "", "api_args_count": 5, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRectAttributeextendsCommonShapeMethod", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): RectAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRefreshAttribute", "api_method_all": "declare class TSRefreshAttribute extends CommonMethod<RefreshAttribute> {\n  \n  create(value: { refreshing: boolean; offset?: number | string; friction?: number | string }): RefreshAttribute;\n  \n  pop(): RefreshAttribute;\n  \n  debugLine(value: string): RefreshAttribute;\n}", "api_method_name": "TSRefreshAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSRefreshAttribute", "api_method_name": "create", "api_method_all": "create(value: { refreshing: boolean; offset?: number | string; friction?: number | string }): RefreshAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRefreshAttribute", "api_method_name": "pop", "api_method_all": "pop(): RefreshAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRefreshAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): RefreshAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRowAttribute", "api_method_all": "declare class TSRowAttribute extends CommonMethod<RowAttribute> {\n  \n  create(value?: { space?: string | number }): RowAttribute;\n  \n  pop(): RowAttribute;\n  \n  debugLine(value: string): RowAttribute;\n}", "api_method_name": "TSRowAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSRowAttribute", "api_method_name": "create", "api_method_all": "create(value?: { space?: string | number }): RowAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRowAttribute", "api_method_name": "pop", "api_method_all": "pop(): RowAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRowAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): RowAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRowSplitAttribute", "api_method_all": "declare class TSRowSplitAttribute extends CommonMethod<RowSplitAttribute> {\n  \n  create(): RowSplitAttribute;\n  \n  pop(): RowSplitAttribute;\n  \n  debugLine(value: string): RowSplitAttribute;\n}", "api_method_name": "TSRowSplitAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSRowSplitAttribute", "api_method_name": "create", "api_method_all": "create(): RowSplitAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRowSplitAttribute", "api_method_name": "pop", "api_method_all": "pop(): RowSplitAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRowSplitAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): RowSplitAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSScrollAttribute", "api_method_all": "declare class TSScrollAttribute extends CommonMethod<ScrollAttribute> {\n  \n  create(scroller?: Scroller): ScrollAttribute;\n  \n  pop(): ScrollAttribute;\n  \n  debugLine(value: string): ScrollAttribute;\n}", "api_method_name": "TSScrollAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSScrollAttribute", "api_method_name": "create", "api_method_all": "create(scroller?: Scroller): ScrollAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSScrollAttribute", "api_method_name": "pop", "api_method_all": "pop(): ScrollAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSScrollAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ScrollAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSScrollBarAttribute", "api_method_all": "declare class TSScrollBarAttribute extends CommonMethod<ScrollBarAttribute> {\n  \n  create(value: ScrollBarOptions): ScrollBarAttribute;\n  \n  pop(): ScrollBarAttribute;\n  \n  debugLine(value: string): ScrollBarAttribute;\n}", "api_method_name": "TSScrollBarAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSScrollBarAttribute", "api_method_name": "create", "api_method_all": "create(value: ScrollBarOptions): ScrollBarAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSScrollBarAttribute", "api_method_name": "pop", "api_method_all": "pop(): ScrollBarAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSScrollBarAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ScrollBarAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSearchAttribute", "api_method_all": "declare class TSSearchAttribute extends CommonMethod<SearchAttribute> {\n  \n  create(options?: {\n    value?: string;\n    placeholder?: string;\n    icon?: string;\n    controller?: SearchController;\n  }): SearchAttribute;\n  \n  pop(): SearchAttribute;\n  \n  debugLine(value: string): SearchAttribute;\n}", "api_method_name": "TSSearchAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSSearchAttribute", "api_method_name": "create", "api_method_all": "create(options?: {\n    value?: string;\n    placeholder?: string;\n    icon?: string;\n    controller?: SearchController;\n  }): SearchAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSearchAttribute", "api_method_name": "pop", "api_method_all": "pop(): SearchAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSearchAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): SearchAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSelectAttribute", "api_method_all": "declare class TSSelectAttribute extends CommonMethod<SelectAttribute> {\n  \n  create(options: Array<SelectOptions>): SelectAttribute;\n  \n  pop(): SelectAttribute;\n  \n  debugLine(value: string): SelectAttribute;\n}", "api_method_name": "TSSelectAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSSelectAttribute", "api_method_name": "create", "api_method_all": "create(options: Array<SelectOptions>): SelectAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSelectAttribute", "api_method_name": "pop", "api_method_all": "pop(): SelectAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSelectAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): SelectAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSShapeAttribute", "api_method_all": "declare class TSShapeAttribute extends CommonMethod<ShapeAttribute> {\n  \n  create(value?: PixelMap): ShapeAttribute;\n  \n  pop(): ShapeAttribute;\n  \n  debugLine(value: string): ShapeAttribute;\n}", "api_method_name": "TSShapeAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSShapeAttribute", "api_method_name": "create", "api_method_all": "create(value?: PixelMap): ShapeAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSShapeAttribute", "api_method_name": "pop", "api_method_all": "pop(): ShapeAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSShapeAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ShapeAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSheetAttribute", "api_method_all": "declare class TSSheetAttribute extends CommonMethod<SheetAttribute> {\n  \n  create(): SheetAttribute;\n  \n  pop(): SheetAttribute;\n  \n  debugLine(value: string): SheetAttribute;\n}", "api_method_name": "TSSheetAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSSheetAttribute", "api_method_name": "create", "api_method_all": "create(): SheetAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSheetAttribute", "api_method_name": "pop", "api_method_all": "pop(): SheetAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSheetAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): SheetAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSliderAttribute", "api_method_all": "declare class TSSliderAttribute extends CommonMethod<SliderAttribute> {\n  \n  create(options?: SliderOptions): SliderAttribute;\n  \n  debugLine(value: string): SliderAttribute;\n}", "api_method_name": "TSSliderAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSSliderAttribute", "api_method_name": "create", "api_method_all": "create(options?: SliderOptions): SliderAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSliderAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): SliderAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSpanAttribute", "api_method_all": "declare class TSSpanAttribute extends CommonMethod<SpanAttribute> {\n  \n  create(value: string | Resource): SpanAttribute;\n  \n  debugLine(value: string): SpanAttribute;\n}", "api_method_name": "TSSpanAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSSpanAttribute", "api_method_name": "create", "api_method_all": "create(value: string | Resource): SpanAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSpanAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): SpanAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSStackAttribute", "api_method_all": "declare class TSStackAttribute extends CommonMethod<StackAttribute> {\n  \n  create(value?: { alignContent?: Alignment }): StackAttribute;\n  \n  pop(): StackAttribute;\n  \n  debugLine(value: string): StackAttribute;\n}", "api_method_name": "TSStackAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSStackAttribute", "api_method_name": "create", "api_method_all": "create(value?: { alignContent?: Alignment }): StackAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSStackAttribute", "api_method_name": "pop", "api_method_all": "pop(): StackAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSStackAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): StackAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSStepperAttribute", "api_method_all": "declare class TSStepperAttribute extends CommonMethod<StepperAttribute> {\n  \n  create(value?: { index?: number }): StepperAttribute;\n  \n  pop(): StepperAttribute;\n  \n  debugLine(value: string): StepperAttribute;\n}", "api_method_name": "TSStepperAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSStepperAttribute", "api_method_name": "create", "api_method_all": "create(value?: { index?: number }): StepperAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSStepperAttribute", "api_method_name": "pop", "api_method_all": "pop(): StepperAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSStepperAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): StepperAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSStepperItemAttribute", "api_method_all": "declare class TSStepperItemAttribute extends CommonMethod<StepperItemAttribute> {\n  \n  create(): StepperItemAttribute;\n  \n  pop(): StepperItemAttribute;\n  \n  debugLine(value: string): StepperItemAttribute;\n}", "api_method_name": "TSStepperItemAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSStepperItemAttribute", "api_method_name": "create", "api_method_all": "create(): StepperItemAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSStepperItemAttribute", "api_method_name": "pop", "api_method_all": "pop(): StepperItemAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSStepperItemAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): StepperItemAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSwiperAttribute", "api_method_all": "declare class TSSwiperAttribute extends CommonMethod<SwiperAttribute> {\n  \n  create(controller?: SwiperController): SwiperAttribute;\n  \n  pop(): SwiperAttribute;\n  \n  debugLine(value: string): SwiperAttribute;\n}", "api_method_name": "TSSwiperAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSSwiperAttribute", "api_method_name": "create", "api_method_all": "create(controller?: SwiperController): SwiperAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSwiperAttribute", "api_method_name": "pop", "api_method_all": "pop(): SwiperAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSwiperAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): SwiperAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTabContentAttribute", "api_method_all": "declare class TSTabContentAttribute extends CommonMethod<TabContentAttribute> {\n  \n  create(): TabContentAttribute;\n  \n  pop(): TabContentAttribute;\n  \n  debugLine(value: string): TabContentAttribute;\n}", "api_method_name": "TSTabContentAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSTabContentAttribute", "api_method_name": "create", "api_method_all": "create(): TabContentAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTabContentAttribute", "api_method_name": "pop", "api_method_all": "pop(): TabContentAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTabContentAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): TabContentAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTabsAttribute", "api_method_all": "declare class TSTabsAttribute extends CommonMethod<TabsAttribute> {\n  \n  create(value?: { barPosition?: BarPosition; index?: number; controller?: TabsController }): TabsAttribute;\n  \n  pop(): TabsAttribute;\n  \n  debugLine(value: string): TabsAttribute;\n}", "api_method_name": "TSTabsAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSTabsAttribute", "api_method_name": "create", "api_method_all": "create(value?: { barPosition?: BarPosition; index?: number; controller?: TabsController }): TabsAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTabsAttribute", "api_method_name": "pop", "api_method_all": "pop(): TabsAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTabsAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): TabsAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextAttribute", "api_method_all": "declare class TSTextAttribute extends CommonMethod<TextAttribute> {\n  \n  create(content?: string | Resource): TextAttribute;\n  \n  pop(): TextAttribute;\n  \n  debugLine(value: string): TextAttribute;\n}", "api_method_name": "TSTextAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextAttribute", "api_method_name": "create", "api_method_all": "create(content?: string | Resource): TextAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextAttribute", "api_method_name": "pop", "api_method_all": "pop(): TextAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): TextAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextAreaAttribute", "api_method_all": "declare class TSTextAreaAttribute extends CommonMethod<TextAreaAttribute> {\n  \n  create(value?: TextAreaOptions): TextAreaAttribute;\n  \n  debugLine(value: string): TextAreaAttribute;\n}", "api_method_name": "TSTextAreaAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextAreaAttribute", "api_method_name": "create", "api_method_all": "create(value?: TextAreaOptions): TextAreaAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextAreaAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): TextAreaAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextClockAttribute", "api_method_all": "declare class TSTextClockAttribute extends CommonMethod<TextClockAttribute> {\n  \n  create(options?: { timeZoneOffset?: number; controller?: TextClockController }): TextClockAttribute;\n  \n  pop(): TextClockAttribute;\n  \n  debugLine(value: string): TextClockAttribute;\n}", "api_method_name": "TSTextClockAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextClockAttribute", "api_method_name": "create", "api_method_all": "create(options?: { timeZoneOffset?: number; controller?: TextClockController }): TextClockAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextClockAttribute", "api_method_name": "pop", "api_method_all": "pop(): TextClockAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextClockAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): TextClockAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextInputAttribute", "api_method_all": "declare class TSTextInputAttribute extends CommonMethod<TextInputAttribute> {\n  \n  create(value?: TextInputOptions): TextInputAttribute;\n  \n  debugLine(value: string): TextInputAttribute;\n}", "api_method_name": "TSTextInputAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextInputAttribute", "api_method_name": "create", "api_method_all": "create(value?: TextInputOptions): TextInputAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextInputAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): TextInputAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextPickerAttribute", "api_method_all": "declare class TSTextPickerAttribute extends CommonMethod<TextPickerAttribute> {\n  \n  create(options?: TextPickerOptions): TextPickerAttribute;\n  \n  pop(): TextPickerAttribute;\n  \n  debugLine(value: string): TextPickerAttribute;\n}", "api_method_name": "TSTextPickerAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextPickerAttribute", "api_method_name": "create", "api_method_all": "create(options?: TextPickerOptions): TextPickerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextPickerAttribute", "api_method_name": "pop", "api_method_all": "pop(): TextPickerAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextPickerAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): TextPickerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextTimerAttribute", "api_method_all": "declare class TSTextTimerAttribute extends CommonMethod<TextTimerAttribute> {\n  \n  create(options?: TextTimerOptions): TextTimerAttribute;\n  \n  pop(): TextTimerAttribute;\n  \n  debugLine(value: string): TextTimerAttribute;\n}", "api_method_name": "TSTextTimerAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextTimerAttribute", "api_method_name": "create", "api_method_all": "create(options?: TextTimerOptions): TextTimerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextTimerAttribute", "api_method_name": "pop", "api_method_all": "pop(): TextTimerAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTextTimerAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): TextTimerAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSToggleAttribute", "api_method_all": "declare class TSToggleAttribute extends CommonMethod<ToggleAttribute> {\n  \n  create(options: { type: ToggleType; isOn?: boolean }): ToggleAttribute;\n  \n  pop(): ToggleAttribute;\n  \n  debugLine(value: string): ToggleAttribute;\n}", "api_method_name": "TSToggleAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSToggleAttribute", "api_method_name": "create", "api_method_all": "create(options: { type: ToggleType; isOn?: boolean }): ToggleAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSToggleAttribute", "api_method_name": "pop", "api_method_all": "pop(): ToggleAttribute;", "api_type": "", "api_args_count": 0, "api_level": null, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSToggleAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): ToggleAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSVideoAttribute", "api_method_all": "declare class TSVideoAttribute extends CommonMethod<VideoAttribute> {\n  \n  create(value: {\n    src?: string | Resource;\n    previewUri?: string | PixelMap | Resource;\n    controller?: VideoController;\n  }): VideoAttribute;\n  \n  debugLine(value: string): VideoAttribute;\n}", "api_method_name": "TSVideoAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSVideoAttribute", "api_method_name": "create", "api_method_all": "create(value: {\n    src?: string | Resource;\n    previewUri?: string | PixelMap | Resource;\n    controller?: VideoController;\n  }): VideoAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSVideoAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): VideoAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSWebAttribute", "api_method_all": "declare class TSWebAttribute extends CommonMethod<WebAttribute> {\n  \n  create(value: WebOptions): WebAttribute;\n  \n  debugLine(value: string): WebAttribute;\n}", "api_method_name": "TSWebAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSWebAttribute", "api_method_name": "create", "api_method_all": "create(value: WebOptions): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSWebAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): WebAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSXComponentAttribute", "api_method_all": "declare class TSXComponentAttribute extends CommonMethod<XComponentAttribute> {\n  \n  create(value: {\n    id: string;\n    type: string;\n    libraryname?: string;\n    controller?: XComponentController;\n  }): XComponentAttribute;\n  \n  debugLine(value: string): XComponentAttribute;\n}", "api_method_name": "TSXComponentAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSXComponentAttribute", "api_method_name": "create", "api_method_all": "create(value: {\n    id: string;\n    type: string;\n    libraryname?: string;\n    controller?: XComponentController;\n  }): XComponentAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSXComponentAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): XComponentAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRichTextAttribute", "api_method_all": "declare class TSRichTextAttribute {\n  \n  create(content: string): RichTextAttribute;\n  \n  pop(): RichTextAttribute;\n  \n  debugLine(value: string): RichTextAttribute;\n}", "api_method_name": "TSRichTextAttribute", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSRichTextAttribute", "api_method_name": "create", "api_method_all": "create(content: string): RichTextAttribute;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRichTextAttribute", "api_method_name": "pop", "api_method_all": "pop(): RichTextAttribute;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRichTextAttribute", "api_method_name": "debugLine", "api_method_all": "debugLine(value: string): RichTextAttribute;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["const DEBUGLINE = '$debugLine'\nconst ATTRS = '$at"], "files": ["Constants.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTapGestureInterface", "api_method_all": "declare class TSTapGestureInterface {\n  \n  create(value?: { count?: number; fingers?: number }): TapGestureInterface;\n  \n  pop(): TapGestureInterface;\n}", "api_method_name": "TSTapGestureInterface", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSTapGestureInterface", "api_method_name": "create", "api_method_all": "create(value?: { count?: number; fingers?: number }): TapGestureInterface;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSTapGestureInterface", "api_method_name": "pop", "api_method_all": "pop(): TapGestureInterface;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSLongPressGestureInterface", "api_method_all": "declare class TSLongPressGestureInterface {\n  \n  create(value?: { fingers?: number; repeat?: boolean; duration?: number }): LongPressGestureInterface;\n  \n  pop(): LongPressGestureInterface;\n}", "api_method_name": "TSLongPressGestureInterface", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSLongPressGestureInterface", "api_method_name": "create", "api_method_all": "create(value?: { fingers?: number; repeat?: boolean; duration?: number }): LongPressGestureInterface;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSLongPressGestureInterface", "api_method_name": "pop", "api_method_all": "pop(): LongPressGestureInterface;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPanGestureInterface", "api_method_all": "declare class TSPanGestureInterface {\n  \n  create(\n    value?:\n      | {\n          fingers?: number;\n          direction?: PanDirection;\n          distance?: number;\n        }\n      | PanGestureOptions,\n  ): PanGestureInterface;\n  \n  pop(): PanGestureInterface;\n}", "api_method_name": "TSPanGestureInterface", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSPanGestureInterface", "api_method_name": "create", "api_method_all": "create(\n    value?:\n                                                                                                                       | PanGestureOptions,\n  ): PanGestureInterface;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPanGestureInterface", "api_method_name": "pop", "api_method_all": "pop(): PanGestureInterface;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSwipeGestureInterface", "api_method_all": "declare class TSSwipeGestureInterface {\n  \n  create(value?: { fingers?: number; direction?: SwipeDirection; speed?: number }): SwipeGestureInterface;\n  \n  pop(): SwipeGestureInterface;\n}", "api_method_name": "TSSwipeGestureInterface", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSSwipeGestureInterface", "api_method_name": "create", "api_method_all": "create(value?: { fingers?: number; direction?: SwipeDirection; speed?: number }): SwipeGestureInterface;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSSwipeGestureInterface", "api_method_name": "pop", "api_method_all": "pop(): SwipeGestureInterface;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPinchGestureInterface", "api_method_all": "declare class TSPinchGestureInterface {\n  \n  create(value?: { fingers?: number; distance?: number }): PinchGestureInterface;\n  \n  pop(): PinchGestureInterface;\n}", "api_method_name": "TSPinchGestureInterface", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSPinchGestureInterface", "api_method_name": "create", "api_method_all": "create(value?: { fingers?: number; distance?: number }): PinchGestureInterface;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSPinchGestureInterface", "api_method_name": "pop", "api_method_all": "pop(): PinchGestureInterface;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRotationGestureInterface", "api_method_all": "declare class TSRotationGestureInterface {\n  \n  create(value?: { fingers?: number; angle?: number }): RotationGestureInterface;\n  \n  pop(): RotationGestureInterface;\n}", "api_method_name": "TSRotationGestureInterface", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSRotationGestureInterface", "api_method_name": "create", "api_method_all": "create(value?: { fingers?: number; angle?: number }): RotationGestureInterface;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSRotationGestureInterface", "api_method_name": "pop", "api_method_all": "pop(): RotationGestureInterface;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGestureGroupInterface", "api_method_all": "declare class TSGestureGroupInterface {\n  \n  create(mode: GestureMode, ...gesture: GestureType[]): GestureGroupInterface;\n  \n  pop(): GestureGroupInterface;\n}", "api_method_name": "TSGestureGroupInterface", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "TSGestureGroupInterface", "api_method_name": "create", "api_method_all": "create(mode: GestureMode, ...gesture: GestureType[]): GestureGroupInterface;", "api_type": "", "api_args_count": 2, "api_level": 11, "api_used_count": 82, "since": 8, "api_used": "\u662f", "lines": ["sole.info(\"[canvas] create image data by image", "bedAbstractProperty.createOneWaySync('subscrib", "Data = this.context.createImageData(80, 80);\n ", "\n    it('ACE_global_createLocalParticleAbility", "Data = this.context.createImageData(50, 50);\n ", "orResult = animator.createAnimator({\n    durat", "\n              this.createImageData();\n       ", ", 200, 100);\n  }\n\n  createImageData() {\n    le", "grad = this.context.createLinearGradient(50, 1", "\n              this.createRadialGradient();\n  ", "xt.stroke();\n  }\n\n  createPattern() {\n    let ", "var imageData = ctx.createImageData(1,1)\n     ", "tern = this.context.createPattern(img, 'repeat", ", 150, 150);\n  }\n\n  createRadialGradient() {\n ", "onst gradient = ctx.createLinearGradient(0,0,2", "var imageData = ctx.createImageData(1,2)\n     ", "grad = this.context.createRadialGradient(280, ", "Data = this.context.createImageData(imageData)", "bedAbstractProperty.createTwoWaySync('subscrib", "Data = this.context.createImageData(100, 100);", "\n              this.createPattern();\n         ", "    var path1 = ctx.createPath2D(\"M80 20 L40 1", "\n              this.createLinearGradient();\n  ", "    var path2 = ctx.createPath2D();\n        pa", " 250, 1660);\n  }\n\n  createLinearGradient() {\n ", "geData = offCanvas2.createImageData(100, 100);", "      var pat = ctx.createPattern(img, 'repeat", "sole.info(\"[canvas] create image data-----\" + ", "imageData));\n  }\n\n  createImageDataByImageData", "bserver = function2.createIntersectionObserver", "     var path = ctx.createPath2D(\"M80 20 L40 1", "var imageData = ctx.createImageData(2,1)\n     ", "tring = \"ACE_global_createLocalParticleAbility", "\n        var info = createLocalParticleAbility", "\n              this.createImageDataByImageData"], "files": ["GlobalJsunit.test.ets", "global.ets", "SubscribedAbstractPropertyJsunit.test.ets", "animatorOption.ets", "index.js", "canvas.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "TSGestureGroupInterface", "api_method_name": "pop", "api_method_all": "pop(): GestureGroupInterface;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 243, "since": 8, "api_used": "\u662f", "lines": ["= false\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilder,\n         ", "     this.$element(\"popup6\").hide()\n    },\n", "de()\n    },\n    hidepopup7() {\n        this", "de()\n    },\n    hidepopuppro5() {\n        t", "     Button('custom popup')\n        .key('b", "Regular })\n        .popupFont({ size: 30, w", "     this.$element(\"popup4\").hide()\n    },\n", "33000000,\n          popupColor: Color.White", "e2')\n  }\n  @Builder popupBuilderThree() {\n ", "     this.$element(\"popup5\").hide()\n    },\n", "ge')\n  }\n  @Builder popupBuilderOne() {\n   ", "     this.$element(\"popup2\").hide()\n    },\n", "  Button('no handle popup')\n        .key('b", "FF0000E6')\n        .popupBackground('#FF00D", "de()\n    },\n    hidepopuppro8() {\n        t", "      builder: this.popupBuilderThree,\n    ", "e1')\n  }\n  @Builder popupBuilderTwo() {\n   ", "omRight\n\n  @Builder popupBuilder() {\n    Ro", "      builder: this.popupBuilderOne,\n      ", "de()\n    },\n    hidepopuppro1() {\n        t", "     this.$element(\"popup3\").hide()\n    },\n", "de()\n    },\n    hidepopup2() {\n        this", "de()\n    },\n    hidepopup4() {\n        this", "de()\n    },\n    hidepopuppro6() {\n        t", "     Button('custom popupThree')\n        .k", "de()\n    },\n    hidepopup3() {\n        this", "     Button('custom popup 1')\n        .key(", "     Button('custom popupTwo')\n        .key", "Indexer1')\n        .popupColor('#FF737373')", "askColor,\n          popupColor: Color.White", "     this.$element(\"popup7\").hide()\n    },\n", "de()\n    },\n    hidepopup5() {\n        this", "Lighter })\n        .popupFont({ size: 30, w", "de()\n    },\n    hidepopuppro2() {\n        t", "tIndexer')\n        .popupColor('#FF737373')", "de()\n    },\n    hidepopuppro3() {\n        t", "     this.$element(\"popup1\").hide()\n    },\n", " });\n    },\n    hidepopup1() {\n        this", "     Button('custom popupOne')\n        .key", "      builder: this.popupBuilderTwo,\n      ", "de()\n    },\n    hidepopuppro7() {\n        t", "de()\n    },\n    hidepopup6() {\n        this", "de()\n    },\n    hidepopuppro4() {\n        t"], "files": ["List.test.js", "popupProps.test.js", "AlphabetIndexer.ets", "placement.ets", "commonComponentJsApi.test.js", "index.js", "bindPopup.ets"], "is_white": " ", "desc": " "}]}