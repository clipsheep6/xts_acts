{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@system.app", "api": [{"api_class_name": "AppResponse", "api_method_all": "export interface AppResponse {\n  \n  appID: string;\n\n  \n  appName: string;\n\n  \n  versionName: string;\n\n  \n  versionCode: number;\n}", "api_method_name": "AppResponse", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 3, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "AppResponse", "api_method_name": "appID", "api_method_all": "appID: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 6, "api_used": "\u662f", "lines": ["a));\n      expect(a.appID == \"com.open.harmon"], "files": ["SystemAppJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppResponse", "api_method_name": "appName", "api_method_all": "appName: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 3, "api_used": "\u662f", "lines": ["a));\n      expect(a.appName == \"$string:entry_M"], "files": ["SystemAppJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppResponse", "api_method_name": "versionName", "api_method_all": "versionName: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 3, "api_used": "\u662f", "lines": ["a));\n      expect(a.versionName == \"1.0.0\").assertT"], "files": ["SystemAppJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "AppResponse", "api_method_name": "versionCode", "api_method_all": "versionCode: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 11, "since": 3, "api_used": "\u662f", "lines": ["n] versionCode: ' + versionCode);\n        console.e", "r] versionCode: ' + versionCode);\n        expect(te", "o] versionCode: ' + versionCode);\n        console.d", "or('[console.error] versionCode: ' + versionCode);\n", "ug('[console.debug] versionCode: ' + versionCode);\n", "g] versionCode: ' + versionCode);\n        console.l", "RT');\n        const versionCode = 1.1;\n        cons", ".log('[console.log] versionCode: ' + versionCode);\n", "arn('[console.warn] versionCode: ' + versionCode);\n", "nfo('[console.info] versionCode: ' + versionCode);\n", "g] versionCode: ' + versionCode);\n        console.w"], "files": ["basicabilityapi.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScreenOnVisibleOptions", "api_method_all": "export interface ScreenOnVisibleOptions {\n  \n  visible?: boolean;\n\n  \n  success?: () => void;\n\n  \n  fail?: (data: string, code: number) => void;\n\n  \n  complete?: () => void;\n}", "api_method_name": "ScreenOnVisibleOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 3, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "ScreenOnVisibleOptions", "api_method_name": "success", "api_method_all": "success?: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 442, "since": 3, "api_used": "\u662f", "lines": ["o(\"get border state success \" + JSON.stringify(", "et areaChange state success \" + JSON.stringify(", "(\"push stepper page success \" + JSON.stringify(", "checkboxGroup state success \" + JSON.stringify(", "ole.info('Operation successful. Data: ' + JSON.", "\"push checkbox page success \" + JSON.stringify(", "nsole.info('onTouch successful, touchFlag is : ", "le.info(\"get slider success \" + JSON.stringify(", "ush edgeEffect page success \" + JSON.stringify(", "fo(\"get gauge state success \" + JSON.stringify(", "h imageEffects page success \" + JSON.stringify(", "o(\"push swiper page success \" + JSON.stringify(", "(\"get stepper state success \" + JSON.stringify(", "et edgeEffect state success \" + JSON.stringify(", " imageEffects state success \" + JSON.stringify(", "nfo(\"push flex page success \" + JSON.stringify(", "fo(\"push gauge page success \" + JSON.stringify(", "o(\"get swiper state success \" + JSON.stringify(", "nfo(\"get flex state success \" + JSON.stringify(", " checkboxGroup page success \" + JSON.stringify(", "ush areaChange page success \" + JSON.stringify(", "ndSizeSetting state success \" + JSON.stringify(", "\"get checkbox state success \" + JSON.stringify(", "o(\"push select page success \" + JSON.stringify(", "o(\"get select state success \" + JSON.stringify(", "(\"push marquee page success \" + JSON.stringify(", "onsole.info('dialog success callback\uff0cclick butt", "o(\"push border page success \" + JSON.stringify(", "o(\"get slider state success \" + JSON.stringify(", "le.info(\"get select success \" + JSON.stringify(", "(\"get marquee state success \" + JSON.stringify(", "AndSizeSetting page success \" + JSON.stringify(", "o(\"push slider page success \" + JSON.stringify(", "     ],\n            success: function(data) {\n "], "files": ["listItemGroupProps.test.js", "ohosPrompt.ets", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "mediaquery.test.js", "GeometryTransitionJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "dialogProps.test.js", "systemPrompt.ets", "LinkJsunit.test.ets", "GridJsnuit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "touch.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "TextJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "GridContainerJsunit.test.ets", "SearchJsunit.test.ets", "canvasProps.test.js", "AreaChangeJsunit.test.ets", "BlankJsunit.test.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "index.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "svgProps.test.js", "labelProps.test.js", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "gridContainerProps.test.js", "stepperProps.test.js", "ratingProps.test.js", "MotionPathJsunit.test.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "popupProps.test.js", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "listItemProps.test.js", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "AlphabetIndexerJsunit.test.ets", "TextInputJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "StackJsunit.test.ets", "TextAreaJsunit.test.ets", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "gridColProps.test.js", "patternLock.ets", "animateProps.test.js", "buttonProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "BadgeJsunit.test.ets", "pickerViewProps.test.js", "divProps.test.js", "switchProps.test.js", "commonComponentJsApi.test.js", "ellipseProps.test.js", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "swiperProps.test.js", "polygonProps.test.js", "NavigatorJsunit.test.ets", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "tabBarProps.test.js", "inputProps.test.js", "index.js", "toggleProps.test.js", "SwiperJsunit.test.ets", "ColumnJsunit.test.ets", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScreenOnVisibleOptions", "api_method_name": "fail", "api_method_all": "fail?: (data: string, code: number) => void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 43, "since": 3, "api_used": "\u662f", "lines": ["(test).assertEqual('fail');\n            }\n  ", "onsole.info('dialog fail callback' + data.er", "ediaQuery maxHeight fail');\n                ", "MediaQuery logicNot fail');\n                ", "ediaQuery logicOnly fail');\n                ", "'MediaQuery logic>= fail');\n                ", "onerror: Image load fail');\n        };\n    }", "console.log('dialog fail callback' + data.er", "le.error('Operation failed. Cause: ' + JSON.", "'MediaQuery logicOr fail');\n                ", "diaQuery deviceType fail');\n                ", "le.info('load image fail')\n          })\n    ", "ole.log('Image load fail');\n        };\n    }", "diaQuery matchMedia fail');\n                ", "(test).assertEqual('fail');\n                ", "uery rmeoveListener fail');\n                ", "MediaQuery logicAnd fail');\n                ", "iaQuery orientation fail');\n                ", "     },\n            fail: function(data) {\n ", "iaQuery addListener fail');\n                ", "   },\n              fail: function(data) {\n ", "diaQuery logicComma fail');\n                "], "files": ["ohosPrompt.ets", "systemPrompt.ets", "Image.ets", "index.js", "mediaquery.test.js", "index.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "ScreenOnVisibleOptions", "api_method_name": "complete", "api_method_all": "complete?: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 9, "since": 3, "api_used": "\u662f", "lines": ["('Marquee animation complete onStart')\n        }", "('Marquee animation complete onBounce')\n        ", "('Marquee animation complete onStart')\n         ", "    });\n    },\n\n    complete(event){\n        pro", "[prompt.showDialog] complete');\n            }\n  ", "('Marquee animation complete onFinish')\n        ", "     },\n            complete: function () {\n    "], "files": ["Marquee.ets", "marquee.ets", "basicabilityapi.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "ScreenOnVisibleOptions", "api_method_name": "visible", "api_method_all": "visible?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 42, "since": 3, "api_used": "\u662f", "lines": ["     */\n    it('testvisibleNone', 0, async func", "tor()\n         this.visibleTrue = this.$element", "* @tc.name      testvisibleFalse\n      * @tc.de", "  expect(obj.$attrs.visible).assertEqual('false", "  try {\n        var visible = true;\n        app", "alse:null,\n         visibleNone:null,\n         ", "     */\n    it('testvisibleTrue', 0, async func", "se(globalThis.value.visibleFalse);\n        cons", "rs.id).assertEqual('visibleFalse')\n        expe", "   visibleTrue:this.visibleTrue,\n             v", "se(globalThis.value.visibleNone);\n        conso", "rs.id).assertEqual('visibleTrue')\n        expec", "eTrue,\n             visibleFalse:this.visibleFa", "se(globalThis.value.visibleTrue);\n        conso", "     */\n    it('testvisibleFalse', 0, async fun", "  visibleFalse:this.visibleFalse,\n             ", "  console.info('testvisibleTrue START');\n      ", "rs.id).assertEqual('visibleNone')\n        expec", "  console.info('testvisibleFalse START');\n     ", "ount:null,\n         visibleTrue:null,\n         ", "  console.info('testvisibleNone START');\n      ", "app.screenOnVisible(visible);\n      } catch (er", "o(\"[badgeProps] get visible value is: \" + JSON.", "* @tc.name      testvisibleTrue\n      * @tc.des", "se = this.$element(\"visibleFalse\").getInspector", "   visibleNone:this.visibleNone,\n             m", "count,\n             visibleTrue:this.visibleTru", "tor()\n         this.visibleNone = this.$element", "tringify(obj.$attrs.visible));\n        done();\n", "  expect(obj.$attrs.visible).assertEqual(undefi", "tEqual('visibility: visible;')\n        console.", "ue = this.$element(\"visibleTrue\").getInspector(", "ne = this.$element(\"visibleNone\").getInspector(", "* @tc.name      testvisibleNone\n      * @tc.des", "True:null,\n         visibleFalse:null,\n        ", "  expect(obj.$attrs.visible).assertEqual('true'", "tor()\n         this.visibleFalse = this.$elemen", "False,\n             visibleNone:this.visibleNon"], "files": ["SystemAppJsunit.test.ets", "richtextProps.test.js", "badgeProps.test.js", "index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "RequestFullWindowOptions", "api_method_all": "export interface RequestFullWindowOptions {\n  \n  duration: number;\n}", "api_method_name": "RequestFullWindowOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 3, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "RequestFullWindowOptions", "api_method_name": "duration", "api_method_all": "duration: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 240, "since": 3, "api_used": "\u662f", "lines": ["reateAnimator({\n    duration: 3000,\n    fill: 'f", "ata: {\n            \"duration\": \"nan\"\n          }", "xpect(objNew.$attrs.duration).assertEqual('500.0", "ull) {\n        this.duration = parseInt(eventDat", "he text is hidden', duration: 2000 })\n          ", "nsole.info(\"button6 duration value is : \" + this", "value is : \" + this.duration)\n          animateT", "xpect(objNew.$attrs.duration).assertEqual('nan')", "ata: {\n            \"duration\": \"500\"\n          }", "        animateTo({ duration: this.duration }, (", "To({ duration: this.duration }, () => {\n        ", "gify(this.matrix1), duration: 200 })\n          t", "nsole.info(\"button6 duration test animateTo STAR", " if (eventData.data.duration != null) {\n        ", "3.jpg',\n            duration: 500,\n            w", "ssage: \"sucessful\", duration: 200 })\n          t", "     .duration(this.duration)\n      .vertical(th", "s = {\n              duration: 5000,\n            ", "        animateTo({ duration: 1000 }, () => {\n  ", "nsole.info(\"button1 duration test animateTo STAR", "nsole.info(\"button1 duration value is : \" + this", " {\n                \"duration\": this.duration,\n  ", "an = false\n  @State duration: number = 100\n  @St", "2.jpg',\n            duration: 500,\n            w", "options = {\n        duration: 2000,\n        iter", "   \"duration\": this.duration,\n              }\n  ", "  expect(obj.$attrs.duration).assertEqual('1000.", "4.jpg',\n            duration: 500,\n            w", "nsole.info(\"button7 duration test animateTo STAR", "eInt(eventData.data.duration);\n      }\n      if ", "an = false\n  @State duration: number = 1000\n  @S", "nsole.info(\"button7 duration value is : \" + this", "The text is shown', duration: 2000 })\n          ", "p(this.loop)\n      .duration(this.duration)\n    ", "1.jpg',\n            duration: 500,\n            w"], "files": ["animate.ets", "pageTransition2.ets", "ohosPrompt.ets", "imageAnimatorProps.test.js", "ohosMatrix4.ets", "swiper.ets", "appear.ets", "animationStatus.ets", "fillMode.ets", "curves.ets", "chartProps.test.js", "SharedTransitionJsunit.test.ets", "pageTransition.ets", "geometryTransition.ets", "swiperProps.test.js", "AnimateJsunit.test.ets", "animatorOption.ets", "index.js", "SwiperJsunit.test.ets", "Swiper.ets", "basicabilityapi.test.js", "transition.ets", "sharedTransition.ets", "motionPath.ets", "imageAnimator.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "App", "api_method_all": "export default class App {\n  \n  static getInfo(): AppResponse;\n\n  \n  static terminate(): void;\n\n  \n  static requestFullWindow(options?: RequestFullWindowOptions): void;\n\n  \n  static setImageCacheCount(value: number): void;\n\n  \n  static setImageRawDataCacheSize(value: number): void;\n\n  \n  static setImageFileCacheSize(value: number): void;\n}", "api_method_name": "App", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 197, "since": 3, "api_used": "\u662f", "lines": ["tring = 'Text for onAppear'\n\n  onPageShow()", "     let callBackDisAppear = (backData) => ", "ppearJsunit from './AppearJsunit.test.ets';", "  \"ACTION\": this.disAppearFlag,\n           ", "lse\n  private changeAppear: string = 'Hide ", "   console.info(\"disAppearFlag start to emi", "      var info = getApp();\n      } catch (e", "  console.info(\"testAppear01 click result i", "  console.info(\"testAppear02 disAppearEvent", "   console.info('disAppearFlag current acti", "  console.info(\"testAppear01 get appearEven", " console.info('[testAppear02] START');\n    ", "omponent {\n  aboutToAppear() {\n    console.", "ng = \"ACE_global_getApp\"\n      console.info", "         this.changeAppear = 'Show Text'\n  ", "   });\n\n    it('testAppear02', 0, async fun", "vents_emitter.on(disAppearEvent, callBackDi", " console.info('[testAppear02] END');\n      ", "  console.info(\"testAppear02 on appearEvent", "  console.info(\"testAppear02 on disAppearEv", "  Button(this.changeAppear)\n        .key('a", " })\n          .onDisAppear(() => {\n        ", "fo(\"testAppear02 disAppearEvent click resul", "         this.changeAppear = 'Hide Text'\n  ", "{\n    console.info('Application onCreate')\n", "\"testAppear02 on disAppearEvent err : \" + J", "{\n    console.info('Application onDestroy')", "= false\n  @State disAppearFlag: boolean = f", "  it('ACE_global_getApp', 0, function (done", "   console.info(\"disAppearFlag emit action ", "  console.info(\"testAppear01 on appearEvent", "            this.disAppearFlag = true\n     ", "arEvent, callBackDisAppear);\n      } catch ", "testAppear02 get disAppearEvent result is: ", "        let callBackAppear = (backData) => ", "  console.info(\"testAppear02 appearEvent cl", " console.info('[testAppear01] END');\n      ", "+ JSON.stringify(disAppearEvent));\n        ", "   }\n        var disAppearEvent = {\n       ", "  console.info(\"testAppear02 get appearEven", "w\n@Component\nstruct AppearExample {\n  @Stat", ";\n\n  private aboutToAppear(): void {\n    le", "    })\n\n    it('testAppear01', 0, async fun", " console.info('[testAppear01] START');\n    ", "yText)\n          .onAppear(() => {\n        ", "  console.info(\"testAppear02 get disAppearE", "ppearEvent, callBackAppear);\n      } catch ", "ate is: ' + this.disAppearFlag);\n          "], "files": ["GlobalJsunit.test.ets", "ConfigurationJsunit.test.ets", "VideoJsunit.test.ets", "SystemAppJsunit.test.ets", "Swiper.ets", "AppearJsunit.test.ets", "swiper.ets", "appear.ets", "SubscribaleAbstractJsunit.test.ets", "aboutToDisappear.ets", "AppStorage.ets", "app.js", "app.ets", "List.test.ets", "customDialogController.ets", "AppStorageJsunit.test.ets", "CustomDialog.ets", "index.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "App", "api_method_name": "getInfo", "api_method_all": "static getInfo(): AppResponse;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 3, "since": 3, "api_used": "\u662f", "lines": [";\n      var a = app.getInfo();\n      console.lo"], "files": ["SystemAppJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "App", "api_method_name": "terminate", "api_method_all": "static terminate(): void;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 1, "since": 3, "api_used": "\u662f", "lines": [" START');\n      app.terminate();\n      console.in"], "files": ["SystemAppJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "App", "api_method_name": "requestFullWindow", "api_method_all": "static requestFullWindow(options?: RequestFullWindowOptions): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 3, "api_used": "\u662f", "lines": ["= 2000;\n        app.requestFullWindow(a);\n      } catch ("], "files": ["SystemAppJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "App", "api_method_name": "setImageCacheCount", "api_method_all": "static setImageCacheCount(value: number): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": [" a = 100;\n      app.setImageCacheCount(a);\n      console.i"], "files": ["SystemAppJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "App", "api_method_name": "setImageRawDataCacheSize", "api_method_all": "static setImageRawDataCacheSize(value: number): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["04857600;\n      app.setImageRawDataCacheSize(a);\n      console.i"], "files": ["SystemAppJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "App", "api_method_name": "setImageFileCacheSize", "api_method_all": "static setImageFileCacheSize(value: number): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 1, "since": 0, "api_used": "\u662f", "lines": ["a = 1048;\n      app.setImageFileCacheSize(a);\n      console.i"], "files": ["SystemAppJsunit.test.ets"], "is_white": " ", "desc": " "}]}