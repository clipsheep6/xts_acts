{"subsystem_ch": "DFX\u5b50\u7cfb\u7edf", "subsystem_en": "hiviewdfx", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.hiTraceMeter", "api": [{"api_class_name": "hiTraceMeter", "api_method_all": "declare namespace hiTraceMeter {\n    \n    function startTrace(name: string, taskId: number): void;\n  \n    \n    function finishTrace(name: string, taskId: number): void;\n  \n    \n    function traceByValue(name: string, count: number): void;\n}", "api_method_name": "hiTraceMeter", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 5, "since": 0, "api_used": "\u662f", "lines": ["      try {\n        hiTraceMeter.startTrace('testNam", "      try {\n        hiTraceMeter.finishTrace('testNa", "ceMeter from '@ohos.hiTraceMeter'\n\nexport default fu", "iTraceChain'\nimport hiTraceMeter from '@ohos.hiTrace", "      try {\n        hiTraceMeter.traceByValue('testN"], "files": ["HiTraceChainJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "hiTraceMeter", "api_method_name": "startTrace", "api_method_all": "function startTrace(name: string, taskId: number): void;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 27, "since": 8, "api_used": "\u662f", "lines": ["                    startTrace and finishTrace.\n  ", "y {\n        byTrace.startTrace(\"test3\", 3);\n      ", "DFX_ByTrace_ByTrace_startTrace_0300 Test start****", "            bytrace.startTrace(2, \"222\", \"2000\");\n", "eMeter_HiTraceMeter_startTrace_0100', 0, async fun", "DFX_ByTrace_ByTrace_startTrace_0300', 0, async fun", "DFX_ByTrace_ByTrace_startTrace_0100 Test end******", "            bytrace.startTrace(\"test-\" + i.toStrin", "DFX_ByTrace_ByTrace_startTrace_0300 Test end******", "eMeter_HiTraceMeter_startTrace_0100 Test end******", "DFX_ByTrace_ByTrace_startTrace_0100 Test start****", "DFX_ByTrace_ByTrace_startTrace_0200 Test start****", "  * @tc.name      : startTrace\n     * @tc.desc    ", "DFX_ByTrace_ByTrace_startTrace_0200', 0, async fun", "\" + i.toString() + \"startTrace end\");\n\n           ", "            bytrace.startTrace(\"test2\");\n         ", "eMeter_HiTraceMeter_startTrace_0100\n     * @tc.nam", "y {\n        byTrace.startTrace(\"test1\", 1, 1000);\n", "            bytrace.startTrace(\"test2\", 222);\n    ", "eMeter_HiTraceMeter_startTrace_0100 error \" + erro", " + i.toString() + \" startTrace start\");\n          ", "            bytrace.startTrace(\"test2\", 222, 2000,", "y {\n        byTrace.startTrace(\"test2\", 2, 5000);\n", "DFX_ByTrace_ByTrace_startTrace_0100', 0, async fun", "       hiTraceMeter.startTrace('testName', 1);\n   ", "eMeter_HiTraceMeter_startTrace_0100 Test start****", "DFX_ByTrace_ByTrace_startTrace_0200 Test end******"], "files": ["ByTraceHiDebugJsunit.test.ets", "HiTraceChainJsunit.test.ets", "bytrace_test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "hiTraceMeter", "api_method_name": "finishTrace", "api_method_all": "function finishTrace(name: string, taskId: number): void;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 15, "since": 8, "api_used": "\u662f", "lines": ["            bytrace.finishTrace(\"test-\" + i.toStrin", "            bytrace.finishTrace(\"test3\", 111);\n    ", "            bytrace.finishTrace(1, \"123\");\n        ", "            bytrace.finishTrace(\"test3\");\n         ", "     startTrace and finishTrace.\n     */\n    it('DF", " + i.toString() + \" finishTrace start\");\n          ", "\" + i.toString() + \"finishTrace end\");\n        }\n\n ", "  * @tc.name      : finishTrace\n     * @tc.desc    ", "eMeter_HiTraceMeter_finishTrace_0100 Test start****", "eMeter_HiTraceMeter_finishTrace_0100\n     * @tc.nam", "eMeter_HiTraceMeter_finishTrace_0100 Test end******", "eMeter_HiTraceMeter_finishTrace_0100 error \" + erro", "       hiTraceMeter.finishTrace('testName', 1);\n   ", "eMeter_HiTraceMeter_finishTrace_0100', 0, async fun", "            bytrace.finishTrace(\"test3\", 1, 1);\n   "], "files": ["HiTraceChainJsunit.test.ets", "bytrace_test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "hiTraceMeter", "api_method_name": "traceByValue", "api_method_all": "function traceByValue(name: string, count: number): void;", "api_type": "", "api_args_count": 2, "api_level": null, "api_used_count": 20, "since": 0, "api_used": "\u662f", "lines": ["eMeter_HiTraceMeter_traceByValue_0100 Test start****", "eMeter_HiTraceMeter_traceByValue_0100 error \" + erro", "eMeter_HiTraceMeter_traceByValue_0100', 0, async fun", "DFX_ByTrace_ByTrace_traceByValue_0200', 0, async fun", "DFX_ByTrace_ByTrace_traceByValue_0200 Test start****", "y {\n        byTrace.traceByValue(\"test1\", 1);\n      ", "            bytrace.traceByValue(\"test5\", 5);\n      ", "DFX_ByTrace_ByTrace_traceByValue_0200 Test end******", "            bytrace.traceByValue(\"test5\", 3, 1);\n   ", "eMeter_HiTraceMeter_traceByValue_0100 Test end******", "       hiTraceMeter.traceByValue('testName', 2);\n   ", "eMeter_HiTraceMeter_traceByValue_0100\n     * @tc.nam", "DFX_ByTrace_ByTrace_traceByValue_0100 Test start****", "            bytrace.traceByValue(\"test5\");\n         ", "            bytrace.traceByValue(1, \"123\");\n        ", "            bytrace.traceByValue(\"test4-\" + i.toStri", "DFX_ByTrace_ByTrace_traceByValue_0100', 0, async fun", "  * @tc.name      : traceByValue\n     * @tc.desc    ", "DFX_ByTrace_ByTrace_traceByValue_0100 Test end******"], "files": ["ByTraceHiDebugJsunit.test.ets", "HiTraceChainJsunit.test.ets", "bytrace_test.js"], "is_white": " ", "desc": " "}]}