{"subsystem_ch": "ACE\u5f00\u53d1\u6846\u67b6", "subsystem_en": "ace", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@internal\\component\\ets\\search", "api": [{"api_class_name": "SearchController", "api_method_all": "declare class SearchController {\n  \n  constructor();\n  \n  caretPosition(value: number): void;\n}", "api_method_name": "SearchController", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": [" @State controller: SearchController= new SearchControll", "archController= new SearchController()\n  @State textFont"], "files": ["search.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SearchController", "api_method_name": "constructor", "api_method_all": "constructor()", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 80, "since": 8, "api_used": "\u662f", "lines": ["  expect(obj.$attrs.constructor.sizeType).assertEqu", "taChangeListener\n\n  constructor(list: number[]) {\n ", "  expect(obj.$attrs.constructor.wrap).assertEqual('", "tringify(obj.$attrs.constructor.alignItems));\n     ", "tringify(obj.$attrs.constructor.wrap));\n      expec", "tringify(obj.$attrs.constructor.wrap));\n      conso", "  expect(obj.$attrs.constructor.alignContent).asser", "yr flex0 obj.$attrs.constructor.direction-'FlexDire", "yr flex0 obj.$attrs.constructor.alignContent-'FlexA", "  expect(obj.$attrs.constructor.gutter).assertEqual", "  expect(obj.$attrs.constructor.direction).assertEq", "  expect(obj.$attrs.constructor.text).assertEqual(u", "tringify(obj.$attrs.constructor.alignContent));\n   ", "yr flex0 obj.$attrs.constructor.wrap-'FlexWrap.NoWr", "tringify(obj.$attrs.constructor));\n      expect(obj", "  expect(obj.$attrs.constructor.columns).assertEqua", "xpect(objNew.$attrs.constructor.direction).assertEq", "tringify(obj.$attrs.constructor.justifyContent));\n ", "  expect(obj.$attrs.constructor.margin).assertEqual", "yr flex1 obj.$attrs.constructor.alignContent-'FlexA", "yr flex0 obj.$attrs.constructor.justifyContent-'Fle", "tringify(obj.$attrs.constructor.direction));\n      ", "yr flex0 obj.$attrs.constructor.alignItems-'FlexWra", "  expect(obj.$attrs.constructor.justifyContent).ass", "  expect(obj.$attrs.constructor.alignItems).assertE"], "files": ["ProgressJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "SliderJsunit.test.ets", "GridContainerJsunit.test.ets", "TextAreaJsunit.test.ets", "DirectionJsunit.test.ets", "swiper.ets", "EnmusFlexAlignJsunit.test.ets", "FlexJsunit.test.ets", "Swiper.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SearchController", "api_method_name": "caretPosition", "api_method_all": "caretPosition(value: number): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 2, "since": 8, "api_used": "\u662f", "lines": ["    this.controller.caretPosition(4)\n        })\n    }", "ext')\n      Button('caretPosition')\n        .onClick("], "files": ["textInput.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SearchInterface", "api_method_all": "interface SearchInterface {\n  (options?: { value?: string;\n      placeholder?: string;\n      icon?: string;\n      controller?: SearchController\n  }): SearchAttribute;\n}", "api_method_name": "SearchInterface", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 8, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SearchInterface", "api_method_name": "options", "api_method_all": "(options?: { value?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 791, "since": 8, "api_used": "\u662f", "lines": ["= await router.push(options);\n          await U", " start\");\n      let options = {\n        uri: 'p", "(obj.$attrs.overlay.options.offset.x).assertEqu", "(obj.$attrs.overlay.options.align).assertEqual(", "(obj.$attrs.overlay.options.offset.y).assertEqu", " (done) {\n      let options = {\n        uri: 'p"], "files": ["listItemGroupProps.test.js", "ImageJsunit.test.ets", "RowSplitJsunit.test.ets", "pathProps.test.js", "CounterJsunit.test.ets", "dividerProps.test.js", "ImageEffectsJsunit.test.ets", "ListItemJsunit.test.ets", "tabContentProps.test.js", "textProps.test.js", "DragEventJsunit.test.ets", "ParallelGestureJsunit.test.ets", "ScrollBarJsunit.test.ets", "toolbarProps.test.js", "ColumnSplitJsunit.test.ets", "TextPickerJsunit.test.ets", "PolygonJsunit.test.ets", "TouchAbleJsunit.test.ets", "ZIndexJsunit.test.ets", "PathJsunit.test.ets", "polylineProps.test.js", "CheckboxGroupJsunit.test.ets", "PositionSettingJsunit.test.ets", "searchProps.test.js", "spanProps.test.js", "TextStyleJsunit.test.ets", "toolbarItemProps.test.js", "OhosRouterJsnuit.test.ets", "AppearJsunit.test.ets", "TapGesture.test.ets", "TextClockJsunit.test.ets", "PieceJsunit.test.ets", "PlacementJsunit.test.ets", "PolylineJsunit.test.ets", "GeometryTransitionJsunit.test.ets", "OverlayJsunit.test.ets", "LineJsunit.test.ets", "ScrollCodeJsunit.test.ets", "DividerJsunit.test.ets", "badgeProps.test.js", "basicabilityapi.test.js", "PriorityGestureJsunit.test.ets", "RichTextJsunit.test.ets", "FillModeJsunit.test.ets", "dialogProps.test.js", "CalendarJsunit.test.ets", "TouchJsunit.test.ets", "LongPressGesture.test.ets", "LinkJsunit.test.ets", "NavigatorCodeJsunit.test.ets", "EllipseJsunit.test.ets", "GridJsnuit.test.ets", "CurvesJsunit.test.ets", "FlexWrapJsunit.test.ets", "formProps.test.js", "VideoJsunit.test.ets", "SelectJsunit.test.ets", "DirectionJsunit.test.ets", "circleProps.test.js", "EnmusFlexAlignJsunit.test.ets", "SourceTypeJsunit.test.ets", "PanDirectionJsunit.test.ets", "RadioJsunit.test.ets", "stackProps.test.js", "SpanJsunit.test.ets", "EdgeEffectJsunit.test.ets", "StepperJsunit.test.ets", "PanelJsunit.test.ets", "ButtonJsunit.test.ets", "PanGestureJsunit.test.ets", "TextJsunit.test.ets", "LayoutConstraintsJsunit.test.ets", "GridJsunit.test.ets", "refreshProps.test.js", "ScrollerBarJsunit.test.ets", "EnmusItemAlignJsunit.test.ets", "EnmusImageJsunit.test.ets", "GridContainerJsunit.test.ets", "TransitionJsunit.test.ets", "SearchJsunit.test.ets", "EnmusHorizontalAlignJsunit.test.ets", "AreaChangeJsunit.test.ets", "VisibilityJsunit.test.ets", "canvasProps.test.js", "AnimateJsunit.test.ets", "BlankJsunit.test.ets", "RefreshJsunit.test.ets", "ResponseRegionJsunit.test.ets", "animatorOption.ets", "PropJsunit.test.ets", "FlexJsunit.test.ets", "QrCodeJsunit.test.ets", "AppStorageJsunit.test.ets", "ProgressJsunit.test.ets", "TimeStampJsunit.test.ets", "GridItem.test.ets", "richtextProps.test.js", "svgProps.test.js", "labelProps.test.js", "Canvas2Jsunit.test.ets", "svgTextProps.test.js", "textPathProps.test.js", "ListJsunit.test.ets", "FlexDirectionJsunit.test.ets", "gridContainerProps.test.js", "ColorGradientJsunit.test.ets", "ratingProps.test.js", "stepperProps.test.js", "MotionPathJsunit.test.ets", "marqueeProps.test.js", "imageAnimatorProps.test.js", "ShapeJsunit.test.ets", "tabsProps.test.js", "qrcodeProps.test.js", "lineProps.test.js", "GlobalJsunit.test.ets", "popupProps.test.js", "ToggleJsunit.test.ets", "SystemRouterJsunit.test.ets", "OhosPromptJsunit.test.ets", "listItemProps.test.js", "ConfigurationJsunit.test.ets", "PatternLockJsunit.test.ets", "gridRowProps.test.js", "stepperItemProps.test.js", "videoProps.test.js", "BindMenuJsunit.test.ets", "EnmusVerticalAlignJsunit.test.ets", "MarqueeJsunit.test.ets", "BackgroundJsunit.test.ets", "DatePickerJsunit.test.ets", "GaugeJsunit.test.ets", "optionProps.test.js", "PageTransitionJsunit.test.ets", "TextInputJsunit.test.ets", "AlphabetIndexerJsunit.test.ets", "animateTransformProps.test.js", "DataPanelJsunit.test.ets", "QrcodeJsunit.test.ets", "pieceProps.test.js", "TextAreaJsunit.test.ets", "StackJsunit.test.ets", "pickerProps.test.js", "animateMotionProps.test.js", "selectProps.test.js", "CustomDialogControllerJsunit.test.ets", "ScrollJsunit.test.ets", "textareaProps.test.js", "gridColProps.test.js", "buttonProps.test.js", "animateProps.test.js", "BackgroundAndSizeSettingJsunit.test.ets", "AnimationStatusJsunit.test.ets", "BorderJsunit.test.ets", "EnmusLineCapStyleJsunit.test.ets", "OhosMatrix4Jsunit.test.ets", "EnableJsunit.test.ets", "BadgeJsunit.test.ets", "AboutToDisappearJsunit.test.ets", "pickerViewProps.test.js", "CircleJsunit.test.ets", "divProps.test.js", "switchProps.test.js", "FocusJsunit.test.ets", "PlayModeJsunit.test.ets", "ImageAnimatorJsunit.test.ets", "GradientDirectionJsunit.test.ets", "commonComponentJsApi.test.js", "ellipseProps.test.js", "TransFormJsunit.test.ets", "GestureModeJsunit.test.ets", "chartProps.test.js", "SliderJsunit.test.ets", "SharedTransitionJsunit.test.ets", "CanvasJsunit.test.ets", "CheckboxJsunit.test.ets", "sliderProps.test.js", "swiperProps.test.js", "TextTimerJsunit.test.ets", "SystempromptJsunit.test.ets", "NavigatorJsunit.test.ets", "TabsJsunit.test.ets", "polygonProps.test.js", "LoadingProgressJsunit.test.ets", "RowJsunit.test.ets", "TabJsunit.test.ets", "ShapeClippingJsunit.test.ets", "inputProps.test.js", "GridSettingsJsunit.test.ets", "index.js", "tabBarProps.test.js", "SwiperJsunit.test.ets", "toggleProps.test.js", "ColumnJsunit.test.ets", "tspanProps.test.js", "imageProps.test.js", "listProps.test.js", "progressProps.test.js", "NavigationJsunit.test.ets", "RatingJsunit.test.ets", "Direction2Jsunit.test.ets", "panelProps.test.js", "BindPopupJsunit.test.ets", "menuProps.test.js", "rectProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SearchInterface", "api_method_name": "placeholder", "api_method_all": "placeholder?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 125, "since": 8, "api_used": "\u662f", "lines": ["is.text })\n        .placeholderColor('#FFC0C0C0')\n ", "        TextInput({ placeholder: 'textInput 3', tex", "Search({ value: '', placeholder: \"\" }).width('85%')", "        TextInput({ placeholder: 'textInput 8', tex", "Type.Go)\n          .placeholderColor('#FFC0C0C0')\n ", "        TextInput({ placeholder: 'textInput 6', tex", "        TextInput({ placeholder: 'textInput 5', tex", " {\n      TextArea({ placeholder: 'input your word',", "Search({ value: '', placeholder: 'input content', c", "Color.Red)\n        .placeholderFont({\n          siz", "('search')\n        .placeholderColor(Color.Red)\n   ", "pe.Send)\n          .placeholderColor('#FFC0C0C0')\n ", "FFC0C0C0')\n        .placeholderFont({ size: 30, wei", "        TextInput({ placeholder: 'textInput 4', tex", "inputType)\n        .placeholderColor(\"rgb(0,0,225)\"", "        TextInput({ placeholder: 'textInput 10', te", "        TextInput({ placeholder: 'textInput 9', tex", "pe.Done)\n          .placeholderColor('#FFC0C0C0')\n ", "        TextInput({ placeholder: 'textInput 2', tex", "textArea')\n        .placeholderColor(\"rgb(0,0,225)\"", "        TextInput({ placeholder: 'textInput 7', tex", "C0C0C0')\n          .placeholderFont({ size: 30, wei", "0,0,225)\")\n        .placeholderFont({ size: 30, wei", "pe.Next)\n          .placeholderColor('#FFC0C0C0')\n ", ".Search)\n          .placeholderColor('#FFC0C0C0')\n ", "        TextInput({ placeholder: 'textInput 1', tex", " {\n      TextArea({ placeholder: 'input your word' ", "Search({ value: '', placeholder: '' }).width('90%')", "0)\n      TextArea({ placeholder: 'Please entry keyw"], "files": ["TextInputJsunit.test.ets", "Navigation.ets", "TextInput.ets", "TextAreaJsunit.test.ets", "textArea.ets", "textInput.ets", "textareaProps.test.js", "TextArea.ets", "inputProps.test.js", "index.js", "search.ets", "navigation.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SearchInterface", "api_method_name": "icon", "api_method_all": "icon?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 222, "since": 8, "api_used": "\u662f", "lines": ["ontent , icon: this.icon })\n        .iconPos", "        showpasswordiconFalse : null,\n      ", "= \"piece\";\n  @State icon: string = \"1\";\n  @S", "       {value:'bbb',icon: \"/common/2.png\"},\n", "elect([{value:'aaa',icon: \"/images/img.png\"}", "  if(eventData.data.iconPosition != null) {\n", ",\n            headericon : this.headericon, ", "ull) {\n        this.iconPosition = eventData", "{\n    Image('common/icon.png')\n      .width(", "ue = eventData.data.iconsValue;\n      }\n    ", "ctor()\n        this.icon = this.$element(\"ic", " .iconPosition(this.iconPosition)\n        .f", "       {value:'ccc',icon: \"/common/3.png\"},\n", "ne = this.$element(\"iconNone\").getInspector(", "    { value: 'add', icon: 'images/add.svg', ", "ent: this.content , icon: this.icon })\n     ", "elect([{value:'aaa',icon: \"/common/1.png\"},\n", "ctor()\n        this.iconNone = this.$element", " if (eventData.data.iconsValue != null) {\n  ", "ueNone, icon : this.icon, iconNone : this.ic", "ericon : this.headericon, headericonNone : t", "       {value:'bbb',icon: \"/images/img.png\"}", "ull) {\n        this.iconsValue = eventData.d", "con : null,\n        iconNone : null,\n       ", "on, iconNone : this.iconNone,\n            pl", "null,\n        headericon : null,\n        hea", "is.icon })\n        .iconPosition(this.iconPo", "        showpasswordiconTrue : null,\n       ", "ntent;\n        this.icon = pieceObj.icon;\n  ", "        showpasswordiconNone : null\n    },\n\n", "e : this.valueNone, icon : this.icon, iconNo", "FF008000\";\n  @State iconPosition: IconPositi", "null,\n        headericonNone : null,\n       ", "onNone : this.headericonNone,\n            sh", "{ value: 'collect', icon: 'images/collect.sv", "one : null,\n        icon : null,\n        ico", "Image($r('app.media.icon')).width(80).height", "s.headericon, headericonNone : this.headeric", "Style.left\n  @State iconsValue: object= { sh", "       {value:'ddd',icon: \"/common/4.png\"}])", "       {value:'ccc',icon: \"/images/img.png\"}", "edNone, showpasswordiconTrue : this.showpass", "       {value:'ddd',icon: \"/images/img.png\"}", "his.icon = pieceObj.icon;\n      }\n      if(e", ", icon : this.icon, iconNone : this.iconNone", "    { value: 'app', icon: 'images/grid.svg',", " : this.showpasswordiconTrue,\n            sh", "on = this.$element(\"icon\").getInspector()\n  ", "on = eventData.data.iconPosition;\n      }\n  ", "ight: 12,\n          icon: \"/common/1.png\"\n  "], "files": ["Select.ets", "Navigation.ets", "index.js", "sliderProps.test.js", "optionProps.test.js", "toolbarItemProps.test.js", "select.ets", "textareaProps.test.js", "sideBar.ets", "inputProps.test.js", "Sidebar.ets", "PieceCode.ets", "navigation.ets", "CustomDialog.ets", "searchProps.test.js", "buttonProps.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_all": "declare class SearchAttribute extends CommonMethod<SearchAttribute> {\n  \n  searchButton(value: string): SearchAttribute;\n\n  \n  placeholderColor(value: ResourceColor): SearchAttribute;\n\n  \n  placeholderFont(value?: Font): SearchAttribute;\n\n  \n  textFont(value?: Font): SearchAttribute;\n\n  \n  onSubmit(callback: (value: string) => void): SearchAttribute;\n\n  \n  onChange(callback: (value: string) => void): SearchAttribute;\n\n  \n  onCopy(callback: (value: string) => void): SearchAttribute;\n\n  \n  onCut(callback: (value: string) => void): SearchAttribute;\n\n  \n  onPaste(callback: (value: string) => void): SearchAttribute;\n}", "api_method_name": "SearchAttribute", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "searchButton", "api_method_all": "searchButton(value: string): SearchAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 10, "since": 8, "api_used": "\u662f", "lines": ["ull) {\n        this.searchButton = eventData.data.se", "on = eventData.data.searchButton;\n      }\n    }\n  }\n", "ata: {\n            \"searchButton\": \"5\"\n          }\n ", "  expect(obj.$attrs.searchButton).assertEqual('10');", ".textFont)\n        .searchButton(this.searchButton)\n", " .searchButton(this.searchButton)\n        .key('sear", "xpect(objNew.$attrs.searchButton).assertEqual('5');\n", "nt:Font=10\n  @State searchButton:number=10\n\n  privat", " if (eventData.data.searchButton != null) {\n        ", "troller })\n        .searchButton('search')\n        ."], "files": ["search.ets", "SearchJsunit.test.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "placeholderColor", "api_method_all": "placeholderColor(value: ResourceColor): SearchAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 28, "since": 8, "api_used": "\u662f", "lines": ["pe.Done)\n          .placeholderColor('#FFC0C0C0')\n      ", "is.text })\n        .placeholderColor('#FFC0C0C0')\n      ", "pe.Send)\n          .placeholderColor('#FFC0C0C0')\n      ", "  expect(obj.$attrs.placeholderColor).assertEqual('#FFC0", "textArea')\n        .placeholderColor(\"rgb(0,0,225)\")\n   ", "Type.Go)\n          .placeholderColor('#FFC0C0C0')\n      ", "inputType)\n        .placeholderColor(\"rgb(0,0,225)\")\n   ", "pe.Next)\n          .placeholderColor('#FFC0C0C0')\n      ", "('search')\n        .placeholderColor(Color.Red)\n        ", ".Search)\n          .placeholderColor('#FFC0C0C0')\n      "], "files": ["TextInputJsunit.test.ets", "TextInput.ets", "TextAreaJsunit.test.ets", "textArea.ets", "textInput.ets", "TextArea.ets", "search.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "placeholderFont", "api_method_all": "placeholderFont(value?: Font): SearchAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 29, "since": 8, "api_used": "\u662f", "lines": ["FFC0C0C0')\n        .placeholderFont({ size: 30, weight:", "  expect(obj.$attrs.placeholderFont).assertContain('Fon", "Color.Red)\n        .placeholderFont({\n          size: 1", " is: \" + obj.$attrs.placeholderFont);\n      console.inf", "0,0,225)\")\n        .placeholderFont({ size: 30, weight:", "C0C0C0')\n          .placeholderFont({ size: 30, weight:", " is: \" + obj.$attrs.placeholderFont.size);\n      consol"], "files": ["TextInputJsunit.test.ets", "TextInput.ets", "textArea.ets", "textInput.ets", "TextArea.ets", "search.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "textFont", "api_method_all": "textFont(value?: Font): SearchAttribute;", "api_type": "", "api_args_count": 1, "api_level": null, "api_used_count": 6, "since": 8, "api_used": "\u662f", "lines": ["ntroller()\n  @State textFont:Font=10\n  @State se", "('search')\n        .textFont(this.textFont)\n    ", "     .textFont(this.textFont)\n        .searchBut", "ull) {\n        this.textFont = eventData.data.te", "nt = eventData.data.textFont;\n      }\n      if (", " if (eventData.data.textFont != null) {\n        "], "files": ["search.ets"], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "onSubmitcallback", "api_method_all": "onSubmit(callback: (value: string) => void): SearchAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "onSubmitcallback", "api_method_all": "onSubmit(callback: (value: string) => void): SearchAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "onChangecallback", "api_method_all": "onChange(callback: (value: string) => void): SearchAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "onChangecallback", "api_method_all": "onChange(callback: (value: string) => void): SearchAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "onCopycallback", "api_method_all": "onCopy(callback: (value: string) => void): SearchAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "onCopycallback", "api_method_all": "onCopy(callback: (value: string) => void): SearchAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "onCutcallback", "api_method_all": "onCut(callback: (value: string) => void): SearchAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "onCutcallback", "api_method_all": "onCut(callback: (value: string) => void): SearchAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "onPastecallback", "api_method_all": "onPaste(callback: (value: string) => void): SearchAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "SearchAttribute", "api_method_name": "onPastecallback", "api_method_all": "onPaste(callback: (value: string) => void): SearchAttribute;", "api_type": "callback", "api_args_count": 2, "api_level": null, "api_used_count": 0, "since": 0, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}]}