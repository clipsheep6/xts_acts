{"subsystem_ch": "\u6cdbSensor\u670d\u52a1\u5b50\u7cfb\u7edf", "subsystem_en": "sensors", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@system.vibrator", "api": [{"api_class_name": "VibrateOptions", "api_method_all": "export interface VibrateOptions {\r\n  \r\n  mode?: \"long\" | \"short\";\r\n\r\n  \r\n  success: () => void;\r\n\r\n  \r\n  fail?: (data: string, code: number) => void;\r\n\r\n  \r\n  complete?: () => void;\r\n}", "api_method_name": "VibrateOptions", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 3, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "VibrateOptions", "api_method_name": "success", "api_method_all": "success: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 181, "since": 3, "api_used": "\u662f", "lines": ["cAlgorithmJSTest008 success x: ' + data.x + ',y", "ometerJSTest002  on success');\n                ", "rithmJSTest024 once success');\n                ", "ometerJSTest003  on success x: ' + data.x + \"y:", "meterJSTest003  off success');\n                ", "JsTest005  vibrator success');\n                ", "rithmJSTest025 once success');\n                ", "cAlgorithmJSTest004 success x: ' + data.x + ',y", "JsTest003  vibrator success');\n                ", "atorJsTest009  stop success');\n                ", "rJsTest018  vibrate success\");\n                ", "JsTest007  vibrator success');\n                ", "cAlgorithmJSTest011 success x: ' + data.x + ',y", "ratorJsTest017  off success\");\n            expe", "cAlgorithmJSTest019 success x: ' + data.x + ',y", "cAlgorithmJSTest009 success x: ' + data.x + ',y", "rJsTest011  vibrate success\");\n            expe", "erSensortest002  on success');\n                ", "o('SensorJsTest_102 success');\n                ", "o(\"SensorJsTest_077 success\")\n            done(", "cAlgorithmJSTest016 success x: ' + data.x + ',y", "rithmJSTest016 once success');\n                ", "cAlgorithmJSTest015 success x: ' + data.x + ',y", "ometerJSTest001  on success, x: ' + data.x + \"y", "atorJsTest008  stop success');\n                ", "cAlgorithmJSTest013 success x: ' + data.x + ',y", "JsTest001  vibrator success');\n                ", "rJsTest009  vibrate success');\n                ", "atorJsTest016  stop success\");\n            setT", "cAlgorithmJSTest021 success x: ' + data.x + ',y", "cAlgorithmJSTest014 success x: ' + data.x + ',y", "rJsTest013  vibrate success\");\n            setT", "JsTest004  vibrator success');\n                ", "cAlgorithmJSTest023 success x: ' + data.x + ',y", "cAlgorithmJSTest022 success x: ' + data.x + ',y", "cAlgorithmJSTest001 success x: ' + data.x + ',y", "erSensortest001  on success');\n                ", "rJsTest012  vibrate success\");\n            setT", "cAlgorithmJSTest007 success x: ' + data.x + ',y", "rJsTest015  vibrate success\");\n            setT", "rJsTest014  vibrate success\");\n            expe", "atorJsTest018  stop success\");\n                ", "cAlgorithmJSTest002 success x: ' + data.x + ',y", "cAlgorithmJSTest012 success x: ' + data.x + ',y", "meterJSTest001  off success');\n                ", "JsTest002  vibrator success');\n                ", "JsTest006  vibrator success');\n                ", "cAlgorithmJSTest018 success x: ' + data.x + ',y", "atorJsTest010  stop success');\n                ", "cAlgorithmJSTest010 success x: ' + data.x + ',y"], "files": ["SensorOnOffTest.test_Gravity.js", "SensorOnOffTest.test_Accelerometer.js", "SensorOnOffTest.test_Gyroscope.js", "SensorOnOffTest.test_Humidity.js", "SensorOnOffTest.test_Pedometer.js", "SensorOnOffTest.test.js", "SensorOnOffTest.test_Orientation.js", "SensorOnOffTest.test_Heart_Rate.js", "SensorOnOffTest.test_Gyroscope_Uncalibrated.js", "SensorOnOffTest.test_Magnetic_Field.js", "Vibrator.test.js", "SensorOnOffTest.test_Ambient_Light.js", "SensorOnOffTest.test_Significant_Motion.js", "SensorGeneralalgorithm.test.js", "SensorOnOffTest.test_Accelerometer_Uncalibrated.js", "SensorOnOffTest.test_Pedometer_Detection.js", "SensorOnOffTest.test_Wear_Detection.js", "SensorOnOffTest.test_Magnetic_Field_Uncalibrated.js", "SensorOnOffTest.test_Proxinity.js", "SensorOnOffTest.test_Barometer.js", "SensorOnOffTest.test_Rotation_Vector.js", "SensorGeomagneticTest.test.js", "SensorOnOffTest.test_Linear_Acceleration.js", "SensorOnOffTest.test_Temperature.js", "SensorOnOffTest.test_Hall.js"], "is_white": " ", "desc": " "}, {"api_class_name": "VibrateOptions", "api_method_name": "fail", "api_method_all": "fail?: (data: string, code: number) => void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 55, "since": 3, "api_used": "\u662f", "lines": ["o('SensorJsTest_092 failed');\n              ", "cAlgorithmJSTest008 failed');\n              ", "cAlgorithmJSTest007 failed');\n              ", "cAlgorithmJSTest018 failed');\n              ", "o('SensorJsTest_101 failed');\n              ", "o('SensorJsTest_109 failed');\n              ", "cAlgorithmJSTest001 failed');\n              ", "o('SensorJsTest_071 failed');\n              ", "o('SensorJsTest_079 failed');\n              ", "nsole.info('promise failed', error)\n        ", "cAlgorithmJSTest014 failed');\n              ", "o('SensorJsTest_091 failed');\n              ", "cAlgorithmJSTest011 failed');\n              ", "o('SensorJsTest_104 failed');\n              ", "cAlgorithmJSTest006 failed');\n              ", "o('SensorJsTest_107 failed');\n              ", "cAlgorithmJSTest017 failed');\n              ", "o('SensorJsTest_109 failed');\n            ex", "o('SensorJsTest_089 failed');\n              ", "o('SensorJsTest_081 failed');\n              ", "cAlgorithmJSTest002 failed');\n              ", "cAlgorithmJSTest010 failed');\n              ", "o('SensorJsTest_088 failed');\n              ", "o('SensorJsTest_108 failed');\n              ", "cAlgorithmJSTest004 failed');\n              ", "o('SensorJsTest_069 failed');\n              ", "o('SensorJsTest_068 failed');\n              ", "o('SensorJsTest_098 failed');\n              ", "cAlgorithmJSTest003 failed');\n              ", "cAlgorithmJSTest009 failed');\n              ", "o('SensorJsTest_078 failed');\n              ", "cAlgorithmJSTest013 failed');\n              ", "cAlgorithmJSTest005 failed');\n              ", "o('SensorJsTest_090 failed');\n              ", "o('SensorJsTest_082 failed');\n              ", "o(\"SensorJsTest_102 failed\")\n               ", "cAlgorithmJSTest015 failed');\n              ", "o('SensorJsTest_104 failed');\n            ex", "o(\"SensorJsTest_077 failed\")\n               ", "cAlgorithmJSTest012 failed');\n              ", "o('SensorJsTest_103 failed');\n              ", "o('SensorJsTest_070 failed');\n              ", "o('SensorJsTest_080 failed');\n              ", "nsole.info('promise failed')\n            don"], "files": ["SensorGeomagneticTest.test.js", "SensorGeneralalgorithm.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "VibrateOptions", "api_method_name": "complete", "api_method_all": "complete?: () => void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 0, "since": 3, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "VibrateOptions", "api_method_name": "mode", "api_method_all": "mode?: \"long\" | \"short\"", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 3, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "Vibrator", "api_method_all": "export default class Vibrator {\r\n  \r\n  static vibrate(options?: VibrateOptions): void;\r\n}", "api_method_name": "Vibrator", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 72, "since": 3, "api_used": "\u662f", "lines": ["--------------------VibratorJsTest001-----------", "      console.info('VibratorJsTest002  vibrator ", "      console.info('VibratorJsTest005  vibrator ", "      console.info('VibratorJsTest008  stop erro", "      console.info('VibratorJsTest009  stop succ", "   })\n\n    \n    it(\"VibratorJsTest011\", 0, async", "       console.log(\"VibratorJsTest013  vibrate e", "   })\n\n    \n    it(\"VibratorJsTest002\", 0, async", "      console.info('VibratorJsTest006  vibrator ", "      console.info('VibratorJsTest004  vibrator ", "      console.info('VibratorJsTest009  stop erro", "t.js')\n", "      console.info(\"VibratorJsTest009 reject\");\n", "   })\n\n    \n    it(\"VibratorJsTest010\", 0, async", "   })\n\n    \n    it(\"VibratorJsTest003\", 0, async", "      console.info('VibratorJsTest001  vibrator ", "   })\n\n    \n    it(\"VibratorJsTest004\", 0, async", "       console.log(\"VibratorJsTest013  vibrate s", "   })\n\n    \n    it(\"VibratorJsTest007\", 0, async", "       console.log(\"VibratorJsTest012  vibrate e", "       console.log(\"VibratorJsTest012  vibrate s", " /*\n     * @tc.name:VibratorJsTest013\n     * @tc", " /*\n     * @tc.name:VibratorJsTest014\n     * @tc", "   })\n\n    \n    it(\"VibratorJsTest009\", 0, async", "      console.info('VibratorJsTest007  vibrator ", "       console.log(\"VibratorJsTest011  vibrate e", "ber\n     */\n    it(\"VibratorJsTest013\", 0, async", "      console.info('VibratorJsTest009  vibrate e", "   })\n\n    \n    it(\"VibratorJsTest006\", 0, async", "      console.info('VibratorJsTest010  stop succ", " /*\n     * @tc.name:VibratorJsTest012\n     * @tc", "ber\n     */\n    it(\"VibratorJsTest012\", 0, async", "      console.info('VibratorJsTest009  vibrate s", "      console.info('VibratorJsTest003  vibrator ", "       console.log(\"VibratorJsTest011  vibrate s", "ber\n     */\n    it(\"VibratorJsTest014\", 0, async", "rator.stop(vibrator.VibratorStopMode.VIBRATOR_ST", "      console.info('VibratorJsTest010  stop off'", "      console.info('VibratorJsTest008  stop succ", "   })\n\n    \n    it(\"VibratorJsTest008\", 0, async", "t/index'\n\ndescribe(\"VibratorJsTest\", function ()", "   })\n\n    \n    it(\"VibratorJsTest005\", 0, async", "   })\n\n    \n    it(\"VibratorJsTest001\", 0, async"], "files": ["Vibrator.test.js", "List.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "Vibrator", "api_method_name": "vibrate", "api_method_all": "static vibrate(options?: VibrateOptions): void;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 46, "since": 0, "api_used": "\u662f", "lines": ["           vibrator.vibrate(180000, (error) => ", " {\n        vibrator.vibrate(1000).then(() => {\n", " }\n        vibrator.vibrate(1800000, vibrateCal", "\"VibratorJsTest015  vibrate error\");\n          ", " }\n        vibrator.vibrate(1800000 + 1, vibrat", "\"VibratorJsTest014  vibrate error\");\n          ", " }\n        vibrator.vibrate(\"haptic.clock.timer", " {\n        vibrator.vibrate(1800000 + 1).then((", " {\n        function vibrateCallback(error) {\n  ", " }\n        vibrator.vibrate(-1, vibrateCallback", "R_STOP_MODE_PRESET, vibrateCallback);\n    })\n\n ", "'VibratorJsTest009  vibrate success');\n        ", "\"VibratorJsTest014  vibrate success\");\n        ", "aptic.clock.timer\", vibrateCallback);\n    })\n\n ", "\"VibratorJsTest011  vibrate error\");\n          ", "\"VibratorJsTest015  vibrate success\");\n        ", "  vibrator.stop(\"\", vibrateCallback);\n    })\n\n ", " {\n        vibrator.vibrate(vibrator.EffectId.E", "'VibratorJsTest009  vibrate error');\n          ", "           vibrator.vibrate(180000).then(() => ", "\"VibratorJsTest013  vibrate error\");\n          ", "\"VibratorJsTest018  vibrate error\");\n          ", "ibrator.vibrate(-1, vibrateCallback);\n    })\n\n ", "\"VibratorJsTest011  vibrate success\");\n        ", " {\n        vibrator.vibrate(-1).then(() => {\n  ", "\"VibratorJsTest012  vibrate success\");\n        ", " }\n        vibrator.vibrate(\"\", vibrateCallback", " }\n        vibrator.vibrate(10, vibrateCallback", "or.vibrate(1800000, vibrateCallback);\n    })\n\n ", "\"VibratorJsTest018  vibrate success\");\n        ", " }\n        vibrator.vibrate(\"xxx\", vibrateCallb", " {\n        vibrator.vibrate(\"\").then(() => {\n  ", "\"VibratorJsTest013  vibrate success\");\n        ", "ator.vibrate(\"xxx\", vibrateCallback);\n    })\n\n ", "ibrator.vibrate(\"\", vibrateCallback);\n    })\n\n ", "\"VibratorJsTest012  vibrate error\");\n          ", "ibrate(1800000 + 1, vibrateCallback);\n    })\n\n ", "ibrator.vibrate(10, vibrateCallback);\n    })\n\n "], "files": ["Vibrator.test.js"], "is_white": " ", "desc": " "}]}