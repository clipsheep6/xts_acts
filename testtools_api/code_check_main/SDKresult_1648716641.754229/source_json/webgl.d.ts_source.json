{"subsystem_ch": "\u56fe\u5f62\u56fe\u50cf\u5b50\u7cfb\u7edf", "subsystem_en": "graphic", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\webgl\\webgl", "api": [{"api_class_name": "WebGLContextAttributes", "api_method_all": "export interface WebGLContextAttributes {\n    alpha?: boolean;\n    depth?: boolean;\n    stencil?: boolean;\n    antialias?: boolean;\n    premultipliedAlpha?: boolean;\n    preserveDrawingBuffer?: boolean;\n    powerPreference?: WebGLPowerPreference;\n    failIfMajorPerformanceCaveat?: boolean;\n    desynchronized?: boolean;\n}", "api_method_name": "WebGLContextAttributes", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLContextAttributes", "api_method_name": "alpha", "api_method_all": "alpha?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLContextAttributes", "api_method_name": "depth", "api_method_all": "depth?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 226, "since": 7, "api_used": "\u662f", "lines": ["@tc.name webgl_test_depthFunc_4\n\t * @tc.desc ", "@tc.name webgl_test_depthFunc_5\n\t * @tc.desc ", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.NEVER);\n\t\t//", " */\n\tit('webgl_test_depthFunc_5', 0, async fu", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.GREATER);\n\t\t", "C);\n\t\tconsole.info(\"depthFunc --> getParamete", "arameter);\n\t\texpect(depthParameter).assertEqu", " */\n\tit('webgl_test_depthFunc_3', 0, async fu", "6\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webg", " */\n\tit('webgl_test_depthFunc_4', 0, async fu", "@tc.name webgl_test_depthFunc_6\n\t * @tc.desc ", " */\n\tit('webgl_test_depthFunc_2', 0, async fu", " */\n\tit('webgl_test_depthFunc', 0, async func", "PTH_FUNC\u5e38\u91cf\u3002\n\t\tconst depthParameter = gl.getPa", "2\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webg", "5\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webg", "c\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webg", "> getParameter: \" + depthParameter);\n\t\texpect", "@tc.name webgl_test_depthFunc_2\n\t * @tc.desc ", "nfo(\"webgltest into depthFunc\");\n\n\t\tgl.enable", "@tc.name webgl_test_depthFunc\n\t * @tc.desc Te", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.LESS);\n\t\t// ", "@tc.name webgl_test_depthFunc_3\n\t * @tc.desc ", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.NOTEQUAL);\n\t", "4\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webg", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.LEQUAL);\n\t\t/", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.EQUAL);\n\t\t//", "3\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webg", " */\n\tit('webgl_test_depthFunc_6', 0, async fu"], "files": ["webGL.test.js", "WebGL.test03.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLContextAttributes", "api_method_name": "stencil", "api_method_all": "stencil?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 335, "since": 7, "api_used": "\u662f", "lines": ["tringify(gl));\n\t\tgl.stencilMaskSeparate(gl.FRON", "arameter);\n\t\texpect(stencilMaskSeparateParamete", "nsole.info('jsWebGL stencilOp test start ...' +", "sk(110101);\n\t\tconst stencilMaskParameter = gl.g", "arameter);\n\t\texpect(stencilFuncSeparateParamete", "STENCIL_TEST);\n\t\tgl.stencilOpSeparate(gl.FRONT,", "cilOpParameter: \" + stencilOpParameter);\n\t\texpe", "lFuncParameter: \" + stencilFuncParameter);\n\t\tex", "e.info(\"stencilFunc stencilFuncParameter: \" + s", "L);\n\t\tconsole.info(\"stencilOpSeparate stencilOp", "nsole.info('jsWebGL stencilMaskSeparate test st", "teParameter: \" +\n\t\t\tstencilMaskSeparateParamete", "nsole.info('jsWebGL stencilFunc test start ...'", "k\n\t * @tc.desc Test stencilMask.\n\t */\n\tit('test", "nsole.info('jsWebGL stencilOpSeparate test star", "K);\n\t\tconsole.info(\"stencilMask stencilMaskPara", "e.info(\"stencilMask stencilMaskParameter: \" + s", "arameter);\n\t\texpect(stencilOpParameter).assertE", "stencilFuncSeparate stencilFuncSeparateParamete", "e\n\t * @tc.desc Test stencilMaskSeparate.\n\t */\n\t", "arameter);\n\t\texpect(stencilOpSeparateParameter)", "STENCIL_TEST);\n\t\tgl.stencilFuncSeparate(gl.FRON", "c\n\t * @tc.desc Test stencilFunc.\n\t */\n\tit('test", "teParameter: \" +\n\t\t\tstencilFuncSeparateParamete", "nsole.info('jsWebGL stencilMask test start ...'", "L);\n\t\tconsole.info(\"stencilOp stencilOpParamete", "r\n\t * @tc.desc Test stencilFunc.\n\t */\n\tit('test", "ole.info(\"stencilOp stencilOpParameter: \" + ste", "STENCIL_TEST);\n\t\tgl.stencilOp(gl.INCR, gl.DECR,", "lMaskParameter: \" + stencilMaskParameter);\n\t\tex", "gl.INVERT);\n\t\tconst stencilOpSeparateParameter ", "C);\n\t\tconsole.info(\"stencilFunc stencilFuncPara", "gl.INVERT);\n\t\tconst stencilOpParameter = gl.get", "arameter);\n\t\texpect(stencilFuncParameter).asser", "tringify(gl));\n\t\tgl.stencilMask(110101);\n\t\tcons", "C);\n\t\tconsole.info(\"stencilFuncSeparate stencil", "(\"stencilOpSeparate stencilOpSeparateParameter:", "K);\n\t\tconsole.info(\"stencilMaskSeparate stencil", ", 1110011);\n\t\tconst stencilFuncSeparateParamete", "e\n\t * @tc.desc Test stencilOpSeparate.\n\t */\n\tit", "stencilMaskSeparate stencilMaskSeparateParamete", "nsole.info('jsWebGL stencilFuncSeparate test st", "T, 110101);\n\t\tconst stencilMaskSeparateParamete", "0b1110011);\n\t\tconst stencilFuncParameter = gl.g", "arameter);\n\t\texpect(stencilMaskParameter).asser", "arateParameter: \" + stencilOpSeparateParameter)", "e\n\t * @tc.desc Test stencilFuncSeparate.\n\t */\n\t", "p\n\t * @tc.desc Test stencilOp.\n\t */\n\tit('testSt", "STENCIL_TEST);\n\t\tgl.stencilFunc(gl.LESS, 0, 0b1"], "files": ["webGL.test.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLContextAttributes", "api_method_name": "antialias", "api_method_all": "antialias?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["\t\texpect(atttribute.antialias).assertEqual(true);"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLContextAttributes", "api_method_name": "premultipliedAlpha", "api_method_all": "premultipliedAlpha?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["\t\texpect(atttribute.premultipliedAlpha).assertEqual(true);"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLContextAttributes", "api_method_name": "preserveDrawingBuffer", "api_method_all": "preserveDrawingBuffer?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["\t\texpect(atttribute.preserveDrawingBuffer).assertEqual(false)"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLContextAttributes", "api_method_name": "powerPreference", "api_method_all": "powerPreference?: WebGLPowerPreference", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLContextAttributes", "api_method_name": "failIfMajorPerformanceCaveat", "api_method_all": "failIfMajorPerformanceCaveat?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["\t\texpect(atttribute.failIfMajorPerformanceCaveat).assertEqual(false)"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLContextAttributes", "api_method_name": "desynchronized", "api_method_all": "desynchronized?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["\t\texpect(atttribute.desynchronized).assertEqual(false)"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLBuffer", "api_method_all": "interface WebGLBuffer {\n}", "api_method_name": "WebGLBuffer", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 12, "since": 7, "api_used": "\u662f", "lines": ["uffer = gl.isBuffer(WebGLBufferobject);\n\t\t\texpect(i", "gify(gl));\n\t\t\tconst WebGLBufferobject = gl2.getInde"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLFramebuffer", "api_method_all": "interface WebGLFramebuffer {\n}", "api_method_name": "WebGLFramebuffer", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLProgram", "api_method_all": "interface WebGLProgram {\n}", "api_method_name": "WebGLProgram", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 15, "since": 7, "api_used": "\u662f", "lines": ["ertexShader\"); //\u4ece\u4e00\u4e2aWebGLProgram\u4e2d\u5206\u79bb\u4e00\u4e2a\u5148\u524d\u9644\u52a0\u7684\u7247\u6bb5\u6216\u8005\u9876\u70b9\u7740\u8272\u5668;", "eateProgram(); //\u521b\u5efa WebGLProgram\n\t\tgl.attachShader(p", "vertexShader); //\u4ece\u4e00\u4e2aWebGLProgram\u4e2d\u5206\u79bb\u4e00\u4e2a\u5148\u524d\u9644\u52a0\u7684\u7247\u6bb5\u6216\u8005\u9876\u70b9\u7740\u8272\u5668;", " vertexShader); //\u5f80 WebGLProgram \u6dfb\u52a0\u4e00\u4e2a\u7247\u6bb5\u6216\u8005\u9876\u70b9\u7740\u8272\u5668\u3002\n\t\tgl", "m(program); //\u94fe\u63a5\u7ed9\u5165\u7684 WebGLProgram \u5bf9\u8c61\n\t\tgl.detachShade", "agmentShader);\n\n\t\t//WebGLProgram\n\t\tvar program = gl."], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderbuffer", "api_method_all": "interface WebGLRenderbuffer {\n}", "api_method_name": "WebGLRenderbuffer", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLShader", "api_method_all": "interface WebGLShader {\n}", "api_method_name": "WebGLShader", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["GMENT_SHADER); //\u521b\u5efa WebGLShader\u3002\n\t\tgl.shaderSource(", "; //fragmentSrc\u8bbe\u7f6e\u4e00\u4e2a WebGLShader \u7684\u6e90\u7801\u3002\n\t\tgl.compileSh"], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLTexture", "api_method_all": "interface WebGLTexture {\n}", "api_method_name": "WebGLTexture", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLUniformLocation", "api_method_all": "interface WebGLUniformLocation {\n}", "api_method_name": "WebGLUniformLocation", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLActiveInfo", "api_method_all": "interface WebGLActiveInfo {\n    readonly size: GLint;\n    readonly type: GLenum;\n    readonly name: string;\n}", "api_method_name": "WebGLActiveInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLActiveInfo", "api_method_name": "size", "api_method_all": "readonly size: GLint", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 69, "since": 7, "api_used": "\u662f", "lines": ["PTH_SIZE);\n\t\texpect(size).assertEqual(0);\n\t\t", "e).assertEqual(info.size);\n\t\texpect(name).as", "iptr = typeof(reurGLsizeiptr);\n\t\t\texpect(typ", "_SAMPLES);\n\t\texpect(size).assertEqual();\n\t\td", "-0);\n\t\t\tconst typeGLsizeiptr = typeof(reurGL", "ll);\n\t\t\tconst typeGLsizeiptr = typeof(reurGL", "LUE_SIZE);\n\t\texpect(size).assertEqual(4);\n\t\t", "gramObj, 0);\n\t\tinfo.size = 123;\n\t\tinfo.name ", "l));\n\t\t\tconst reurGLsizeiptr = gl2.getIndexe", "PHA_SIZE);\n\t\texpect(size).assertEqual(4);\n\t\t", "CIL_SIZE);\n\t\texpect(size).assertEqual(0);\n\t\t", "e = Number;\n\t\tconst size = info.size;\n\t\tcons", "\t\tconst size = info.size;\n\t\tconst name  = in", " 0);\n\t\t\tconst typeGLsizeiptr = typeof(reurGL", " 256, 256);\n\t\tconst size = gl.getRenderbuffe", "256, 256);\n\n\t\tconst size = gl.getRenderbuffe", "r);\n\t\t\texpect(typeGLsizeiptr).assertInstance", "info.type;\n\t\texpect(size).assertEqual(info.s", "r);\n\t\t\texpect(typeGLsizeiptr == 'String').as", "RED_SIZE);\n\t\texpect(size).assertEqual(4);\n\t\t"], "files": ["webGL.test.js", "WebGL.test09.js", "window.test.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLActiveInfo", "api_method_name": "type", "api_method_all": "readonly type: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 277, "since": 7, "api_used": "\u662f", "lines": ["onsValue);\n\t\texpect(typeof(getSupportedExten", "eterValue);\n\t\tconst type = (texParameterValu", "st typeGLsizeiptr = typeof(reurGLsizeiptr);\n", "  const strType = ((typeof str) === \"object\"", " \"object\")\n\t\texpect(type).assertEqual(true);", "o(\"getVertexAttrib: type\" + type);\n\t\texpect(", "errorCode);\n\t\tconst type =\n\t\t\texpect(errorCo", "ufferSize);\n\t\tconst type = (bufferSize === 1", "derArray);\n\t\texpect(type).assertEqual(true);", ");\n\t\tconst type = ((typeof shaderArray) === ", "\" + type);\n\t\texpect(type).assertEqual(true);", "rogramObj);\n\t\tconst type = ((typeof shaderAr", "+ message);\n\t\tconst type = (message === null", "tion loadShader(gl, type, source) {\n\t\tconsol", "izeiptr);\n\t\t\texpect(typeGLsizeiptr).assertIn", "onFormat));\n\t\tconst type = ((typeof shaderPr", "ileStatus);\n\t\tconst type = (compileStatus ==", "=== null);\n\t\texpect(type).assertEqual(true);", "arameter);\n\t\texpect(typeof(clearParameter)).", "onst typeGLintptr = typeof(retuGLintptr);\n\t\t", "1f(0, 2.8);\n\t\tconst type = gl.getVertexAttri", "rs === 1);\n\t\texpect(type).assertEqual(false)", "+ result);\n\t\texpect(typeof(result)).assertEq", " === true)\n\t\texpect(type).assertEqual(false)", "meter)).assertEqual(typeof(float32Array));\n\t", " === 1024)\n\t\texpect(type).assertEqual(true);", "Lintptr);\n\t\t\texpect(typeGLintptr).assertInst", "tesValue);\n\t\texpect(typeof(getContextAttribu", "START, 0);\n\t\t\tconst typeGLintptr = typeof(re", "_SIZE, 0);\n\t\t\tconst typeGLsizeiptr = typeof(", "edShaders);\n\t\tconst type = (attachedShaders ", "rtexAttrib: type\" + type);\n\t\texpect(type).as", "_NEAREST);\n\t\texpect(type).assertEqual(false)", ");\n\t\tconst type = ((typeof shaderPrecisionFo", "r = gl.createShader(type);\n\t\tif (shader == n", "arameter);\n\t\texpect(typeof(samplerParameter)"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "window.test.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLActiveInfo", "api_method_name": "name", "api_method_all": "readonly name: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2408, "since": 7, "api_used": "\u662f", "lines": ["TWEBGL_0021\n\t * @tc.name webgl_test_blendFun", "TWEBGL_0015\n\t * @tc.name webgl_test_blendCol", "TWEBGL_0038\n\t * @tc.name webgl_test_createBu", "TWEBGL_0028\n\t * @tc.name webgl_test_clearSte", "TWEBGL_0046\n\t * @tc.name webgl_test_createTe", "TWEBGL_0064\n\t * @tc.name webgl_test_depthFun", "TWEBGL_0040\n\t * @tc.name webgl_test_createFr", "TWEBGL_0037\n\t * @tc.name webgl_test_createBu", "TWEBGL_0059\n\t * @tc.name webgl_test_deleteTe", "TWEBGL_0057\n\t * @tc.name webgl_test_deleteSh", "TWEBGL_0060\n\t * @tc.name webgl_test_depthFun", "TWEBGL_0055\n\t * @tc.name webgl_test_deleteRe", "TWEBGL_0030\n\t * @tc.name webgl_test_colorMas", "TWEBGL_0047\n\t * @tc.name webgl_test_cullFace", "TWEBGL_0018\n\t * @tc.name webgl_test_blendEqu", "TWEBGL_0056\n\t * @tc.name webgl_test_deleteSh", "TWEBGL_0063\n\t * @tc.name webgl_test_depthFun", "TWEBGL_0035\n\t * @tc.name webgl_test_copyTexS", "TWEBGL_0034\n\t * @tc.name webgl_test_copyTexI", "TWEBGL_0045\n\t * @tc.name webgl_test_createTe", "TWEBGL_0062\n\t * @tc.name webgl_test_depthFun", "TWEBGL_0020\n\t * @tc.name webgl_test_blendFun", "TWEBGL_0043\n\t * @tc.name webgl_test_createRe", "TWEBGL_0032\n\t * @tc.name webgl_test_compileS", "TWEBGL_0026\n\t * @tc.name webgl_test_clearDep", "TWEBGL_0048\n\t * @tc.name webgl_test_cullFace", "TWEBGL_0050\n\t * @tc.name webgl_test_deleteBu", "TWEBGL_0031\n\t * @tc.name webgl_test_colorMas", "TWEBGL_0051\n\t * @tc.name webgl_test_deleteBu", "TWEBGL_0044\n\t * @tc.name webgl_test_createSh", "TWEBGL_0025\n\t * @tc.name webgl_test_clearCol", "TWEBGL_0042\n\t * @tc.name webgl_test_createRe", "TWEBGL_0049\n\t * @tc.name webgl_test_cullFace", "TWEBGL_0061\n\t * @tc.name webgl_test_depthFun", "TWEBGL_0017\n\t * @tc.name webgl_test_blendEqu", "TWEBGL_0052\n\t * @tc.name webgl_test_deleteFr", "TWEBGL_0039\n\t * @tc.name webgl_test_createFr", "TWEBGL_0024\n\t * @tc.name webgl_test_clear\n\t ", "TWEBGL_0016\n\t * @tc.name webgl_test_blendCol", "TWEBGL_0019\n\t * @tc.name webgl_test_blendEqu", "TWEBGL_0054\n\t * @tc.name webgl_test_deletePr", "TWEBGL_0053\n\t * @tc.name webgl_test_deletePr", "TWEBGL_0041\n\t * @tc.name webgl_test_createPr", "TWEBGL_0023\n\t * @tc.name webgl_test_checkFra", "TWEBGL_0058\n\t * @tc.name webgl_test_deleteTe", "TWEBGL_0022\n\t * @tc.name webgl_test_checkFra", "TWEBGL_0029\n\t * @tc.name webgl_test_clearSte", "TWEBGL_0036\n\t * @tc.name webgl_test_copyTexS", "TWEBGL_0033\n\t * @tc.name webgl_test_copyTexI", "TWEBGL_0027\n\t * @tc.name webgl_test_clearDep"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "window.test.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLShaderPrecisionFormat", "api_method_all": "interface WebGLShaderPrecisionFormat {\n    readonly rangeMin: GLint;\n    readonly rangeMax: GLint;\n    readonly precision: GLint;\n}", "api_method_name": "WebGLShaderPrecisionFormat", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLShaderPrecisionFormat", "api_method_name": "rangeMin", "api_method_all": "readonly rangeMin: GLint", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["SHADER, gl.LOW_INT).rangeMin;\n\t\tconst max = gl.g", "R, gl.MEDIUM_FLOAT).rangeMin;\n\t\tgl.getShaderPrec", "SHADER, gl.LOW_INT).rangeMin;\n\t\tconst min = gl.g"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLShaderPrecisionFormat", "api_method_name": "rangeMax", "api_method_all": "readonly rangeMax: GLint", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["R, gl.MEDIUM_FLOAT).rangeMax;\n\t\texpect(min).asse"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLShaderPrecisionFormat", "api_method_name": "precision", "api_method_all": "readonly precision: GLint", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 87, "since": 7, "api_used": "\u662f", "lines": ["SHADER_SOURCE =\n\t\t\t'precision mediump float;\\n' +", "HADER_SOURCE =\n\t\t\t\t'precision mediump float;\\n' +"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_all": "interface WebGLRenderingContextBase {\n    readonly DEPTH_BUFFER_BIT: GLenum;\n    readonly STENCIL_BUFFER_BIT: GLenum;\n    readonly COLOR_BUFFER_BIT: GLenum;\n    readonly POINTS: GLenum;\n    readonly LINES: GLenum;\n    readonly LINE_LOOP: GLenum;\n    readonly LINE_STRIP: GLenum;\n    readonly TRIANGLES: GLenum;\n    readonly TRIANGLE_STRIP: GLenum;\n    readonly TRIANGLE_FAN: GLenum;\n    readonly ZERO: GLenum;\n    readonly ONE: GLenum;\n    readonly SRC_COLOR: GLenum;\n    readonly ONE_MINUS_SRC_COLOR: GLenum;\n    readonly SRC_ALPHA: GLenum;\n    readonly ONE_MINUS_SRC_ALPHA: GLenum;\n    readonly DST_ALPHA: GLenum;\n    readonly ONE_MINUS_DST_ALPHA: GLenum;\n    readonly DST_COLOR: GLenum;\n    readonly ONE_MINUS_DST_COLOR: GLenum;\n    readonly SRC_ALPHA_SATURATE: GLenum;\n    readonly FUNC_ADD: GLenum;\n    readonly BLEND_EQUATION: GLenum;\n    readonly BLEND_EQUATION_RGB: GLenum;\n    readonly BLEND_EQUATION_ALPHA: GLenum;\n    readonly FUNC_SUBTRACT: GLenum;\n    readonly FUNC_REVERSE_SUBTRACT: GLenum;\n    readonly BLEND_DST_RGB: GLenum;\n    readonly BLEND_SRC_RGB: GLenum;\n    readonly BLEND_DST_ALPHA: GLenum;\n    readonly BLEND_SRC_ALPHA: GLenum;\n    readonly CONSTANT_COLOR: GLenum;\n    readonly ONE_MINUS_CONSTANT_COLOR: GLenum;\n    readonly CONSTANT_ALPHA: GLenum;\n    readonly ONE_MINUS_CONSTANT_ALPHA: GLenum;\n    readonly BLEND_COLOR: GLenum;\n    readonly ARRAY_BUFFER: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER: GLenum;\n    readonly ARRAY_BUFFER_BINDING: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum;\n    readonly STREAM_DRAW: GLenum;\n    readonly STATIC_DRAW: GLenum;\n    readonly DYNAMIC_DRAW: GLenum;\n    readonly BUFFER_SIZE: GLenum;\n    readonly BUFFER_USAGE: GLenum;\n    readonly CURRENT_VERTEX_ATTRIB: GLenum;\n    readonly FRONT: GLenum;\n    readonly BACK: GLenum;\n    readonly FRONT_AND_BACK: GLenum;\n    readonly CULL_FACE: GLenum;\n    readonly BLEND: GLenum;\n    readonly DITHER: GLenum;\n    readonly STENCIL_TEST: GLenum;\n    readonly DEPTH_TEST: GLenum;\n    readonly SCISSOR_TEST: GLenum;\n    readonly POLYGON_OFFSET_FILL: GLenum;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum;\n    readonly SAMPLE_COVERAGE: GLenum;\n    readonly NO_ERROR: GLenum;\n    readonly INVALID_ENUM: GLenum;\n    readonly INVALID_VALUE: GLenum;\n    readonly INVALID_OPERATION: GLenum;\n    readonly OUT_OF_MEMORY: GLenum;\n    readonly CW: GLenum;\n    readonly CCW: GLenum;\n    readonly LINE_WIDTH: GLenum;\n    readonly ALIASED_POINT_SIZE_RANGE: GLenum;\n    readonly ALIASED_LINE_WIDTH_RANGE: GLenum;\n    readonly CULL_FACE_MODE: GLenum;\n    readonly FRONT_FACE: GLenum;\n    readonly DEPTH_RANGE: GLenum;\n    readonly DEPTH_WRITEMASK: GLenum;\n    readonly DEPTH_CLEAR_VALUE: GLenum;\n    readonly DEPTH_FUNC: GLenum;\n    readonly STENCIL_CLEAR_VALUE: GLenum;\n    readonly STENCIL_FUNC: GLenum;\n    readonly STENCIL_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_REF: GLenum;\n    readonly STENCIL_VALUE_MASK: GLenum;\n    readonly STENCIL_WRITEMASK: GLenum;\n    readonly STENCIL_BACK_FUNC: GLenum;\n    readonly STENCIL_BACK_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_BACK_REF: GLenum;\n    readonly STENCIL_BACK_VALUE_MASK: GLenum;\n    readonly STENCIL_BACK_WRITEMASK: GLenum;\n    readonly VIEWPORT: GLenum;\n    readonly SCISSOR_BOX: GLenum;\n    readonly COLOR_CLEAR_VALUE: GLenum;\n    readonly COLOR_WRITEMASK: GLenum;\n    readonly UNPACK_ALIGNMENT: GLenum;\n    readonly PACK_ALIGNMENT: GLenum;\n    readonly MAX_TEXTURE_SIZE: GLenum;\n    readonly MAX_VIEWPORT_DIMS: GLenum;\n    readonly SUBPIXEL_BITS: GLenum;\n    readonly RED_BITS: GLenum;\n    readonly GREEN_BITS: GLenum;\n    readonly BLUE_BITS: GLenum;\n    readonly ALPHA_BITS: GLenum;\n    readonly DEPTH_BITS: GLenum;\n    readonly STENCIL_BITS: GLenum;\n    readonly POLYGON_OFFSET_UNITS: GLenum;\n    readonly POLYGON_OFFSET_FACTOR: GLenum;\n    readonly TEXTURE_BINDING_2D: GLenum;\n    readonly SAMPLE_BUFFERS: GLenum;\n    readonly SAMPLES: GLenum;\n    readonly SAMPLE_COVERAGE_VALUE: GLenum;\n    readonly SAMPLE_COVERAGE_INVERT: GLenum;\n    readonly COMPRESSED_TEXTURE_FORMATS: GLenum;\n    readonly DONT_CARE: GLenum;\n    readonly FASTEST: GLenum;\n    readonly NICEST: GLenum;\n    readonly GENERATE_MIPMAP_HINT: GLenum;\n    readonly BYTE: GLenum;\n    readonly UNSIGNED_BYTE: GLenum;\n    readonly SHORT: GLenum;\n    readonly UNSIGNED_SHORT: GLenum;\n    readonly INT: GLenum;\n    readonly UNSIGNED_INT: GLenum;\n    readonly FLOAT: GLenum;\n    readonly DEPTH_COMPONENT: GLenum;\n    readonly ALPHA: GLenum;\n    readonly RGB: GLenum;\n    readonly RGBA: GLenum;\n    readonly LUMINANCE: GLenum;\n    readonly LUMINANCE_ALPHA: GLenum;\n    readonly UNSIGNED_SHORT_4_4_4_4: GLenum;\n    readonly UNSIGNED_SHORT_5_5_5_1: GLenum;\n    readonly UNSIGNED_SHORT_5_6_5: GLenum;\n    readonly FRAGMENT_SHADER: GLenum;\n    readonly VERTEX_SHADER: GLenum;\n    readonly MAX_VERTEX_ATTRIBS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum;\n    readonly MAX_VARYING_VECTORS: GLenum;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum;\n    readonly SHADER_TYPE: GLenum;\n    readonly DELETE_STATUS: GLenum;\n    readonly LINK_STATUS: GLenum;\n    readonly VALIDATE_STATUS: GLenum;\n    readonly ATTACHED_SHADERS: GLenum;\n    readonly ACTIVE_UNIFORMS: GLenum;\n    readonly ACTIVE_ATTRIBUTES: GLenum;\n    readonly SHADING_LANGUAGE_VERSION: GLenum;\n    readonly CURRENT_PROGRAM: GLenum;\n    readonly NEVER: GLenum;\n    readonly LESS: GLenum;\n    readonly EQUAL: GLenum;\n    readonly LEQUAL: GLenum;\n    readonly GREATER: GLenum;\n    readonly NOTEQUAL: GLenum;\n    readonly GEQUAL: GLenum;\n    readonly ALWAYS: GLenum;\n    readonly KEEP: GLenum;\n    readonly REPLACE: GLenum;\n    readonly INCR: GLenum;\n    readonly DECR: GLenum;\n    readonly INVERT: GLenum;\n    readonly INCR_WRAP: GLenum;\n    readonly DECR_WRAP: GLenum;\n    readonly VENDOR: GLenum;\n    readonly RENDERER: GLenum;\n    readonly VERSION: GLenum;\n    readonly NEAREST: GLenum;\n    readonly LINEAR: GLenum;\n    readonly NEAREST_MIPMAP_NEAREST: GLenum;\n    readonly LINEAR_MIPMAP_NEAREST: GLenum;\n    readonly NEAREST_MIPMAP_LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_LINEAR: GLenum;\n    readonly TEXTURE_MAG_FILTER: GLenum;\n    readonly TEXTURE_MIN_FILTER: GLenum;\n    readonly TEXTURE_WRAP_S: GLenum;\n    readonly TEXTURE_WRAP_T: GLenum;\n    readonly TEXTURE_2D: GLenum;\n    readonly TEXTURE: GLenum;\n    readonly TEXTURE_CUBE_MAP: GLenum;\n    readonly TEXTURE_BINDING_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum;\n    readonly TEXTURE0: GLenum;\n    readonly TEXTURE1: GLenum;\n    readonly TEXTURE2: GLenum;\n    readonly TEXTURE3: GLenum;\n    readonly TEXTURE4: GLenum;\n    readonly TEXTURE5: GLenum;\n    readonly TEXTURE6: GLenum;\n    readonly TEXTURE7: GLenum;\n    readonly TEXTURE8: GLenum;\n    readonly TEXTURE9: GLenum;\n    readonly TEXTURE10: GLenum;\n    readonly TEXTURE11: GLenum;\n    readonly TEXTURE12: GLenum;\n    readonly TEXTURE13: GLenum;\n    readonly TEXTURE14: GLenum;\n    readonly TEXTURE15: GLenum;\n    readonly TEXTURE16: GLenum;\n    readonly TEXTURE17: GLenum;\n    readonly TEXTURE18: GLenum;\n    readonly TEXTURE19: GLenum;\n    readonly TEXTURE20: GLenum;\n    readonly TEXTURE21: GLenum;\n    readonly TEXTURE22: GLenum;\n    readonly TEXTURE23: GLenum;\n    readonly TEXTURE24: GLenum;\n    readonly TEXTURE25: GLenum;\n    readonly TEXTURE26: GLenum;\n    readonly TEXTURE27: GLenum;\n    readonly TEXTURE28: GLenum;\n    readonly TEXTURE29: GLenum;\n    readonly TEXTURE30: GLenum;\n    readonly TEXTURE31: GLenum;\n    readonly ACTIVE_TEXTURE: GLenum;\n    readonly REPEAT: GLenum;\n    readonly CLAMP_TO_EDGE: GLenum;\n    readonly MIRRORED_REPEAT: GLenum;\n    readonly FLOAT_VEC2: GLenum;\n    readonly FLOAT_VEC3: GLenum;\n    readonly FLOAT_VEC4: GLenum;\n    readonly INT_VEC2: GLenum;\n    readonly INT_VEC3: GLenum;\n    readonly INT_VEC4: GLenum;\n    readonly BOOL: GLenum;\n    readonly BOOL_VEC2: GLenum;\n    readonly BOOL_VEC3: GLenum;\n    readonly BOOL_VEC4: GLenum;\n    readonly FLOAT_MAT2: GLenum;\n    readonly FLOAT_MAT3: GLenum;\n    readonly FLOAT_MAT4: GLenum;\n    readonly SAMPLER_2D: GLenum;\n    readonly SAMPLER_CUBE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum;\n    readonly COMPILE_STATUS: GLenum;\n    readonly LOW_FLOAT: GLenum;\n    readonly MEDIUM_FLOAT: GLenum;\n    readonly HIGH_FLOAT: GLenum;\n    readonly LOW_INT: GLenum;\n    readonly MEDIUM_INT: GLenum;\n    readonly HIGH_INT: GLenum;\n    readonly FRAMEBUFFER: GLenum;\n    readonly RENDERBUFFER: GLenum;\n    readonly RGBA4: GLenum;\n    readonly RGB5_A1: GLenum;\n    readonly RGB565: GLenum;\n    readonly DEPTH_COMPONENT16: GLenum;\n    readonly STENCIL_INDEX8: GLenum;\n    readonly DEPTH_STENCIL: GLenum;\n    readonly RENDERBUFFER_WIDTH: GLenum;\n    readonly RENDERBUFFER_HEIGHT: GLenum;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum;\n    readonly RENDERBUFFER_RED_SIZE: GLenum;\n    readonly RENDERBUFFER_GREEN_SIZE: GLenum;\n    readonly RENDERBUFFER_BLUE_SIZE: GLenum;\n    readonly RENDERBUFFER_ALPHA_SIZE: GLenum;\n    readonly RENDERBUFFER_DEPTH_SIZE: GLenum;\n    readonly RENDERBUFFER_STENCIL_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum;\n    readonly COLOR_ATTACHMENT0: GLenum;\n    readonly DEPTH_ATTACHMENT: GLenum;\n    readonly STENCIL_ATTACHMENT: GLenum;\n    readonly DEPTH_STENCIL_ATTACHMENT: GLenum;\n    readonly NONE: GLenum;\n    readonly FRAMEBUFFER_COMPLETE: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum;\n    readonly FRAMEBUFFER_UNSUPPORTED: GLenum;\n    readonly FRAMEBUFFER_BINDING: GLenum;\n    readonly RENDERBUFFER_BINDING: GLenum;\n    readonly MAX_RENDERBUFFER_SIZE: GLenum;\n    readonly INVALID_FRAMEBUFFER_OPERATION: GLenum;\n    readonly UNPACK_FLIP_Y_WEBGL: GLenum;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum;\n    readonly CONTEXT_LOST_WEBGL: GLenum;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum;\n    readonly BROWSER_DEFAULT_WEBGL: GLenum;\n    readonly canvas: HTMLCanvasElement | OffscreenCanvas;\n    readonly drawingBufferWidth: GLsizei;\n    readonly drawingBufferHeight: GLsizei;\n    getContextAttributes(): WebGLContextAttributes | null;\n    isContextLost(): boolean;\n    getSupportedExtensions(): string[] | null;\n    getExtension(name: string): any;\n    activeTexture(texture: GLenum): void;\n    attachShader(program: WebGLProgram, shader: WebGLShader): void;\n    bindAttribLocation(program: WebGLProgram, index: GLuint, name: string): void;\n    bindBuffer(target: GLenum, buffer: WebGLBuffer | null): void;\n    bindFramebuffer(target: GLenum, framebuffer: WebGLFramebuffer | null): void;\n    bindRenderbuffer(target: GLenum, renderbuffer: WebGLRenderbuffer | null): void;\n    bindTexture(target: GLenum, texture: WebGLTexture | null): void;\n    blendColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;\n    blendEquation(mode: GLenum): void;\n    blendEquationSeparate(modeRGB: GLenum, modeAlpha: GLenum): void;\n    blendFunc(sfactor: GLenum, dfactor: GLenum): void;\n    blendFuncSeparate(srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum): void;\n    checkFramebufferStatus(target: GLenum): GLenum;\n    clear(mask: GLbitfield): void;\n    clearColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;\n    clearDepth(depth: GLclampf): void;\n    clearStencil(s: GLint): void;\n    colorMask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean): void;\n    compileShader(shader: WebGLShader): void;\n    copyTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint): void;\n    copyTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    createBuffer(): WebGLBuffer | null;\n    createFramebuffer(): WebGLFramebuffer | null;\n    createProgram(): WebGLProgram | null;\n    createRenderbuffer(): WebGLRenderbuffer | null;\n    createShader(type: GLenum): WebGLShader | null;\n    createTexture(): WebGLTexture | null;\n    cullFace(mode: GLenum): void;\n    deleteBuffer(buffer: WebGLBuffer | null): void;\n    deleteFramebuffer(framebuffer: WebGLFramebuffer | null): void;\n    deleteProgram(program: WebGLProgram | null): void;\n    deleteRenderbuffer(renderbuffer: WebGLRenderbuffer | null): void;\n    deleteShader(shader: WebGLShader | null): void;\n    deleteTexture(texture: WebGLTexture | null): void;\n    depthFunc(func: GLenum): void;\n    depthMask(flag: GLboolean): void;\n    depthRange(zNear: GLclampf, zFar: GLclampf): void;\n    detachShader(program: WebGLProgram, shader: WebGLShader): void;\n    disable(cap: GLenum): void;\n    disableVertexAttribArray(index: GLuint): void;\n    drawArrays(mode: GLenum, first: GLint, count: GLsizei): void;\n    drawElements(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr): void;\n    enable(cap: GLenum): void;\n    enableVertexAttribArray(index: GLuint): void;\n    finish(): void;\n    flush(): void;\n    framebufferRenderbuffer(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: WebGLRenderbuffer | null): void;\n    framebufferTexture2D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: WebGLTexture | null, level: GLint): void;\n    frontFace(mode: GLenum): void;\n    generateMipmap(target: GLenum): void;\n    getActiveAttrib(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    getActiveUniform(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    getAttachedShaders(program: WebGLProgram): WebGLShader[] | null;\n    getAttribLocation(program: WebGLProgram, name: string): GLint;\n    getBufferParameter(target: GLenum, pname: GLenum): any;\n    getParameter(pname: GLenum): any;\n    getError(): GLenum;\n    getFramebufferAttachmentParameter(target: GLenum, attachment: GLenum, pname: GLenum): any;\n    getProgramParameter(program: WebGLProgram, pname: GLenum): any;\n    getProgramInfoLog(program: WebGLProgram): string | null;\n    getRenderbufferParameter(target: GLenum, pname: GLenum): any;\n    getShaderParameter(shader: WebGLShader, pname: GLenum): any;\n    getShaderPrecisionFormat(shadertype: GLenum, precisiontype: GLenum): WebGLShaderPrecisionFormat | null;\n    getShaderInfoLog(shader: WebGLShader): string | null;\n    getShaderSource(shader: WebGLShader): string | null;\n    getTexParameter(target: GLenum, pname: GLenum): any;\n    getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;\n    getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation | null;\n    getVertexAttrib(index: GLuint, pname: GLenum): any;\n    getVertexAttribOffset(index: GLuint, pname: GLenum): GLintptr;\n    hint(target: GLenum, mode: GLenum): void;\n    isBuffer(buffer: WebGLBuffer | null): GLboolean;\n    isEnabled(cap: GLenum): GLboolean;\n    isFramebuffer(framebuffer: WebGLFramebuffer | null): GLboolean;\n    isProgram(program: WebGLProgram | null): GLboolean;\n    isRenderbuffer(renderbuffer: WebGLRenderbuffer | null): GLboolean;\n    isShader(shader: WebGLShader | null): GLboolean;\n    isTexture(texture: WebGLTexture | null): GLboolean;\n    lineWidth(width: GLfloat): void;\n    linkProgram(program: WebGLProgram): void;\n    pixelStorei(pname: GLenum, param: GLint | GLboolean): void;\n    polygonOffset(factor: GLfloat, units: GLfloat): void;\n    renderbufferStorage(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    sampleCoverage(value: GLclampf, invert: GLboolean): void;\n    scissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    shaderSource(shader: WebGLShader, source: string): void;\n    stencilFunc(func: GLenum, ref: GLint, mask: GLuint): void;\n    stencilFuncSeparate(face: GLenum, func: GLenum, ref: GLint, mask: GLuint): void;\n    stencilMask(mask: GLuint): void;\n    stencilMaskSeparate(face: GLenum, mask: GLuint): void;\n    stencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum): void;\n    stencilOpSeparate(face: GLenum, fail: GLenum, zfail: GLenum, zpass: GLenum): void;\n    texParameterf(target: GLenum, pname: GLenum, param: GLfloat): void;\n    texParameteri(target: GLenum, pname: GLenum, param: GLint): void;\n    uniform1f(location: WebGLUniformLocation | null, x: GLfloat): void;\n    uniform2f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat): void;\n    uniform3f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat): void;\n    uniform4f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;\n    uniform1i(location: WebGLUniformLocation | null, x: GLint): void;\n    uniform2i(location: WebGLUniformLocation | null, x: GLint, y: GLint): void;\n    uniform3i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint): void;\n    uniform4i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint, w: GLint): void;\n    useProgram(program: WebGLProgram | null): void;\n    validateProgram(program: WebGLProgram): void;\n    vertexAttrib1f(index: GLuint, x: GLfloat): void;\n    vertexAttrib2f(index: GLuint, x: GLfloat, y: GLfloat): void;\n    vertexAttrib3f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat): void;\n    vertexAttrib4f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;\n    vertexAttrib1fv(index: GLuint, values: Float32List): void;\n    vertexAttrib2fv(index: GLuint, values: Float32List): void;\n    vertexAttrib3fv(index: GLuint, values: Float32List): void;\n    vertexAttrib4fv(index: GLuint, values: Float32List): void;\n    vertexAttribPointer(index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, offset: GLintptr): void;\n    viewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n}", "api_method_name": "WebGLRenderingContextBase", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getContextAttributes", "api_method_all": "getContextAttributes(): WebGLContextAttributes | null;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 33, "since": 7, "api_used": "\u662f", "lines": ["textAttributes: \" + getContextAttributesValue);\n\t\texpect(get", "2\n\t * @tc.desc Test getContextAttributes.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_getContextAttributes2', 0, async functio", "ttributesValue = gl.getContextAttributes(\"error\");\n\t\tconsole", "nfo(\"webgltest into getContextAttributes\");\n\t\tconst getConte", "\tvar attribute = gl.getContextAttributes();\n\t\texpect(atttrib", "e);\n\t\texpect(typeof(getContextAttributesValue)).assertEqual(", "tesValue);\n\t\texpect(getContextAttributesValue).assertEqual(n", "tributes\");\n\t\tconst getContextAttributesValue = gl.getContex", "@tc.name webgl_test_getContextAttributes2\n\t * @tc.desc Test ", "ttributesValue = gl.getContextAttributes();\n\t\tconsole.info(\"", "textAttributes: \" + getContextAttributesValue);\n\t\texpect(typ", "ole.info(\"webgltest getContextAttributes: \" + getContextAttr", "\n\n\t\n\tit('webgl_test_getContextAttributes', 0, async function"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "isContextLost", "api_method_all": "isContextLost(): boolean;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 64, "since": 7, "api_used": "\u662f", "lines": ["textLost\");\n\t\tconst isContextLostValue = gl.isContext", "ole.info(\"webgltest isContextLost: \" + isContextLostV", "2\n\t * @tc.desc Test isContextLost.\n\t */\n\tit('webgl_te", "ostValue);\n\t\texpect(isContextLostValue).assertEqual(f", "nfo(\"webgltest into isContextLost\");\n\t\tconst isContex", "ntextLostValue: \" + isContextLostValue);\n\n\t\t// \u6307\u5b9a\u6e05\u7a7a<c", "arameter);\n\n\t\tconst isContextLostValue = gl.isContext", " isContextLost: \" + isContextLostValue);\n\t\texpect(isC", " */\n\tit('webgl_test_isContextLost2', 0, async functio", "ntextLostValue = gl.isContextLost();\n\t\tconsole.info(\"", "\n\n\t\n\tit('webgl_test_isContextLost', 0, async function", "@tc.name webgl_test_isContextLost2\n\t * @tc.desc Test ", "();\n\t\tconsole.info(\"isContextLostValue: \" + isContext", "ntextLostValue = gl.isContextLost(\"error\");\n\t\tconsole"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getSupportedExtensions", "api_method_all": "getSupportedExtensions(): string[] | null;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 32, "since": 7, "api_used": "\u662f", "lines": ["nfo(\"webgltest into getSupportedExtensions\");\n\t\tconst getSuppo", "\n\n\t\n\tit('webgl_test_getSupportedExtensions', 0, async function", "xtensionsValue = gl.getSupportedExtensions(\"error\");\n\t\tconsole", "2\n\t * @tc.desc Test getSupportedExtensions.\n\t */\n\tit('webgl_te", "ole.info(\"webgltest getSupportedExtensions: \" + getSupportedEx", " */\n\tit('webgl_test_getSupportedExtensions2', 0, async functio", "@tc.name webgl_test_getSupportedExtensions2\n\t * @tc.desc Test ", "rtedExtensions: \" + getSupportedExtensionsValue);\n\t\texpect(typ", "e);\n\t\texpect(typeof(getSupportedExtensionsValue)).assertEqual(", "tensions\");\n\t\tconst getSupportedExtensionsValue = gl.getSuppor", "xtensionsValue = gl.getSupportedExtensions();\n\t\tconsole.info(\""], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getExtension", "api_method_all": "getExtension(name: string): any;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 36, "since": 7, "api_used": "\u662f", "lines": ["ole.info(\"webgltest getExtension: \" + getExtensionVa", "t getExtension: \" + getExtensionValue);\n\t\texpect(get", "\n\n\t\n\tit('webgl_test_getExtension', 0, async function", "xtension\");\n\t\tconst getExtensionValue = gl.getExtens", "ionValue);\n\t\texpect(getExtensionValue).assertEqual(u", "2\n\t * @tc.desc Test getExtension.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_getExtension2', 0, async functio", "ole.info(\"webgltest getExtension: \" + isProgram2);\n\t", "ExtensionValue = gl.getExtension();\n\t\tconsole.info(\"", "nfo(\"webgltest into getExtension\");\n\t\tconst getExten", "@tc.name webgl_test_getExtension2\n\t * @tc.desc Test ", "ExtensionValue = gl.getExtension(\"error\");\n\t\tconsole"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "activeTexture", "api_method_all": "activeTexture(texture: GLenum): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 1032, "since": 7, "api_used": "\u662f", "lines": [" */\n\tit('webgl_test_activeTexture2', 0, async functio", ".TEXTURE1);\n\t\tconst activeTextureParameter = gl.getPa", "\n\n\t\n\tit('webgl_test_activeTexture', 0, async function", "\n\n\t\n\tit('webgl_test_activeTexture_1', 0, async functi", "2\n\t * @tc.desc Test activeTexture.\n\t */\n\tit('webgl_te", "tiveTexture\");\n\t\tgl.activeTexture(gl.TEXTURE1);\n\t\tcon", "tiveTexture\");\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tcon", "> getParameter: \" + activeTextureParameter);\n\t\texpect", "();\n\t\tconsole.info(\"activeTexture --> getParameter: \"", " */\n\tit('webgl_test_activeTexture_1', 0, async functi", "ole.info(\"webgltest activeTexture --> getParameter: \"", ".TEXTURE2);\n\t\tconst activeTextureParameter = gl.getPa", ".TEXTURE0);\n\t\tconst activeTextureParameter = gl.getPa", "@tc.name webgl_test_activeTexture2\n\t * @tc.desc Test ", "XTURE8B4C);\n\t\tconst activeTextureParameter = gl.getPa", "arameter);\n\t\texpect(activeTextureParameter).assertEqu", "nfo(\"webgltest into activeTexture\");\n\t\tgl.activeTextu", "tiveTexture\");\n\t\tgl.activeTexture(gl.TEXTURE8B4C);\n\t\t", "3\n\t * @tc.desc Test activeTexture.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_activeTexture_12\n\t * @tc.desc Tes", "tringify(gl));\n\t\tgl.activeTexture(gl.TEXTURE0);\n\t\tvar", " */\n\tit('webgl_test_activeTexture_12', 0, async funct", ".TEXTURE3);\n\t\tconst activeTextureParameter = gl.getPa", "tiveTexture\");\n\t\tgl.activeTexture(gl.TEXTURE3);\n\t\tcon", "@tc.name webgl_test_activeTexture_2\n\t * @tc.desc Test", "ue)\n\t\tconsole.info(\"activeTexture --> getParameter: \"", "@tc.name webgl_test_activeTexture_3\n\t * @tc.desc Test", "tiveTexture\");\n\t\tgl.activeTexture(gl.TEXTURE2);\n\t\tcon"], "files": ["WebGL.test12.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "attachShader", "api_method_all": "attachShader(program: WebGLProgram, shader: WebGLShader): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 274, "since": 7, "api_used": "\u662f", "lines": ["\u5efa WebGLProgram\n\t\tgl.attachShader(program, vertexShad", "shader objects\n\t\tgl.attachShader(program, vertexShad", "rBufferValue1)\n\t\tgl.attachShader(programObj, vertexS", "vertexShader);\n\t\tgl.attachShader(programObj, fragmen", "vertexShader);\n\t\tgl.attachShader(program, fragmentSh", "\n\n\t\n\tit('webgl_test_attachShader', 0, async function", "\u6dfb\u52a0\u4e00\u4e2a\u7247\u6bb5\u6216\u8005\u9876\u70b9\u7740\u8272\u5668\u3002\n\t\tgl.attachShader(program, fragmentSh", "m();\n\t\t//        gl.attachShader(programObj, vertexS", "ole.info(\"webgltest attachShader getError: \" + error", "nfo(\"webgltest into attachShader\");\n\n\t\t//\u9876\u70b9\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tv"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "bindAttribLocation", "api_method_all": "bindAttribLocation(program: WebGLProgram, index: GLuint, name: string): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 34, "since": 7, "api_used": "\u662f", "lines": ["nfo(\"webgltest into bindAttribLocation\");\n\n\t\t//\u9876\u70b9\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tv", "(programObj);\n\n\t\tgl.bindAttribLocation(programObj, 1, 'a_P", "\n\n\t\n\tit('webgl_test_bindAttribLocation', 0, async function", "(programObj);\n\n\t\tgl.bindAttribLocation(programObj, -1, 'a_", " */\n\tit('webgl_test_bindAttribLocation2', 0, async functio", "@tc.name webgl_test_bindAttribLocation\n\t * @tc.desc Test b", "(programObj);\n\n\t\tgl.bindAttribLocation(programObj, 1, 'V_c", "ole.info(\"webgltest bindAttribLocation getError: \" + error", "2\n\t * @tc.desc Test bindAttribLocation.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_bindAttribLocation2\n\t * @tc.desc Test ", "n\n\t * @tc.desc Test bindAttribLocation.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_bindAttribLocation', 0, async function", "balFunction();\n\t\tgl.bindAttribLocation(programObj, 0, 'a_P"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test01.js", "WebGL.test06.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "bindBuffer", "api_method_all": "bindBuffer(target: GLenum, buffer: WebGLBuffer | null): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 446, "since": 7, "api_used": "\u662f", "lines": ["nfo(\"webgltest into bindBuffer\");\n\n\t\tvar buffer = ", "\n\n\t\n\tit('webgl_test_bindBuffer_1', 0, async functi", "gltest createBuffer bindBuffer deleteBuffer isBuff", "reateBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, ve", "es.length * 4;\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, sr", ": \" + buffer);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, bu", ".STATIC_DRAW);\n\t\tgl.bindBuffer(gl.COPY_READ_BUFFER", "R, srcBuffer);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, ds", "eateBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, bu", "Equal(false);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, bu", "reateBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, bu", "// \u5c06\u7f13\u51b2\u533a\u5bf9\u8c61\u7ed1\u5b9a\u5230\u76ee\u6807\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, ve", "\n\n\t\n\tit('webgl_test_bindBuffer', 0, async function", "STATIC_DRAW);\n\n\t\tgl.bindBuffer(gl.COPY_READ_BUFFER", "gltest createBuffer bindBuffer isBuffer: \" + isBuf", "gltest createBuffer bindBuffer isBuffer1: \" + isBu"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "bindFramebuffer", "api_method_all": "bindFramebuffer(target: GLenum, framebuffer: WebGLFramebuffer | null): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 108, "since": 7, "api_used": "\u662f", "lines": ["e);\n\n\t\t// bind\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, 'fr", " */\n\tit('webgl_test_bindFramebuffer_2', 0, async functi", "@tc.name webgl_test_bindFramebuffer2\n\t * @tc.desc Test ", "eateFramebuffer --> bindFramebuffer --> isFramebuffer: ", "ramebuffer();\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, fra", "e);\n\n\t\t// bind\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, fra", "1\n\t * @tc.desc Test bindFramebuffer.\n\t */\n\tit('webgl_te", "ramebuffer();\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, fra", "eateFramebuffer --> bindFramebuffer --> checkFramebuffe", "e);\n\n\t\t// bind\n\t\tgl.bindFramebuffer(gl2.DRAW_FRAMEBUFFE", " */\n\tit('webgl_test_bindFramebuffer_1', 0, async functi", "eateFramebuffer --> bindFramebuffer --> isFramebuffer_2", "Framebuffer();\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, 'fr", "@tc.name webgl_test_bindFramebuffer_2\n\t * @tc.desc Test", "@tc.name webgl_test_bindFramebuffer_1\n\t * @tc.desc Test", "eateFramebuffer --> bindFramebuffer --> deleteFramebuff", "2\n\t * @tc.desc Test bindFramebuffer.\n\t */\n\tit('webgl_te", "Framebuffer();\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, fra", "t createFramebuffer bindFramebuffer isFramebuffer1: \" +", "t createFramebuffer bindFramebuffer isFramebuffer2: \" +", "\n\n\t\n\tit('webgl_test_bindFramebuffer', 0, async function", " */\n\tit('webgl_test_bindFramebuffer2', 0, async functio", "nfo(\"webgltest into bindFramebuffer\");\n\n\t\tvar framebuff", "e);\n\n\t\t// bind\n\t\tgl.bindFramebuffer(gl2.READ_FRAMEBUFFE", "eateFramebuffer --> bindFramebuffer --> isFrameBuffer2:"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test01.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "bindRenderbuffer", "api_method_all": "bindRenderbuffer(target: GLenum, renderbuffer: WebGLRenderbuffer | null): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 121, "since": 7, "api_used": "\u662f", "lines": ["nfo(\"webgltest into bindRenderbuffer\");\n\n\t\tvar renderbuf", "Equal(false);\n\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, re", "ateRenderbuffer --> bindRenderbuffer --> getParameter --", "2\n\t * @tc.desc Test bindRenderbuffer.\n\t */\n\tit('webgl_te", "nderbuffer');\n\n\t\t// bindRenderbuffer\u540e, isRenderbuffer\u8fd4\u56det", "@tc.name webgl_test_bindRenderbuffer2\n\t * @tc.desc Test ", " */\n\tit('webgl_test_bindRenderbuffer2', 0, async functio", "enderbuffer);\n\n\t\t// bindRenderbuffer\u540e, isRenderbuffer\u8fd4\u56det", " createRenderbuffer bindRenderbuffer  deleteRenderbuffer", "derbuffer();\n\n\t\t//\u4e0d bindRenderbuffer, \u90a3\u4e48\u4e0b\u9762\u4f1a\u8fd4\u56de false\n\t\tco", "enderbuffer();\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, re", "renderbuffer);\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, re", "Equal(false);\n\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, 'r", "\n\n\t\n\tit('webgl_test_bindRenderbuffer', 0, async function", "ateRenderbuffer --> bindRenderbuffer --> isRenderbuffer:", " createRenderbuffer bindRenderbuffer isRenderbuffer1: \" ", "enderbuffer();\n\t\tgl.bindRenderbuffer(gl2.RENDERBUFFER, r"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "bindTexture", "api_method_all": "bindTexture(target: GLenum, texture: WebGLTexture | null): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 120, "since": 7, "api_used": "\u662f", "lines": ["2\n\t * @tc.desc Test bindTexture.\n\t */\n\tit('webgl_te", "eateTexture();\n\t\tgl.bindTexture(texture, texture);\n", "eateTexture();\n\t\tgl.bindTexture(gl.TEXTURE_2D, text", "Equal(false);\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, text", "nfo(\"webgltest into bindTexture\");\n\n\t\tvar texture =", "Equal(false);\n\n\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP", "@tc.name webgl_test_bindTexture_2\n\t * @tc.desc Test", "\n\n\t\n\tit('webgl_test_bindTexture', 0, async function", "eateTexture();\n\t\tgl.bindTexture(gl.TEXTURE_3D, text", "(\"createTexture --> bindTexture --> isTexture: \" + ", "eateTexture();\n\t\tgl.bindTexture(gl.TEXTURE_2D, tex)", " */\n\tit('webgl_test_bindTexture2', 0, async functio", "@tc.name webgl_test_bindTexture2\n\t * @tc.desc Test ", "eateProgram();\n\t\tgl.bindTexture(gl.TEXTURE_3D, prog", "eateTexture();\n\t\tgl.bindTexture(gl2.TEXTURE_2D_ARRA", "Equal(false);\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, 'tex", "Framebuffer();\n\t\tgl.bindTexture(gl.TEXTURE_3D, fram", " */\n\tit('webgl_test_bindTexture_2', 0, async functi"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test04.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "blendColor", "api_method_all": "blendColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 150, "since": 7, "api_used": "\u662f", "lines": ["> getParameter: \" + blendColorValue);\n\n\t\tvar blend", ", 1]);\n\n\t\t// expect(blendColorValue).assertEqual(b", "lorValue: \" + equalsblendColorValue);\n\t\texpect(equ", "1\n\t * @tc.desc Test blendColor.\n\t */\n\tit('webgl_te", "ue);\n\t\texpect(equalsblendColorType).assertEqual(tr", "1]);\n\n\t\tconst equalsblendColorType = (blendColorVa", "alue.toString() === blendColorArr.toString());\n\t\tc", ", 1, 1, 1);\n\t\tconst blendColorValue = gl.getParame", "2\n\t * @tc.desc Test blendColor.\n\t */\n\tit('webgl_te", "R);\n\t\tconsole.info(\"blendColor --> getParameter: \"", " */\n\tit('webgl_test_blendColor_1', 0, async functi", "blendColor\");\n\n\t\tgl.blendColor(0, 0.5, 1, 1);\n\t\tco", "dColorValue);\n\t\tvar blendColorArr = new Float32Arr", "ualsType: \" + equalsblendColorType);\n\n\t\tconst equa", "rValue).assertEqual(blendColorArr);\n\n\t\t// \u5224\u65ad\u6570\u636e\u7c7b\u578b\u662f\u5426", "@tc.name webgl_test_blendColor2\n\t * @tc.desc Test ", "@tc.name webgl_test_blendColor\n\t * @tc.desc Test b", "pe);\n\n\t\tconst equalsblendColorValue = (blendColorV", "tringify(gl));\n\t\tgl.blendColor(0, 0.5, 1, 1);\n\t\tco", "ring()).assertEqual(blendColorArr.toString());\n\n\t\t", " */\n\tit('webgl_test_blendColor2', 0, async functio", "r);\n\t\tconsole.info(\"blendColorequalsType: \" + equa", "lue.constructor === blendColorArr.constructor);\n\t\t", "console.info(\"equalsblendColorValue: \" + equalsble", "ructor).assertEqual(blendColorArr.constructor);\n\t\t", "nfo(\"webgltest into blendColor\");\n\n\t\tgl.blendColor", "blendColor\");\n\n\t\tgl.blendColor(1, 1, 1, 1);\n\t\tcons", "sblendColorValue = (blendColorValue.toString() ===", "ColorValue);\n\n\t\tvar blendColorArr = new Float32Arr", "ue);\n\t\texpect(equalsblendColorValue).assertEqual(t", "0.5, 1, 1);\n\t\tconst blendColorValue = gl.getParame", "@tc.name webgl_test_blendColor_1\n\t * @tc.desc Test", " \u5224\u65ad\u6570\u636e\u503c\u662f\u5426\u6b63\u786e\n\t\texpect(blendColorValue.toString()).as", "lsblendColorType = (blendColorValue.constructor ==", "> getParameter: \" + blendColorValue);\n\t\tvar blendC", " 1]\n\t\tconsole.info(\"blendColor --> getParameter: \"", " */\n\tit('webgl_test_blendColor', 0, async function", "r\n\t * @tc.desc Test blendColor.\n\t */\n\tit('webgl_te", "\u5224\u65ad\u6570\u636e\u7c7b\u578b\u662f\u5426\u6b63\u786e\n\t\texpect(blendColorValue.constructor).a"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "blendEquation", "api_method_all": "blendEquation(mode: GLenum): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 224, "since": 7, "api_used": "\u662f", "lines": ["nfo(\"webgltest into blendEquation\");\n\n\t\tgl.blendEquat", "@tc.name webgl_test_blendEquationSeparate2\n\t * @tc.de", "> getParameter: \" + blendEquationSeparateValue);\n\t\tex", "ndEquation\");\n\n\t\tgl.blendEquation(gl.FUNC_ADD);\n\n\t\tco", "B);\n\t\tconsole.info(\"blendEquation --> getParameter: \"", "@tc.name webgl_test_blendEquationSeparate\n\t * @tc.des", "ateValue);\n\t\texpect(blendEquationSeparateValue).asser", "2\n\t * @tc.desc Test blendEquationSeparate.\n\t */\n\tit('", "@tc.name webgl_test_blendEquation_1\n\t * @tc.desc Test", " */\n\tit('webgl_test_blendEquationSeparate2', 0, async", "@tc.name webgl_test_blendEquation\n\t * @tc.desc Test b", "2\n\t * @tc.desc Test blendEquation.\n\t */\n\tit('webgl_te", "> getParameter: \" + blendEquationValue);\n\t\texpect(ble", "nfo(\"webgltest into blendEquationSeparate\");\n\t\tgl.ble", " */\n\tit('webgl_test_blendEquation_12', 0, async funct", "FUNC_ADD);\n\n\t\tconst blendEquationValue = gl.getParame", "A);\n\t\tconsole.info(\"blendEquation --> getParameter: \"", "SUBTRACT);\n\n\t\tconst blendEquationSeparateValue = gl.g", "1\n\t * @tc.desc Test blendEquation.\n\t */\n\tit('webgl_te", "onValue2);\n\t\texpect(blendEquationValue2).assertEqual(", "ionValue);\n\t\texpect(blendEquationValue).assertEqual(g", " */\n\tit('webgl_test_blendEquation_1', 0, async functi", "@tc.name webgl_test_blendEquation2\n\t * @tc.desc Test ", "@tc.name webgl_test_blendEquation_12\n\t * @tc.desc Tes", " */\n\tit('webgl_test_blendEquation', 0, async function", " */\n\tit('webgl_test_blendEquationSeparate', 0, async ", "ionSeparate\");\n\t\tgl.blendEquationSeparate(gl.FUNC_ADD", "e\n\t * @tc.desc Test blendEquationSeparate.\n\t */\n\tit('", "> getParameter: \" + blendEquationValue2);\n\t\texpect(bl", "FUNC_ADD);\n\n\t\tconst blendEquationValue2 = gl.getParam", " */\n\tit('webgl_test_blendEquation2', 0, async functio", "n\n\t * @tc.desc Test blendEquation.\n\t */\n\tit('webgl_te"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test13.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "blendEquationSeparate", "api_method_all": "blendEquationSeparate(modeRGB: GLenum, modeAlpha: GLenum): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 66, "since": 7, "api_used": "\u662f", "lines": ["2\n\t * @tc.desc Test blendEquationSeparate.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_blendEquationSeparate_2', 0, async functi", "@tc.name webgl_test_blendEquationSeparate\n\t * @tc.desc Test b", "ateValue);\n\t\texpect(blendEquationSeparateValue).assertEqual(g", "SUBTRACT);\n\n\t\tconst blendEquationSeparateValue = gl.getParame", "@tc.name webgl_test_blendEquationSeparate_3\n\t * @tc.desc Test", " */\n\tit('webgl_test_blendEquationSeparate_3', 0, async functi", "3\n\t * @tc.desc Test blendEquationSeparate.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_blendEquationSeparate', 0, async function", "nfo(\"webgltest into blendEquationSeparate\");\n\t\tgl.blendEquati", "ionSeparate\");\n\t\tgl.blendEquationSeparate(gl.FUNC_SUBTRACT, g", "@tc.name webgl_test_blendEquationSeparate2\n\t * @tc.desc Test ", "ionSeparate\");\n\t\tgl.blendEquationSeparate(gl.FUNC_ADD, gl.FUN", "@tc.name webgl_test_blendEquationSeparate_2\n\t * @tc.desc Test", "> getParameter: \" + blendEquationSeparateValue);\n\t\texpect(ble", "e\n\t * @tc.desc Test blendEquationSeparate.\n\t */\n\tit('webgl_te", "\n\n\t\n\tit('webgl_test_blendEquationSeparate2', 0, async functio", " */\n\tit('webgl_test_blendEquationSeparate2', 0, async functio", "B);\n\t\tconsole.info(\"blendEquationSeparate --> getParameter: \""], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "blendFunc", "api_method_all": "blendFunc(sfactor: GLenum, dfactor: GLenum): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 126, "since": 7, "api_used": "\u662f", "lines": ["le(gl.BLEND);\n\n\t\tgl.blendFunc(gl.SRC_ALPHA, gl.DS", "B);\n\t\tconsole.info(\"blendFunc --> getParameter: \"", "arameter);\n\t\texpect(blendFuncSeparateParameter).a", "@tc.name webgl_test_blendFuncSeparate\n\t * @tc.des", " */\n\tit('webgl_test_blendFunc_2', 0, async functi", "le(gl.BLEND);\n\n\t\tgl.blendFunc(gl.SRC_COLOR, gl.DS", "2\n\t * @tc.desc Test blendFunc.\n\t */\n\tit('webgl_te", " gl.ZERO);\n\n\t\tconst blendFuncSeparateParameter = ", ", gl.ONE);\n\n\t\tconst blendFuncValue = gl.getParame", "@tc.name webgl_test_blendFuncSeparate2\n\t * @tc.de", "3\n\t * @tc.desc Test blendFunc.\n\t */\n\tit('webgl_te", "e\n\t * @tc.desc Test blendFuncSeparate.\n\t */\n\tit('", " */\n\tit('webgl_test_blendFunc', 0, async function", "@tc.name webgl_test_blendFunc_3\n\t * @tc.desc Test", " */\n\tit('webgl_test_blendFunc_3', 0, async functi", "> getParameter: \" + blendFuncSeparateParameter);\n", "RC_COLOR);\n\n\t\tconst blendFuncValue = gl.getParame", "uncValue);\n\t\texpect(blendFuncValue).assertEqual(g", "@tc.name webgl_test_blendFunc\n\t * @tc.desc Test b", "nfo(\"webgltest into blendFuncSeparate\");\n\n\t\tgl.en", "le(gl.BLEND);\n\n\t\tgl.blendFunc(gl.ZERO, gl.ONE);\n\n", "le(gl.BLEND);\n\n\t\tgl.blendFuncSeparate(gl.SRC_COLO", ", gl.ONE);\n\n\t\tconst blendFuncSeparateParameter = ", " */\n\tit('webgl_test_blendFunc2', 0, async functio", "GB)\n\t\tconsole.info(\"blendFuncSeparate --> getPara", "ST_COLOR);\n\n\t\tconst blendFuncValue = gl.getParame", "c\n\t * @tc.desc Test blendFunc.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_blendFunc2\n\t * @tc.desc Test ", "@tc.name webgl_test_blendFunc_2\n\t * @tc.desc Test", "le(gl.BLEND);\n\n\t\tgl.blendFunc(gl.SRC_COLOR);\n\n\t\tc", "2\n\t * @tc.desc Test blendFuncSeparate.\n\t */\n\tit('", " */\n\tit('webgl_test_blendFuncSeparate2', 0, async", "nfo(\"webgltest into blendFunc\");\n\n\t\tgl.enable(gl.", "> getParameter: \" + blendFuncValue);\n\t\texpect(ble", " */\n\tit('webgl_test_blendFuncSeparate', 0, async "], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "blendFuncSeparate", "api_method_all": "blendFuncSeparate(srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 63, "since": 7, "api_used": "\u662f", "lines": ["2\n\t * @tc.desc Test blendFuncSeparate.\n\t */\n\tit('webgl_te", "arameter);\n\t\texpect(blendFuncSeparateParameter).assertEqu", " */\n\tit('webgl_test_blendFuncSeparate', 0, async function", "@tc.name webgl_test_blendFuncSeparate_3\n\t * @tc.desc Test", "e\n\t * @tc.desc Test blendFuncSeparate.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_blendFuncSeparate_2\n\t * @tc.desc Test", "le(gl.BLEND);\n\n\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ON", "ST_ALPHA);\n\n\t\tconst blendFuncSeparateParameter = gl.getPa", "> getParameter: \" + blendFuncSeparateParameter);\n\t\texpect", " */\n\tit('webgl_test_blendFuncSeparate2', 0, async functio", "@tc.name webgl_test_blendFuncSeparate\n\t * @tc.desc Test b", " */\n\tit('webgl_test_blendFuncSeparate_3', 0, async functi", "@tc.name webgl_test_blendFuncSeparate2\n\t * @tc.desc Test ", " gl.ZERO);\n\n\t\tconst blendFuncSeparateParameter = gl.getPa", "GB)\n\t\tconsole.info(\"blendFuncSeparate --> getParameter: \"", "nfo(\"webgltest into blendFuncSeparate\");\n\n\t\tgl.enable(gl.", "3\n\t * @tc.desc Test blendFuncSeparate.\n\t */\n\tit('webgl_te", "le(gl.BLEND);\n\n\t\tgl.blendFuncSeparate(gl.DST_ALPHA, gl.CO", "NT_ALPHA);\n\n\t\tconst blendFuncSeparateParameter = gl.getPa", " */\n\tit('webgl_test_blendFuncSeparate_2', 0, async functi", ", gl.ONE);\n\n\t\tconst blendFuncSeparateParameter = gl.getPa", "le(gl.BLEND);\n\n\t\tgl.blendFuncSeparate(gl.SRC_COLOR, gl.DS"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "checkFramebufferStatus", "api_method_all": "checkFramebufferStatus(target: GLenum): GLenum;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 119, "since": 7, "api_used": "\u662f", "lines": ["2\n\t * @tc.desc Test checkFramebufferStatus.\n\t */\n\tit('webgl_te", "nfo(\"webgltest into checkFramebufferStatus\");\n\n\t\t//        var", "mebufferStatus = gl.checkFramebufferStatus(gl2\n\t\t\t.FRAMEBUFFER", "ufferStatus: \" +\n\t\t\tcheckFramebufferStatus);\n\t\texpect(checkFra", "@tc.name webgl_test_checkFramebufferStatus2\n\t * @tc.desc Test ", "1\n\t * @tc.desc Test checkFramebufferStatus.\n\t */\n\tit('webgl_te", "erStatus);\n\t\texpect(checkFramebufferStatus).assertEqual(0);\n\t\t", "bindFramebuffer --> checkFramebufferStatus: \" +\n\t\t\tcheckFrameb", "nfo(\"webgltest into checkFramebufferStatus\");\n\n\t\tvar framebuff", " */\n\tit('webgl_test_checkFramebufferStatus_1', 0, async functi", " */\n\tit('webgl_test_checkFramebufferStatus2_1', 0, async funct", " */\n\tit('webgl_test_checkFramebufferStatus22', 0, async functi", "eBufferStatus2 = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\t", "@tc.name webgl_test_checkFramebufferStatus2_1\n\t * @tc.desc Tes", "mebuffer);\n\n\t\tconst checkFramebufferStatus = gl.checkFramebuff", "@tc.name webgl_test_checkFramebufferStatus2_2\n\t * @tc.desc Tes", "@tc.name webgl_test_checkFramebufferStatus22\n\t * @tc.desc Test", " */\n\tit('webgl_test_checkFramebufferStatus2', 0, async functio", "mebufferStatus = gl.checkFramebufferStatus(gl\n\t\t\t.FRAMEBUFFER_", " */\n\tit('webgl_test_checkFramebufferStatus2_2', 0, async funct", "mebufferStatus = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\t", "@tc.name webgl_test_checkFramebufferStatus_1\n\t * @tc.desc Test", "erStatus);\n\t\texpect(checkFramebufferStatus).assertEqual(gl.FRA", "ebuffer');\n\n\t\tconst checkFramebufferStatus = gl.checkFramebuff"], "files": ["WebGL.test14.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "clear", "api_method_all": "clear(mask: GLbitfield): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 548, "since": 7, "api_used": "\u662f", "lines": ["thValue);\n\n\t\texpect(clearDepthValue).assertEq", " */\n\tit('webgl_test_clear', 0, async function", "r\n\t * @tc.desc Test clear.\n\t */\n\tit('webgl_te", "\u8bbe\u7f6e\u6df1\u5ea6\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u6e05\u9664\u503c\u3002\n\t\tgl.clearDepth(0.5);\n\t\t//\u82e5\u8981\u83b7\u53d6", "l\n\t * @tc.desc Test clearStencil.\n\t */\n\tit('w", " */\n\tit('webgl_test_clearStencil_1', 0, async", "r\n\t * @tc.desc Test clearColor.\n\t */\n\tit('web", " */\n\tit('webgl_test_clearDepth_2', 0, async f", "> getParameter: \" + clearStencilValue);\n\t\texp", "earStencil\");\n\n\t\tgl.clearStencil(1);\n\t\t//\u8981\u83b7\u53d6\u5f53", "1\n\t * @tc.desc Test clearStencil.\n\t */\n\tit('w", "r);\n\t\texpect(typeof(clearParameter)).assertEq", "2\n\t * @tc.desc Test clearDepth.\n\t */\n\tit('web", "cilValue);\n\t\texpect(clearStencilValue).assert", "nfo(\"webgltest into clearStencil\");\n\n\t\tgl.cle", " into clear\");\n\t\tgl.clear(gl.COLOR_BUFFER_BIT", "@tc.name webgl_test_clear\n\t * @tc.desc Test c", " */\n\tit('webgl_test_clearDepth', 0, async fun", "@tc.name webgl_test_clearColor\n\t * @tc.desc T", "arameter);\n\t\texpect(clearColorParameter.toStr", "nfo(\"webgltest into clearDepth\");\n\n\t\t//\u7528\u4e8e\u8bbe\u7f6e\u6df1\u5ea6", " */\n\tit('webgl_test_clearColor', 0, async fun", "@tc.name webgl_test_clearDepth\n\t * @tc.desc T", "nfo(\"webgltest into clear\");\n\t\tgl.clear(gl.CO", "ole.info(\"webgltest clearDepth --> getParamet", " 0, 0, 0]);\n\t\tconst clearParameter = gl.getPa", "ole.info(\"webgltest clearColor: \" + clearColo", "@tc.name webgl_test_clearDepth_2\n\t * @tc.desc", "ole.info(\"webgltest clear getParameter: \" + c", " */\n\tit('webgl_test_clearStencil', 0, async f", "> getParameter: \" + clearDepthValue);\n\n\t\texpe", "@tc.name webgl_test_clearStencil\n\t * @tc.desc", ", 0.5, 3);\n\n\t\tconst clearColorParameter = gl.", "r getParameter: \" + clearParameter);\n\t\texpect", "earStencil\");\n\n\t\tgl.clearStencil(20);\n\t\t//\u8981\u83b7\u53d6", "\u8bbe\u7f6e\u6df1\u5ea6\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u6e05\u9664\u503c\u3002\n\t\tgl.clearDepth(8);\n\t\t//\u82e5\u8981\u83b7\u53d6\u5f53\u524d", "R_VALUE \u5e38\u91cf\u3002\n\t\tconst clearStencilValue = gl.ge", "ole.info(\"webgltest clearStencil --> getParam", "h\n\t * @tc.desc Test clearDepth.\n\t */\n\tit('web", "R_VALUE \u5e38\u91cf\u3002\n\t\tconst clearDepthValue = gl.getP", " clearColor\");\n\t\tgl.clearColor(1, 0.5, 0.5, 3", "@tc.name webgl_test_clearStencil_1\n\t * @tc.de", "nfo(\"webgltest into clearColor\");\n\t\tgl.clearC", "est clearColor: \" + clearColorParameter);\n\t\te"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test01.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "clearColor", "api_method_all": "clearColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 60, "since": 7, "api_used": "\u662f", "lines": ["2\n\t * @tc.desc Test clearColor.\n\t */\n\tit('webgl_te", " clearColor\");\n\t\tgl.clearColor(1, 0.5, 0.5, -3);\n\n", "r\n\t * @tc.desc Test clearColor.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_clearColor2\n\t * @tc.desc Test ", " */\n\tit('webgl_test_clearColor', 0, async function", " clearColor\");\n\t\tgl.clearColor(1, 3, 0.5, 3);\n\n\t\tc", " */\n\tit('webgl_test_clearColor2', 0, async functio", "@tc.name webgl_test_clearColor\n\t * @tc.desc Test c", "est clearColor: \" + clearColorParameter);\n\t\texpect", " */\n\tit('webgl_test_clearColor_2', 0, async functi", "@tc.name webgl_test_clearColor_2\n\t * @tc.desc Test", "\u5b9a\u6e05\u7a7a<canvas>\u7684\u989c\u8272\n\t\tgl.clearColor(0.0, 0.0, 0.0, 1.0)", " 0.5, -3);\n\n\t\tconst clearColorParameter = gl.getPa", "nfo(\"webgltest into clearColor\");\n\t\tgl.clearColor(", "ole.info(\"webgltest clearColor: \" + clearColorPara", "arameter);\n\t\texpect(clearColorParameter.toString()", " clearColor\");\n\t\tgl.clearColor(1, 0.5, 0.5, 3);\n\n\t", "\n\n\t\n\tit('webgl_test_clearColor2', 0, async functio", ", 0.5, 3);\n\n\t\tconst clearColorParameter = gl.getPa"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "clearDepth", "api_method_all": "clearDepth(depth: GLclampf): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 78, "since": 7, "api_used": "\u662f", "lines": [" */\n\tit('webgl_test_clearDepth2', 0, async functio", "2\n\t * @tc.desc Test clearDepth.\n\t */\n\tit('webgl_te", "\u8bbe\u7f6e\u6df1\u5ea6\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u6e05\u9664\u503c\u3002\n\t\tgl.clearDepth(-0.5);\n\t\t//\u82e5\u8981\u83b7\u53d6\u5f53\u524d\u6df1\u5ea6", "> getParameter: \" + clearDepthValue);\n\n\t\texpect(cl", "@tc.name webgl_test_clearDepth2\n\t * @tc.desc Test ", "h\n\t * @tc.desc Test clearDepth.\n\t */\n\tit('webgl_te", "thValue);\n\n\t\texpect(clearDepthValue).assertEqual(1", "0.5\n\t\tconsole.info(\"clearDepth --> getParameter: \"", "@tc.name webgl_test_clearDepth_2\n\t * @tc.desc Test", "\u8bbe\u7f6e\u6df1\u5ea6\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u6e05\u9664\u503c\u3002\n\t\tgl.clearDepth(0.5);\n\t\t//\u82e5\u8981\u83b7\u53d6\u5f53\u524d\u6df1\u5ea6\u6e05", "@tc.name webgl_test_clearDepth_22\n\t * @tc.desc Tes", "thValue);\n\n\t\texpect(clearDepthValue).assertEqual(0", " */\n\tit('webgl_test_clearDepth', 0, async function", "ole.info(\"webgltest clearDepth --> getParameter: \"", "\u8bbe\u7f6e\u6df1\u5ea6\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u6e05\u9664\u503c\u3002\n\t\tgl.clearDepth(-8);\n\t\t//\u82e5\u8981\u83b7\u53d6\u5f53\u524d\u6df1\u5ea6\u6e05\u9664", "@tc.name webgl_test_clearDepth\n\t * @tc.desc Test c", " */\n\tit('webgl_test_clearDepth_2', 0, async functi", "R_VALUE \u5e38\u91cf\u3002\n\t\tconst clearDepthValue = gl.getParame", "> getParameter: \" + clearDepthValue);\n\t\texpect(cle", "\u8bbe\u7f6e\u6df1\u5ea6\u7f13\u51b2\u533a\u7684\u6df1\u5ea6\u6e05\u9664\u503c\u3002\n\t\tgl.clearDepth(8);\n\t\t//\u82e5\u8981\u83b7\u53d6\u5f53\u524d\u6df1\u5ea6\u6e05\u9664\u503c", "pthValue);\n\t\texpect(clearDepthValue).assertEqual(0", " */\n\tit('webgl_test_clearDepth_22', 0, async funct", "nfo(\"webgltest into clearDepth\");\n\n\t\t//\u7528\u4e8e\u8bbe\u7f6e\u6df1\u5ea6\u7f13\u51b2\u533a\u7684\u6df1"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "clearStencil", "api_method_all": "clearStencil(s: GLint): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 72, "since": 7, "api_used": "\u662f", "lines": [" */\n\tit('webgl_test_clearStencil2', 0, async functio", "cilValue);\n\t\texpect(clearStencilValue).assertEqual(2", "1\n\t * @tc.desc Test clearStencil.\n\t */\n\tit('webgl_te", "cilValue);\n\t\texpect(clearStencilValue).assertEqual(-", "nfo(\"webgltest into clearStencil\");\n\n\t\tgl.clearStenc", "earStencil\");\n\n\t\tgl.clearStencil(-1);\n\t\t//\u8981\u83b7\u53d6\u5f53\u524d\u6a21\u677f\u6e05\u9664\u503c", " */\n\tit('webgl_test_clearStencil', 0, async function", "@tc.name webgl_test_clearStencil\n\t * @tc.desc Test c", "earStencil\");\n\n\t\tgl.clearStencil(1);\n\t\t//\u8981\u83b7\u53d6\u5f53\u524d\u6a21\u677f\u6e05\u9664\u503c\uff0c", " */\n\tit('webgl_test_clearStencil_1', 0, async functi", "> getParameter: \" + clearStencilValue);\n\t\texpect(cle", "l\n\t * @tc.desc Test clearStencil.\n\t */\n\tit('webgl_te", "ole.info(\"webgltest clearStencil --> getParameter: \"", "2\n\t * @tc.desc Test clearStencil.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_clearStencil_12', 0, async funct", "@tc.name webgl_test_clearStencil_12\n\t * @tc.desc Tes", "cilValue);\n\t\texpect(clearStencilValue).assertEqual(1", "@tc.name webgl_test_clearStencil2\n\t * @tc.desc Test ", "earStencil\");\n\n\t\tgl.clearStencil(20);\n\t\t//\u8981\u83b7\u53d6\u5f53\u524d\u6a21\u677f\u6e05\u9664\u503c", "@tc.name webgl_test_clearStencil_1\n\t * @tc.desc Test", "R_VALUE \u5e38\u91cf\u3002\n\t\tconst clearStencilValue = gl.getParame", "earStencil\");\n\n\t\tgl.clearStencil(-20);\n\t\t//\u8981\u83b7\u53d6\u5f53\u524d\u6a21\u677f\u6e05\u9664"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "colorMask", "api_method_all": "colorMask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 73, "since": 7, "api_used": "\u662f", "lines": [" colorMask\");\n\n\t\tgl.colorMask(true, true, true, f", "tringify(gl));\n\t\tgl.colorMask(true, true, true, f", " colorMask\");\n\n\t\tgl.colorMask(false, false, false", " */\n\tit('webgl_test_colorMask22', 0, async functi", "se]\n\t\tconsole.info(\"colorMask --> getParameter: \"", " */\n\tit('webgl_test_colorMask', 0, async function", "ole.info(\"webgltest colorMask --> getParameter: \"", " */\n\tit('webgl_test_colorMask_12', 0, async funct", "@tc.name webgl_test_colorMask_12\n\t * @tc.desc Tes", " */\n\tit('webgl_test_colorMask_1', 0, async functi", "ASK\u8fd4\u56deArray.\n\t\tconst colorMaskValue = gl.getParame", "askValue);\n\t\texpect(colorMaskValue.toString()).as", "@tc.name webgl_test_colorMask_1\n\t * @tc.desc Test", "> getParameter: \" + colorMaskValue);\n\n\t\texpect(co", "1\n\t * @tc.desc Test colorMask.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_colorMask22\n\t * @tc.desc Test", "2\n\t * @tc.desc Test colorMask.\n\t */\n\tit('webgl_te", "> getParameter: \" + colorMaskValue);\n\t\texpect(col", " colorMask\");\n\n\t\tgl.colorMask(true, true, 2, fals", "@tc.name webgl_test_colorMask\n\t * @tc.desc Test c", "skValue);\n\n\t\texpect(colorMaskValue.toString()).as", "nfo(\"webgltest into colorMask\");\n\n\t\tgl.colorMask(", "k\n\t * @tc.desc Test colorMask.\n\t */\n\tit('webgl_te"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "compileShader", "api_method_all": "compileShader(shader: WebGLShader): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 262, "since": 7, "api_used": "\u662f", "lines": ["r\n\t * @tc.desc Test compileShader.\n\t */\n\tit('webgl_te", "HADER_SOURCE);\n\t\tgl.compileShader(vertexShader);\n\t\t//", "bGLShader \u7684\u6e90\u7801\u3002\n\t\tgl.compileShader(fragmentShader);\n\n\t", "ole.info(\"webgltest compileShader getError: \" + error", "HADER_SOURCE);\n\t\tgl.compileShader(vertexShader);\n\t\tva", "ile the shader\n\t\tgl.compileShader(shader);\n\n\t\t// Chec", "@tc.name webgl_test_compileShader\n\t * @tc.desc Test c", "HADER_SOURCE);\n\t\tgl.compileShader(shader);\n\n\t\tlet err", "HADER_SOURCE);\n\t\tgl.compileShader(vertexShader);\n\t\tco", "nfo(\"webgltest into compileShader\");\n\n\t\tvar shader = ", " */\n\tit('webgl_test_compileShader', 0, async function", "HADER_SOURCE);\n\t\tgl.compileShader(fragmentShader);\n\t\t"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "copyTexImage2D", "api_method_all": "copyTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint): void;", "api_type": "", "api_args_count": 8, "api_level": 21, "api_used_count": 54, "since": 7, "api_used": "\u662f", "lines": ["@tc.name webgl_test_copyTexImage2D_1\n\t * @tc.desc Test", "@tc.name webgl_test_copyTexImage2D_3\n\t * @tc.desc Test", " */\n\tit('webgl_test_copyTexImage2D_2', 0, async functi", " */\n\tit('webgl_test_copyTexImage2D_3', 0, async functi", "ole.info(\"webgltest copyTexImage2D getError: \" + error", "@tc.name webgl_test_copyTexImage2D_2\n\t * @tc.desc Test", " */\n\tit('webgl_test_copyTexImage2D', 0, async function", "@tc.name webgl_test_copyTexImage2D\n\t * @tc.desc Test c", "yTexImage2D\");\n\t\tgl.copyTexImage2D(gl.TEXTURE_2D, 0, g", "3\n\t * @tc.desc Test copyTexImage2D.\n\t */\n\tit('webgl_te", "nfo(\"webgltest into copyTexImage2D\");\n\t\tgl.copyTexImag", "yTexImage2D\");\n\t\tgl.copyTexImage2D(gl.TEXTURE_CUBE_MAP", "2\n\t * @tc.desc Test copyTexImage2D.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_copyTexImage2D_1', 0, async functi", "1\n\t * @tc.desc Test copyTexImage2D.\n\t */\n\tit('webgl_te", "D\n\t * @tc.desc Test copyTexImage2D.\n\t */\n\tit('webgl_te"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "copyTexSubImage2D", "api_method_all": "copyTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;", "api_type": "", "api_args_count": 8, "api_level": 21, "api_used_count": 84, "since": 7, "api_used": "\u662f", "lines": ["SubImage2D\");\n\n\t\tgl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0", "ole.info(\"webgltest copyTexSubImage2D getError: \" + error", "2\n\t * @tc.desc Test copyTexSubImage2D.\n\t */\n\tit('webgl_te", "D\n\t * @tc.desc Test copyTexSubImage2D.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_copyTexSubImage2D_2\n\t * @tc.desc Test", "4\n\t * @tc.desc Test copyTexSubImage2D.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_copyTexSubImage2D_4\n\t * @tc.desc Test", "@tc.name webgl_test_copyTexSubImage2D2\n\t * @tc.desc Test ", "@tc.name webgl_test_copyTexSubImage2D1\n\t * @tc.desc Test ", " */\n\tit('webgl_test_copyTexSubImage2D1', 0, async functio", " */\n\tit('webgl_test_copyTexSubImage2D2', 0, async functio", "@tc.name webgl_test_copyTexSubImage2D\n\t * @tc.desc Test c", "xSubImage2D\");\n\t\tgl.copyTexSubImage2D(gl.TEXTURE_CUBE_MAP", " */\n\tit('webgl_test_copyTexSubImage2D', 0, async function", "nfo(\"webgltest into copyTexSubImage2D\");\n\t\tgl.copyTexSubI", " */\n\tit('webgl_test_copyTexSubImage2D_2', 0, async functi", "nfo(\"webgltest into copyTexSubImage2D\");\n\n\t\tgl.copyTexSub", "@tc.name webgl_test_copyTexSubImage2D_3\n\t * @tc.desc Test", "@tc.name webgl_test_copyTexSubImage2D_1\n\t * @tc.desc Test", " */\n\tit('webgl_test_copyTexSubImage2D_4', 0, async functi", "3\n\t * @tc.desc Test copyTexSubImage2D.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_copyTexSubImage2D_1', 0, async functi", "SubImage2D\");\n\n\t\tgl.copyTexSubImage2D(gl.TEXTURE_CUBE_MAP", "1\n\t * @tc.desc Test copyTexSubImage2D.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_copyTexSubImage2D_3', 0, async functi"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "createBuffer", "api_method_all": "createBuffer(): WebGLBuffer | null;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 303, "since": 7, "api_used": "\u662f", "lines": ["\n\n\t\tvar buffer = gl.createBuffer();\n\t\tgl.bindBuffer(", "\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\t// bind\u524disBuf", "r\n\t * @tc.desc Test createBuffer.\n\t */\n\tit('webgl_te", "ole.info(\"webgltest createBuffer bindBuffer deleteBu", "onst srcBuffer = gl.createBuffer();\n\t\tconst dstBuffe", "onst dstBuffer = gl.createBuffer();\n\t\tconst vertices", ";\n\t\tvar buffer = gl.createBuffer();\n\t\tgl.bufferData(", "nfo(\"webgltest into createBuffer\");\n\n\t\tconst buffer ", "\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer", "\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tconst isBuffe", " */\n\tit('webgl_test_createBuffer', 0, async function", "\t\tconst buffer = gl.createBuffer();\n\t\tgl.bindBuffer(", "ole.info(\"webgltest createBuffer bindBuffer isBuffer", ";\n\t\tvar buffer = gl.createBuffer();\n\t\tgl.bindBuffer(", "\t\tconst buffer = gl.createBuffer();\n\t\tconst uniforml", "\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer", "@tc.name webgl_test_createBuffer\n\t * @tc.desc Test c", " */\n\tit('webgl_test_createBuffer_1', 0, async functi", "r vertexBuffer = gl.createBuffer();\n\t\tif (!vertexBuf", "@tc.name webgl_test_createBuffer_1\n\t * @tc.desc Test", "t vertexBuffer = gl.createBuffer();\n\t\tgl.bindBuffer(", "\t\tconst buffer = gl.createBuffer();\n\n\t\tconst isBuffe", "1\n\t * @tc.desc Test createBuffer.\n\t */\n\tit('webgl_te"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "createFramebuffer", "api_method_all": "createFramebuffer(): WebGLFramebuffer | null;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 135, "since": 7, "api_used": "\u662f", "lines": ["ar framebuffer = gl.createFramebuffer();\n\t\tconst isTextur", "ar framebuffer = gl.createFramebuffer();\n\t\t\tconst isFrame", "ole.info(\"webgltest createFramebuffer --> bindFramebuffer", "ar framebuffer = gl.createFramebuffer();\n\t\tgl.bindTexture", "ar framebuffer = gl.createFramebuffer();\n\t\t\tgl.bindFrameb", "r\n\t * @tc.desc Test createFramebuffer.\n\t */\n\tit('webgl_te", "nfo(\"webgltest into createFramebuffer\");\n\n\t\tconst framebu", "t);\n\t\tconsole.info(\"createFramebuffer --> isFramebuffer: ", "st framebuffer = gl.createFramebuffer();\n\t\tconst uniforml", "\t\tconsole.info(\n\t\t\t\"createFramebuffer --> bindFramebuffer", ");\n\t\t\tconsole.info(\"createFramebuffer --> isFramebuffer: ", "st framebuffer = gl.createFramebuffer();\n\t\tgl.linkProgram", "ar framebuffer = gl.createFramebuffer();\n\t\tgl.bindFramebu", " */\n\tit('webgl_test_createFramebuffer_1', 0, async functi", "1\n\t * @tc.desc Test createFramebuffer.\n\t */\n\tit('webgl_te", "ar framebuffer = gl.createFramebuffer();\n\t\tconst isrender", ");\n\t\t\tconsole.info(\"createFramebuffer --> bindFramebuffer", " */\n\tit('webgl_test_createFramebuffer', 0, async function", "@tc.name webgl_test_createFramebuffer_1\n\t * @tc.desc Test", "ar framebuffer = gl.createFramebuffer();\n\t\tconst programE", "ar framebuffer = gl.createFramebuffer();\n\n\t\tconst isFrame", "r);\n\t\tconsole.info(\"createFramebuffer --> isFramebuffer1:", "R);\n\t\tconsole.info(\"createFramebuffer --> bindFramebuffer", "@tc.name webgl_test_createFramebuffer\n\t * @tc.desc Test c", "st framebuffer = gl.createFramebuffer();\n\n\t\tconst isFrame", "ar framebuffer = gl.createFramebuffer();\n\t\tconst isShader", "ole.info(\"webgltest createFramebuffer bindFramebuffer isF", "r);\n\t\tconsole.info(\"createFramebuffer --> isFramebuffer: ", "r);\n\t\tconsole.info(\"createFramebuffer --> bindFramebuffer", "st framebuffer = gl.createFramebuffer();\n\n\t\tgl.bindFrameb"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test01.js", "WebGL.test05.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "createProgram", "api_method_all": "createProgram(): WebGLProgram | null;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 434, "since": 7, "api_used": "\u662f", "lines": ["\tconsole.log(\"======createProgram program: \" + JSON.s", " */\n\tit('webgl_test_createProgram', 0, async function", "\tconst program = gl.createProgram();\n\n\t\tgl.deleteProg", "nst programObj = gl.createProgram();\n\t\tconsole.info(\"", "true;\n\t}\n\n\tfunction createProgramExternal(gl, vshader", "nfo(\"webgltest into createProgram\");\n\t\tconst program ", "\tconst program = gl.createProgram();\n\t\tconst isProgra", "@tc.name webgl_test_createProgram\n\t * @tc.desc Test c", "\n\t\tvar program = gl.createProgram(); //\u521b\u5efa WebGLProgra", "nst programObj = gl.createProgram();\n\n\t\tconst locatio", "Obj;\n\t}\n\n\n\tfunction createProgram(gl) {\n\t\t//\u9876\u70b9\u7740\u8272\u5668\u7a0b\u5e8f\n\t", "ole.info(\"webgltest createProgram isProgram: \" + isPr", "nst programObj = gl.createProgram();\n\n\n\t\tconst locati", "\n\t\tvar program = gl.createProgram();\n\t\tconsole.log(\"=", ") {\n\t\tvar program = createProgramExternal(gl, vshader", "nst programObj = gl.createProgram();\n\t\tconsole.log(\"t", "ole.info(\"webgltest createProgram isProgram1: \" + isP", "m\n\t * @tc.desc Test createProgram.\n\t */\n\tit('webgl_te"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "createRenderbuffer", "api_method_all": "createRenderbuffer(): WebGLRenderbuffer | null;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 193, "since": 7, "api_used": "\u662f", "lines": ["r renderbuffer = gl.createRenderbuffer();\n\n\t\t//\u4e0d bindRende", "erbufferObject = gl.createRenderbuffer();\n\t\tconst isFrameb", "ole.info(\"webgltest createRenderbuffer bindRenderbuffer is", "r);\n\t\tconsole.info(\"createRenderbuffer --> isRenderbuffer0", "info(\n\t\t\t\"webgltest createRenderbuffer bindRenderbuffer  d", "r);\n\t\tconsole.info(\"createRenderbuffer --> bindRenderbuffe", "r renderbuffer = gl.createRenderbuffer();\n\t\tconst isrender", "t renderBuffer = gl.createRenderbuffer();\n\t\tgl.bindRenderb", "r renderbuffer = gl.createRenderbuffer();\n\t\tgl.bindRenderb", "r\n\t * @tc.desc Test createRenderbuffer.\n\t */\n\tit('webgl_te", "r);\n\t\tconsole.info(\"createRenderbuffer --> isRenderbuffer:", "t renderbuffer = gl.createRenderbuffer();\n\t\tgl.bindRenderb", "@tc.name webgl_test_createRenderbuffer_1\n\t * @tc.desc Test", "nfo(\"webgltest into createRenderbuffer\");\n\n\t\tconst renderb", "\t\tconsole.info(\n\t\t\t\"createRenderbuffer --> bindRenderbuffe", "e);\n\t\tconsole.info(\"createRenderbuffer --> isRenderbuffer:", "t);\n\t\tconsole.info(\"createRenderbuffer --> isRenderbuffer:", "r renderbuffer = gl.createRenderbuffer();\n\t\tgl.linkProgram", "t renderbuffer = gl.createRenderbuffer();\n\t\tconst isRender", " */\n\tit('webgl_test_createRenderbuffer', 0, async function", "t renderbuffer = gl.createRenderbuffer();\n\t\tgl.framebuffer", "r renderbuffer = gl.createRenderbuffer();\n\t\tconst isTextur", "@tc.name webgl_test_createRenderbuffer\n\t * @tc.desc Test c", "r renderbuffer = gl.createRenderbuffer();\n\t\tconst programE", " */\n\tit('webgl_test_createRenderbuffer_1', 0, async functi", "r renderbuffer = gl.createRenderbuffer();\n\t\tconst isShader", "t renderbuffer = gl.createRenderbuffer();\n\t\tconst uniforml", "1\n\t * @tc.desc Test createRenderbuffer.\n\t */\n\tit('webgl_te"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test15.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "createShader", "api_method_all": "createShader(type: GLenum): WebGLShader | null;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 375, "since": 7, "api_used": "\u662f", "lines": ["r\n\t * @tc.desc Test createShader.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_createShader\n\t * @tc.desc Test c", "t\n\t\tvar shader = gl.createShader(type);\n\t\tif (shader", "r vertexShader = gl.createShader(gl.VERTEX_SHADER);\n", "\n\n\t\tvar shader = gl.createShader(gl.VERTEX_SHADER);\n", "fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)", " */\n\tit('webgl_test_createShader', 0, async function", "nfo(\"webgltest into createShader\");\n\n\t\tconst shader ", "ole.info(\"webgltest createShader isShader: \" + isSha", "ole.info(\"webgltest createShader deleteShader isShad", "\t\tconst shader = gl.createShader(gl.VERTEX_SHADER);\n", "t vertexShader = gl.createShader(gl.VERTEX_SHADER);\n"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "createTexture", "api_method_all": "createTexture(): WebGLTexture | null;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 168, "since": 7, "api_used": "\u662f", "lines": [" */\n\tit('webgl_test_createTexture', 0, async function", "\n\t\tvar texture = gl.createTexture();\n\t\tconst uniforml", "6');\n\t\tvar tex = gl.createTexture();\n\t\tgl.bindTexture", "@tc.name webgl_test_createTexture_1\n\t * @tc.desc Test", "\tconst texture = gl.createTexture();\n\t\tgl.bindTexture", "\n\t\tvar texture = gl.createTexture();\n\t\tconst programE", "\n\t\tvar texture = gl.createTexture();\n\t\tconst isTextur", " */\n\tit('webgl_test_createTexture_1', 0, async functi", "nfo(\"webgltest into createTexture\");\n\n\t\tconst texture", "\n\t\tvar texture = gl.createTexture();\n\t\tgl.bindTexture", "\n\t\tvar texture = gl.createTexture();\n\n\t\tconst isTextu", "6');\n\t\tvar tex = gl.createTexture();\n\t\tgl.pixelStorei", "\n\t\tvar texture = gl.createTexture();\n\t\tconst isrender", "\tconst texture = gl.createTexture();\n\t\tgl.framebuffer", "ole.info(\"webgltest createTexture deleteTexture isTex", "1\n\t * @tc.desc Test createTexture.\n\t */\n\tit('webgl_te", "e\n\t * @tc.desc Test createTexture.\n\t */\n\tit('webgl_te", "ole.info(\"webgltest createTexture isTexture: \" + isTe", ");\n\t\tconst tex = gl.createTexture();\n\t\tgl.bindTexture", "e);\n\t\tconsole.info(\"createTexture --> isTexture: \" + ", "@tc.name webgl_test_createTexture\n\t * @tc.desc Test c", "\tconst texture = gl.createTexture();\n\t\tconst isTextur", "e);\n\t\tconsole.info(\"createTexture --> bindTexture -->", "\n\t\tvar texture = gl.createTexture();\n\t\tgl2.framebuffe"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test04.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "cullFace", "api_method_all": "cullFace(mode: GLenum): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 64, "since": 7, "api_used": "\u662f", "lines": ["nfo(\"webgltest into cullFace\");\n\n\t\tgl.enable(gl.", "gl.CULL_FACE);\n\t\tgl.cullFace(gl.BACK);\n\t\tgl.fron", "3\n\t * @tc.desc Test cullFace.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_cullFace_2', 0, async functi", "arameter);\n\t\texpect(cullFaceparameter).assertEqu", "gl.CULL_FACE);\n\t\tgl.cullFace(gl.FRONT_AND_BACK);", "e\n\t * @tc.desc Test cullFace.\n\t */\n\tit('webgl_te", "gl.CULL_FACE);\n\t\tgl.cullFace(gl.FRONT);\n\t\t// \u9700\u8981 ", "gl.CULL_FACE);\n\t\tgl.cullFace(gl.BACK);\n\t\t// \u9700\u8981 C", "@tc.name webgl_test_cullFace\n\t * @tc.desc Test c", "@tc.name webgl_test_cullFace_2\n\t * @tc.desc Test", "@tc.name webgl_test_cullFace_3\n\t * @tc.desc Test", "tringify(gl));\n\t\tgl.cullFace(gl.BACK);\n\t\tgl.fron", "2\n\t * @tc.desc Test cullFace.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_cullFace_3', 0, async functi", "DE)\n\t\tconsole.info(\"cullFace --> getParameter: \"", "\u67e5\u5f53\u524d\u591a\u8fb9\u5f62\u5254\u9664\u6a21\u5f0f\u3002\n\t\tconst cullFaceparameter = gl.getPa", " */\n\tit('webgl_test_cullFace', 0, async function", "gl.CULL_FACE);\n\t\tgl.cullFace(gl.FRONT);\n\t\tgl.fro", "> getParameter: \" + cullFaceparameter);\n\t\texpect"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "deleteBuffer", "api_method_all": "deleteBuffer(buffer: WebGLBuffer | null): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["tEqual(true);\n\n\t\tgl.deleteBuffer(buffer);\n\t\tconst is", " */\n\tit('webgl_test_deleteBuffer_2', 0, async functi", "@tc.name webgl_test_deleteBuffer\n\t * @tc.desc Test d", " */\n\tit('webgl_test_deleteBuffer', 0, async function", "r\n\t * @tc.desc Test deleteBuffer.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_deleteBuffer_2\n\t * @tc.desc Test", "2\n\t * @tc.desc Test deleteBuffer.\n\t */\n\tit('webgl_te", "nfo(\"webgltest into deleteBuffer\");\n\n\t\tvar buffer = ", "teBuffer bindBuffer deleteBuffer isBuffer2: \" + isBu", "Equal(false);\n\n\t\tgl.deleteBuffer(buffer);\n\t\tconst is"], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "deleteFramebuffer", "api_method_all": "deleteFramebuffer(framebuffer: WebGLFramebuffer | null): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["tEqual(true);\n\n\t\tgl.deleteFramebuffer();\n\n\t\tconst isFrame", "framebuffer);\n\n\t\tgl.deleteFramebuffer(framebuffer);\n\n\t\tco", "bindFramebuffer --> deleteFramebuffer --> checkFrameBuffe", " */\n\tit('webgl_test_deleteFramebuffer', 0, async function", "@tc.name webgl_test_deleteFramebuffer2\n\t * @tc.desc Test ", "nfo(\"webgltest into deleteFramebuffer\");\n\n\t\tvar framebuff", "2\n\t * @tc.desc Test deleteFramebuffer.\n\t */\n\tit('webgl_te", "tEqual(true);\n\n\t\tgl.deleteFramebuffer(framebuffer);\n\n\t\tco", "@tc.name webgl_test_deleteFramebuffer\n\t * @tc.desc Test d", " */\n\tit('webgl_test_deleteFramebuffer2', 0, async functio", "r\n\t * @tc.desc Test deleteFramebuffer.\n\t */\n\tit('webgl_te"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "deleteProgram", "api_method_all": "deleteProgram(program: WebGLProgram | null): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 39, "since": 7, "api_used": "\u662f", "lines": [" */\n\tit('webgl_test_deleteProgram', 0, async function", "nfo(\"webgltest into deleteProgram\");\n\n\t\tconst program", "2\n\t * @tc.desc Test deleteProgram.\n\t */\n\tit('webgl_te", "m\n\t * @tc.desc Test deleteProgram.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_deleteProgram_2\n\t * @tc.desc Test", "eateProgram();\n\t\tgl.deleteProgram(program);\n\t\tconst d", "ateProgram();\n\n\t\tgl.deleteProgram(program);\n\t\tconst i", ": ' + error);\n\t\t\tgl.deleteProgram(program);\n\t\t\tgl.del", "tEqual(true);\n\n\t\tgl.deleteProgram(program);\n\t\tconst i", "@tc.name webgl_test_deleteProgram\n\t * @tc.desc Test d", "eateProgram();\n\t\tgl.deleteProgram(program);\n\t\tgl.link", " */\n\tit('webgl_test_deleteProgram_2', 0, async functi"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "deleteRenderbuffer", "api_method_all": "deleteRenderbuffer(renderbuffer: WebGLRenderbuffer | null): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["tEqual(true);\n\n\t\tgl.deleteRenderbuffer(renderbuffer);\n\n\t\tc", "nfo(\"webgltest into deleteRenderbuffer\");\n\n\t\tconst renderb", "tEqual(true);\n\n\t\tgl.deleteRenderbuffer();\n\n\t\tconst isRende", "r bindRenderbuffer  deleteRenderbuffer isRenderbuffer2: \" ", " */\n\tit('webgl_test_deleteRenderbuffer', 0, async function", "2\n\t * @tc.desc Test deleteRenderbuffer.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_deleteRenderbuffer\n\t * @tc.desc Test d", "@tc.name webgl_test_deleteRenderbuffer2\n\t * @tc.desc Test ", " */\n\tit('webgl_test_deleteRenderbuffer2', 0, async functio", "r\n\t * @tc.desc Test deleteRenderbuffer.\n\t */\n\tit('webgl_te"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "deleteShader", "api_method_all": "deleteShader(shader: WebGLShader | null): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 82, "since": 7, "api_used": "\u662f", "lines": ["agmentShader);\n\t\tgl.deleteShader(vertexShader);\n\t\tgl", " */\n\tit('webgl_test_deleteShader_2', 0, async functi", " */\n\tit('webgl_test_deleteShader', 0, async function", ": ' + error);\n\t\t\tgl.deleteShader(shader);\n\t\t\treturn ", "tEqual(true);\n\n\t\tgl.deleteShader(shader);\n\n\t\tconst i", "nfo(\"webgltest into deleteShader\");\n\n\t\tvar shader = ", "gltest createShader deleteShader isShader2: \" + isSh", "RTEX_SHADER);\n\n\t\tgl.deleteShader(shader);\n\n\t\tconst i", "gmentShader\");\n\t\tgl.deleteShader(vertexShader);\n\t\tgl", "2\n\t * @tc.desc Test deleteShader.\n\t */\n\tit('webgl_te", "ram(program);\n\t\t\tgl.deleteShader(fragmentShader);\n\t\t", "gmentShader);\n\t\t\tgl.deleteShader(vertexShader);\n\t\t\tr", "@tc.name webgl_test_deleteShader_2\n\t * @tc.desc Test", "r\n\t * @tc.desc Test deleteShader.\n\t */\n\tit('webgl_te", "ER);\n\t\t//        gl.deleteShader(vertexShader);\n\t\tco", "GMENT_SHADER);\n\t\tgl.deleteShader(vertexShader);\n\t\tco", "vertexShader);\n\t\tgl.deleteShader(fragmentShader);\n\n\t", "@tc.name webgl_test_deleteShader\n\t * @tc.desc Test d"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "deleteTexture", "api_method_all": "deleteTexture(texture: WebGLTexture | null): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["tEqual(true);\n\n\t\tgl.deleteTexture(texture);\n\n\t\tconst ", "e\n\t * @tc.desc Test deleteTexture.\n\t */\n\tit('webgl_te", "ltest createTexture deleteTexture isTexture2: \" + isT", " */\n\tit('webgl_test_deleteTexture_2', 0, async functi", "Equal(false);\n\n\t\tgl.deleteTexture(texture);\n\n\t\tconst ", " */\n\tit('webgl_test_deleteTexture', 0, async function", "2\n\t * @tc.desc Test deleteTexture.\n\t */\n\tit('webgl_te", "nfo(\"webgltest into deleteTexture\");\n\n\t\tvar texture =", "@tc.name webgl_test_deleteTexture_2\n\t * @tc.desc Test", "@tc.name webgl_test_deleteTexture\n\t * @tc.desc Test d"], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "depthFunc", "api_method_all": "depthFunc(func: GLenum): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 96, "since": 7, "api_used": "\u662f", "lines": [" */\n\tit('webgl_test_depthFunc', 0, async function", "6\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_depthFunc_4\n\t * @tc.desc Test", " */\n\tit('webgl_test_depthFunc_8', 0, async functi", "@tc.name webgl_test_depthFunc_2\n\t * @tc.desc Test", "7\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webgl_te", "8\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webgl_te", "2\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webgl_te", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.LESS);\n\t\t// \u8981\u68c0\u67e5\u5f53", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.GEQUAL);\n\t\t// \u8981\u68c0", " */\n\tit('webgl_test_depthFunc_7', 0, async functi", " */\n\tit('webgl_test_depthFunc_3', 0, async functi", "C);\n\t\tconsole.info(\"depthFunc --> getParameter: \"", "@tc.name webgl_test_depthFunc_8\n\t * @tc.desc Test", "c\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_depthFunc_2', 0, async functi", " */\n\tit('webgl_test_depthFunc_5', 0, async functi", "nfo(\"webgltest into depthFunc\");\n\n\t\tgl.enable(gl.", "3\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_depthFunc_7\n\t * @tc.desc Test", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.ALWAYS);\n\t\t// \u8981\u68c0", "4\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_depthFunc_6', 0, async functi", " */\n\tit('webgl_test_depthFunc_4', 0, async functi", "@tc.name webgl_test_depthFunc_6\n\t * @tc.desc Test", "5\n\t * @tc.desc Test depthFunc.\n\t */\n\tit('webgl_te", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.LEQUAL);\n\t\t// \u8981\u68c0", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.EQUAL);\n\t\t// \u8981\u68c0\u67e5", "@tc.name webgl_test_depthFunc_5\n\t * @tc.desc Test", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.GREATER);\n\t\t// \u8981", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.NEVER);\n\t\t// \u8981\u68c0\u67e5", "@tc.name webgl_test_depthFunc\n\t * @tc.desc Test d", "@tc.name webgl_test_depthFunc_3\n\t * @tc.desc Test", "l.DEPTH_TEST);\n\t\tgl.depthFunc(gl.NOTEQUAL);\n\t\t// "], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "depthMask", "api_method_all": "depthMask(flag: GLboolean): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 46, "since": 7, "api_used": "\u662f", "lines": ["2\n\t * @tc.desc Test depthMask.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_depthMask', 0, async function", " depthMask\");\n\n\t\tgl.depthMask(false);\n\t\t// \u8981\u83b7\u5f97\u5f53\u524d\u7684", "k\n\t * @tc.desc Test depthMask.\n\t */\n\tit('webgl_te", " depthMask\");\n\n\t\tgl.depthMask(true);\n\t\t// \u8981\u83b7\u5f97\u5f53\u524d\u7684\u6df1", "@tc.name webgl_test_depthMask\n\t * @tc.desc Test d", "depthMaskValue: \" + depthMaskValue);\n\t\texpect(dep", " */\n\tit('webgl_test_depthMask_2', 0, async functi", "tringify(gl));\n\t\tgl.depthMask(false);\n\t\t// \u8981\u83b7\u5f97\u5f53\u524d\u7684", "lse\n\t\tconsole.info(\"depthMaskValue: \" + depthMask", "askValue);\n\t\texpect(depthMaskValue).assertEqual(f", "askValue);\n\t\texpect(depthMaskValue).assertEqual(t", "ole.info(\"webgltest depthMaskValue: \" + depthMask", "@tc.name webgl_test_depthMask_2\n\t * @tc.desc Test", "nfo(\"webgltest into depthMask\");\n\n\t\tgl.depthMask(", "\u56de  Boolean.\n\t\tconst depthMaskValue = gl.getParame"], "files": ["webGL.test.js", "WebGL.test03.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "depthRange", "api_method_all": "depthRange(zNear: GLclampf, zFar: GLclampf): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 36, "since": 7, "api_used": "\u662f", "lines": ["depthRange\");\n\n\t\tgl.depthRange(0.2, 0.6);\n\t\t// \u8981\u68c0\u67e5", "est depthRange: \" + depthRangeValue);\n\t\texpect(dep", " */\n\tit('webgl_test_depthRange_2', 0, async functi", "e\n\t * @tc.desc Test depthRange.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_depthRange', 0, async function", "ole.info(\"webgltest depthRange: \" + depthRangeValu", "@tc.name webgl_test_depthRange_2\n\t * @tc.desc Test", "depthRange\");\n\n\t\tgl.depthRange(0.8, 1.0);\n\t\t// \u8981\u68c0\u67e5", "@tc.name webgl_test_depthRange\n\t * @tc.desc Test d", "nfo(\"webgltest into depthRange\");\n\n\t\tgl.depthRange", "2\n\t * @tc.desc Test depthRange.\n\t */\n\tit('webgl_te", "loat32Array\n\t\tconst depthRangeValue = gl.getParame", "ngeValue);\n\t\texpect(depthRangeValue.toString()).as"], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "detachShader", "api_method_all": "detachShader(program: WebGLProgram, shader: WebGLShader): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 18, "since": 7, "api_used": "\u662f", "lines": ["ebGLProgram \u5bf9\u8c61\n\t\tgl.detachShader(program, vertexShad", "ebGLProgram \u5bf9\u8c61\n\t\tgl.detachShader(program, \"vertexSha", "@tc.name webgl_test_detachShader2\n\t * @tc.desc Test ", "\u524d\u9644\u52a0\u7684\u7247\u6bb5\u6216\u8005\u9876\u70b9\u7740\u8272\u5668;\n\t\tgl.detachShader(program, \"fragmentS", "\u524d\u9644\u52a0\u7684\u7247\u6bb5\u6216\u8005\u9876\u70b9\u7740\u8272\u5668;\n\t\tgl.detachShader(program, fragmentSh", " */\n\tit('webgl_test_detachShader2', 0, async functio", "@tc.name webgl_test_detachShader\n\t * @tc.desc Test d", " */\n\tit('webgl_test_detachShader', 0, async function", "nfo(\"webgltest into detachShader\");\n\n\t\t//\u9876\u70b9\u7740\u8272\u5668\n\t\tvar", "r\n\t * @tc.desc Test detachShader.\n\t */\n\tit('webgl_te", "2\n\t * @tc.desc Test detachShader.\n\t */\n\tit('webgl_te"], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "disable", "api_method_all": "disable(cap: GLenum): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 174, "since": 7, "api_used": "\u662f", "lines": ["@tc.name webgl_test_disable\n\t * @tc.desc Test d", " */\n\tit('webgl_test_disable_2', 0, async functi", "tEqual(true);\n\n\t\tgl.disable(gl.BLEND);\n\t\t// \u8981\u68c0\u67e5", " */\n\tit('webgl_test_disableVertexAttribArray2',", "2\n\t * @tc.desc Test disableVertexAttribArray.\n\t", "y\n\t * @tc.desc Test disableVertexAttribArray.\n\t", "tringify(gl));\n\t\tgl.disable(gl.STENCIL_TEST);\n\t", " */\n\tit('webgl_test_disableVertexAttribArray', ", "ole.info(\"webgltest disable isEnabled2: \" + isE", " */\n\tit('webgl_test_disable', 0, async function", "3\n\t * @tc.desc Test disable.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_disable_22\n\t * @tc.desc Tes", "nfo(\"webgltest into disableVertexAttribArray\");", "t.disable()\u65b9\u6cd5\uff1a\n\t\tgl.disable(gl.STENCIL_TEST);\n\t", "@tc.name webgl_test_disable_23\n\t * @tc.desc Tes", "aceParameter);\n\t\tgl.disable(gl.CULL_FACE);\n\t\tex", "AttribArray\");\n\t\tgl.disableVertexAttribArray(\"e", "AttribArray\");\n\t\tgl.disableVertexAttribArray(0)", "e\n\t * @tc.desc Test disable.\n\t */\n\tit('webgl_te", "nfo(\"webgltest into disable\");\n\n\t\tgl.disable(gl", "ole.info(\"webgltest disable isEnabled: \" + isEn", "to disable\");\n\n\t\tgl.disable(gl.DITHER);\n\t\t// \u8981\u68c0", "@tc.name webgl_test_disable_24\n\t * @tc.desc Tes", "sor test again\n\t\tgl.disable(gl.SCISSOR_TEST);\n\n", "bGLRenderingContext.disable()\u65b9\u6cd5\uff1a\n\t\tgl.disable(g", " */\n\tit('webgl_test_disable_22', 0, async funct", " */\n\tit('webgl_test_disable_23', 0, async funct", "nfo(\"webgltest into disable\");\n\t\tgl.enable(gl.B", "tEqual(true);\n\n\t\tgl.disable(gl.DITHER);\n\t\t// \u8981\u68c0", "@tc.name webgl_test_disableVertexAttribArray2\n\t", "2\n\t * @tc.desc Test disable.\n\t */\n\tit('webgl_te", "nfo(\"webgltest into disable\");\n\t\tgl.enable(gl.D", "ole.info(\"webgltest disableVertexAttribArray ge", "@tc.name webgl_test_disableVertexAttribArray\n\t ", "@tc.name webgl_test_disable_2\n\t * @tc.desc Test"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "disableVertexAttribArray", "api_method_all": "disableVertexAttribArray(index: GLuint): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 30, "since": 7, "api_used": "\u662f", "lines": ["y\n\t * @tc.desc Test disableVertexAttribArray.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_disableVertexAttribArray', 0, async function", "AttribArray\");\n\t\tgl.disableVertexAttribArray(0);\n\t\tlet errorCode", "ole.info(\"webgltest disableVertexAttribArray getError: \" + error", "AttribArray\");\n\t\tgl.disableVertexAttribArray(-1);\n\t\tlet errorCod", "@tc.name webgl_test_disableVertexAttribArray\n\t * @tc.desc Test d", "@tc.name webgl_test_disableVertexAttribArray2\n\t * @tc.desc Test ", " */\n\tit('webgl_test_disableVertexAttribArray_2', 0, async functi", "2\n\t * @tc.desc Test disableVertexAttribArray.\n\t */\n\tit('webgl_te", "AttribArray\");\n\t\tgl.disableVertexAttribArray(\"error\");\n\t\tlet err", " */\n\tit('webgl_test_disableVertexAttribArray2', 0, async functio", "@tc.name webgl_test_disableVertexAttribArray_2\n\t * @tc.desc Test", "nfo(\"webgltest into disableVertexAttribArray\");\n\t\tgl.disableVert"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "drawArrays", "api_method_all": "drawArrays(mode: GLenum, first: GLint, count: GLsizei): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 142, "since": 7, "api_used": "\u662f", "lines": [" */\n\tit('webgl_test_drawArrays4', 0, async functio", "4\n\t * @tc.desc Test drawArrays.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_drawArrays', 0, async function", "@tc.name webgl_test_drawArraysInstancedError\n\t * @", "drawArrays\");\n\n\t\tgl.drawArrays(gl.LINE_LOOP, 0, 8)", "s\n\t * @tc.desc Test drawArrays.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_drawArrays5\n\t * @tc.desc Test ", "@tc.name webgl_test_drawArraysInstanced\n\t * @tc.de", "3\n\t * @tc.desc Test drawArrays.\n\t */\n\tit('webgl_te", ");\n\n\t\tconst a = gl2.drawArraysInstanced(gl.POINTS,", "@tc.name webgl_test_drawArrays\n\t * @tc.desc Test d", "drawArrays\");\n\n\t\tgl.drawArrays(gl.POINTS, 0, -8);\n", "ole.info(\"webgltest drawArrays getError: \" + error", "r\n\t * @tc.desc Test drawArraysInstanced.\n\t */\n\tit(", "@tc.name webgl_test_drawArrays2\n\t * @tc.desc Test ", "nfo(\"webgltest into drawArraysInstanced\");\n\n\t\tcons", "@tc.name webgl_test_drawArrays3\n\t * @tc.desc Test ", "drawArrays\");\n\n\t\tgl.drawArrays(gl.LINE_STRIP, 0, 8", " */\n\tit('webgl_test_drawArraysInstanced', 0, async", "alse, 20, 0);\n\n\t\tgl.drawArrays(gl.TRIANGLES, 0, 8)", "@tc.name webgl_test_drawArrays4\n\t * @tc.desc Test ", "false, 0, 0);\n\n\t\tgl.drawArrays(gl.TRIANGLES, 0, 3)", "drawArrays\");\n\n\t\tgl.drawArrays(gl.LINES, 0, 8);\n\t\t", "nfo(\"webgltest into drawArrays\");\n\n\t\tgl.drawArrays", "2\n\t * @tc.desc Test drawArrays.\n\t */\n\tit('webgl_te", " false, 0, 0);\n\t\tgl.drawArrays(gl.TRIANGLES, 0, 3)", " */\n\tit('webgl_test_drawArrays3', 0, async functio", "5\n\t * @tc.desc Test drawArrays.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_drawArraysInstancedError', 0, ", "d\n\t * @tc.desc Test drawArraysInstanced.\n\t */\n\tit(", "gl.TRIANGLES);\n\t\tgl.drawArrays(gl.TRIANGLES, 0, 3)", "drawArrays\");\n\n\t\tgl.drawArrays(gl.POINTS, 0, 8);\n\t", "@tc.name webgl_test_drawArrays_2\n\t * @tc.desc Test", " */\n\tit('webgl_test_drawArrays2', 0, async functio", " */\n\tit('webgl_test_drawArrays_2', 0, async functi", "ole.info(\"webgltest drawArraysInstanced getError: "], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test01.js", "WebGL.test15.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "drawElements", "api_method_all": "drawElements(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 124, "since": 7, "api_used": "\u662f", "lines": ["@tc.name webgl_test_drawElementsInstanced\n\t * @tc.de", "@tc.name webgl_test_drawElements_3\n\t * @tc.desc Test", "nfo(\"webgltest into drawElements\");\n\n\t\tgl.drawElemen", " */\n\tit('webgl_test_drawElements_4', 0, async functi", "nfo(\"webgltest into drawElementsInstanced\");\n\n\t\tcons", " */\n\tit('webgl_test_drawElements24', 0, async functi", " */\n\tit('webgl_test_drawElements_2', 0, async functi", "r\n\t * @tc.desc Test drawElementsInstanced.\n\t */\n\tit(", "@tc.name webgl_test_drawElements\n\t * @tc.desc Test d", "ole.info(\"webgltest drawElementsInstanced getError: ", "nfo(\"webgltest into drawElements\");\n\n\n\t\t// \u521d\u59cb\u5316\u7740\u8272\u5668\n\t\t", " */\n\tit('webgl_test_drawElementsInstancedError', 0, ", "awElements\");\n\n\t\tgl.drawElements(gl.LINE_STRIP, 8, g", "ndices.length)\n\t\tgl.drawElements(gl.TRIANGLES, indic", "3\n\t * @tc.desc Test drawElements.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_drawElements23', 0, async functi", " */\n\tit('webgl_test_drawElements_3', 0, async functi", " */\n\tit('webgl_test_drawElements22', 0, async functi", " */\n\tit('webgl_test_drawElementsInstanced', 0, async", "2\n\t * @tc.desc Test drawElements.\n\t */\n\tit('webgl_te", ");\n\n\t\tconst a = gl2.drawElementsInstanced(gl.POINTS,", "awElements\");\n\n\t\tgl.drawElements(gl.POINTS, 8, gl.UN", "@tc.name webgl_test_drawElementsInstancedError\n\t * @", "@tc.name webgl_test_drawElements24\n\t * @tc.desc Test", " */\n\tit('webgl_test_drawElements', 0, async function", "4\n\t * @tc.desc Test drawElements.\n\t */\n\tit('webgl_te", "d\n\t * @tc.desc Test drawElementsInstanced.\n\t */\n\tit(", "@tc.name webgl_test_drawElements22\n\t * @tc.desc Test", "s\n\t * @tc.desc Test drawElements.\n\t */\n\tit('webgl_te", "awElements\");\n\n\t\tgl.drawElements(1, 2, 3, 4);\n\n\t\tlet", "ole.info(\"webgltest drawElements getError: \" + error", "@tc.name webgl_test_drawElements_4\n\t * @tc.desc Test", "@tc.name webgl_test_drawElements_2\n\t * @tc.desc Test", "@tc.name webgl_test_drawElements23\n\t * @tc.desc Test"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test01.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "enable", "api_method_all": "enable(cap: GLenum): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 314, "since": 7, "api_used": "\u662f", "lines": ["e\n\t * @tc.desc Test enable.\n\t */\n\tit('webgl_te", "tringify(gl));\n\t\tgl.enable(gl.STENCIL_TEST);\n\t", "n scissor test\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t", "start ...66');\n\t\tgl.enable(gl.POLYGON_OFFSET_F", "@tc.name webgl_test_enableVertexAttribArray\n\t ", "n\u53d8\u91cf\u4e0e\u5206\u914d\u7ed9\u5b83\u7684\u7f13\u51b2\u533a\u5bf9\u8c61\n\t\tgl.enableVertexAttribArray(aP", "nto enable\");\n\n\t\tgl.enable(gl.DITHER);\n\n\t\tcons", "a_Position\");\n\n\t\tgl.enableVertexAttribArray(aV", "ringify(gl));\n\n\t\tgl.enable(gl.STENCIL_TEST);\n\t", "ole.info(\"webgltest enableVertexAttribArray ge", "nfo(\"webgltest into enable\");\n\n\t\tgl.enable(gl.", "y\n\t * @tc.desc Test enableVertexAttribArray.\n\t", "nto disable\");\n\t\tgl.enable(gl.DITHER);\n\t\tconst", "a_position\");\n\n\t\tgl.enableVertexAttribArray(aV", " */\n\tit('webgl_test_enable_2', 0, async functi", "@tc.name webgl_test_enable\n\t * @tc.desc Test e", "2\n\t * @tc.desc Test enable.\n\t */\n\tit('webgl_te", "o cullFace\");\n\n\t\tgl.enable(gl.CULL_FACE);\n\t\tgl", "bGLRenderingContext.enable()\u65b9\u6cd5\u548cWebGLRenderingC", "ncSeparate\");\n\n\t\tgl.enable(gl.BLEND);\n\n\t\tgl.bl", " depthFunc\");\n\n\t\tgl.enable(gl.DEPTH_TEST);\n\t\tg", "@tc.name webgl_test_enable_2\n\t * @tc.desc Test", "tringify(gl));\n\t\tgl.enable(gl.SAMPLE_COVERAGE)", " */\n\tit('webgl_test_enable', 0, async function", "tringify(gl));\n\t\tgl.enable(gl.CULL_FACE);\n\t\tgl", "or(); // 0 (0)\n\t\tgl.enable(gl.DITHER);\n\t\tconst", "ole.info(\"webgltest enable isEnabled: \" + isEn", " blendFunc\");\n\n\t\tgl.enable(gl.BLEND);\n\n\t\tgl.bl", "nfo(\"webgltest into enableVertexAttribArray\");", " */\n\tit('webgl_test_enableVertexAttribArray', "], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "enableVertexAttribArray", "api_method_all": "enableVertexAttribArray(index: GLuint): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 52, "since": 7, "api_used": "\u662f", "lines": ["2\n\t * @tc.desc Test enableVertexAttribArray.\n\t */\n\tit('webgl_te", "a_Position\");\n\n\t\tgl.enableVertexAttribArray(aVertexPosition);\n\t", "ole.info(\"webgltest enableVertexAttribArray getError: \" + error", "a_position\");\n\n\t\tgl.enableVertexAttribArray(aVertexPosition);\n\t", " */\n\tit('webgl_test_enableVertexAttribArray2', 0, async functio", "@tc.name webgl_test_enableVertexAttribArray\n\t * @tc.desc Test e", " */\n\tit('webgl_test_enableVertexAttribArray', 0, async function", "y\n\t * @tc.desc Test enableVertexAttribArray.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_enableVertexAttribArray2\n\t * @tc.desc Test ", "nfo(\"webgltest into enableVertexAttribArray\");\n\t\t\t//\u9876\u70b9\u7740\u8272\u5668\u7a0b\u5e8f\n\t\t\t", "n\u53d8\u91cf\u4e0e\u5206\u914d\u7ed9\u5b83\u7684\u7f13\u51b2\u533a\u5bf9\u8c61\n\t\tgl.enableVertexAttribArray(aPosition);\n\n\t\tretu", "nfo(\"webgltest into enableVertexAttribArray\");\n\t\t//\u9876\u70b9\u7740\u8272\u5668\u7a0b\u5e8f\n\t\tva"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "finish", "api_method_all": "finish(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 40, "since": 7, "api_used": "\u662f", "lines": [" */\n\tit('webgl_test_finish', 0, async function", " */\n\tit('webgl_test_finish2', 0, async functio", "2\n\t * @tc.desc Test finish.\n\t */\n\tit('webgl_te", "bgltest initContext finish');\n\t}\n\n\tfunction de", "@tc.name webgl_test_finish2\n\t * @tc.desc Test ", "nfo(\"webgltest into finish\");\n\t\tgl.finish();\n\t", "h\n\t * @tc.desc Test finish.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_finish\n\t * @tc.desc Test f", "ole.info(\"webgltest finish getError: \" + error", "into finish\");\n\t\tgl.finish();\n\t\tlet errorCode "], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "flush", "api_method_all": "flush(): void;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["nfo(\"webgltest into flush\");\n\t\tgl.flush(\"erro", " */\n\tit('webgl_test_flush', 0, async function", "@tc.name webgl_test_flush\n\t * @tc.desc Test f", " */\n\tit('webgl_test_flush2', 0, async functio", "nfo(\"webgltest into flush\");\n\t\tgl.flush();\n\t\t", "ole.info(\"webgltest flush getError: \" + error", " into flush\");\n\t\tgl.flush(\"error\");\n\t\tlet err", "@tc.name webgl_test_flush2\n\t * @tc.desc Test ", "h\n\t * @tc.desc Test flush.\n\t */\n\tit('webgl_te", " into flush\");\n\t\tgl.flush();\n\t\tlet errorCode ", "2\n\t * @tc.desc Test flush.\n\t */\n\tit('webgl_te"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "framebufferRenderbuffer", "api_method_all": "framebufferRenderbuffer(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: WebGLRenderbuffer | null): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 497, "since": 7, "api_used": "\u662f", "lines": [" */\n\tit('webgl_test_framebufferRenderbuffer24', 0, async functi", "@tc.name webgl_test_framebufferRenderbuffer_2\n\t * @tc.desc Test", " */\n\tit('webgl_test_framebufferRenderbuffer22', 0, async functi", "@tc.name webgl_test_framebufferRenderbuffer23\n\t * @tc.desc Test", "@tc.name webgl_test_framebufferRenderbuffer24\n\t * @tc.desc Test", " */\n\tit('webgl_test_framebufferRenderbuffer2', 0, async functio", " */\n\tit('webgl_test_framebufferRenderbuffer', 0, async function", "1\n\t * @tc.desc Test framebufferRenderbuffer.\n\t */\n\tit('webgl_te", "enderbuffer();\n\t\tgl.framebufferRenderbuffer(gl.READ_FRAMEBUFFER", " */\n\tit('webgl_test_framebufferRenderbuffer1', 0, async functio", "nfo(\"webgltest into framebufferRenderbuffer\");\n\n\t\tconst renderb", "4\n\t * @tc.desc Test framebufferRenderbuffer.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_framebufferRenderbuffer\n\t * @tc.desc Test f", "5\n\t * @tc.desc Test framebufferRenderbuffer.\n\t */\n\tit('webgl_te", "3\n\t * @tc.desc Test framebufferRenderbuffer.\n\t */\n\tit('webgl_te", "2\n\t * @tc.desc Test framebufferRenderbuffer.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_framebufferRenderbuffer23', 0, async functi", "ole.info(\"webgltest framebufferRenderbuffer getError: \" + error", "@tc.name webgl_test_framebufferRenderbuffer22\n\t * @tc.desc Test", " */\n\tit('webgl_test_framebufferRenderbuffer25', 0, async functi", "renderBuffer);\n\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.", "@tc.name webgl_test_framebufferRenderbuffer25\n\t * @tc.desc Test", "@tc.name webgl_test_framebufferRenderbuffer1\n\t * @tc.desc Test ", "@tc.name webgl_test_framebufferRenderbuffer2\n\t * @tc.desc Test ", "enderbuffer();\n\t\tgl.framebufferRenderbuffer(gl.DRAW_FRAMEBUFFER", " */\n\tit('webgl_test_framebufferRenderbuffer_2', 0, async functi", "r\n\t * @tc.desc Test framebufferRenderbuffer.\n\t */\n\tit('webgl_te"], "files": ["WebGL.test10.js", "WebGL.test12.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "framebufferTexture2D", "api_method_all": "framebufferTexture2D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: WebGLTexture | null, level: GLint): void;", "api_type": "", "api_args_count": 5, "api_level": 21, "api_used_count": 106, "since": 7, "api_used": "\u662f", "lines": ["@tc.name webgl_test_framebufferTexture2D25\n\t * @tc.desc Test", "2\n\t * @tc.desc Test framebufferTexture2D.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_framebufferTexture2D26\n\t * @tc.desc Test", "@tc.name webgl_test_framebufferTexture2D24\n\t * @tc.desc Test", "6\n\t * @tc.desc Test framebufferTexture2D.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_framebufferTexture2D\n\t * @tc.desc Test f", " */\n\tit('webgl_test_framebufferTexture2D_1', 0, async functi", " */\n\tit('webgl_test_framebufferTexture2D24', 0, async functi", " */\n\tit('webgl_test_framebufferTexture2D22', 0, async functi", "3\n\t * @tc.desc Test framebufferTexture2D.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_framebufferTexture2D', 0, async function", "ole.info(\"webgltest framebufferTexture2D getError: \" + error", " */\n\tit('webgl_test_framebufferTexture2D25', 0, async functi", "1\n\t * @tc.desc Test framebufferTexture2D.\n\t */\n\tit('webgl_te", " */\n\tit('webgl_test_framebufferTexture2D26', 0, async functi", "@tc.name webgl_test_framebufferTexture2D_1\n\t * @tc.desc Test", " */\n\tit('webgl_test_framebufferTexture2D23', 0, async functi", "5\n\t * @tc.desc Test framebufferTexture2D.\n\t */\n\tit('webgl_te", "nfo(\"webgltest into framebufferTexture2D\");\n\t\tconst texture ", "@tc.name webgl_test_framebufferTexture2D23\n\t * @tc.desc Test", "eateTexture();\n\t\tgl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER", "D\n\t * @tc.desc Test framebufferTexture2D.\n\t */\n\tit('webgl_te", "@tc.name webgl_test_framebufferTexture2D22\n\t * @tc.desc Test", "4\n\t * @tc.desc Test framebufferTexture2D.\n\t */\n\tit('webgl_te"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "frontFace", "api_method_all": "frontFace(mode: GLenum): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 88, "since": 7, "api_used": "\u662f", "lines": ["t\n\t * @tc.desc Test frontFace.\n\t */\n\tit('testUnif", "ace(gl.CW);\n\t\tconst frontFaceParameter = gl.getPa", "E);\n\t\tconsole.info('frontFace -> frontFaceParamet", "t\n\t * @tc.desc Test frontFace.\n\t */\n\tit('testFron", "ontFaceParameter' + frontFaceParameter);\n\t\tgl.dis", "r\n\t * @tc.desc Test frontFace.\n\t */\n\tit('testFron", "nsole.info('jsWebGL frontFace test start ...' + J", "ce(gl.CCW);\n\t\tconst frontFaceParameter = gl.getPa", "r\n\t * @tc.desc Test frontFace.\n\t */\n\tit('testUnif", "Face(gl.BACK);\n\t\tgl.frontFace(gl.CW);\n\t\tconst fro", ".info('frontFace -> frontFaceParameter' + frontFa", "ULL_FACE);\n\t\texpect(frontFaceParameter).assertEqu", "ace(gl.FRONT);\n\t\tgl.frontFace(gl.CW);\n\t\tconst fro", "2\n\t * @tc.desc Test frontFace.\n\t */\n\tit('testFron", "4\n\t * @tc.desc Test frontFace.\n\t */\n\tit('testTexI", "d\n\t * @tc.desc Test frontFace.\n\t */\n\tit('testFron", "ONT_AND_BACK);\n\t\tgl.frontFace(gl.CW);\n\t\tconst fro", "ONT_AND_BACK);\n\t\tgl.frontFace(gl.CCW);\n\t\tconst fr", "r\n\t * @tc.desc Test frontFace.\n\t */\n\tit('testGetF"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test06.js", "WebGL.test04.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "generateMipmap", "api_method_all": "generateMipmap(target: GLenum): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 32, "since": 7, "api_used": "\u662f", "lines": ["p\n\t * @tc.desc Test generateMipmap.\n\t */\n\tit('testGene", "nsole.info('jsWebGL generateMipmap test start ...' + J", ", gl.FASTEST);\n\t\tgl.generateMipmap(gl2.TEXTURE_2D);\n\t\t", "2\n\t * @tc.desc Test generateMipmap.\n\t */\n\tit('testGene", "r\n\t * @tc.desc Test generateMipmap.\n\t */\n\tit('testGene", "tringify(gl));\n\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t\tc", ", gl.FASTEST);\n\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t\tc", "tringify(gl));\n\t\tgl.generateMipmap(gl2.TEXTURE_CUBE_MA", "gl.DONT_CARE);\n\t\tgl.generateMipmap(gl2.TEXTURE_2D);\n\t\t", "();\n\t\tconsole.info('generateMipmap error ' + error);\n\t", "T, gl.NICEST);\n\t\tgl.generateMipmap(gl2.TEXTURE_2D);\n\t\t", "tringify(gl));\n\t\tgl.generateMipmap(gl2.TEXTURE_2D);\n\t\t"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getActiveAttrib", "api_method_all": "getActiveAttrib(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 13, "since": 7, "api_used": "\u662f", "lines": [";\n\t\tconst info = gl.getActiveAttrib(programObj, 0);\n\t\tc", "r\n\t * @tc.desc Test getActiveAttrib.\n\t */\n\tit('testGetA", "nsole.info('jsWebGL getActiveAttrib test start ...' + J", ";\n\t\tconst info = gl.getActiveAttrib();\n\t\texpect(info).a", ";\n\t\tconst info = gl.getActiveAttrib(programObj, 0);\n\t\ti", "b\n\t * @tc.desc Test getActiveAttrib.\n\t */\n\tit('testGetA"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test02.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getActiveUniform", "api_method_all": "getActiveUniform(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 116, "since": 7, "api_used": "\u662f", "lines": ["uniformStride = gl2.getActiveUniforms(programObj, unifor", "6\n\t * @tc.desc Test getActiveUniforms.\n\t */\n\tit('testGet", "m\n\t * @tc.desc Test getActiveUniform.\n\t */\n\tit('testGetA", "5\n\t * @tc.desc Test getActiveUniforms.\n\t */\n\tit('testGet", "1\n\t * @tc.desc Test getActiveUniformBlockParameter.\n\t */", "nst blockSize = gl2.getActiveUniformBlockParameter();\n\t\t", "iformBlockIndex\n\t * getActiveUniformBlockName\n\t *\n\t */\n\n", "S);\n\t\tconsole.info(\"getActiveUniformBlockParameter block", "e\n\t * @tc.desc Test getActiveUniformBlockName.\n\t */\n\tit(", "');\n\t\tconsole.info(\"getActiveUniformBlockName blockIndex", "nsole.info('jsWebGL getActiveUniform test start ...' + J", ";\n\t\tconst info = gl.getActiveUniform(programObj, 0);\n\t\tc", "nst blockName = gl2.getActiveUniformBlockName(program);\n", "uniformOffset = gl2.getActiveUniforms(programObj, unifor", "();\n\t\tconsole.info(\"getActiveUniformBlockParameter block", "ormBlockIndex = gl2.getActiveUniforms(programObj, unifor", "r\n\t * @tc.desc Test getActiveUniform.\n\t */\n\tit('testGetA", ";\n\t\tconst info = gl.getActiveUniform(program);\n\t\texpect(", "r\n\t * @tc.desc Test getActiveUniformBlockParameter.\n\t */", "2\n\t * @tc.desc Test getActiveUniforms.\n\t */\n\tit('testGet", "t uniformSize = gl2.getActiveUniforms(programObj, unifor", "nst blockSize = gl2.getActiveUniformBlockParameter(progr", "G);\n\t\tconsole.info(\"getActiveUniformBlockParameter block", "1\n\t * @tc.desc Test getActiveUniforms.\n\t */\n\tit('testGet", "r\n\t * @tc.desc Test getActiveUniformBlockName.\n\t */\n\tit(", "t uniformType = gl2.getActiveUniforms(programObj, unifor", "2\n\t * @tc.desc Test getActiveUniformBlockParameter.\n\t */", "7\n\t * @tc.desc Test getActiveUniforms.\n\t */\n\tit('testGet", "sole.info('jsWebGL2 getActiveUniformBlockName test start", "nst blockName = gl2.getActiveUniformBlockName(program, b", "s\n\t * @tc.desc Test getActiveUniforms.\n\t */\n\tit('testGet", "E);\n\t\tconsole.info(\"getActiveUniformBlockParameter block", "sole.info('jsWebGL2 getActiveUniformBlockParameter test ", "mMatrixStride = gl2.getActiveUniforms(programObj, unifor", "4\n\t * @tc.desc Test getActiveUniforms.\n\t */\n\tit('testGet", "3\n\t * @tc.desc Test getActiveUniformBlockParameter.\n\t */", "3\n\t * @tc.desc Test getActiveUniforms.\n\t */\n\tit('testGet"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test09.js", "WebGL.test06.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getAttachedShaders", "api_method_all": "getAttachedShaders(program: WebGLProgram): WebGLShader[] | null;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 16, "since": 7, "api_used": "\u662f", "lines": ["st shaderArray = gl.getAttachedShaders(programObj);\n\t\tcons", "s\n\t * @tc.desc Test getAttachedShaders.\n\t */\n\tit('testGetA", "r\n\t * @tc.desc Test getAttachedShaders.\n\t */\n\tit('testGetA", "();\n\t\tconsole.info('getAttachedShaders shaderArray' + shad", "nsole.info('jsWebGL getAttachedShaders test start ...' + J", "st shaderArray = gl.getAttachedShaders();\n\t\tconsole.info('", "t\")\n\t\tconsole.info('getAttachedShaders shaderArray' + shad"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test02.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getAttribLocation", "api_method_all": "getAttribLocation(program: WebGLProgram, name: string): GLint;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 112, "since": 7, "api_used": "\u662f", "lines": ["VertexPosition = gl.getAttribLocation(shaderProgram, \"a_p", "onsole.info(\"webgl# getAttribLocation getAttribLocation s", "# getAttribLocation getAttribLocation success:\" + JSON.st", "const locTexUV = gl.getAttribLocation(programObj, 'texUV'", "# getAttribLocation getAttribLocation success:\" + aPositi", "\n\t\tconst index = gl.getAttribLocation(program, 'webgl_Col", "\tvar aPosition = gl.getAttribLocation(gl.program, 'a_Posi", "nsole.info('jsWebGL getAttribLocation test start ...' + J", "VertexPosition = gl.getAttribLocation(programObj, \"a_Posi", "');\n\t\tconsole.info('getAttribLocation  index' + index);\n\t", "r\n\t * @tc.desc Test getAttribLocation.\n\t */\n\tit('testGetA", "st locPosition = gl.getAttribLocation(programObj, 'positi", "onst locNormal = gl.getAttribLocation(programObj, 'normal", "t\n\t * @tc.desc Test getAttribLocation.\n\t */\n\tit('testGetA"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getBufferParameter", "api_method_all": "getBufferParameter(target: GLenum, pname: GLenum): any;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 29, "since": 7, "api_used": "\u662f", "lines": ["nst bufferSize = gl.getBufferParameter(gl.ARRAY_BUFFER, gl", "st bufferUsage = gl.getBufferParameter(gl.ARRAY_BUFFER, gl", "t\n\t * @tc.desc Test getBufferParameter.\n\t */\n\tit('testGetB", "r\n\t * @tc.desc Test getBufferParameter.\n\t */\n\tit('testGetB", "nst bufferSize = gl.getBufferParameter(gl.ELEMENT_ARRAY_BU", "nsole.info('jsWebGL getBufferParameter test start ...' + J", "3\n\t * @tc.desc Test getBufferParameter.\n\t */\n\tit('testGetB", "d\n\t * @tc.desc Test getBufferParameter.\n\t */\n\tit('testGetB", "nst bufferSize = gl.getBufferParameter(gl.ARRAY_BUFFER);\n\t"], "files": ["webGL.test.js", "WebGL.test02.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getParameter", "api_method_all": "getParameter(pname: GLenum): any;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 1470, "since": 7, "api_used": "\u662f", "lines": ["EquationValue2 = gl.getParameter(gl.BLEND_EQUATION_A", "nSeparateValue = gl.getParameter(gl.BLEND_EQUATION_R", ".info(\"cullFace --> getParameter: \" + cullFaceparame", "arStencilValue = gl.getParameter(gl.STENCIL_CLEAR_VA", "nfo(\"blendColor --> getParameter: \" + blendColorValu", "endFuncSeparate --> getParameter: \" + blendFuncSepar", "depthParameter = gl.getParameter(gl.DEPTH_FUNC);\n\t\tc", "st clearStencil --> getParameter: \" + clearStencilVa", "colorMaskValue = gl.getParameter(gl.COLOR_WRITEMASK)", "learDepthValue = gl.getParameter(gl.DEPTH_CLEAR_VALU", "(\"blendEquation --> getParameter: \" + blendEquationV", "ltest colorMask --> getParameter: \" + colorMaskValue", "indRenderbuffer --> getParameter --> isRenderbuffer:", "info(\"depthFunc --> getParameter: \" + depthParameter", "lendColorValue = gl.getParameter(gl.BLEND_COLOR);\n\t\t", "t activeTexture --> getParameter: \" + activeTextureP", "blendFuncValue = gl.getParameter(gl.BLEND_SRC_RGB);\n", "ColorParameter = gl.getParameter(gl.COLOR_CLEAR_VALU", "fo(\"webgltest clear getParameter: \" + clearParameter", "info(\"blendFunc --> getParameter: \" + blendFuncValue", "clearParameter = gl.getParameter(gl.COLOR_CLEAR_VALU", "erBufferValue1 = gl.getParameter(gl.CURRENT_PROGRAM)", "lFaceparameter = gl.getParameter(gl.CULL_FACE_MODE)\n", "dEquationValue = gl.getParameter(gl.BLEND_EQUATION_R", "test clearDepth --> getParameter: \" + clearDepthValu", "xtureParameter = gl.getParameter(gl.ACTIVE_TEXTURE);", "(\"blendEquation --> getParameter: \" + blendEquationS", "arateParameter = gl.getParameter(gl.BLEND_SRC_RGB)\n\t"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getError", "api_method_all": "getError(): GLenum;", "api_type": "", "api_args_count": 0, "api_level": 21, "api_used_count": 2496, "since": 7, "api_used": "\u662f", "lines": ["fo(\"webgltest flush getError: \" + errorCode);\n\t\t", "ebufferRenderbuffer getError: \" + errorCode);\n\t\t", "\tlet errorCode = gl.getError();\n\t\tconsole.info(\"", " bindAttribLocation getError: \" + errorCode);\n\t\t", "bgltest uniform3uiv getError: \" + errorCode);\n\t\t", "ebgltest drawArrays getError: \" + errorCode);\n\t\t", "ramebufferTexture2D getError: \" + errorCode);\n\t\t", "gltest attachShader getError: \" + errorCode);\n\t\t", "gltest drawElements getError: \" + errorCode);\n\t\t", "bgltest drawBuffers getError: \" + errorCode);\n\t\t", "leVertexAttribArray getError: \" + errorCode);\n\t\t", "eProgramError1 = gl.getError();\n\t\tconsole.info(\"", "o(\"webgltest finish getError: \" + errorCode);\n\t\t", "ltest compileShader getError: \" + errorCode);\n\t\t", "t copyTexSubImage2D getError: \" + errorCode);\n\t\t", "test copyTexImage2D getError: \" + errorCode);\n\t\t"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getFramebufferAttachmentParameter", "api_method_all": "getFramebufferAttachmentParameter(target: GLenum, attachment: GLenum, pname: GLenum): any;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 159, "since": 7, "api_used": "\u662f", "lines": ["4\n\t * @tc.desc Test getFramebufferAttachmentParameter.\n\t */\n\tit('testGetF", "r\n\t * @tc.desc Test getFramebufferAttachmentParameter.\n\t */\n\tit('testGetF", "st framebuffer = gl.getFramebufferAttachmentParameter(gl.FRAMEBUFFER, gl\n", "7\n\t * @tc.desc Test getFramebufferAttachmentParameter.\n\t */\n\tit('testGetF", "nsole.info(\"jsWebGL getFramebufferAttachmentParameter errorCode: \" + erro", "3\n\t * @tc.desc Test getFramebufferAttachmentParameter.\n\t */\n\tit('testGetF", "6\n\t * @tc.desc Test getFramebufferAttachmentParameter.\n\t */\n\tit('testGetF", "2\n\t * @tc.desc Test getFramebufferAttachmentParameter.\n\t */\n\tit('testGetF", "1\n\t * @tc.desc Test getFramebufferAttachmentParameter.\n\t */\n\tit('testGetF", "5\n\t * @tc.desc Test getFramebufferAttachmentParameter.\n\t */\n\tit('testGetF", "nsole.info('jsWebGL getFramebufferAttachmentParameter test start ...' + J", "st framebuffer = gl.getFramebufferAttachmentParameter(gl\n\t\t\t.FRAMEBUFFER_"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test09.js", "WebGL.test06.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getProgramParameter", "api_method_all": "getProgramParameter(program: WebGLProgram, pname: GLenum): any;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 79, "since": 7, "api_used": "\u662f", "lines": ["g\n\t\tvar linked = gl.getProgramParameter(program, 0x8B82);\n\t", "r\n\t * @tc.desc Test getProgramParameter.\n\t */\n\tit('testGetP", "nst numAttribs = gl.getProgramParameter(program, gl.ACTIVE_", "t deleteStatus = gl.getProgramParameter(program, gl.DELETE_", "nsole.info('jsWebGL getProgramParameter test start ...' + J", "nst linkStatus = gl.getProgramParameter(program, gl.LINK_ST", "3\n\t * @tc.desc Test getProgramParameter.\n\t */\n\tit('testGetP", "ttachedShaders = gl.getProgramParameter(program, gl2.TRANSF", "2\n\t * @tc.desc Test getProgramParameter.\n\t */\n\tit('testGetP", "d\n\t * @tc.desc Test getProgramParameter.\n\t */\n\tit('testGetP", "ttachedShaders = gl.getProgramParameter(program, gl2.ACTIVE", "h\n\t * @tc.desc Test getProgramParameter.\n\t */\n\tit('testGetP", "ttachedShaders = gl.getProgramParameter(program, gl.ATTACHE", "1\n\t * @tc.desc Test getProgramParameter.\n\t */\n\tit('testGetP", "validateStatus = gl.getProgramParameter(program, gl.VALIDAT", "4\n\t * @tc.desc Test getProgramParameter.\n\t */\n\tit('testGetP", "\tconsole.log(\"======getProgramParameter linked: \" + linked)", "ttachedShaders = gl.getProgramParameter(programObj, gl.ATTA", "t\n\t * @tc.desc Test getProgramParameter.\n\t */\n\tit('testGetP", "ttachedShaders = gl.getProgramParameter(program, gl.ACTIVE_"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getProgramInfoLog", "api_method_all": "getProgramInfoLog(program: WebGLProgram): string | null;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 28, "since": 7, "api_used": "\u662f", "lines": ["nsole.info('jsWebGL getProgramInfoLog test start ...' + J", "g\n\t * @tc.desc Test getProgramInfoLog.\n\t */\n\tit('testGetP", "{\n\t\t\tvar error = gl.getProgramInfoLog(program);\n\t\t\tconsol", ";\n\t\tconst info = gl.getProgramInfoLog(program);\n\t\tgl.useP", ";\n\t\tconst info = gl.getProgramInfoLog();\n\t\tgl.useProgram("], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getRenderbufferParameter", "api_method_all": "getRenderbufferParameter(target: GLenum, pname: GLenum): any;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 84, "since": 7, "api_used": "\u662f", "lines": ["d\n\t * @tc.desc Test getRenderbufferParameter.\n\t */\n\tit('testGetR", "5\n\t * @tc.desc Test getRenderbufferParameter.\n\t */\n\tit('testGetR", "4\n\t * @tc.desc Test getRenderbufferParameter.\n\t */\n\tit('testGetR", "6\n\t * @tc.desc Test getRenderbufferParameter.\n\t */\n\tit('testGetR", "H);\n\t\tconsole.info(\"getRenderbufferParameter width: \" + width);\n", ";\n\t\tconst size = gl.getRenderbufferParameter(gl2.RENDERBUFFER, g", "6);\n\t\tconsole.info(\"getRenderbufferParameter returnValue: \" + re", ";\n\t\tconst size = gl.getRenderbufferParameter(gl.RENDERBUFFER, gl", "2\n\t * @tc.desc Test getRenderbufferParameter.\n\t */\n\tit('testGetR", "t\n\t * @tc.desc Test getRenderbufferParameter.\n\t */\n\tit('testGetR", "h\n\t * @tc.desc Test getRenderbufferParameter.\n\t */\n\tit('testGetR", "\t\tconst height = gl.getRenderbufferParameter(gl.RENDERBUFFER, gl", "onst greenSize = gl.getRenderbufferParameter(gl.RENDERBUFFER, gl", "internalFormat = gl.getRenderbufferParameter(gl.RENDERBUFFER, gl", "1\n\t * @tc.desc Test getRenderbufferParameter.\n\t */\n\tit('testGetR", "3\n\t * @tc.desc Test getRenderbufferParameter.\n\t */\n\tit('testGetR", "\n\n\t\tconst size = gl.getRenderbufferParameter(gl.RENDERBUFFER, gl", "nsole.info('jsWebGL getRenderbufferParameter test start ...' + J", "7\n\t * @tc.desc Test getRenderbufferParameter.\n\t */\n\tit('testGetR", "r\n\t * @tc.desc Test getRenderbufferParameter.\n\t */\n\tit('testGetR", "\n\t\tconst width = gl.getRenderbufferParameter(gl.RENDERBUFFER, gl"], "files": ["webGL.test.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getShaderParameter", "api_method_all": "getShaderParameter(shader: WebGLShader, pname: GLenum): any;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 74, "since": 7, "api_used": "\u662f", "lines": ["t\n\t * @tc.desc Test getShaderParameter.\n\t */\n\tit('testGetS", "ER);\n\t\tconsole.log('getShaderParameter VERTEX_SHADER: ' + ", "\t\tvar compiled = gl.getShaderParameter(shader, gl.COMPILE_", "t deleteStatus = gl.getShaderParameter(vertexShader, gl.DE", "d\n\t * @tc.desc Test getShaderParameter.\n\t */\n\tit('testGetS", "h\n\t * @tc.desc Test getShaderParameter.\n\t */\n\tit('testGetS", "nst shaderType = gl.getShaderParameter(vertexShader, gl.SH", "r\n\t * @tc.desc Test getShaderParameter.\n\t */\n\tit('testGetS", "nsole.info('jsWebGL getShaderParameter test start ...' + J", " compileStatus = gl.getShaderParameter(vertexShader, gl.CO", "\n\n\t\tvar vertex = gl.getShaderParameter(shader, gl.VERTEX_S", "1\n\t * @tc.desc Test getShaderParameter.\n\t */\n\tit('testGetS", " compileStatus = gl.getShaderParameter(fragmentShader, gl."], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getShaderPrecisionFormat", "api_method_all": "getShaderPrecisionFormat(shadertype: GLenum, precisiontype: GLenum): WebGLShaderPrecisionFormat | null;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 45, "since": 7, "api_used": "\u662f", "lines": ["2\n\t * @tc.desc Test getShaderPrecisionFormat.\n\t */\n\tit('testGetS", "3\n\t * @tc.desc Test getShaderPrecisionFormat.\n\t */\n\tit('testGetS", "n;\n\t\tconst min = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,", "t\n\t * @tc.desc Test getShaderPrecisionFormat.\n\t */\n\tit('testGetS", "4\n\t * @tc.desc Test getShaderPrecisionFormat.\n\t */\n\tit('testGetS", "recisionFormat = gl.getShaderPrecisionFormat();\n\t\tconsole.info('", "nsole.info('jsWebGL getShaderPrecisionFormat test start ...' + J", "recisionFormat = gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, g", " test start');\n\t\tgl.getShaderPrecisionFormat(gl.VERTEX_SHADER, g", "OAT).rangeMin;\n\t\tgl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,", "r\n\t * @tc.desc Test getShaderPrecisionFormat.\n\t */\n\tit('testGetS", "1\n\t * @tc.desc Test getShaderPrecisionFormat.\n\t */\n\tit('testGetS", "recisionFormat = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,", "n;\n\t\tconst max = gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, g"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test09.js", "WebGL.test06.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getShaderInfoLog", "api_method_all": "getShaderInfoLog(shader: WebGLShader): string | null;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 32, "since": 7, "api_used": "\u662f", "lines": ["r\n\t * @tc.desc Test getShaderInfoLog.\n\t */\n\tit('testGetS", "g\n\t * @tc.desc Test getShaderInfoLog.\n\t */\n\tit('testGetS", "r);\n\t\tconsole.info(\"getShaderInfoLog message: \" + messag", "nsole.info('jsWebGL getShaderInfoLog test start ...' + J", "{\n\t\t\tvar error = gl.getShaderInfoLog(shader);\n\t\t\tconsole", "();\n\t\tconsole.info(\"getShaderInfoLog message: \" + messag", "\tconst message = gl.getShaderInfoLog(shader);\n\t\tconsole.", "\tconst message = gl.getShaderInfoLog();\n\t\tconsole.info(\""], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getShaderSource", "api_method_all": "getShaderSource(shader: WebGLShader): string | null;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 22, "since": 7, "api_used": "\u662f", "lines": ["nsole.info('jsWebGL getShaderSource test start ...' + J", "();\n\t\tconsole.info(\"getShaderSource source: \" + source)", "e\n\t * @tc.desc Test getShaderSource.\n\t */\n\tit('testGetS", "\n\n\t\tvar source = gl.getShaderSource(shader);\n\t\tconsole.", "\n\n\t\tvar source = gl.getShaderSource();\n\t\tconsole.info(\"", "r);\n\t\tconsole.info(\"getShaderSource source: \" + source)", "r\n\t * @tc.desc Test getShaderSource.\n\t */\n\tit('testGetS"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getTexParameter", "api_method_all": "getTexParameter(target: GLenum, pname: GLenum): any;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 83, "since": 7, "api_used": "\u662f", "lines": ["t\n\t * @tc.desc Test getTexParameter.\n\t */\n\tit('testGetT", "ParameterValue = gl.getTexParameter(gl.TEXTURE_2D, gl.T", "d\n\t * @tc.desc Test getTexParameter.\n\t */\n\tit('testGetT", "1\n\t * @tc.desc Test getTexParameter.\n\t */\n\tit('testGetT", "nsole.info('jsWebGL getTexParameter test start ...' + J", "3\n\t * @tc.desc Test getTexParameter.\n\t */\n\tit('testGetT", "ParameterValue = gl.getTexParameter(gl.TEXTURE_CUBE_MAP", "2\n\t * @tc.desc Test getTexParameter.\n\t */\n\tit('testGetT", "ParameterValue = gl.getTexParameter(gl.TEXTURE_2D, gl2.", "4\n\t * @tc.desc Test getTexParameter.\n\t */\n\tit('testGetT", "r\n\t * @tc.desc Test getTexParameter.\n\t */\n\tit('testGetT"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getUniform", "api_method_all": "getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 476, "since": 7, "api_used": "\u662f", "lines": ["      console.info('getUniformLocation uniform' + ", "r\n\t * @tc.desc Test getUniformLocation.\n\t */\n\tit('", "m\n\t * @tc.desc Test getUniform.\n\t */\n\tit('testGetU", "n);\n\t\tconsole.info('getUniformLocation uniform' + ", "n\n\t * @tc.desc Test getUniformLocation.\n\t */\n\tit('", " \" + JSON.stringify(getUniformLocationValue));\n\n\n\t", "mLocationValue = gl.getUniformLocation(program, \"a", "nsole.info('jsWebGL getUniform test start ...' + J", "const location = gl.getUniformLocation(programObj,", "+ linked);\n\n\t\tconst getUniformLocationValue = gl.g", " const uniform = gl.getUniform(programObj, uniform", "r\n\t * @tc.desc Test getUniform.\n\t */\n\tit('testGetU", "\tconst uniform = gl.getUniform(programObj, uniform", "\tconsole.log(\"======getUniformLocation: \" + JSON.s", "niformLocation = gl.getUniformLocation(programObj,", "nsole.info('jsWebGL getUniformLocation test start "], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getUniformLocation", "api_method_all": "getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation | null;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 402, "since": 7, "api_used": "\u662f", "lines": ["\tconsole.log(\"======getUniformLocation: \" + JSON.stringify", "const location = gl.getUniformLocation(programObj, \"v_Colo", "const location = gl.getUniformLocation(programObj, \"a_Posi", "n\n\t * @tc.desc Test getUniformLocation.\n\t */\n\tit('testGetU", "niformLocation = gl.getUniformLocation(program, \"a_Positio", "n);\n\t\tconsole.info('getUniformLocation uniform' + uniform)", " \" + JSON.stringify(getUniformLocationValue));\n\n\n\t\tif (!li", "niformLocation = gl.getUniformLocation(programObj, \"a_Posi", "+ linked);\n\n\t\tconst getUniformLocationValue = gl.getUnifor", "      console.info('getUniformLocation uniform' + uniform)", "r\n\t * @tc.desc Test getUniformLocation.\n\t */\n\tit('testGetU", "const location = gl.getUniformLocation(programObj, \"v_colo", "nsole.info('jsWebGL getUniformLocation test start ...' + J", "mLocationValue = gl.getUniformLocation(program, \"a_Positio"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getVertexAttrib", "api_method_all": "getVertexAttrib(index: GLuint, pname: GLenum): any;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 88, "since": 7, "api_used": "\u662f", "lines": ["B);\n\t\tconsole.info(\"getVertexAttrib: type\" + type);\n\t\te", "();\n\t\tconsole.info(\"getVertexAttribOffset: index\" + ind", "R);\n\t\tconsole.info(\"getVertexAttribOffset: index\" + ind", "b\n\t * @tc.desc Test getVertexAttrib.\n\t */\n\tit('testGetV", "t\n\t * @tc.desc Test getVertexAttrib.\n\t */\n\tit('testGetV", "2\n\t * @tc.desc Test getVertexAttrib.\n\t */\n\tit('testGetV", "nsole.info('jsWebGL getVertexAttrib test start ...' + J", "1\n\t * @tc.desc Test getVertexAttrib.\n\t */\n\tit('testGetV", ";\n\t\tconst type = gl.getVertexAttrib(0, gl2.VERTEX_ATTRI", "nsole.info('jsWebGL getVertexAttribOffset test start ..", "R);\n\t\tconsole.info(\"getVertexAttrib: type\" + type);\n\t\te", "t\n\t * @tc.desc Test getVertexAttribOffset.\n\t */\n\tit('te", ";\n\t\tconst type = gl.getVertexAttrib(0, gl.CURRENT_VERTE", "\n\t\tconst index = gl.getVertexAttribOffset();\n\t\tconsole.", "d\n\t * @tc.desc Test getVertexAttrib.\n\t */\n\tit('testGetV", ";\n\t\tconst type = gl.getVertexAttrib(0, gl.VERTEX_ATTRIB", "3\n\t * @tc.desc Test getVertexAttrib.\n\t */\n\tit('testGetV", "0);\n\t\tconsole.info(\"getVertexAttrib: type\" + type);\n\t\te", "erVertexAttrib = gl.getVertexAttrib(0, gl.VERTEX_ATTRIB", "b);\n\t\tconsole.info(\"getVertexAttrib: bufferVertexAttrib", ";\n\t\tconst type = gl.getVertexAttrib(0);\n\t\tconsole.info(", "e\n\t * @tc.desc Test getVertexAttrib.\n\t */\n\tit('testGetV", "D);\n\t\tconsole.info(\"getVertexAttrib: type\" + type);\n\t\te", "\n\t\tconst index = gl.getVertexAttribOffset(0, gl.VERTEX_"], "files": ["webGL.test.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "getVertexAttribOffset", "api_method_all": "getVertexAttribOffset(index: GLuint, pname: GLenum): GLintptr;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 12, "since": 7, "api_used": "\u662f", "lines": ["\n\t\tconst index = gl.getVertexAttribOffset();\n\t\tconsole.info(\"", "R);\n\t\tconsole.info(\"getVertexAttribOffset: index\" + index);\n\n", "\n\t\tconst index = gl.getVertexAttribOffset(0, gl.VERTEX_ATTRIB", "t\n\t * @tc.desc Test getVertexAttribOffset.\n\t */\n\tit('testGetV", "();\n\t\tconsole.info(\"getVertexAttribOffset: index\" + index);\n\t", "nsole.info('jsWebGL getVertexAttribOffset test start ...' + J"], "files": ["WebGL.test06.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "hint", "api_method_all": "hint(target: GLenum, mode: GLenum): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 26, "since": 7, "api_used": "\u662f", "lines": ["r\n\t * @tc.desc Test hint.\n\t */\n\tit('testHint", "2\n\t * @tc.desc Test hint.\n\t */\n\tit('testHint", "tringify(gl));\n\t\tgl.hint(gl.GENERATE_MIPMAP_", "1\n\t * @tc.desc Test hint.\n\t */\n\tit('testHint", "t\n\t * @tc.desc Test hint.\n\t */\n\tit('testHint", "();\n\t\tconsole.info('hintError' + error);\n\t\te", "nsole.info('jsWebGL hint test start ...' + J"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "isBuffer", "api_method_all": "isBuffer(buffer: WebGLBuffer | null): GLboolean;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 248, "since": 7, "api_used": "\u662f", "lines": ["eBuffer();\n\n\t\tconst isBuffer1 = gl.isBuffer(buff", "\"isBufferValue: \" + isBufferValue);\n\n\t\tconsole.i", "R, buffer);\n\t\tconst isBuffer1 = gl.isBuffer(buff", "teBuffer bindBuffer isBuffer1: \" + isBuffer1);\n\t", "sBuffer1);\n\t\texpect(isBuffer1).assertEqual(true)", "eBuffer();\n\n\t\tconst isBufferValue = gl.isBuffer(", "uffer();\n\n\t\t// bind\u524disBuffer\u4e3afalse\n\t\tconst isBuf", "onst isBuffer2 = gl.isBuffer(buffer);\n\t\tconsole.", "r);\n\t\tconsole.info(\"isBufferValue: \" + isBufferV", "ole.info(\"webgltest isBufferValue0: \" + isBuffer", "ferValue);\n\t\texpect(isBufferValue).assertEqual(t", "ffer isBuffer2: \" + isBuffer2);\n\t\texpect(isBuffe", "ffer isBuffer1: \" + isBuffer1);\n\t\texpect(isBuffe", "sBuffer2);\n\t\texpect(isBuffer2).assertEqual(false", "isBufferValue0: \" + isBufferValue0);\n\t\texpect(is", "uffer\u4e3afalse\n\t\tconst isBufferValue0 = gl.isBuffer", " buffer);\n\n\t\t//bind\u540eisBuffer\u4e3atrue\n\t\tconst isBuff", "er(buffer);\n\t\tconst isBuffer2 = gl.isBuffer(buff", "teBuffer bindBuffer isBuffer: \" + isBufferValue)", " isBufferValue = gl.isBuffer(buffer);\n\t\tconsole.", "Buffer deleteBuffer isBuffer2: \" + isBuffer2);\n\t", "onst isBuffer1 = gl.isBuffer(buffer);\n\t\tconsole.", "ferValue);\n\t\texpect(isBufferValue).assertEqual(f", "Buffer\u4e3atrue\n\t\tconst isBufferValue = gl.isBuffer(", "erValue0);\n\t\texpect(isBufferValue0).assertEqual(", "\"isBufferValue: \" + isBufferValue);\n\t\texpect(isB", "isBufferValue0 = gl.isBuffer(buffer);\n\t\tconsole.", "sBuffer1);\n\t\texpect(isBuffer1).assertEqual(false", "uffer isBuffer: \" + isBufferValue);\n\t\texpect(isB", "R, buffer);\n\t\tconst isBufferValue = gl.isBuffer("], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test15.js", "WebGL.test06.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "isEnabled", "api_method_all": "isEnabled(cap: GLenum): GLboolean;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 412, "since": 7, "api_used": "\u662f", "lines": ["nst isEnabled2 = gl.isEnabled(gl.DITHER);\n\t\t// fa", "edValue1);\n\t\texpect(isEnabledValue1).assertEqual(", "NCIL_TEST);\n\t\tconst isEnabledValue2 = gl.isEnable", "gl.DITHER);\n\t\tconst isEnabled2 = gl.isEnabled(gl.", "NCIL_TEST);\n\t\tconst isEnabledValue1 = gl.isEnable", "d\n\t * @tc.desc Test isEnabled.\n\t */\n\tit('testIsEn", "sEnabled);\n\t\texpect(isEnabled).assertEqual(false)", "sEnabled);\n\t\texpect(isEnabled).assertEqual(true);", "Enabled2);\n\t\texpect(isEnabled2).assertEqual(true)", "sEnabledValue1 = gl.isEnabled(gl.STENCIL_TEST);\n\t", "r\n\t * @tc.desc Test isEnabled.\n\t */\n\tit('testIsEn", "(\"webgltest disable isEnabled2: \" + isEnabled2);\n", "T);\n\t\tconsole.info(\"isEnabledValue2: \" + isEnable", "bGLRenderingContext.isEnabled()\u65b9\u6cd5\uff1a\n\t\tconst isEnab", "sEnabledValue2: \" + isEnabledValue2);\n\t\texpect(is", "nabled()\u65b9\u6cd5\uff1a\n\t\tconst isEnabled = gl.isEnabled(gl.D", "o(\"webgltest enable isEnabled: \" + isEnabled);\n\t\t", "nabled()\u65b9\u6cd5\uff1a\n\t\tconst isEnabled2 = gl.isEnabled(gl.", "onst isEnabled = gl.isEnabled(gl.DITHER);\n\t\t// tr", "(\"webgltest disable isEnabled: \" + isEnabled);\n\t\t", "sEnabledValue2 = gl.isEnabled(gl.STENCIL_TEST);\n\t", "onst isEnabled = gl.isEnabled(gl.DITHER);\n\t\t// fa", "able isEnabled: \" + isEnabled);\n\t\texpect(isEnable", "nst isEnabled2 = gl.isEnabled(gl.DITHER);\n\t\t// tr", "edValue2);\n\t\texpect(isEnabledValue2).assertEqual(", "nsole.info('jsWebGL isEnabled test start ...' + J", "l.DITHER);\n\n\t\tconst isEnabled = gl.isEnabled(gl.D", "sEnabledValue1: \" + isEnabledValue1);\n\t\texpect(is", "ble isEnabled2: \" + isEnabled2);\n\t\texpect(isEnabl", "T);\n\t\tconsole.info(\"isEnabledValue1: \" + isEnable", "Enabled2);\n\t\texpect(isEnabled2).assertEqual(false"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "isFramebuffer", "api_method_all": "isFramebuffer(framebuffer: WebGLFramebuffer | null): GLboolean;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 186, "since": 7, "api_used": "\u662f", "lines": ["eateFramebuffer --> isFramebuffer1: \" + isFramebuffer", " isFramebuffer = gl.isFramebuffer(framebuffer);\n\t\tcon", "ebuffer();\n\n\t\tconst isFramebuffer = gl.isFramebuffer(", "isFramebuffer1: \" + isFramebuffer1);\n\t\texpect(isFrame", "isFramebuffer1 = gl.isFramebuffer(framebuffer);\n\t\tcon", "bindFramebuffer --> isFramebuffer: \" +\n\t\t\tisFramebuff", "2\n\t * @tc.desc Test isFramebuffer.\n\t */\n\tit('testIsFr", "isFramebuffer2 = gl.isFramebuffer(framebuffer);\n\t\tcon", "amebuffer);\n\t\tconst isFramebuffer = gl.isFramebuffer(", "ebuffer1);\n\t\texpect(isFramebuffer1).assertEqual(true)", "mebuffer);\n\n\t\tconst isFramebuffer1 = gl.isFramebuffer", "ramebuffer1: \" +\n\t\t\tisFramebuffer1);\n\t\texpect(isFrame", " isFramebuffer = gl.isFramebuffer(framebuffer);\n\t\t\tco", "fer bindFramebuffer isFramebuffer1: \" +\n\t\t\tisFramebuf", " isFramebuffer = gl.isFramebuffer(framebufferParamete", "ebuffer1);\n\t\texpect(isFramebuffer1).assertEqual(false", "isFrameBuffer2 = gl.isFramebuffer(framebuffer);\n\t\tcon", "fer bindFramebuffer isFramebuffer2: \" +\n\t\t\tisFramebuf", "eateFramebuffer --> isFramebuffer: \" + isFramebuffer)", "1\n\t * @tc.desc Test isFramebuffer.\n\t */\n\tit('testIsFr", "Parameter);\n\t\tconst isFramebuffer = gl.isFramebuffer(", "ebuffer();\n\n\t\tconst isFramebuffer1 = gl.isFramebuffer", "r\n\t * @tc.desc Test isFramebuffer.\n\t */\n\tit('testIsFr", "Program();\n\t\t\tconst isFramebuffer = gl.isFramebuffer(", "ebuffer2);\n\t\texpect(isFramebuffer2).assertEqual(false", " isFramebuffer: \" + isFramebuffer);\n\t\t\texpect(isFrame", "r);\n\t\tconsole.info(\"isFramebuffer: \" + isFramebuffer)", "3\n\t * @tc.desc Test isFramebuffer.\n\t */\n\tit('testIsFr", "mebuffer);\n\t\t\tconst isFramebuffer = gl.isFramebuffer(", "ebuffer();\n\t\t\tconst isFramebuffer = gl.isFramebuffer(", "ebuffer);\n\t\t\texpect(isFramebuffer).assertEqual(true);", "mebuffer);\n\t\texpect(isFramebuffer).assertEqual(true);", "ramebuffer2: \" +\n\t\t\tisFramebuffer2);\n\t\texpect(isFrame", " isFramebuffer = gl.isFramebuffer(programobject);\n\t\t\t", "ebuffer);\n\t\t\texpect(isFramebuffer).assertEqual(false)", "\"isFramebuffer: \" + isFramebuffer);\n\t\texpect(isFrameb", "ramebuffer: \" +\n\t\t\t\tisFramebuffer);\n\t\t\texpect(isFrame", "Framebuffer: \" +\n\t\t\tisFramebuffer);\n\t\texpect(isFrameb", "bindFramebuffer --> isFramebuffer: \" +\n\t\t\t\tisFramebuf", "mebuffer);\n\n\t\tconst isFramebuffer2 = gl.isFramebuffer", "mebuffer);\n\t\texpect(isFramebuffer).assertEqual(false)"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test01.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "isProgram", "api_method_all": "isProgram(program: WebGLProgram | null): GLboolean;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 100, "since": 7, "api_used": "\u662f", "lines": ["gramError);\n\t\tconst isProgram = gl.isProgram(text", "ram isProgram1: \" + isProgram1);\n\t\texpect(isProgr", "m(\"error\");\n\t\tconst isProgram = gl.isProgram(prog", "gramError);\n\t\tconst isProgram = gl.isProgram(rend", "ltest createProgram isProgram: \" + isProgram);\n\t\t", "gram isProgram: \" + isProgram);\n\t\texpect(isProgra", "nst isProgram2 = gl.isProgram(program);\n\t\tconsole", "m\n\t * @tc.desc Test isProgram.\n\t */\n\tit('testIsPr", "gramError);\n\t\tconst isProgram = gl.isProgram(fram", "onst isProgram = gl.isProgram(renderbuffer);\n\t\tco", "sProgram);\n\t\texpect(isProgram).assertEqual(true);", "eProgram();\n\t\tconst isProgram1 = gl.isProgram(pro", "Program1);\n\t\texpect(isProgram1).assertEqual(true)", "2\n\t * @tc.desc Test isProgram.\n\t */\n\tit('testIsPr", "onst isProgram = gl.isProgram(shader);\n\t\tconsole.", "nst isProgram1 = gl.isProgram(program);\n\t\tconsole", "ltest createProgram isProgram1: \" + isProgram1);\n", "onst isProgram = gl.isProgram(framebuffer);\n\t\tcon", "Program2);\n\t\texpect(isProgram2).assertEqual(false", "eProgram();\n\t\tconst isProgram = gl.isProgram(prog", "(\"createProgram --> isProgram: \" + isProgram);\n\t\t", "m(program);\n\t\tconst isProgram2 = gl.isProgram(pro", "3\n\t * @tc.desc Test isProgram.\n\t */\n\tit('testIsPr", "onst isProgram = gl.isProgram(program);\n\t\tconsole", " --> isProgram: \" + isProgram);\n\t\texpect(isProgra", "4\n\t * @tc.desc Test isProgram.\n\t */\n\tit('testIsPr", "t getExtension: \" + isProgram2);\n\t\texpect(isProgr", "1\n\t * @tc.desc Test isProgram.\n\t */\n\tit('testIsPr", "gramError);\n\t\tconst isProgram = gl.isProgram(shad", "onst isProgram = gl.isProgram(texture);\n\t\tconsole", "sProgram);\n\t\texpect(isProgram).assertEqual(false)"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test04.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "isRenderbuffer", "api_method_all": "isRenderbuffer(renderbuffer: WebGLRenderbuffer | null): GLboolean;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 107, "since": 7, "api_used": "\u662f", "lines": ["3\n\t * @tc.desc Test isRenderbuffer.\n\t */\n\tit('testIsRe", "isrenderbuffer = gl.isRenderbuffer(renderbuffer);\n\t\tco", "nderbuffer2: \" +\n\t\t\tisRenderbuffer2);\n\t\texpect(isRende", "2\n\t * @tc.desc Test isRenderbuffer.\n\t */\n\tit('testIsRe", "rbuffer2);\n\t\texpect(isRenderbuffer2).assertEqual(false", "rbuffer();\n\n\t\tconst isRenderbuffer2 = gl.isRenderbuffe", "isRenderBuffer = gl.isRenderbuffer(renderbuffer);\n\t\tco", "indRenderbuffer --> isRenderbuffer: \" +\n\t\t\tisRenderBuf", "4\n\t * @tc.desc Test isRenderbuffer.\n\t */\n\tit('testIsRe", "sRenderbuffer1 = gl.isRenderbuffer(renderbuffer);\n\t\tco", "r\n\t * @tc.desc Test isRenderbuffer.\n\t */\n\tit('testIsRe", " bindRenderbuffer\u540e, isRenderbuffer\u8fd4\u56detrue\n\t\tconst isRen", "-> getParameter --> isRenderbuffer: \" +\n\t\t\tisRenderBuf", "nderbuffer1: \" +\n\t\t\tisRenderbuffer1);\n\t\texpect(isRende", "derbuffer);\n\t\tconst isRenderbuffer = gl.isRenderbuffer", "ateRenderbuffer --> isRenderbuffer: \" + isrenderbuffer", "sRenderBuffer0 = gl.isRenderbuffer(renderbuffer);\n\t\tco", "1\n\t * @tc.desc Test isRenderbuffer.\n\t */\n\tit('testIsRe", " deleteRenderbuffer isRenderbuffer2: \" +\n\t\t\tisRenderbu", "isrenderbuffer = gl.isRenderbuffer(programobject);\n\t\tc", "ateRenderbuffer --> isRenderbuffer0: \" + isRenderBuffe", "isrenderbuffer = gl.isRenderbuffer(texture);\n\t\tconsole", "derbuffer);\n\t\tconst isRenderbuffer1 = gl.isRenderbuffe", "r);\n\t\tconsole.info(\"isRenderbuffer: \" + isRenderbuffer", "isrenderbuffer = gl.isRenderbuffer(framebuffer);\n\t\tcon", "er bindRenderbuffer isRenderbuffer1: \" +\n\t\t\tisRenderbu", "erbuffer);\n\n\t\tconst isRenderbuffer2 = gl.isRenderbuffe", "sRenderbuffer2 = gl.isRenderbuffer(renderbuffer);\n\t\tco", "sRenderBuffer1 = gl.isRenderbuffer(renderbuffer);\n\t\tco", "isRenderbuffer = gl.isRenderbuffer(renderbuffer);\n\t\tco", "rbuffer1);\n\t\texpect(isRenderbuffer1).assertEqual(true)", "isRenderbuffer: \" + isRenderbuffer);\n\t\texpect(isRender", "erbuffer);\n\t\texpect(isRenderbuffer).assertEqual(true);"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test01.js", "WebGL.test15.js", "WebGL.test04.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "isShader", "api_method_all": "isShader(shader: WebGLShader | null): GLboolean;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 196, "since": 7, "api_used": "\u662f", "lines": ["const isShader = gl.isShader(shader);\n\t\tconsole.", " null;\n\t\t}\n\n\t\tconst isShaderValue = gl.isShader(", "EX_SHADER);\n\t\tconst isShader = gl.isShader(shade", "onst isShader2 = gl.isShader(shader);\n\t\tconsole.", "o(\"createShader --> isShader: \" + isShader);\n\t\te", "gltest createShader isShader: \" + isShader);\n\t\te", "hader isShader: \" + isShader1);\n\t\texpect(isShade", "EX_SHADER);\n\t\tconst isShader1 = gl.isShader(shad", "r(shader);\n\n\t\tconst isShader2 = gl.isShader(shad", "erbuffer();\n\t\tconst isShader = gl.isShader(rende", "isShader);\n\t\texpect(isShader).assertEqual(true);", "r\n\t * @tc.desc Test isShader.\n\t */\n\tit('testIsSh", "const isShader = gl.isShader(renderbuffer);\n\t\tco", "4\n\t * @tc.desc Test isShader.\n\t */\n\tit('testIsSh", "const isShader = gl.isShader(framebuffer);\n\t\tcon", "r --> isShader: \" + isShader);\n\t\texpect(isShader", "ader isShader2: \" + isShader2);\n\t\texpect(isShade", "sShader2);\n\t\texpect(isShader2).assertEqual(false", "2\n\t * @tc.desc Test isShader.\n\t */\n\tit('testIsSh", ".log('isShader: ' + isShaderValue);\n\n\t\t// Set th", "gltest createShader isShader: \" + isShader1);\n\t\t", "TEX_SHADER)\n\t\tconst isShader = gl.isShader(shade", "1\n\t * @tc.desc Test isShader.\n\t */\n\tit('testIsSh", "onst isShader1 = gl.isShader(shader);\n\t\tconsole.", "er);\n\t\tconsole.log('isShader: ' + isShaderValue)", "ENT_SHADER)\n\t\tconst isShader = gl.isShader(shade", " isShaderValue = gl.isShader(shader);\n\t\tconsole.", "Shader deleteShader isShader2: \" + isShader2);\n\t", "sShader1);\n\t\texpect(isShader1).assertEqual(true)", "mebuffer();\n\t\tconst isShader = gl.isShader(frame", "hader isShader: \" + isShader);\n\t\texpect(isShader", "3\n\t * @tc.desc Test isShader.\n\t */\n\tit('testIsSh", "eProgram();\n\t\tconst isShader = gl.isShader(progr"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "isTexture", "api_method_all": "isTexture(texture: WebGLTexture | null): GLboolean;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 190, "since": 7, "api_used": "\u662f", "lines": ["ltest createTexture isTexture: \" + isTexture1);\n\t", " --> isTexture: \" + isTexture1);\n\t\texpect(isTextu", "sTexture);\n\t\texpect(isTexture).assertEqual(true);", "nst isTexture2 = gl.isTexture(texture);\n\t\tconsole", "eTexture();\n\t\tconst isTexture = gl.isTexture(text", "Texture1);\n\t\texpect(isTexture1).assertEqual(true)", "sTexture);\n\t\texpect(isTexture).assertEqual(false)", "Texture2);\n\t\texpect(isTexture2).assertEqual(false", "nfo(\"isTexture: \" + isTexture);\n\t\texpect(isTextur", "ture isTexture: \" + isTexture);\n\t\texpect(isTextur", "o(\"createShader --> isTexture: \" + isTexture);\n\t\t", "Texture1);\n\t\texpect(isTexture1).assertEqual(false", "nst isTexture0 = gl.isTexture(texture);\n\t\tconsole", "ure isTexture2: \" + isTexture2);\n\t\texpect(isTextu", "r);\n\t\tconsole.info(\"isTexture: \" + isTexture);\n\t\t", " texture);\n\n\t\tconst isTexture1 = gl.isTexture(tex", "e\n\t * @tc.desc Test isTexture.\n\t */\n\tit('testIsTe", "xture deleteTexture isTexture2: \" + isTexture2);\n", "ture isTexture: \" + isTexture1);\n\t\texpect(isTextu", "--> bindTexture --> isTexture: \" + isTexture1);\n\t", " texture);\n\n\t\tconst isTexture = gl.isTexture(text", "onst isTexture = gl.isTexture(textureParameter);\n", "Texture();\n\n\t\tconst isTexture0 = gl.isTexture(tex", "onst isTexture = gl.isTexture(texture);\n\t\tconsole", "ltest createTexture isTexture: \" + isTexture);\n\t\t", "(texture);\n\n\t\tconst isTexture2 = gl.isTexture(tex", " --> isTexture: \" + isTexture);\n\t\texpect(isTextur", "nst isTexture1 = gl.isTexture(texture);\n\t\tconsole", ", texture);\n\t\tconst isTexture = gl.isTexture(text", "(\"createTexture --> isTexture: \" + isTexture0);\n\t", "Texture0);\n\t\texpect(isTexture0).assertEqual(false", " --> isTexture: \" + isTexture0);\n\t\texpect(isTextu", "Texture();\n\n\t\tconst isTexture1 = gl.isTexture(tex", ", texture);\n\t\tconst isTexture1 = gl.isTexture(tex"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test01.js", "WebGL.test04.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "lineWidth", "api_method_all": "lineWidth(width: GLfloat): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 26, "since": 7, "api_used": "\u662f", "lines": ["start ...66');\n\t\tgl.lineWidth(5);\n\t\tconst windthe", "start ...66');\n\t\tgl.lineWidth(0);\n\t\tconst windthe", "lineWidthValue: \" + lineWidthValue);\n\t\t// \u83b7\u53d6\u53ef\u7528\u5bbd\u5ea6\u7684", "lineWidthArray: \" + lineWidthArray);\n\t\texpect(lin", "));\n\n\t\t//\u8bbe\u7f6e\u7ebf\u5bbd\uff1a\n\t\tgl.lineWidth(5);\n\t\t// \u83b7\u53d6\u7ebf\u5bbd\uff1a\n\t\tco", "h\n\t * @tc.desc Test lineWidth.\n\t */\n\tit('testLine", "start ...66');\n\t\tgl.lineWidth(-1);\n\t\tconst windth", "H);\n\t\tconsole.info(\"lineWidthValue: \" + lineWidth", "E);\n\t\tconsole.info(\"lineWidthArray: \" + lineWidth", "1\n\t * @tc.desc Test lineWidth.\n\t */\n\tit('testLine", "oat32Array.\n\t\tconst lineWidthArray = gl.getParame", "dthArray);\n\t\texpect(lineWidthValue).assertEqual(5", "\n\t\t// \u83b7\u53d6\u7ebf\u5bbd\uff1a\n\t\tconst lineWidthValue = gl.getParame", "2\n\t * @tc.desc Test lineWidth.\n\t */\n\tit('testLine"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "linkProgram", "api_method_all": "linkProgram(program: WebGLProgram): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 190, "since": 7, "api_used": "\u662f", "lines": ["gram(program);\n\t\tgl.linkProgram(program);\n\t\tconst l", "2\n\t * @tc.desc Test linkProgram.\n\t */\n\tit('testLink", "program object\n\t\tgl.linkProgram(program);\n\n\t\t// Che", "derbuffer);\n\t\tconst linkProgramError = gl.getError(", "amebuffer);\n\t\tconst linkProgramError = gl.getError(", "agmentShader);\n\t\tgl.linkProgram(programObj);\n\t\tgl.u", "1\n\t * @tc.desc Test linkProgram.\n\t */\n\tit('testLink", "HADER_SOURCE);\n\t\tgl.linkProgram(program);\n\t\tgl.vali", "am(shader);\n\t\tconst linkProgramError = gl.getError(", "ramError);\n\t\texpect(linkProgramError).assertEqual(g", "enderbuffer();\n\t\tgl.linkProgram(renderbuffer);\n\t\tco", "nkProgramError: \" + linkProgramError);\n\t\texpect(lin", "agmentShader);\n\t\tgl.linkProgram(program); //\u94fe\u63a5\u7ed9\u5165\u7684 W", "ramError);\n\t\texpect(linkProgramError).assertEqual(0", "3\n\t * @tc.desc Test linkProgram.\n\t */\n\tit('testLink", "m\n\t * @tc.desc Test linkProgram.\n\t */\n\tit('testLink", "Framebuffer();\n\t\tgl.linkProgram(framebuffer);\n\t\tcon", "();\n\t\tconsole.info(\"linkProgramError: \" + linkProgr", "ERTEX_SHADER);\n\t\tgl.linkProgram(shader);\n\t\tconst li", "gram(program);\n\t\tgl.linkProgram(program);\n\t\tgl.vali", "eateProgram();\n\t\tgl.linkProgram(shaderProg);\n\t\tcons", "haderProg);\n\t\tconst linkProgramError = gl.getError("], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "pixelStorei", "api_method_all": "pixelStorei(pname: GLenum, param: GLint | GLboolean): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 198, "since": 7, "api_used": "\u662f", "lines": ["();\n\t\tconsole.info(\"pixelStoreiError: \" + pixelStor", "ALIGNMENT, 2);\n\t\tgl.pixelStorei(gl.UNPACK_ALIGNMENT", "TURE_2D, tex);\n\t\tgl.pixelStorei(gl.UNPACK_PREMULTIP", "2\n\t * @tc.desc Test pixelStorei.\n\t */\n\tit('testPixe", "i\n\t * @tc.desc Test pixelStorei.\n\t */\n\tit('testPixe", "E_LOOP, 8);\n\t\tconst pixelStoreiError = gl.getError(", "eateTexture();\n\t\tgl.pixelStorei(gl.ONE_MINUS_SRC_CO", "1\n\t * @tc.desc Test pixelStorei.\n\t */\n\tit('testPixe", "3\n\t * @tc.desc Test pixelStorei.\n\t */\n\tit('testPixe", "_COLOR, 8);\n\t\tconst pixelStoreiError = gl.getError(", "xelStoreiError: \" + pixelStoreiError);\n\t\texpect(pix", "packValue);\n\t\tconst pixelStoreiError = gl.getError(", "TURE_2D, tex);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WE", "4\n\t * @tc.desc Test pixelStorei.\n\t */\n\tit('testPixe", "reiError);\n\t\texpect(pixelStoreiError).assertEqual(g", "GNMENT, 8);\n\t\tconst pixelStoreiError = gl.getError(", "eateTexture();\n\t\tgl.pixelStorei(gl.LINE_LOOP, 8);\n\t", "COLOR, -1);\n\t\tconst pixelStoreiError = gl.getError(", "TURE_2D, tex);\n\t\tgl.pixelStorei(gl.PACK_ALIGNMENT, ", "eateTexture();\n\t\tgl.pixelStorei(gl.UNPACK_ALIGNMENT", "reiError);\n\t\texpect(pixelStoreiError).assertEqual(0", "ALIGNMENT, 4);\n\t\tgl.pixelStorei(gl.UNPACK_ALIGNMENT"], "files": ["WebGL.test09.js", "webGL.test.js", "WebGL.test04.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "polygonOffset", "api_method_all": "polygonOffset(factor: GLfloat, units: GLfloat): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 60, "since": 7, "api_used": "\u662f", "lines": ["1\n\t * @tc.desc Test polygonOffset.\n\t */\n\tit('testPoly", "IANGLE_STRIP);\n\t\tgl.polygonOffset(-2, 3);\n\t\tconst pol", "2\n\t * @tc.desc Test polygonOffset.\n\t */\n\tit('testPoly", "set(-2, 3);\n\t\tconst polygonOffsetError = gl.getError(", "gonOffsetError: \" + polygonOffsetError);\n\t\texpect(pol", "_OFFSET_FILL);\n\t\tgl.polygonOffset(2, 3);\n\t\tconst poly", "fset(2, 3);\n\t\tconst polygonOffsetError = gl.getError(", "();\n\t\tconsole.info(\"polygonOffsetError: \" + polygonOf", "setError);\n\t\texpect(polygonOffsetError).assertEqual(g", "gl.TRIANGLES);\n\t\tgl.polygonOffset(-2, -3);\n\t\tconst po", "et(-2, -3);\n\t\tconst polygonOffsetError = gl.getError(", "fset(0, 0);\n\t\tconst polygonOffsetError = gl.getError(", "ble(gl.LINES);\n\t\tgl.polygonOffset(0, 0);\n\t\tconst poly", "4\n\t * @tc.desc Test polygonOffset.\n\t */\n\tit('testPoly", "t\n\t * @tc.desc Test polygonOffset.\n\t */\n\tit('testPoly", "3\n\t * @tc.desc Test polygonOffset.\n\t */\n\tit('testPoly", "setError);\n\t\texpect(polygonOffsetError).assertEqual(0", "l.LINE_STRIP);\n\t\tgl.polygonOffset(0, 0);\n\t\tconst poly"], "files": ["webGL.test.js", "WebGL.test04.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "renderbufferStorage", "api_method_all": "renderbufferStorage(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 255, "since": 7, "api_used": "\u662f", "lines": ["r\n\t * @tc.desc Test renderbufferStorage.\n\t */\n\tit('testRend", "1\n\t * @tc.desc Test renderbufferStorageMultisample.\n\t */\n\ti", " 256, 256);\n\t\tconst renderbufferStorageMultisampleError = g", "er);\n\t\t//        gl.renderbufferStorage(gl.RENDERBUFFER, gl", "4\n\t * @tc.desc Test renderbufferStorageMultisample.\n\t */\n\ti", "renderBuffer);\n\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl", "nsole.info('jsWebGL renderbufferStorage test start ...' + J", "256, -256);\n\t\tconst renderbufferStorageMultisampleError = g", "tart ...66');\n\t\tgl2.renderbufferStorageMultisample(gl.ONE_M", "e\n\t * @tc.desc Test renderbufferStorageMultisample.\n\t */\n\ti", "e\n\t * @tc.desc Test renderbufferStorage.\n\t */\n\tit('testRend", "st returnValue = gl.renderbufferStorage(256, 256);\n\t\tconsol", "tart ...66');\n\t\tgl2.renderbufferStorageMultisample(gl.RENDE", "2\n\t * @tc.desc Test renderbufferStorageMultisample.\n\t */\n\ti", "ltisampleError: \" + renderbufferStorageMultisampleError);\n\t", "3\n\t * @tc.desc Test renderbufferStorageMultisample.\n\t */\n\ti", "pleError);\n\t\texpect(renderbufferStorageMultisampleError).as", "tart ...66');\n\t\tgl2.renderbufferStorageMultisample(-gl.REND", "();\n\t\tconsole.info(\"renderbufferStorageMultisampleError: \" "], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "sampleCoverage", "api_method_all": "sampleCoverage(value: GLclampf, invert: GLboolean): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 62, "since": 7, "api_used": "\u662f", "lines": ["CoverageInvert: \" + sampleCoverageInvert);\n\t\texpect(sa", "lse\n\t\tconsole.info(\"sampleCoverageValue: \" + sampleCov", "qual(0.5);\n\t\texpect(sampleCoverageInvert).assertEqual(", " constants.\n\t\tconst sampleCoverageInvert = gl.getParam", "gify(gl));\n\n\t\tconst sampleCoverageInvert = gl.sampleCo", "nsole.info('jsWebGL sampleCoverage test start ...' + J", "d\n\t * @tc.desc Test sampleCoverage.\n\t */\n\tit('testSamp", " constants.\n\t\tconst sampleCoverageValue = gl.getParame", "PLE_COVERAGE);\n\t\tgl.sampleCoverage(0.5, false);\n\t\t// T", "eCoverageValue: \" + sampleCoverageValue);\n\t\texpect(sam", "t\n\t * @tc.desc Test sampleCoverage.\n\t */\n\tit('testSamp", "0.5\n\t\tconsole.info(\"sampleCoverageValue: \" + sampleCov", "geInvert);\n\t\texpect(sampleCoverageValue).assertEqual(0", "CoverageInvert: \" + sampleCoverageInvert);\n\n\t\texpect(s", "ageValue);\n\t\texpect(sampleCoverageValue).assertEqual(0", "lse\n\t\tconsole.info(\"sampleCoverageInvert: \" + sampleCo", "CoverageInvert = gl.sampleCoverage();\n\n\t\tconsole.info(", "e);\n\t\tconsole.info(\"sampleCoverageInvert: \" + sampleCo", "UE); // 0.5\n\t\tconst sampleCoverageInvert = gl.getParam", "r\n\t * @tc.desc Test sampleCoverage.\n\t */\n\tit('testSamp", "eInvert);\n\n\t\texpect(sampleCoverageInvert).assertEqual(", "eCoverageValue: \" + sampleCoverageValue);\n\t\tconsole.in", ");\n\n\t\tconsole.info(\"sampleCoverageInvert: \" + sampleCo"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "scissor", "api_method_all": "scissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 72, "since": 7, "api_used": "\u662f", "lines": ["ualsScissorValue = (scissorValue.toString() ===", "0);\n\t\tconsole.info(\"scissorErrorCode: \" + sciss", "nsole.info('jsWebGL scissor test start ...' + J", "issorErrorCode = gl.scissor(0);\n\t\tconsole.info(", "lear)\n\t\t// turn off scissor test again\n\t\tgl.dis", "TEST);\n\t\t// set the scissor rectangle\n\t\tgl.scis", "r\n\t * @tc.desc Test scissor.\n\t */\n\tit('testScis", "qualsScissorType = (scissorValue.constructor ==", "ing commands in the scissor box (e.g. clear)\n\t\t", "(\"scissorValue: \" + scissorValue);\n\t\t// Int32Ar", "rrorCode);\n\t\texpect(scissorErrorCode).assertEqu", "gl));\n\n\t\t// turn on scissor test\n\t\tgl.enable(gl", "X);\n\t\tconsole.info(\"scissorValue: \" + scissorVa", "1281)\u5219\u4f1a\u5f15\u53d1\u9519\u8bef\n\t\tconst scissorErrorCode = gl.getEr", "tEqual(1281);\n\n\t\tgl.scissor(0, 0, 200, 200);\n\t\t", "();\n\t\tconsole.info(\"scissorErrorCode: \" + sciss", "0);\n\t\tconsole.info(\"scissorValue: \" + scissorVa", "issorErrorCode: \" + scissorErrorCode);\n\t\texpect", "ngify(gl));\n\t\tconst scissorValue = gl.scissor(2", "t scissorValue = gl.scissor(200);\n\t\tconsole.inf", "SSOR_TEST);\n\t\tconst scissorErrorCode = gl.sciss", "ssor rectangle\n\t\tgl.scissor(0, 0, -200, 200);\n\t", "(\"scissorValue: \" + scissorValue);\n\t\texpect(sci", "sorValue);\n\t\texpect(scissorValue).assertEqual(u", "));\n\t\t//    turn on scissor test\n\t\tgl.enable(gl", " 200, 200);\n\t\tconst scissorValue = gl.getParame"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "shaderSource", "api_method_all": "shaderSource(shader: WebGLShader, source: string): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 267, "since": 7, "api_used": "\u662f", "lines": ["ERTEX_SHADER);\n\t\tgl.shaderSource(vertexShader, VSHAD", "ERTEX_SHADER);\n\t\tgl.shaderSource(shader, VSHADER_SOU", "\u5efa WebGLShader\u3002\n\t\tgl.shaderSource(fragmentShader, FSH", "GMENT_SHADER);\n\t\tgl.shaderSource(fragmentShader, FSH", "ER);\n\t\t//        gl.shaderSource(fragmentShader, FSH", "shader program\n\t\tgl.shaderSource(shader, source);\n\n\t"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "stencilFunc", "api_method_all": "stencilFunc(func: GLenum, ref: GLint, mask: GLuint): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 144, "since": 7, "api_used": "\u662f", "lines": ["STENCIL_TEST);\n\t\tgl.stencilFunc(gl.NEVER, 0, 0b1110", "nsole.info('jsWebGL stencilFunc test start ...' + J", "teParameter: \" +\n\t\t\tstencilFuncSeparateParameter);\n", "2\n\t * @tc.desc Test stencilFunc.\n\t */\n\tit('testSten", "lFuncParameter: \" + stencilFuncParameter);\n\t\texpect", "STENCIL_TEST);\n\t\tgl.stencilFunc(gl.EQUAL, 0, 0b1110", "C);\n\t\tconsole.info(\"stencilFunc stencilFuncParamete", "NCIL_TEST);\n\t\tconst stencilFuncParameter = gl.stenc", "arateParameter = gl.stencilFuncSeparate(gl.FRONT);\n", "e\n\t * @tc.desc Test stencilFuncSeparate.\n\t */\n\tit('", ", 1110011);\n\t\tconst stencilFuncSeparateParameter = ", "STENCIL_TEST);\n\t\tgl.stencilFunc(gl.LESS, 0, 0b11100", "S);\n\t\tconsole.info(\"stencilFunc stencilFuncParamete", "T);\n\t\tconsole.info(\"stencilFuncSeparate stencilFunc", "C);\n\t\tconsole.info(\"stencilFuncSeparate stencilFunc", "r\n\t * @tc.desc Test stencilFuncSeparate.\n\t */\n\tit('", "e.info(\"stencilFunc stencilFuncParameter: \" + stenc", "0b1110011);\n\t\tconst stencilFuncParameter = gl.getPa", "r\n\t * @tc.desc Test stencilFunc.\n\t */\n\tit('testSten", "STENCIL_TEST);\n\t\tgl.stencilFuncSeparate(gl.FRONT, g", "c\n\t * @tc.desc Test stencilFunc.\n\t */\n\tit('testSten", "stencilFuncSeparate stencilFuncSeparateParameter: \"", "arameter);\n\t\texpect(stencilFuncSeparateParameter).a", "arameter);\n\t\texpect(stencilFuncParameter).assertEqu", "nsole.info('jsWebGL stencilFuncSeparate test start ", "lFuncParameter = gl.stencilFunc(gl.LESS);\n\t\tconsole", "NCIL_TEST);\n\t\tconst stencilFuncSeparateParameter = ", "3\n\t * @tc.desc Test stencilFunc.\n\t */\n\tit('testSten", "1\n\t * @tc.desc Test stencilFunc.\n\t */\n\tit('testSten"], "files": ["WebGL.test11.js", "WebGL.test06.js", "webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "stencilFuncSeparate", "api_method_all": "stencilFuncSeparate(face: GLenum, func: GLenum, ref: GLint, mask: GLuint): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 64, "since": 7, "api_used": "\u662f", "lines": ["STENCIL_TEST);\n\t\tgl.stencilFuncSeparate(gl.FRONT_AND_BACK, ", "stencilFuncSeparate stencilFuncSeparateParameter: \" +\n\t\t\tst", "STENCIL_TEST);\n\t\tgl.stencilFuncSeparate(gl.FRONT, gl.LESS, ", "T);\n\t\tconsole.info(\"stencilFuncSeparate stencilFuncSeparate", "e\n\t * @tc.desc Test stencilFuncSeparate.\n\t */\n\tit('testSten", ", 1110011);\n\t\tconst stencilFuncSeparateParameter = gl.getPa", "nsole.info('jsWebGL stencilFuncSeparate test start ...' + J", "1\n\t * @tc.desc Test stencilFuncSeparate.\n\t */\n\tit('testSten", "C);\n\t\tconsole.info(\"stencilFuncSeparate stencilFuncSeparate", "r\n\t * @tc.desc Test stencilFuncSeparate.\n\t */\n\tit('testSten", "teParameter: \" +\n\t\t\tstencilFuncSeparateParameter);\n\t\texpect", "STENCIL_TEST);\n\t\tgl.stencilFuncSeparate(gl.BACK, gl.EQUAL, ", "2\n\t * @tc.desc Test stencilFuncSeparate.\n\t */\n\tit('testSten", "arameter);\n\t\texpect(stencilFuncSeparateParameter).assertEqu", "arateParameter = gl.stencilFuncSeparate(gl.FRONT);\n\t\tconsol", "NCIL_TEST);\n\t\tconst stencilFuncSeparateParameter = gl.stenc"], "files": ["WebGL.test11.js", "WebGL.test06.js", "webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "stencilMask", "api_method_all": "stencilMask(mask: GLuint): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 95, "since": 7, "api_used": "\u662f", "lines": ["nsole.info('jsWebGL stencilMask test start ...' + J", "T);\n\t\tconsole.info(\"stencilMaskSeparate stencilMask", "();\n\t\tconsole.info(\"stencilMask stencilMaskParamete", "ngify(gl));\n\t\tconst stencilMaskParameter = gl.stenc", "lMaskParameter: \" + stencilMaskParameter);\n\t\texpect", "e.info(\"stencilMask stencilMaskParameter: \" + stenc", "tringify(gl));\n\t\tgl.stencilMaskSeparate(gl.FRONT_AN", "K);\n\t\tconsole.info(\"stencilMask stencilMaskParamete", "arateParameter = gl.stencilMaskSeparate(gl.FRONT);\n", "K, 110101);\n\t\tconst stencilMaskSeparateParameter = ", "2\n\t * @tc.desc Test stencilMaskSeparate.\n\t */\n\tit('", "teParameter: \" +\n\t\t\tstencilMaskSeparateParameter);\n", "ngify(gl));\n\t\tconst stencilMaskSeparateParameter = ", "stencilMaskSeparate stencilMaskSeparateParameter: \"", "1\n\t * @tc.desc Test stencilMaskSeparate.\n\t */\n\tit('", "tringify(gl));\n\t\tgl.stencilMaskSeparate(gl.BACK, 11", "r\n\t * @tc.desc Test stencilMaskSeparate.\n\t */\n\tit('", "nsole.info('jsWebGL stencilMaskSeparate test start ", "lMaskParameter = gl.stencilMask();\n\t\tconsole.info(\"", "arameter);\n\t\texpect(stencilMaskParameter).assertEqu", "arameter);\n\t\texpect(stencilMaskSeparateParameter).a", "sk(110101);\n\t\tconst stencilMaskParameter = gl.getPa", "k\n\t * @tc.desc Test stencilMask.\n\t */\n\tit('testSten", "e\n\t * @tc.desc Test stencilMaskSeparate.\n\t */\n\tit('", "K);\n\t\tconsole.info(\"stencilMaskSeparate stencilMask", "tringify(gl));\n\t\tgl.stencilMaskSeparate(gl.FRONT, 1", "r\n\t * @tc.desc Test stencilMask.\n\t */\n\tit('testSten", "tringify(gl));\n\t\tgl.stencilMask(110101);\n\t\tconst st", "T, 110101);\n\t\tconst stencilMaskSeparateParameter = "], "files": ["webGL.test.js", "WebGL.test03.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "stencilMaskSeparate", "api_method_all": "stencilMaskSeparate(face: GLenum, mask: GLuint): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 63, "since": 7, "api_used": "\u662f", "lines": ["K, 110101);\n\t\tconst stencilMaskSeparateParameter = gl.getPa", "tringify(gl));\n\t\tgl.stencilMaskSeparate(gl.FRONT, 110101);\n", "tringify(gl));\n\t\tgl.stencilMaskSeparate(gl.BACK, 110101);\n\t", "K);\n\t\tconsole.info(\"stencilMaskSeparate stencilMaskSeparate", "T);\n\t\tconsole.info(\"stencilMaskSeparate stencilMaskSeparate", "tringify(gl));\n\t\tgl.stencilMaskSeparate(gl.FRONT_AND_BACK, ", "1\n\t * @tc.desc Test stencilMaskSeparate.\n\t */\n\tit('testSten", "2\n\t * @tc.desc Test stencilMaskSeparate.\n\t */\n\tit('testSten", "nsole.info('jsWebGL stencilMaskSeparate test start ...' + J", "ngify(gl));\n\t\tconst stencilMaskSeparateParameter = gl.stenc", "r\n\t * @tc.desc Test stencilMaskSeparate.\n\t */\n\tit('testSten", "arameter);\n\t\texpect(stencilMaskSeparateParameter).assertEqu", "teParameter: \" +\n\t\t\tstencilMaskSeparateParameter);\n\t\texpect", "T, 110101);\n\t\tconst stencilMaskSeparateParameter = gl.getPa", "arateParameter = gl.stencilMaskSeparate(gl.FRONT);\n\t\tconsol", "stencilMaskSeparate stencilMaskSeparateParameter: \" +\n\t\t\tst", "e\n\t * @tc.desc Test stencilMaskSeparate.\n\t */\n\tit('testSten"], "files": ["webGL.test.js", "WebGL.test03.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "stencilOp", "api_method_all": "stencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 96, "since": 7, "api_used": "\u662f", "lines": ["L);\n\t\tconsole.info(\"stencilOpSeparate stencilOpSe", "NCIL_TEST);\n\t\tconst stencilOpParameter = gl.stenc", "arameter);\n\t\texpect(stencilOpParameter).assertEqu", "DECR_WRAP);\n\t\tconst stencilOpParameter = gl.getPa", "gl.INVERT);\n\t\tconst stencilOpSeparateParameter = ", "L);\n\t\tconsole.info(\"stencilOp stencilOpParameter:", "(\"stencilOpSeparate stencilOpSeparateParameter: \"", "gl.INVERT);\n\t\tconst stencilOpParameter = gl.getPa", "arateParameter: \" + stencilOpSeparateParameter);\n", "cilOpParameter = gl.stencilOp();\n\t\tconsole.info(\"", "p\n\t * @tc.desc Test stencilOp.\n\t */\n\tit('testSten", "nsole.info('jsWebGL stencilOp test start ...' + J", "T);\n\t\tconsole.info(\"stencilOpSeparate stencilOpSe", "nsole.info('jsWebGL stencilOpSeparate test start ", "STENCIL_TEST);\n\t\tgl.stencilOp(gl.INCR, gl.DECR, g", "e\n\t * @tc.desc Test stencilOpSeparate.\n\t */\n\tit('", "arameter);\n\t\texpect(stencilOpSeparateParameter).a", "arateParameter = gl.stencilOpSeparate(gl.FRONT, g", "STENCIL_TEST);\n\t\tgl.stencilOpSeparate(gl.FRONT, g", "p\n\t * @tc.desc Test stencilOp\n\t */\n\tit('testStenc", "();\n\t\tconsole.info(\"stencilOp stencilOpParameter:", "r\n\t * @tc.desc Test stencilOp.\n\t */\n\tit('testSten", "STENCIL_TEST);\n\t\tgl.stencilOp(gl.KEEP, gl.REPLACE", "ole.info(\"stencilOp stencilOpParameter: \" + stenc", "cilOpParameter: \" + stencilOpParameter);\n\t\texpect", "NCIL_TEST);\n\t\tconst stencilOpSeparateParameter = ", "INCR_WRAP);\n\t\tconst stencilOpParameter = gl.getPa"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test13.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "stencilOpSeparate", "api_method_all": "stencilOpSeparate(face: GLenum, fail: GLenum, zfail: GLenum, zpass: GLenum): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 32, "since": 7, "api_used": "\u662f", "lines": ["arateParameter: \" + stencilOpSeparateParameter);\n\t\texpect", "L);\n\t\tconsole.info(\"stencilOpSeparate stencilOpSeparatePa", "arateParameter = gl.stencilOpSeparate(gl.FRONT, gl.INCR, ", "arameter);\n\t\texpect(stencilOpSeparateParameter).assertEqu", "NCIL_TEST);\n\t\tconst stencilOpSeparateParameter = gl.stenc", "(\"stencilOpSeparate stencilOpSeparateParameter: \" + stenc", "STENCIL_TEST);\n\t\tgl.stencilOpSeparate(gl.FRONT, gl.INCR, ", "T);\n\t\tconsole.info(\"stencilOpSeparate stencilOpSeparatePa", "nsole.info('jsWebGL stencilOpSeparate test start ...' + J", "gl.INVERT);\n\t\tconst stencilOpSeparateParameter = gl.getPa", "e\n\t * @tc.desc Test stencilOpSeparate.\n\t */\n\tit('testSten"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "texParameterf", "api_method_all": "texParameterf(target: GLenum, pname: GLenum, param: GLfloat): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 72, "since": 7, "api_used": "\u662f", "lines": ["ParameterValue = gl.texParameterf();\n\t\tconsole.info('", "T);\n\t\tconsole.info('texParameterfValue' + texParamete", "tringify(gl));\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl.T", "L);\n\t\tconsole.info('texParameterfValue' + texParamete", "();\n\t\tconsole.info('texParameterfValue' + texParamete", "R);\n\t\tconsole.info('texParameterfValue' + texParamete", "nsole.info('jsWebGL texParameterf test start ...' + J", "E);\n\t\tconsole.info('texParameterfValue' + texParamete", "f\n\t * @tc.desc Test texParameterf.\n\t */\n\tit('testTexP", "tringify(gl));\n\t\tgl.texParameterf(gl.TEXTURE_2D, gl2.", "r\n\t * @tc.desc Test texParameterf.\n\t */\n\tit('testTexP", "l\n\t * @tc.desc Test texParameterf.\n\t */\n\tit('testTexP", "S);\n\t\tconsole.info('texParameterfValue' + texParamete"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test06.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "texParameteri", "api_method_all": "texParameteri(target: GLenum, pname: GLenum, param: GLint): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 32, "since": 7, "api_used": "\u662f", "lines": ["i\n\t * @tc.desc Test texParameteri.\n\t */\n\tit('testTexP", "r\n\t * @tc.desc Test texParameteri.\n\t */\n\tit('testTexP", "nsole.info('jsWebGL texParameteri test start ...' + J", "ParameterValue = gl.texParameteri();\n\t\tconsole.info('", "tringify(gl));\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.T", " 256, 256, 8);\n\t\tgl.texParameteri(gl2.TEXTURE_CUBE_MA"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test06.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "uniform1f", "api_method_all": "uniform1f(location: WebGLUniformLocation | null, x: GLfloat): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 90, "since": 7, "api_used": "\u662f", "lines": ["([1.2, 2.2]);\n\t\tgl2.uniform1fv(uniformLocation, f", "4\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUni", "Array([1, 2]);\n\t\tgl.uniform1fv(uniformlocationObj", "niform1fvError: \" + uniform1fvError);\n\t\tconst err", "1\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUni", "f\n\t * @tc.desc Test uniform1f.\n\t */\n\tit('testUnif", "niform1fvError: \" + uniform1fvError);\n\t\texpect(un", "r\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUni", "ray([-1, -2]);\n\t\tgl.uniform1fv(uniformlocationObj", "2\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUni", "_Position\");\n\n\t\tgl2.uniform1fv(uniformLocation, [", "a_Position\");\n\n\t\tgl.uniform1f(uniformLocation, 0.", "sole.info('jsWebGL2 uniform1fv test start ...' + ", "aot32list);\n\t\tconst uniform1fvError = gl.getError", "1fvError);\n\t\texpect(uniform1fvError).assertEqual(", "d\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUni", "v\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUni", "r\n\t * @tc.desc Test uniform1f.\n\t */\n\tit('testUnif", "t\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUni", "nsole.info('jsWebGL uniform1f test start ...' + J", "etError();\n\t\texpect(uniform1fvError).assertEqual(", "();\n\t\tconsole.info(\"uniform1fvError: \" + uniform1", "3\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUni"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "uniform2f", "api_method_all": "uniform2f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 90, "since": 7, "api_used": "\u662f", "lines": ["();\n\t\tconsole.info(\"uniform2fvError: \" + uniform2", " 2.2], 0, 0);\n\t\tgl2.uniform2fv(uniformLocation, f", "iform2fvError1: \" + uniform2fvError);\n\t\texpect(un", "r\n\t * @tc.desc Test uniform2f.\n\t */\n\tit('testUnif", "nsole.info('jsWebGL uniform2f test start ...' + J", "a_Position\");\n\n\t\tgl.uniform2f(uniformLocation, 0.", "2\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUni", "f\n\t * @tc.desc Test uniform2f.\n\t */\n\tit('testUnif", "aot32list);\n\t\tconst uniform2fvError = gl.getError", "Array([1, 2]);\n\t\tgl.uniform2fv(uniformlocationObj", "d\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUni", "1\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUni", "sole.info('jsWebGL2 uniform2fv test start ...' + ", "([1.2, 2.2]);\n\t\tgl2.uniform2fv(uniformLocation, f", "2fvError);\n\t\texpect(uniform2fvError).assertEqual(", "t\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUni", "niform2fvError: \" + uniform2fvError);\n\t\texpect(un", "4\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUni", "v\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUni", "();\n\t\tconsole.info(\"uniform2fvError1: \" + uniform", "r\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUni", "_Position\");\n\n\t\tgl2.uniform2fv(uniformLocation, [", "3\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUni"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "uniform3f", "api_method_all": "uniform3f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 86, "since": 7, "api_used": "\u662f", "lines": ["2\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUni", "3\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUni", "();\n\t\tconsole.info(\"uniform3fvError: \" + uniform3", "niform3fvError: \" + uniform3fvError);\n\t\texpect(un", "3fvError);\n\t\texpect(uniform3fvError).assertEqual(", "a_Position\");\n\n\t\tgl.uniform3f(uniformLocation, 0.", "1\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUni", "4\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUni", "f\n\t * @tc.desc Test uniform3f.\n\t */\n\tit('testUnif", "d\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUni", "v\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUni", "sole.info('jsWebGL2 uniform3fv test start ...' + ", "Array([1, 2]);\n\t\tgl.uniform3fv(uniformlocationObj", "([1.2, 2.2]);\n\t\tgl2.uniform3fv(uniformLocation, f", "aot32list);\n\t\tconst uniform3fvError = gl.getError", "nsole.info('jsWebGL uniform3f test start ...' + J", "r\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUni", "_Position\");\n\n\t\tgl2.uniform3fv(uniformLocation, ["], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "uniform4f", "api_method_all": "uniform4f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;", "api_type": "", "api_args_count": 5, "api_level": 21, "api_used_count": 90, "since": 7, "api_used": "\u662f", "lines": ["f\n\t * @tc.desc Test uniform4f.\n\t */\n\tit('testUnif", "r\n\t * @tc.desc Test uniform4f.\n\t */\n\tit('testUnif", "d\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUni", "v\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUni", "_Position\");\n\n\t\tgl2.uniform4fv(uniformLocation, [", "t\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUni", "([1.2, 2.2]);\n\t\tgl2.uniform4fv(uniformLocation, f", "sole.info('jsWebGL2 uniform4fv test start ...' + ", "3\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUni", "2\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUni", "aot32list);\n\t\tconst uniform4fvError = gl.getError", "4fvError);\n\t\texpect(uniform4fvError).assertEqual(", "nsole.info('jsWebGL uniform4f test start ...' + J", "1\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUni", "r\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUni", "4\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUni", "niform4fvError: \" + uniform4fvError);\n\t\texpect(un", "();\n\t\tconsole.info(\"uniform4fvError: \" + uniform4", "Array([1, 2]);\n\t\tgl.uniform4fv(uniformlocationObj", "a_Position\");\n\n\t\tgl.uniform4f(uniformLocation, 0."], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "uniform1i", "api_method_all": "uniform1i(location: WebGLUniformLocation | null, x: GLint): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 96, "since": 7, "api_used": "\u662f", "lines": ["int32list);\n\t\tconst uniform1ivError = gl.getError", "a_Position\");\n\n\t\tgl.uniform1i(uniformLocation, 2)", "3\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUni", "Array([1, 2]);\n\t\tgl.uniform1iv(uniformlocationObj", "d\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUni", "1\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUni", "rray([1, 2]);\n\t\tgl2.uniform1iv(uniformLocation, i", "_Position\");\n\n\t\tgl2.uniform1iv(uniformLocation, [", "4\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUni", "niform1ivError: \" + uniform1ivError);\n\t\texpect(un", "v\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUni", "i\n\t * @tc.desc Test uniform1i.\n\t */\n\tit('testUnif", "r\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUni", "sole.info('jsWebGL2 uniform1iv test start ...' + ", "nsole.info('jsWebGL uniform1i test start ...' + J", "r\n\t * @tc.desc Test uniform1i.\n\t */\n\tit('testUnif", "();\n\t\tconsole.info(\"uniform1ivError: \" + uniform1", "a_Position\");\n\n\t\tgl.uniform1i(uniformLocation, 0.", "t\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUni", "2\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUni", "1ivError);\n\t\texpect(uniform1ivError).assertEqual("], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "uniform2i", "api_method_all": "uniform2i(location: WebGLUniformLocation | null, x: GLint, y: GLint): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 77, "since": 7, "api_used": "\u662f", "lines": ["r\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUni", "3\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUni", "1\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUni", "a_Position\");\n\n\t\tgl.uniform2i(uniformLocation, 2,", "rray([1, 2]);\n\t\tgl2.uniform2iv(uniformLocation, i", "sole.info('jsWebGL2 uniform2iv test start ...' + ", "i\n\t * @tc.desc Test uniform2i.\n\t */\n\tit('testUnif", "2\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUni", "4\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUni", "d\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUni", "nsole.info('jsWebGL uniform2i test start ...' + J", "_Position\");\n\n\t\tgl2.uniform2iv(uniformLocation, [", "t\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUni", "Array([1, 2]);\n\t\tgl.uniform2iv(uniformlocationObj", "a_Position\");\n\n\t\tgl.uniform2i(uniformLocation, 0.", "r\n\t * @tc.desc Test uniform2i.\n\t */\n\tit('testUnif", "v\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUni", "niform2ivError: \" + uniform2ivError);\n\t\texpect(un", "int32list);\n\t\tconst uniform2ivError = gl.getError", "2ivError);\n\t\texpect(uniform2ivError).assertEqual("], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test05.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "uniform3i", "api_method_all": "uniform3i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 77, "since": 7, "api_used": "\u662f", "lines": ["int32list);\n\t\tconst uniform3ivError = gl.getError", "3ivError);\n\t\texpect(uniform3ivError).assertEqual(", "i\n\t * @tc.desc Test uniform3i.\n\t */\n\tit('testUnif", "a_Position\");\n\n\t\tgl.uniform3i(uniformLocation, 0.", "_Position\");\n\n\t\tgl2.uniform3iv(uniformLocation, [", "nsole.info('jsWebGL uniform3i test start ...' + J", "sole.info('jsWebGL2 uniform3iv test start ...' + ", "Array([1, 2]);\n\t\tgl.uniform3iv(uniformlocationObj", "4\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUni", "r\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUni", "niform3ivError: \" + uniform3ivError);\n\t\texpect(un", "d\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUni", "a_Position\");\n\n\t\tgl.uniform3i(uniformLocation, 2,", "v\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUni", "t\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUni", "2\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUni", "r\n\t * @tc.desc Test uniform3i.\n\t */\n\tit('testUnif", "3\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUni", "rray([1, 2]);\n\t\tgl2.uniform3iv(uniformLocation, i", "1\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUni"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test05.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "uniform4i", "api_method_all": "uniform4i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint, w: GLint): void;", "api_type": "", "api_args_count": 5, "api_level": 21, "api_used_count": 89, "since": 7, "api_used": "\u662f", "lines": ["rray([1, 2]);\n\t\tgl2.uniform4iv(uniformLocation, i", "4ivError);\n\t\texpect(uniform4ivError).assertEqual(", "_Position\");\n\n\t\tgl2.uniform4iv(uniformLocation, [", "4\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUni", "d\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUni", "niform4ivError: \" + uniform4ivError);\n\t\texpect(un", "i\n\t * @tc.desc Test uniform4i.\n\t */\n\tit('testUnif", "1\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUni", "3\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUni", "r\n\t * @tc.desc Test uniform4i.\n\t */\n\tit('testUnif", "int32list);\n\t\tconst uniform4ivError = gl.getError", "Array([1, 2]);\n\t\tgl.uniform4iv(uniformlocationObj", "t\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUni", "nsole.info('jsWebGL uniform4i test start ...' + J", "v\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUni", "sole.info('jsWebGL2 uniform4iv test start ...' + ", "a_Position\");\n\n\t\tgl.uniform4i(uniformLocation, 0.", "2\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUni", "a_Position\");\n\n\t\tgl.uniform4i(uniformLocation, 2,", "r\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUni"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test05.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "useProgram", "api_method_all": "useProgram(program: WebGLProgram | null): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 460, "since": 7, "api_used": "\u662f", "lines": ["m(programObj);\n\t\tgl.useProgram(programObj);\n\n\t\tcon", "m(programObj);\n\t\tgl.useProgram(programObj);\n\t\tretu", "rn false;\n\t\t}\n\n\t\tgl.useProgram(program);\n\t\tgl.prog", "();\n\t\tconsole.info(\"useProgramError: \" + useProgra", "programObj)\n\t\tconst useProgramError1 = gl.getError", "m(programObj);\n\t\tgl.useProgram(programObj);\n\t\tcons", "m(programObj);\n\t\tgl.useProgram(programObj);\n\n\t\tgl.", "m(programObj);\n\t\tgl.useProgram(programObj);\n\n\t\tgl2", "seProgramError: \" + useProgramError1);\n\t\tconst ren", "m(programObj);\n\t\tgl.useProgram(programObj);\n\n\t\tlet"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "validateProgram", "api_method_all": "validateProgram(program: WebGLProgram): void;", "api_type": "", "api_args_count": 1, "api_level": 21, "api_used_count": 29, "since": 7, "api_used": "\u662f", "lines": ["(program);\n\t\t\tconst validateProgramError = gl.getError(", "r\n\t * @tc.desc Test validateProgram.\n\t */\n\tit('testVali", "gram(program);\n\t\tgl.validateProgram(program);\n\t\tconst v", "am(false);\n\t\t\tconst validateProgramError = gl.getError(", ");\n\t\t\tconsole.info(\"validateProgramError: \" + validateP", "ateProgram();\n\t\t\tgl.validateProgram(program);\n\t\t\tconst ", "teProgramError: \" + validateProgramError);\n\t\t\texpect(va", "amError);\n\t\t\texpect(validateProgramError).assertEqual(0", "ateProgram();\n\t\t\tgl.validateProgram(false);\n\t\t\tconst va", "m\n\t * @tc.desc Test validateProgram.\n\t */\n\tit('testVali", "gram(program);\n\t\tgl.validateProgram(program);\n\t\tconst i"], "files": ["WebGL.test07.js", "WebGL.test06.js", "webGL.test.js", "WebGL.test02.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "vertexAttrib1f", "api_method_all": "vertexAttrib1f(index: GLuint, x: GLfloat): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 69, "since": 7, "api_used": "\u662f", "lines": ["ringify(gl));\n\t\t\tgl.vertexAttrib1f(1, 10.0);\n\t\t\tconst ", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib1fv(false, floatArray)", "(1, 10.0);\n\t\t\tconst vertexAttrib1fError = gl.getError(", "-1, 10.0);\n\t\t\tconst vertexAttrib1fError = gl.getError(", "1fError);\n\t\t\texpect(vertexAttrib1fError).assertEqual(g", "ringify(gl));\n\t\t\tgl.vertexAttrib1f(-1, 10.0);\n\t\t\tconst", "v\n\t * @tc.desc Test vertexAttrib1fv.\n\t */\n\tit('testVer", "ringify(gl));\n\t\t\tgl.vertexAttrib1f(false, 10.0);\n\t\t\tco", "r\n\t * @tc.desc Test vertexAttrib1fv.\n\t */\n\tit('testVer", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib1fv(1, floatArray);\n\t\t", "ANGLES, 0, 8);\n\t\tgl.vertexAttrib1f(0, 2.8);\n\t\tconst ty", "fvError);\n\t\t\texpect(vertexAttrib1fvError).assertEqual(", "tringify(gl));\n\t\tgl.vertexAttrib1f(0, 2.8);\n\t\tconst in", ");\n\t\t\tconsole.info(\"vertexAttrib1fvError: \" + vertexAt", ");\n\t\t\tconsole.info(\"vertexAttrib1fError: \" + vertexAtt", "2\n\t * @tc.desc Test vertexAttrib1f.\n\t */\n\tit('testVert", "f\n\t * @tc.desc Test vertexAttrib1f.\n\t */\n\tit('testVert", "xAttrib1fError: \" + vertexAttrib1fError);\n\t\t\texpect(ve", "r\n\t * @tc.desc Test vertexAttrib1f.\n\t */\n\tit('testVert", "oatArray);\n\t\t\tconst vertexAttrib1fvError = gl.getError", "Attrib1fvError: \" + vertexAttrib1fvError);\n\t\t\texpect(v", "se, 10.0);\n\t\t\tconst vertexAttrib1fError = gl.getError(", "1fError);\n\t\t\texpect(vertexAttrib1fError).assertEqual(0"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "vertexAttrib2f", "api_method_all": "vertexAttrib2f(index: GLuint, x: GLfloat, y: GLfloat): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 72, "since": 7, "api_used": "\u662f", "lines": ["(1, 10.0);\n\t\t\tconst vertexAttrib2fError = gl.getError(", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib2fv(false, floatArray)", "oatArray);\n\t\t\tconst vertexAttrib2fvError = gl.getError", ".0, 10.0);\n\t\t\tconst vertexAttrib2fError = gl.getError(", ");\n\t\t\tconsole.info(\"vertexAttrib2fError: \" + vertexAtt", "2fError);\n\t\t\texpect(vertexAttrib2fError).assertEqual(g", "xAttrib2fError: \" + vertexAttrib2fError);\n\t\t\texpect(ve", "se, 10.0);\n\t\t\tconst vertexAttrib2fError = gl.getError(", "2\n\t * @tc.desc Test vertexAttrib2f.\n\t */\n\tit('testVert", "2fError);\n\t\t\texpect(vertexAttrib2fError).assertEqual(0", "tart ...66');\n\t\t\tgl.vertexAttrib2f(1, 10.0);\n\t\t\tconst ", "f\n\t * @tc.desc Test vertexAttrib2f.\n\t */\n\tit('testVert", "tart ...66');\n\t\t\tgl.vertexAttrib2f(1, 10.0, 10.0);\n\t\t\t", ");\n\t\t\tconsole.info(\"vertexAttrib2fvError: \" + vertexAt", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib2fv(1, floatArray);\n\t\t", "Attrib2fvError: \" + vertexAttrib2fvError);\n\t\t\texpect(v", "r\n\t * @tc.desc Test vertexAttrib2f.\n\t */\n\tit('testVert", "3\n\t * @tc.desc Test vertexAttrib2f.\n\t */\n\tit('testVert", "tart ...66');\n\t\t\tgl.vertexAttrib2f(-1, 10.0, 10.0);\n\t\t", "fvError);\n\t\t\texpect(vertexAttrib2fvError).assertEqual(", "v\n\t * @tc.desc Test vertexAttrib2fv.\n\t */\n\tit('testVer", "r\n\t * @tc.desc Test vertexAttrib2fv.\n\t */\n\tit('testVer", "tart ...66');\n\t\t\tgl.vertexAttrib2f(false, 10.0);\n\t\t\tco"], "files": ["WebGL.test07.js", "WebGL.test06.js", "webGL.test.js", "WebGL.test10.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "vertexAttrib3f", "api_method_all": "vertexAttrib3f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 88, "since": 7, "api_used": "\u662f", "lines": ["e.info('jsWebGL testvertexAttrib3f test start ...' + J", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib3fv(false, floatArray)", "fvError);\n\t\t\texpect(vertexAttrib3fvError).assertEqual(", "3\n\t * @tc.desc Test vertexAttrib3f.\n\t */\n\tit('testVert", ");\n\t\t\tconsole.info(\"vertexAttrib3fvError: \" + vertexAt", "ringify(gl));\n\t\t\tgl.vertexAttrib3f(1, 10.0);\n\t\t\tconst ", "2\n\t * @tc.desc Test vertexAttrib3f.\n\t */\n\tit('testVert", "ringify(gl));\n\t\t\tgl.vertexAttrib3f(false, 10.0);\n\t\t\tco", "e.info('jsWebGL testvertexAttrib3f test start ...66');", "v\n\t * @tc.desc Test vertexAttrib3fv.\n\t */\n\tit('testVer", "(1, 10.0);\n\t\t\tconst vertexAttrib3fError = gl.getError(", "3fError);\n\t\t\texpect(vertexAttrib3fError).assertEqual(g", "Attrib3fvError: \" + vertexAttrib3fvError);\n\t\t\texpect(v", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib3fv(1, floatArray);\n\t\t", "oatArray);\n\t\t\tconst vertexAttrib3fvError = gl.getError", "xAttrib3fError: \" + vertexAttrib3fError);\n\t\t\texpect(ve", ");\n\t\t\tconsole.info(\"vertexAttrib3fError: \" + vertexAtt", "f\n\t * @tc.desc Test vertexAttrib3f.\n\t */\n\tit('testVert", "r\n\t * @tc.desc Test vertexAttrib3fv.\n\t */\n\tit('testVer", "ringify(gl));\n\t\t\tgl.vertexAttrib3f(1, 10.0, 10.0, 10.0", "ringify(gl));\n\t\t\tgl.vertexAttrib3f(-1, 10.0, 10.0, 10.", "r\n\t * @tc.desc Test vertexAttrib3f.\n\t */\n\tit('testVert", "se, 10.0);\n\t\t\tconst vertexAttrib3fError = gl.getError(", "3fError);\n\t\t\texpect(vertexAttrib3fError).assertEqual(0", ".0, 10.0);\n\t\t\tconst vertexAttrib3fError = gl.getError("], "files": ["WebGL.test07.js", "WebGL.test06.js", "webGL.test.js", "WebGL.test10.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "vertexAttrib4f", "api_method_all": "vertexAttrib4f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;", "api_type": "", "api_args_count": 5, "api_level": 21, "api_used_count": 80, "since": 7, "api_used": "\u662f", "lines": ["\t\t\tconsole.log(\"testvertexAttrib4f has failed for \" + ", "fvError);\n\t\t\texpect(vertexAttrib4fvError).assertEqual(", "xAttrib4fError: \" + vertexAttrib4fError);\n\t\t\texpect(ve", "ringify(gl));\n\t\t\tgl.vertexAttrib4f(false, 10.0);\n\t\t\tco", "4fError);\n\t\t\texpect(vertexAttrib4fError).assertEqual(0", "4fError);\n\t\t\texpect(vertexAttrib4fError).assertEqual(g", "ringify(gl));\n\t\t\tgl.vertexAttrib4f(1, 10.0);\n\t\t\tconst ", "f\n\t * @tc.desc Test vertexAttrib4f.\n\t */\n\tit('testVert", "se, 10.0);\n\t\t\tconst vertexAttrib4fError = gl.getError(", "r\n\t * @tc.desc Test vertexAttrib4f.\n\t */\n\tit('testVert", "r\n\t * @tc.desc Test vertexAttrib4fv.\n\t */\n\tit('testVer", "v\n\t * @tc.desc Test vertexAttrib4fv.\n\t */\n\tit('testVer", "(1, 10.0);\n\t\t\tconst vertexAttrib4fError = gl.getError(", ");\n\t\t\tconsole.info(\"vertexAttrib4fvError: \" + vertexAt", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib4fv(1, floatArray);\n\t\t", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib4fv(false, floatArray)", "oatArray);\n\t\t\tconst vertexAttrib4fvError = gl.getError", "Attrib4fvError: \" + vertexAttrib4fvError);\n\t\t\texpect(v", "ringify(gl));\n\t\t\tgl.vertexAttrib4f(1, 10.0, 10.0, 10.0", "ringify(gl));\n\t\t\tgl.vertexAttrib4f(-1, 10.0, 10.0, 10.", ");\n\t\t\tconsole.info(\"vertexAttrib4fError: \" + vertexAtt", "2\n\t * @tc.desc Test vertexAttrib4f.\n\t */\n\tit('testVert", ".0, 10.0);\n\t\t\tconst vertexAttrib4fError = gl.getError("], "files": ["WebGL.test07.js", "WebGL.test06.js", "webGL.test.js", "WebGL.test10.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "vertexAttrib1fv", "api_method_all": "vertexAttrib1fv(index: GLuint, values: Float32List): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": [");\n\t\t\tconsole.info(\"vertexAttrib1fvError: \" + vertexAtt", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib1fv(false, floatArray);", "r\n\t * @tc.desc Test vertexAttrib1fv.\n\t */\n\tit('testVert", "Attrib1fvError: \" + vertexAttrib1fvError);\n\t\t\texpect(ve", "v\n\t * @tc.desc Test vertexAttrib1fv.\n\t */\n\tit('testVert", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib1fv(1, floatArray);\n\t\t\t", "oatArray);\n\t\t\tconst vertexAttrib1fvError = gl.getError(", "fvError);\n\t\t\texpect(vertexAttrib1fvError).assertEqual(0"], "files": ["WebGL.test07.js", "WebGL.test06.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "vertexAttrib2fv", "api_method_all": "vertexAttrib2fv(index: GLuint, values: Float32List): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["oatArray);\n\t\t\tconst vertexAttrib2fvError = gl.getError(", "Attrib2fvError: \" + vertexAttrib2fvError);\n\t\t\texpect(ve", "fvError);\n\t\t\texpect(vertexAttrib2fvError).assertEqual(0", "r\n\t * @tc.desc Test vertexAttrib2fv.\n\t */\n\tit('testVert", ");\n\t\t\tconsole.info(\"vertexAttrib2fvError: \" + vertexAtt", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib2fv(1, floatArray);\n\t\t\t", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib2fv(false, floatArray);", "v\n\t * @tc.desc Test vertexAttrib2fv.\n\t */\n\tit('testVert"], "files": ["WebGL.test07.js", "WebGL.test06.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "vertexAttrib3fv", "api_method_all": "vertexAttrib3fv(index: GLuint, values: Float32List): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["v\n\t * @tc.desc Test vertexAttrib3fv.\n\t */\n\tit('testVert", ");\n\t\t\tconsole.info(\"vertexAttrib3fvError: \" + vertexAtt", "Attrib3fvError: \" + vertexAttrib3fvError);\n\t\t\texpect(ve", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib3fv(1, floatArray);\n\t\t\t", "r\n\t * @tc.desc Test vertexAttrib3fv.\n\t */\n\tit('testVert", "oatArray);\n\t\t\tconst vertexAttrib3fvError = gl.getError(", "fvError);\n\t\t\texpect(vertexAttrib3fvError).assertEqual(0", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib3fv(false, floatArray);"], "files": ["WebGL.test07.js", "WebGL.test06.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "vertexAttrib4fv", "api_method_all": "vertexAttrib4fv(index: GLuint, values: Float32List): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": [", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib4fv(1, floatArray);\n\t\t\t", ");\n\t\t\tconsole.info(\"vertexAttrib4fvError: \" + vertexAtt", "oatArray);\n\t\t\tconst vertexAttrib4fvError = gl.getError(", "fvError);\n\t\t\texpect(vertexAttrib4fvError).assertEqual(0", "r\n\t * @tc.desc Test vertexAttrib4fv.\n\t */\n\tit('testVert", "v\n\t * @tc.desc Test vertexAttrib4fv.\n\t */\n\tit('testVert", "Attrib4fvError: \" + vertexAttrib4fvError);\n\t\t\texpect(ve", ", 5.0, 2.0]);\n\t\t\tgl.vertexAttrib4fv(false, floatArray);"], "files": ["WebGL.test07.js", "WebGL.test06.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "vertexAttribPointer", "api_method_all": "vertexAttribPointer(index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, offset: GLintptr): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 124, "since": 7, "api_used": "\u662f", "lines": ["2\n\t * @tc.desc Test vertexAttribPointer.\n\t */\n\tit('testVert", "\u914d\u7ed9a_Position\u53d8\u91cf\n\t\tgl.vertexAttribPointer(aPosition, 2, gl.FL", "3\n\t * @tc.desc Test vertexAttribPointer.\n\t */\n\tit('testVert", ");\n\t\t\tconsole.info(\"vertexAttribPointerError: \" + vertexAtt", "j, 'normal');\n\t\t\tgl.vertexAttribPointer(locNormal, 4, gl.BY", "r\n\t * @tc.desc Test vertexAttribPointer.\n\t */\n\tit('testVert", "t\n\t * @tc.desc Test vertexAttribPointer.\n\t */\n\tit('testVert", "bj, 'texUV');\n\t\t\tgl.vertexAttribPointer(locTexUV, 2, gl.UNS", "ringify(gl));\n\t\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, fal", "6\n\t * @tc.desc Test vertexAttribPointer.\n\t */\n\tit('testVert", "5\n\t * @tc.desc Test vertexAttribPointer.\n\t */\n\tit('testVert", "rtexPosition);\n\t\tgl.vertexAttribPointer(aVertexPosition, 4,", " 'position');\n\t\t\tgl.vertexAttribPointer(locPosition, 3, gl.", "ringify(gl));\n\t\t\tgl.vertexAttribPointer(0, 3, gl.SHORT, fal", ", 20, 16);\n\t\t\tconst vertexAttribPointerError = gl.getError(", "ringify(gl));\n\t\t\tgl.vertexAttribPointer(2, 2, gl.UNSIGNED_S", ", 20, 12);\n\t\t\tconst vertexAttribPointerError = gl.getError(", "erError);\n\t\t\texpect(vertexAttribPointerError).assertEqual(g", "rtexPosition);\n\t\tgl.vertexAttribPointer(aVertexPosition, 3,", "ibPointerError: \" + vertexAttribPointerError);\n\t\t\texpect(ve", "4\n\t * @tc.desc Test vertexAttribPointer.\n\t */\n\tit('testVert", "ringify(gl));\n\t\t\tgl.vertexAttribPointer(1, 4, gl.BYTE, true", "erError);\n\t\t\texpect(vertexAttribPointerError).assertEqual(0", "e, 20, 0);\n\t\t\tconst vertexAttribPointerError = gl.getError("], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "viewport", "api_method_all": "viewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;", "api_type": "", "api_args_count": 4, "api_level": 21, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["ringify(gl));\n\t\t\tgl.viewport(false, 2, 3, 4);\n\t\t", " 2, 3, 4);\n\t\t\tconst viewportError = gl.getError(", "\"viewportError: \" + viewportError);\n\t\t\texpect(vi", "r\n\t * @tc.desc Test viewport.\n\t */\n\tit('testView", "t\n\t * @tc.desc Test viewport.\n\t */\n\tit('testView", ");\n\t\t\tconsole.info(\"viewportError: \" + viewportE", "rtError);\n\t\t\texpect(viewportError).assertEqual(0", "ringify(gl));\n\t\t\tgl.viewport(1, 2, 3, 4);\n\t\t\tcon"], "files": ["WebGL.test07.js", "WebGL.test06.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DEPTH_BUFFER_BIT", "api_method_all": "readonly DEPTH_BUFFER_BIT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["ar\");\n\t\tgl.clear(gl.DEPTH_BUFFER_BIT);\n\t\tvar float32Arra"], "files": ["webGL.test.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_BUFFER_BIT", "api_method_all": "readonly STENCIL_BUFFER_BIT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["ar\");\n\t\tgl.clear(gl.STENCIL_BUFFER_BIT);\n\t\tvar float32Arra"], "files": ["webGL.test.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "COLOR_BUFFER_BIT", "api_method_all": "readonly COLOR_BUFFER_BIT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 26, "since": 7, "api_used": "\u662f", "lines": ["04000\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t\tconsole.info(\"", " 400, 1080,\n\t\t\t-gl2.COLOR_BUFFER_BIT, -gl2.NEAREST);\n\t\tc", "\t// \u6e05\u7a7a<canvas>\n\t\t// COLOR_BUFFER_BIT\t0x00004000\n\t\tgl.cle", ", 0, 400, 1080, gl2.COLOR_BUFFER_BIT, gl2.NEAREST);\n\t\tco", "ar\");\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tvar float32Arra", "-0, 400, 1080, -gl2.COLOR_BUFFER_BIT, -gl2\n\t\t\t.NEAREST);"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test01.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "POINTS", "api_method_all": "readonly POINTS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 18, "since": 7, "api_used": "\u662f", "lines": ["\n\t\tgl.drawArrays(gl.POINTS, 0, -8);\n\t\tlet erro", "lementsInstanced(gl.POINTS, 2, gl.UNSIGNED_SHO", "lementsInstanced(gl.POINTS, false, gl.UNSIGNED", "rawRangeElements(gl.POINTS, false, 7, 8, gl.UN", "rawRangeElements(gl.POINTS, 0, 7, 8, gl.UNSIGN", "\tgl.drawElements(gl.POINTS, 8, gl.UNSIGNED_INT", "wArraysInstanced(gl.POINTS, false, 8, 4);\n\n\t\tl", "\n\t\tgl.drawArrays(gl.POINTS, 0, 8);\n\t\tlet error", "wArraysInstanced(gl.POINTS, 0, 8, 4);\n\n\t\tlet e"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test01.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LINES", "api_method_all": "readonly LINES: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["\n\t\tgl.drawArrays(gl.LINES, 0, 8);\n\t\tlet error", "\tgl.drawElements(gl.LINES, 8, gl.UNSIGNED_INT", "6');\n\t\tgl.enable(gl.LINES);\n\t\tgl.polygonOffse"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test08.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LINE_LOOP", "api_method_all": "readonly LINE_LOOP: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["\n\t\tgl.drawArrays(gl.LINE_LOOP, 0, 8);\n\t\tlet error", "\t\tgl.pixelStorei(gl.LINE_LOOP, 8);\n\t\tconst pixelS", "\tgl.drawElements(gl.LINE_LOOP, 8, gl.UNSIGNED_INT"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test08.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LINE_STRIP", "api_method_all": "readonly LINE_STRIP: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["6');\n\t\tgl.enable(gl.LINE_STRIP);\n\t\tgl.polygonOffse", "\tgl.drawElements(gl.LINE_STRIP, 8, gl.UNSIGNED_BYT", "\n\t\tgl.drawArrays(gl.LINE_STRIP, 0, 8);\n\t\tlet error"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test08.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TRIANGLES", "api_method_all": "readonly TRIANGLES: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 40, "since": 7, "api_used": "\u662f", "lines": ["ansformFeedback(gl2.TRIANGLES);\n\t\t\tgl2.pauseTrans", "\n\t\tgl.drawArrays(gl.TRIANGLES, 0, 3);\n\n\n\t\tlet err", "nTransformFeedback('TRIANGLES');\n\n\t\tlet errorCode", "\n\t\tgl.drawArrays(gl.TRIANGLES, 0, 8);\n\t\tgl.vertex", "ansformFeedback(gl2.TRIANGLES);\n\n\n\t\tlet errorCode", "ansformFeedback(gl2.TRIANGLES);\n\n\t\tconst isTransf", "ransformFeedback(gl.TRIANGLES);\n\t\tgl.drawArrays(g", "\n\t\tgl.drawArrays(gl.TRIANGLES, 0, 3);\n\t\tgl2.endTr", "\n\t\tgl.drawArrays(gl.TRIANGLES, 0, 3);\n\n\t\tlet erro", "\tgl.drawElements(gl.TRIANGLES, indices.length, gl", "\n\t\tgl.drawArrays(gl.TRIANGLES, 0, 8);\n\t\tlet error", "6');\n\t\tgl.enable(gl.TRIANGLES);\n\t\tgl.polygonOffse"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test01.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TRIANGLE_STRIP", "api_method_all": "readonly TRIANGLE_STRIP: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["6');\n\t\tgl.enable(gl.TRIANGLE_STRIP);\n\t\tgl.polygonOffse", "\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 8);\n\t\tlet error", "AY_BUFFER, 1024, gl.TRIANGLE_STRIP);\n\t\tgl.bufferSubDat"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test05.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TRIANGLE_FAN", "api_method_all": "readonly TRIANGLE_FAN: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["gl.bufferSubData(gl.TRIANGLE_FAN, 512, new ArrayBuff", "AY_BUFFER, 1024, gl.TRIANGLE_FAN);\n\t\tgl.bufferSubDat", "\n\t\tgl.drawArrays(gl.TRIANGLE_FAN, 0, 8);\n\t\tlet error"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ZERO", "api_method_all": "readonly ZERO: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["lue).assertEqual(gl.ZERO);\n\n\t\t//deleteContex", "T_COLOR, gl.ONE, gl.ZERO);\n\n\t\tconst blendFun", "\n\n\t\tgl.blendFunc(gl.ZERO, gl.ONE);\n\n\t\tconst "], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ONE", "api_method_all": "readonly ONE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 74, "since": 7, "api_used": "\u662f", "lines": ["_CONSTANT_ALPHA, gl.ONE_MINUS_CONSTANT_ALPH", "ER, 4, gl.DEPTH_COMPONENT16, 256, 256);\n\t\tc", "\t\tgl.pixelStorei(gl.ONE_MINUS_SRC_COLOR, -1", ".drawBuffers([\"gl2.NONE\", \"gl2.COLOR_ATTACH", "STANT_ALPHA, gl\n\t\t\t.ONE_MINUS_CONSTANT_ALPH", "_VERTEX_UNIFORM_COMPONENTS);\n\t\t// returns \"", "orageMultisample(gl.ONE_MINUS_DST_COLOR, -0", "RAGMENT_UNIFORM_COMPONENTS);\n\t\t// returns \"", "ER, 4, gl.DEPTH_COMPONENT24, 256, 256);\n\t\tc", ", 0, -1, -1, -1, gl.ONE_MINUS_SRC_ALPHA, vi", " ArrayBuffer(8), gl.ONE_MINUS_DST_ALPHA);\n\t", "FeedbackOutputs, gl.ONE_MINUS_DST_COLOR);\n\t", "FFER_ATTACHMENT_COMPONENT_TYPE);\n\t\tconsole.", "l.DST_ALPHA, gl\n\t\t\t.ONE_MINUS_DST_ALPHA);\n\n", "opyBufferSubData(gl.ONE_MINUS_CONSTANT_ALPH", "R, gl.DST_COLOR, gl.ONE);\n\n\t\tconst blendFun", "X_VERTEX_OUTPUT_COMPONENTS);\n\t\t// returns \"", "EDBACK_SEPARATE_COMPONENTS);\n\t\t// returns \"", "endFunc(gl.ZERO, gl.ONE);\n\n\t\tconst blendFun", "tEqual(gl.DEPTH_COMPONENT16);\n\t\tdone();\n\t})", "t(x).assertEqual(gl.ONE);\n\t\tvar x1 = 0x8892", "\t\tgl.pixelStorei(gl.ONE_MINUS_SRC_COLOR, 8)", " ArrayBuffer(8), gl.ONE_MINUS_SRC_ALPHA);\n\t", "R, gl.DST_COLOR, gl.ONE, gl.ZERO);\n\n\t\tconst", "UFFER, gl.DEPTH_COMPONENT16, 256, 256);\n\n\t\t", "D, 0, gl2.DEPTH_COMPONENT, 512, 512, 0, gl.", "te(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl", "ACK_INTERLEAVED_COMPONENTS);\n\t\t// returns \"", "ER, 4, gl.DEPTH_COMPONENT32F, 256, 256);\n\t\t", "18).assertEqual(gl.NONE);\n\t\tvar x19 =0x9242", "gl2.MAX_VARYING_COMPONENTS);\n\t\t// returns \"", "URATE, 0, 0, gl\n\t\t\t.ONE_MINUS_CONSTANT_COLO", "2.drawBuffers([gl2.NONE, gl2.COLOR_ATTACHME", "_FRAGMENT_INPUT_COMPONENTS);\n\t\t// returns \""], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test08.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test05.js", "WebGL.test04.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SRC_COLOR", "api_method_all": "readonly SRC_COLOR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 20, "since": 7, "api_used": "\u662f", "lines": ["Storei(gl.ONE_MINUS_SRC_COLOR, -1);\n\t\tconst pixel", "lue).assertEqual(gl.SRC_COLOR);\n\n\t\t//deleteContex", "ter).assertEqual(gl.SRC_COLOR);\n\n\t\t//deleteContex", "\n\n\t\tgl.blendFunc(gl.SRC_COLOR, gl.DST_COLOR);\n\n\t\t", "AY_BUFFER, 1024, gl.SRC_COLOR);\n\t\tconst bufferDat", "\n\n\t\tgl.blendFunc(gl.SRC_COLOR);\n\n\t\tconst blendFun", "Storei(gl.ONE_MINUS_SRC_COLOR, 8);\n\t\tconst pixelS", "lendFuncSeparate(gl.SRC_COLOR, gl.DST_COLOR, gl.O", "ressedTexImage2D(gl.SRC_COLOR, -1, 0x83F3, -1, [-"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test05.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ONE_MINUS_SRC_COLOR", "api_method_all": "readonly ONE_MINUS_SRC_COLOR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["\t\tgl.pixelStorei(gl.ONE_MINUS_SRC_COLOR, -1);\n\t\tconst pixel", "\t\tgl.pixelStorei(gl.ONE_MINUS_SRC_COLOR, 8);\n\t\tconst pixelS"], "files": ["webGL.test.js", "WebGL.test04.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SRC_ALPHA", "api_method_all": "readonly SRC_ALPHA: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 40, "since": 7, "api_used": "\u662f", "lines": ["AY_BUFFER, 1024, gl.SRC_ALPHA);\n\t\tconst bufferDat", "opyBufferSubData(gl.SRC_ALPHA_SATURATE, gl.SRC_AL", "ter).assertEqual(gl.SRC_ALPHA);\n\n\t\t//deleteContex", "\n\n\t\tgl.blendFunc(gl.SRC_ALPHA, gl.DST_ALPHA);\n\n\t\t", "lendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_A", ".bindBufferBase(-gl.SRC_ALPHA_SATURATE, -0, progr", "_ALPHA_SATURATE, gl.SRC_ALPHA_SATURATE, 0, 0, gl\n", "lue).assertEqual(gl.SRC_ALPHA);\n\n\t\t//deleteContex", "_ALPHA_SATURATE, gl.SRC_ALPHA_SATURATE, 0, 0, len", "_ALPHA_SATURATE, gl.SRC_ALPHA_SATURATE, 0, 0, 0);", "getBufferSubData(gl.SRC_ALPHA_SATURATE, 0, new Fl", "1, -1, gl.ONE_MINUS_SRC_ALPHA, view);\n\t\tconst rea", "l2.texStorage2D(-gl.SRC_ALPHA_SATURATE, -0, -gl.R", "vertices), gl.BLEND_SRC_ALPHA);\n\t\tvar arrBuffer =", "er(8), gl.ONE_MINUS_SRC_ALPHA);\n\t\tconst bufferDat", "ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.DST_ALPHA, gl\n\t"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test05.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ONE_MINUS_SRC_ALPHA", "api_method_all": "readonly ONE_MINUS_SRC_ALPHA: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [", 0, -1, -1, -1, gl.ONE_MINUS_SRC_ALPHA, view);\n\t\tconst rea", " ArrayBuffer(8), gl.ONE_MINUS_SRC_ALPHA);\n\t\tconst bufferDat", "te(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.DST_ALPHA, gl\n\t"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test05.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DST_ALPHA", "api_method_all": "readonly DST_ALPHA: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["lendFuncSeparate(gl.DST_ALPHA, gl.CONSTANT_COLOR,", "nc(gl.SRC_ALPHA, gl.DST_ALPHA);\n\n\t\tconst blendFun", "MINUS_SRC_ALPHA, gl.DST_ALPHA, gl\n\t\t\t.ONE_MINUS_D", "tParameter(gl.BLEND_DST_ALPHA);\n\t\t// returns \"339", "ter).assertEqual(gl.DST_ALPHA);\n\n\t\t//deleteContex", "er(8), gl.ONE_MINUS_DST_ALPHA);\n\t\tconst bufferDat", "A, gl\n\t\t\t.ONE_MINUS_DST_ALPHA);\n\n\t\tconst blendFun"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test08.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ONE_MINUS_DST_ALPHA", "api_method_all": "readonly ONE_MINUS_DST_ALPHA: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["l.DST_ALPHA, gl\n\t\t\t.ONE_MINUS_DST_ALPHA);\n\n\t\tconst blendFun", " ArrayBuffer(8), gl.ONE_MINUS_DST_ALPHA);\n\t\tconst bufferDat"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DST_COLOR", "api_method_all": "readonly DST_COLOR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 17, "since": 7, "api_used": "\u662f", "lines": ["Height, gl.RGBA, gl.DST_COLOR,\n\t\t\t0);\n\t\tconst rea", "sample(gl.ONE_MINUS_DST_COLOR, -0, -0, 256, 256);", "l.TEXTURE_2D, 0, gl.DST_COLOR, 512, 512, 0, gl.RG", "te(gl.SRC_COLOR, gl.DST_COLOR, gl.ONE);\n\n\t\tconst ", "tputs, gl.ONE_MINUS_DST_COLOR);\n\t\tconst transform", "nc(gl.SRC_COLOR, gl.DST_COLOR);\n\n\t\tconst blendFun", "te(gl.SRC_COLOR, gl.DST_COLOR, gl.ONE, gl.ZERO);\n", "Height, gl.RGBA, gl.DST_COLOR,\n\t\t\tpixels);\n\t\tcons", "ufferHeight, -1, gl.DST_COLOR, -2);\n\t\tconst readP"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ONE_MINUS_DST_COLOR", "api_method_all": "readonly ONE_MINUS_DST_COLOR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["FeedbackOutputs, gl.ONE_MINUS_DST_COLOR);\n\t\tconst transform", "orageMultisample(gl.ONE_MINUS_DST_COLOR, -0, -0, 256, 256);"], "files": ["webGL.test.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SRC_ALPHA_SATURATE", "api_method_all": "readonly SRC_ALPHA_SATURATE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 18, "since": 7, "api_used": "\u662f", "lines": ["_ALPHA_SATURATE, gl.SRC_ALPHA_SATURATE, 0, 0, gl\n\t\t\t.ONE_M", ".bindBufferBase(-gl.SRC_ALPHA_SATURATE, -0, programobject)", "opyBufferSubData(gl.SRC_ALPHA_SATURATE, gl.SRC_ALPHA_SATUR", "_ALPHA_SATURATE, gl.SRC_ALPHA_SATURATE, 0, 0, length);\n\t\tc", "_ALPHA_SATURATE, gl.SRC_ALPHA_SATURATE, 0, 0, 0);\n\t\tconst ", "getBufferSubData(gl.SRC_ALPHA_SATURATE, 0, new Float32Arra", "l2.texStorage2D(-gl.SRC_ALPHA_SATURATE, -0, -gl.RGB8, 256,"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FUNC_ADD", "api_method_all": "readonly FUNC_ADD: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 28, "since": 7, "api_used": "\u662f", "lines": ["gl.blendEquation(gl.FUNC_ADD);\n\n\t\tconst blendEqu", "ue2).assertEqual(gl.FUNC_ADD);\n\n\t\t//deleteContex", "lue).assertEqual(gl.FUNC_ADD);\n\n\t\t//deleteContex", "EquationSeparate(gl.FUNC_ADD, gl.FUNC_SUBTRACT);", "EquationSeparate(gl.FUNC_ADD, gl.FUNC_REVERSE_SU"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BLEND_EQUATION", "api_method_all": "readonly BLEND_EQUATION: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 28, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.BLEND_EQUATION_ALPHA);\n\t\tconsole.i", " gl.getParameter(gl.BLEND_EQUATION_RGB);\n\t\tconsole.inf", " gl.getParameter(gl.BLEND_EQUATION);\n\t\t// returns \"339"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BLEND_EQUATION_RGB", "api_method_all": "readonly BLEND_EQUATION_RGB: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 22, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.BLEND_EQUATION_RGB);\n\t\tconsole.info(\"b"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test13.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BLEND_EQUATION_ALPHA", "api_method_all": "readonly BLEND_EQUATION_ALPHA: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.BLEND_EQUATION_ALPHA);\n\t\tconsole.info(\"b"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FUNC_SUBTRACT", "api_method_all": "readonly FUNC_SUBTRACT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 16, "since": 7, "api_used": "\u662f", "lines": ["EquationSeparate(gl.FUNC_SUBTRACT, gl.FUNC_REVERSE_SU", "lue).assertEqual(gl.FUNC_SUBTRACT);\n\n\t\t//deleteContex", "ate(gl.FUNC_ADD, gl.FUNC_SUBTRACT);\n\n\t\tconst blendEqu", "gl.blendEquation(gl.FUNC_SUBTRACT);\n\n\t\tconst blendEqu", "512, 0, gl.RGB8, gl.FUNC_SUBTRACT, -1);\n\t\tconst texIm", "getBufferSubData(gl.FUNC_SUBTRACT, 0, new Float32Arra"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test01.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FUNC_REVERSE_SUBTRACT", "api_method_all": "readonly FUNC_REVERSE_SUBTRACT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["l.FUNC_SUBTRACT, gl.FUNC_REVERSE_SUBTRACT);\n\n\t\tconst blendEqu", "ate(gl.FUNC_ADD, gl.FUNC_REVERSE_SUBTRACT);\n\n\t\tconst blendEqu", "lue).assertEqual(gl.FUNC_REVERSE_SUBTRACT);\n\n\t\t//deleteContex", "gl.blendEquation(gl.FUNC_REVERSE_SUBTRACT);\n\n\t\tconst blendEqu"], "files": ["webGL.test.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BLEND_DST_RGB", "api_method_all": "readonly BLEND_DST_RGB: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["getBufferSubData(gl.BLEND_DST_RGB, 0, new Int32Array("], "files": ["webGL.test.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BLEND_SRC_RGB", "api_method_all": "readonly BLEND_SRC_RGB: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.BLEND_SRC_RGB);\n\t\tconsole.info(\"b", " gl.getParameter(gl.BLEND_SRC_RGB)\n\t\tconsole.info(\"bl"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BLEND_DST_ALPHA", "api_method_all": "readonly BLEND_DST_ALPHA: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.BLEND_DST_ALPHA);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BLEND_SRC_ALPHA", "api_method_all": "readonly BLEND_SRC_ALPHA: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["Array(vertices), gl.BLEND_SRC_ALPHA);\n\t\tvar arrBuffer ="], "files": ["webGL.test.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "CONSTANT_COLOR", "api_method_all": "readonly CONSTANT_COLOR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["0, gl\n\t\t\t.ONE_MINUS_CONSTANT_COLOR);\n\t\tconst copyBuffe", "ufferHeight, -1, gl.CONSTANT_COLOR,\n\t\t\t0);\n\t\tconst rea", "te(gl.DST_ALPHA, gl.CONSTANT_COLOR, gl.CONSTANT_ALPHA,"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ONE_MINUS_CONSTANT_COLOR", "api_method_all": "readonly ONE_MINUS_CONSTANT_COLOR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["URATE, 0, 0, gl\n\t\t\t.ONE_MINUS_CONSTANT_COLOR);\n\t\tconst copyBuffe"], "files": ["webGL.test.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "CONSTANT_ALPHA", "api_method_all": "readonly CONSTANT_ALPHA: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 12, "since": 7, "api_used": "\u662f", "lines": ["512, 0, gl.RGB8, gl.CONSTANT_ALPHA, z);\n\t\tconst texIma", "ALPHA, gl.ONE_MINUS_CONSTANT_ALPHA, 0, 0, 0);\n\t\tconst ", "512, 0, gl.RGB8, gl.CONSTANT_ALPHA, -1);\n\t\tconst texIm", ".CONSTANT_COLOR, gl.CONSTANT_ALPHA, gl\n\t\t\t.ONE_MINUS_C", "A, gl\n\t\t\t.ONE_MINUS_CONSTANT_ALPHA);\n\n\t\tconst blendFun", "ubData(gl.ONE_MINUS_CONSTANT_ALPHA, gl.ONE_MINUS_CONST"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ONE_MINUS_CONSTANT_ALPHA", "api_method_all": "readonly ONE_MINUS_CONSTANT_ALPHA: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["STANT_ALPHA, gl\n\t\t\t.ONE_MINUS_CONSTANT_ALPHA);\n\n\t\tconst blendFun", "opyBufferSubData(gl.ONE_MINUS_CONSTANT_ALPHA, gl.ONE_MINUS_CONST", "_CONSTANT_ALPHA, gl.ONE_MINUS_CONSTANT_ALPHA, 0, 0, 0);\n\t\tconst "], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BLEND_COLOR", "api_method_all": "readonly BLEND_COLOR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.BLEND_COLOR);\n\t\tconsole.info(\"b", " gl.getParameter(gl.BLEND_COLOR);\n\t\t// Float32Array"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ARRAY_BUFFER", "api_method_all": "readonly ARRAY_BUFFER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 402, "since": 7, "api_used": "\u662f", "lines": ["\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\t\t/", "fferData(gl.ELEMENT_ARRAY_BUFFER, 1024, gl.SRC_ALPHA", "\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n\t\t//bind", "\n\t\tgl.bufferData(gl.ARRAY_BUFFER, 1024, gl.SRC_ALPHA", "\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n\t\tconst ", "fferData(gl.ELEMENT_ARRAY_BUFFER, new ArrayBuffer(8)", "\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\tgl.buff", "\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\tconst i", "\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\t\tc", "\n\t\tgl.bufferData(gl.ARRAY_BUFFER, 1024, gl.TRIANGLE_", "tBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_USAGE);\n", " gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n\t\tconsole", "\n\t\tgl.bufferData(gl.ARRAY_BUFFER, new ArrayBuffer(8)", "\n\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices.buffer, g", "\n\t\tgl.bufferData(gl.ARRAY_BUFFER, 1024, gl.SRC_COLOR", "\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\tconst b", "\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\tgl2.buf", "\n\t\tgl.bufferData(gl.ARRAY_BUFFER, 1024, gl.INVALID_E", "fferData(gl.ELEMENT_ARRAY_BUFFER, -1, gl.INVALID_VAL", "tBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n\t", "\n\t\tgl.bufferData(gl.ARRAY_BUFFER, 1024, gl.STATIC_DR", "\t\tgl2.bufferData(gl.ARRAY_BUFFER, 1024, gl.STATIC_DR", "0, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING);\n\t\tconst i"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ELEMENT_ARRAY_BUFFER", "api_method_all": "readonly ELEMENT_ARRAY_BUFFER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 52, "since": 7, "api_used": "\u662f", "lines": ["\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, 1024, gl.TRIANGLE_", "\t\tgl2.bufferData(gl.ELEMENT_ARRAY_BUFFER, new ArrayBuffer(8)", "\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new ArrayBuffer(8)", "\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n\t\tgl.buff", "\tgl2.bufferData(gl2.ELEMENT_ARRAY_BUFFER, 1024, gl2.DYNAMIC_", "gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 512, new ArrayBuff", "\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n\n\t\t//bind", "\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, 1024, gl.STATIC_DR", "\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, -1, gl.INVALID_VAL", "opyBufferSubData(gl.ELEMENT_ARRAY_BUFFER, gl.ARRAY_BUFFER, 0", "tBufferParameter(gl.ELEMENT_ARRAY_BUFFER, gl.BUFFER_SIZE);\n\t", "2.bufferSubData(gl2.ELEMENT_ARRAY_BUFFER, 512, new ArrayBuff", "getBufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Float32Arra", "\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, 1024, gl.SRC_ALPHA", " gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING);\n\t\t// retu", "\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, 1024, gl.DYNAMIC_D"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ARRAY_BUFFER_BINDING", "api_method_all": "readonly ARRAY_BUFFER_BINDING: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n\t\tconsole.info(\"b", "arameter(gl.ELEMENT_ARRAY_BUFFER_BINDING);\n\t\t// returns \"339", "0, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING);\n\t\tconst isBuffer "], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test15.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ELEMENT_ARRAY_BUFFER_BINDING", "api_method_all": "readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STREAM_DRAW", "api_method_all": "readonly STREAM_DRAW: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["D_BUFFER, 1024, gl2.STREAM_DRAW);\n\t\tconst errorCode", "AD_BUFFER, 1024, gl.STREAM_DRAW);\n\t\tconst bufferDat", " ArrayBuffer(8), gl.STREAM_DRAW);\n\t\tconst bufferDat"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STATIC_DRAW", "api_method_all": "readonly STATIC_DRAW: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 153, "since": 7, "api_used": "\u662f", "lines": ["AY_BUFFER, 1024, gl.STATIC_DRAW);\n\t\tconst bufferDat", "AY_BUFFER, 1024, gl.STATIC_DRAW);\n\t\tconst bufferUsa", "bufferData(1024, gl.STATIC_DRAW);\n\t\tconst bufferSiz", "vertices.buffer, gl.STATIC_DRAW);\n\n\t\tvar aPosition ", "AD_BUFFER, 1024, gl.STATIC_DRAW);\n\t\tconst bufferDat", "Array(vertices), gl.STATIC_DRAW);\n\t\tvar arrBuffer =", "AY_BUFFER, 1024, gl.STATIC_DRAW);\n\t\tgl.bufferSubDat", "TE_BUFFER, 1024, gl.STATIC_DRAW);\n\t\tconst bufferDat", "age).assertEqual(gl.STATIC_DRAW);\n\t\tdone();\n\t});\n\n\t", " ArrayBuffer(8), gl.STATIC_DRAW);\n\t\tconst bufferDat", "AY_BUFFER, 1024, gl.STATIC_DRAW);\n\t\tconst bufferSiz", "32Array(length), gl.STATIC_DRAW);\n\t\tgl2.copyBufferS", "CK_BUFFER, 1024, gl.STATIC_DRAW);\n\t\tconst bufferDat", "RM_BUFFER, 1024, gl.STATIC_DRAW);\n\t\tconst bufferDat", "AY_BUFFER, data, gl.STATIC_DRAW);\n\n\t\tgl.bindBuffer(", "AY_BUFFER, data, gl.STATIC_DRAW);\n\t\tgl.bindBuffer(g"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DYNAMIC_DRAW", "api_method_all": "readonly DYNAMIC_DRAW: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["AY_BUFFER, 1024, gl.DYNAMIC_DRAW);\n\t\tconst bufferDat", "Y_BUFFER, 1024, gl2.DYNAMIC_DRAW);\n\t\tconst errorCode", " ArrayBuffer(8), gl.DYNAMIC_DRAW);\n\t\tconst bufferDat"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BUFFER_SIZE", "api_method_all": "readonly BUFFER_SIZE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 18, "since": 7, "api_used": "\u662f", "lines": [".TRANSFORM_FEEDBACK_BUFFER_SIZE, 0);\n\t\t\tconst typeG", "rameter(-gl.UNIFORM_BUFFER_SIZE, null);\n\t\t\tconst ty", ".TRANSFORM_FEEDBACK_BUFFER_SIZE, -0);\n\t\t\tconst type", "ameter(gl.MAX_RENDERBUFFER_SIZE);\n\t\t// returns \"339", "gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n\t\tconsole.info('b", "NT_ARRAY_BUFFER, gl.BUFFER_SIZE);\n\t\tconsole.info('b", "arameter(gl.UNIFORM_BUFFER_SIZE, 0);\n\t\t\tconst typeG"], "files": ["webGL.test.js", "WebGL.test02.js", "WebGL.test09.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BUFFER_USAGE", "api_method_all": "readonly BUFFER_USAGE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["gl.ARRAY_BUFFER, gl.BUFFER_USAGE);\n\t\tconsole.info('b"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test02.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "CURRENT_VERTEX_ATTRIB", "api_method_all": "readonly CURRENT_VERTEX_ATTRIB: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["tVertexAttrib(0, gl.CURRENT_VERTEX_ATTRIB);\n\t\tconsole.info(\"g"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRONT", "api_method_all": "readonly FRONT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 38, "since": 7, "api_used": "\u662f", "lines": [");\n\t\tgl.cullFace(gl.FRONT_AND_BACK);\n\t\t// \u9700\u8981 ", "ncilMaskSeparate(gl.FRONT_AND_BACK, 110101);\n", "ncilMaskSeparate(gl.FRONT, 110101);\n\t\tconst s", "ter).assertEqual(gl.FRONT);\n\t\tdone();\n\t});\n\n\n", "ter).assertEqual(gl.FRONT_AND_BACK);\n\t\tdone()", "tencilOpSeparate(gl.FRONT, gl.INCR, gl.DECR, ", "ncilFuncSeparate(gl.FRONT, gl.LESS, 0.2, 1110", ");\n\t\tgl.cullFace(gl.FRONT_AND_BACK);\n\t\tgl.fro", "ter).assertEqual(gl.FRONT_AND_BACK);\n\n\t\t//del", "ncilFuncSeparate(gl.FRONT_AND_BACK, gl.LEQUAL", "ncilMaskSeparate(gl.FRONT);\n\t\tconsole.info(\"s", ");\n\t\tgl.cullFace(gl.FRONT);\n\t\tgl.frontFace(gl", " gl.getParameter(gl.FRONT_FACE);\n\t\t// returns", ");\n\t\tgl.cullFace(gl.FRONT);\n\t\t// \u9700\u8981 CULL_FACE", "ter).assertEqual(gl.FRONT);\n\n\t\t//deleteContex", "ncilFuncSeparate(gl.FRONT);\n\t\tconsole.info(\"s"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test01.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BACK", "api_method_all": "readonly BACK: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 147, "since": 7, "api_used": "\u662f", "lines": ["se(gl.TRANSFORM_FEEDBACK_BUFFER, 0, buffer);", "k(gl2.TRANSFORM_FEEDBACK, transformFeedback)", "llFace(gl.FRONT_AND_BACK);\n\t\tgl.frontFace(gl", "llFace(gl.FRONT_AND_BACK);\n\t\t// \u9700\u8981 CULL_FACE", "y(gl2.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN,", "tEqual(gl.FRONT_AND_BACK);\n\n\t\t//deleteContex", "e(-gl.TRANSFORM_FEEDBACK_BUFFER, -0, buffer)", "a(gl2.TRANSFORM_FEEDBACK_BUFFER, 1024, gl2.D", "er(gl.TRANSFORM_FEEDBACK_BUFFER_SIZE, 0);\n\t\t", "r(-gl.TRANSFORM_FEEDBACK_BUFFER_SIZE, -0);\n\t", "ck(gl.TRANSFORM_FEEDBACK, transformFeedback)", "ter).assertEqual(gl.BACK);\n\t\tdone();\n\t});\n\n\n", "r(gl2.TRANSFORM_FEEDBACK_BUFFER, buffer);\n\t\t", "r(-gl.TRANSFORM_FEEDBACK_BUFFER_START, -1);\n", "tEqual(gl.FRONT_AND_BACK);\n\t\tdone();\n\t});\n\n\t", "e(-gl.TRANSFORM_FEEDBACK_BUFFER, -0, buffer,", "l2.drawBuffers([gl2.BACK, gl2.COLOR_ATTACHME", "ge(gl.TRANSFORM_FEEDBACK_BUFFER, 1, buffer, ", "er(gl.TRANSFORM_FEEDBACK_BUFFER_BINDING,\n\t\t\t", "a(gl2.TRANSFORM_FEEDBACK_BUFFER, 1024, gl.ST", "a(gl2.TRANSFORM_FEEDBACK_BUFFER, new ArrayBu", "ter).assertEqual(gl.BACK);\n\n\t\t//deleteContex", ");\n\t\tgl.cullFace(gl.BACK);\n\t\tgl.frontFace(gl", "ter).assertEqual(gl.BACK);\n\t\tdone();\n\t});\n\n\t", ");\n\t\tgl.cullFace(gl.BACK);\n\t\t// \u9700\u8981 CULL_FACE", "e(-gl.TRANSFORM_FEEDBACK_BUFFER, -1, buffer,", "er(gl.TRANSFORM_FEEDBACK_BUFFER_START, 0);\n\t"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRONT_AND_BACK", "api_method_all": "readonly FRONT_AND_BACK: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 16, "since": 7, "api_used": "\u662f", "lines": [");\n\t\tgl.cullFace(gl.FRONT_AND_BACK);\n\t\tgl.frontFace(gl", "ter).assertEqual(gl.FRONT_AND_BACK);\n\n\t\t//deleteContex", ");\n\t\tgl.cullFace(gl.FRONT_AND_BACK);\n\t\t// \u9700\u8981 CULL_FACE", "ter).assertEqual(gl.FRONT_AND_BACK);\n\t\tdone();\n\t});\n\n\n", "ncilFuncSeparate(gl.FRONT_AND_BACK, gl.LEQUAL, 0.2, 11", "ncilMaskSeparate(gl.FRONT_AND_BACK, 110101);\n\t\tconst s", "ter).assertEqual(gl.FRONT_AND_BACK);\n\t\tdone();\n\t});\n\n\t"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test01.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "CULL_FACE", "api_method_all": "readonly CULL_FACE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 58, "since": 7, "api_used": "\u662f", "lines": ["2 = gl.isEnabled(gl.CULL_FACE);\n\t\tconsole.info(\"i", " gl.getParameter(gl.CULL_FACE_MODE);\n\t\tconsole.in", "));\n\n\t\tgl.enable(gl.CULL_FACE);\n\t\tconst isEnabled", "l));\n\t\tgl.enable(gl.CULL_FACE);\n\t\tgl.cullFace(gl.", "\");\n\n\t\tgl.enable(gl.CULL_FACE);\n\t\tgl.cullFace(gl.", " gl.getParameter(gl.CULL_FACE_MODE)\n\t\tconsole.inf", "(gl.FRONT);\n\t\t// \u9700\u8981 CULL_FACE_MODE \u5e38\u91cf\u6765\u68c0\u67e5\u5f53\u524d\u591a\u8fb9\u5f62\u5254\u9664\u6a21\u5f0f", "d = gl.isEnabled(gl.CULL_FACE);\n\t\t// true\n\t\tconso", "_AND_BACK);\n\t\t// \u9700\u8981 CULL_FACE_MODE \u5e38\u91cf\u6765\u68c0\u67e5\u5f53\u524d\u591a\u8fb9\u5f62\u5254\u9664\u6a21\u5f0f", "1 = gl.isEnabled(gl.CULL_FACE);\n\t\tconsole.info(\"i", "r);\n\t\tgl.disable(gl.CULL_FACE);\n\t\texpect(frontFac", "e(gl.BACK);\n\t\t// \u9700\u8981 CULL_FACE_MODE \u5e38\u91cf\u6765\u68c0\u67e5\u5f53\u524d\u591a\u8fb9\u5f62\u5254\u9664\u6a21\u5f0f", "\u65b9\u6cd5\uff1a\n\t\tgl.disable(gl.CULL_FACE);\n\t\tconst isEnabled", "\");\n\n\t\tgl.enable(gl.CULL_FACE);\n\n\t\tconst isEnable"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test01.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BLEND", "api_method_all": "readonly BLEND: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 100, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.BLEND_COLOR);\n\t\t// Float3", " gl.getParameter(gl.BLEND_EQUATION_RGB);\n\t\tco", "getBufferSubData(gl.BLEND_DST_RGB, 0, new Int", "e\");\n\t\tgl.enable(gl.BLEND);\n\t\tconst isEnabled", "\");\n\n\t\tgl.enable(gl.BLEND);\n\n\t\tgl.blendFuncSe", " gl.getParameter(gl.BLEND_SRC_RGB)\n\t\tconsole.", ");\n\n\t\tgl.disable(gl.BLEND);\n\t\t// \u8981\u68c0\u67e5\u529f\u80fd\u662f\u5426\u88ab\u7981\u7528\uff0c\u8bf7", "\u65b9\u6cd5\uff1a\n\t\tgl.disable(gl.BLEND);\n\t\tconst isEnabled", "2 = gl.isEnabled(gl.BLEND);\n\t\t// true\n\t\tconso", " gl.getParameter(gl.BLEND_COLOR);\n\t\tconsole.i", "d = gl.isEnabled(gl.BLEND);\n\t\t// false\n\t\tcons", "\");\n\n\t\tgl.enable(gl.BLEND);\n\n\t\tgl.blendFunc(g", "d = gl.isEnabled(gl.BLEND);\n\t\t// true\n\t\tconso", "));\n\n\t\tgl.enable(gl.BLEND);\n\t\tconst isEnabled", " gl.getParameter(gl.BLEND_DST_ALPHA);\n\t\t// re", " gl.getParameter(gl.BLEND_EQUATION_ALPHA);\n\t\t", " gl.getParameter(gl.BLEND_SRC_RGB);\n\t\tconsole", "\");\n\n\t\tgl.enable(gl.BLEND);\n\n\t\tconst isEnable", "1 = gl.isEnabled(gl.BLEND);\n\t\tconsole.info(\"i", "2 = gl.isEnabled(gl.BLEND);\n\t\tconsole.info(\"i", "Array(vertices), gl.BLEND_SRC_ALPHA);\n\t\tvar a"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test05.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DITHER", "api_method_all": "readonly DITHER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 32, "since": 7, "api_used": "\u662f", "lines": [");\n\n\t\tgl.disable(gl.DITHER);\n\t\t// \u8981\u68c0\u67e5\u529f\u80fd\u662f\u5426\u88ab\u7981\u7528\uff0c\u8bf7", " (0)\n\t\tgl.enable(gl.DITHER);\n\t\tconst errorCode", "\");\n\n\t\tgl.enable(gl.DITHER);\n\n\t\tconst isEnable", "2 = gl.isEnabled(gl.DITHER);\n\t\t// false\n\t\tcons", "2 = gl.isEnabled(gl.DITHER);\n\t\t// true\n\t\tconso", "d = gl.isEnabled(gl.DITHER);\n\t\t// true\n\t\tconso", "e\");\n\t\tgl.enable(gl.DITHER);\n\t\tconst isEnabled", "d = gl.isEnabled(gl.DITHER);\n\t\t// false\n\t\tcons"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test13.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_TEST", "api_method_all": "readonly STENCIL_TEST: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 46, "since": 7, "api_used": "\u662f", "lines": ["\");\n\n\t\tgl.enable(gl.STENCIL_TEST);\n\n\t\tconst isEnable", "d = gl.isEnabled(gl.STENCIL_TEST);\n\t\t// true\n\t\tconso", "));\n\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tconst isEnabled", "\u65b9\u6cd5\uff1a\n\t\tgl.disable(gl.STENCIL_TEST);\n\t\tconst isEnabled", "1 = gl.isEnabled(gl.STENCIL_TEST);\n\t\tconsole.info(\"i", "));\n\t\tgl.disable(gl.STENCIL_TEST);\n\t\tconst isEnabled", "l));\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tgl.stencilFuncS", "l));\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tgl.stencilOp(gl", "l));\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tconst stencilFu", "2 = gl.isEnabled(gl.STENCIL_TEST);\n\t\tconsole.info(\"i", "l));\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tgl.stencilOpSep", "l));\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tconst stencilOp", "l));\n\t\tgl.enable(gl.STENCIL_TEST);\n\t\tgl.stencilFunc("], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DEPTH_TEST", "api_method_all": "readonly DEPTH_TEST: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 28, "since": 7, "api_used": "\u662f", "lines": ["\");\n\n\t\tgl.enable(gl.DEPTH_TEST);\n\t\tgl.depthFunc(gl", "d = gl.isEnabled(gl.DEPTH_TEST);\n\t\t// false\n\t\tcons", "\");\n\n\t\tgl.enable(gl.DEPTH_TEST);\n\n\t\tconst isEnable", ");\n\n\t\tgl.disable(gl.DEPTH_TEST);\n\t\t// \u8981\u68c0\u67e5\u529f\u80fd\u662f\u5426\u88ab\u7981\u7528\uff0c\u8bf7", "2 = gl.isEnabled(gl.DEPTH_TEST);\n\t\t// true\n\t\tconso", "e\");\n\t\tgl.enable(gl.DEPTH_TEST);\n\t\tconst isEnabled", "d = gl.isEnabled(gl.DEPTH_TEST);\n\t\t// true\n\t\tconso"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SCISSOR_TEST", "api_method_all": "readonly SCISSOR_TEST: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 20, "since": 7, "api_used": "\u662f", "lines": ["d = gl.isEnabled(gl.SCISSOR_TEST);\n\t\t// false\n\t\tcons", "e\");\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t\tconst isEnabled", "test\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t\t// set the scis", ");\n\n\t\tgl.disable(gl.SCISSOR_TEST);\n\t\t// \u8981\u68c0\u67e5\u529f\u80fd\u662f\u5426\u88ab\u7981\u7528\uff0c\u8bf7", "2 = gl.isEnabled(gl.SCISSOR_TEST);\n\t\t// true\n\t\tconso", "\");\n\n\t\tgl.enable(gl.SCISSOR_TEST);\n\n\t\tconst isEnable", "d = gl.isEnabled(gl.SCISSOR_TEST);\n\t\t// true\n\t\tconso", "ain\n\t\tgl.disable(gl.SCISSOR_TEST);\n\n\t\tdone();\n\t});\n\n", "l));\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t\tconst scissorEr"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test06.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "POLYGON_OFFSET_FILL", "api_method_all": "readonly POLYGON_OFFSET_FILL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 22, "since": 7, "api_used": "\u662f", "lines": ["2 = gl.isEnabled(gl.POLYGON_OFFSET_FILL);\n\t\tconsole.info(\"i", "1 = gl.isEnabled(gl.POLYGON_OFFSET_FILL);\n\t\tconsole.info(\"i", ");\n\n\t\tgl.disable(gl.POLYGON_OFFSET_FILL);\n\t\t// \u8981\u68c0\u67e5\u529f\u80fd\u662f\u5426\u88ab\u7981\u7528\uff0c\u8bf7", "\u65b9\u6cd5\uff1a\n\t\tgl.disable(gl.POLYGON_OFFSET_FILL);\n\t\tconst isEnabled", "\");\n\n\t\tgl.enable(gl.POLYGON_OFFSET_FILL);\n\n\t\tconst isEnable", "6');\n\t\tgl.enable(gl.POLYGON_OFFSET_FILL);\n\t\tgl.polygonOffse", "d = gl.isEnabled(gl.POLYGON_OFFSET_FILL);\n\t\t// true\n\t\tconso", "d = gl.isEnabled(gl.POLYGON_OFFSET_FILL);\n\t\t// false\n\t\tcons", "e\");\n\t\tgl.enable(gl.POLYGON_OFFSET_FILL);\n\t\tconst isEnabled", "));\n\n\t\tgl.enable(gl.POLYGON_OFFSET_FILL);\n\t\tconst isEnabled", "2 = gl.isEnabled(gl.POLYGON_OFFSET_FILL);\n\t\t// true\n\t\tconso"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test08.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SAMPLE_ALPHA_TO_COVERAGE", "api_method_all": "readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["\");\n\n\t\tgl.enable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\n\t\tconst isEnable", "d = gl.isEnabled(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t// true\n\t\tconso"], "files": ["webGL.test.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SAMPLE_COVERAGE", "api_method_all": "readonly SAMPLE_COVERAGE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 40, "since": 7, "api_used": "\u662f", "lines": ["(x6).assertEqual(gl.SAMPLE_COVERAGE_INVERT);\n\t\tvar x7 =", "2 = gl.isEnabled(gl.SAMPLE_COVERAGE);\n\t\tconsole.info(\"i", "_COVERAGE_VALUE and SAMPLE_COVERAGE_INVERT constants.\n\t", "l));\n\t\tgl.enable(gl.SAMPLE_COVERAGE);\n\t\tgl.sampleCovera", " gl.getParameter(gl.SAMPLE_COVERAGE_INVERT); // false\n\t", "d = gl.isEnabled(gl.SAMPLE_COVERAGE);\n\t\t// true\n\t\tconso", "));\n\n\t\tgl.enable(gl.SAMPLE_COVERAGE);\n\t\tconst isEnabled", "\");\n\n\t\tgl.enable(gl.SAMPLE_COVERAGE);\n\n\t\tconst isEnable", "1 = gl.isEnabled(gl.SAMPLE_COVERAGE);\n\t\tconsole.info(\"i", "\u65b9\u6cd5\uff1a\n\t\tgl.disable(gl.SAMPLE_COVERAGE);\n\t\tconst isEnabled", "(x5).assertEqual(gl.SAMPLE_COVERAGE_VALUE);\n\t\tvar x6 = ", "e values, query the SAMPLE_COVERAGE_VALUE and SAMPLE_CO", " gl.getParameter(gl.SAMPLE_COVERAGE_VALUE); // 0.5\n\t\tco"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "NO_ERROR", "api_method_all": "readonly NO_ERROR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 631, "since": 7, "api_used": "\u662f", "lines": ["ode).assertEqual(gl.NO_ERROR);\n\t\tgl2.deleteSampl", "ode).assertEqual(gl.NO_ERROR);\n\n\t\t//deleteContex", "ode).assertEqual(gl.NO_ERROR);\n\t\t//deleteContext"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "INVALID_ENUM", "api_method_all": "readonly INVALID_ENUM: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 122, "since": 7, "api_used": "\u662f", "lines": ["ror).assertEqual(gl.INVALID_ENUM);\n\t\tdone();\n\t})\n\n\t/", "AY_BUFFER, 1024, gl.INVALID_ENUM);\n\t\tconst bufferDat", "ror).assertEqual(gl.INVALID_ENUM);\n\t\tdone();\n\t})\n\n\n\t", "l.getError(); // gl.INVALID_ENUM;\n\t\tconsole.info('ge", "\t\tgl2.readBuffer(gl.INVALID_ENUM);\n\t\tconst readBuffe", "ode).assertEqual(gl.INVALID_ENUM);\n\t\t//deleteContext", "ror).assertEqual(gl.INVALID_ENUM);\n\t\t\t//deleteContex", "ode).assertEqual(gl.INVALID_ENUM);\n\t\tgl2.deleteSampl"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "INVALID_VALUE", "api_method_all": "readonly INVALID_VALUE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 87, "since": 7, "api_used": "\u662f", "lines": ["RRAY_BUFFER, -1, gl.INVALID_VALUE);\n\t\tconst bufferDat", "ode).assertEqual(gl.INVALID_VALUE);\n\t\tdone();\n\t});\n\n\n", "ror).assertEqual(gl.INVALID_VALUE);\n\t\tdone();\n\t})\n\n\n\t", "ror).assertEqual(gl.INVALID_VALUE);\n\t\t\t//deleteContex", "ode).assertEqual(gl.INVALID_VALUE);\n\t\tdone();\n\t});\n\n\t", "\t\t// \u5982\u679c\u5bbd\u5ea6\u6216\u9ad8\u5ea6\u4e3a\u8d1f\u503c\uff0c gl.INVALID_VALUE(DEC:1281)\u5219\u4f1a\u5f15\u53d1\u9519\u8bef\n\t\tc", "ror).assertEqual(gl.INVALID_VALUE);\n\t\tdone();\n\t})\n\n\t/", "ode).assertEqual(gl.INVALID_VALUE);\n\t\t//deleteContext", "ode).assertEqual(gl.INVALID_VALUE);\n\n\t\t//deleteContex"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "INVALID_OPERATION", "api_method_all": "readonly INVALID_OPERATION: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 230, "since": 7, "api_used": "\u662f", "lines": ["ode).assertEqual(gl.INVALID_OPERATION);\n\t\tgl2.deleteSampl", "ode).assertEqual(gl.INVALID_OPERATION);\n\t\t//deleteContext", "ror).assertEqual(gl.INVALID_OPERATION);\n\t\tdone();\n\t})\n\n\t/", "ode).assertEqual(gl.INVALID_OPERATION);\n\t\tdone();\n\t});\n\n\n"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test13.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "OUT_OF_MEMORY", "api_method_all": "readonly OUT_OF_MEMORY: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["= (errorCode === gl.OUT_OF_MEMORY)\n\t\tconsole.info(\"js"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "CW", "api_method_all": "readonly CW: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["\n\t\tgl.frontFace(gl.CCW);\n\t\tconst frontFace", ";\n\t\tgl.frontFace(gl.CW);\n\t\tconst frontFace"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "CCW", "api_method_all": "readonly CCW: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [";\n\t\tgl.frontFace(gl.CCW);\n\t\tconst frontFace"], "files": ["WebGL.test10.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LINE_WIDTH", "api_method_all": "readonly LINE_WIDTH: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.LINE_WIDTH);\n\t\tconsole.info(\"l", "arameter(gl.ALIASED_LINE_WIDTH_RANGE);\n\t\tconsole.i"], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ALIASED_POINT_SIZE_RANGE", "api_method_all": "readonly ALIASED_POINT_SIZE_RANGE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ALIASED_LINE_WIDTH_RANGE", "api_method_all": "readonly ALIASED_LINE_WIDTH_RANGE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE);\n\t\tconsole.info(\"l"], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "CULL_FACE_MODE", "api_method_all": "readonly CULL_FACE_MODE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 22, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.CULL_FACE_MODE)\n\t\tconsole.info(\"cu", " gl.getParameter(gl.CULL_FACE_MODE);\n\t\tconsole.info('f", "_AND_BACK);\n\t\t// \u9700\u8981 CULL_FACE_MODE \u5e38\u91cf\u6765\u68c0\u67e5\u5f53\u524d\u591a\u8fb9\u5f62\u5254\u9664\u6a21\u5f0f\u3002\n\t\tc", "(gl.FRONT);\n\t\t// \u9700\u8981 CULL_FACE_MODE \u5e38\u91cf\u6765\u68c0\u67e5\u5f53\u524d\u591a\u8fb9\u5f62\u5254\u9664\u6a21\u5f0f\u3002\n\t\tc", "e(gl.BACK);\n\t\t// \u9700\u8981 CULL_FACE_MODE \u5e38\u91cf\u6765\u68c0\u67e5\u5f53\u524d\u591a\u8fb9\u5f62\u5254\u9664\u6a21\u5f0f\u3002\n\t\tc"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRONT_FACE", "api_method_all": "readonly FRONT_FACE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.FRONT_FACE);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DEPTH_RANGE", "api_method_all": "readonly DEPTH_RANGE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.DEPTH_RANGE);\n\t\t// Float32Array", ";\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u8303\u56f4\uff0c\u8bf7\u67e5\u8be2DEPTH_RANGE\u8fd4\u56de\u4e00\u4e2a\u7684\u5e38\u91cfFloat32Array\n"], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DEPTH_WRITEMASK", "api_method_all": "readonly DEPTH_WRITEMASK: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 12, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.DEPTH_WRITEMASK);\n\t\t// false\n\t\tcons", "\t\t// \u8981\u83b7\u5f97\u5f53\u524d\u7684\u6df1\u5ea6\u906e\u7f69\u503c\uff0c\u4f20\u5165 DEPTH_WRITEMASK \u5e38\u91cf\uff0c\u8fd4\u56de  Boolean.\n\t\tc"], "files": ["webGL.test.js", "WebGL.test03.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DEPTH_CLEAR_VALUE", "api_method_all": "readonly DEPTH_CLEAR_VALUE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 22, "since": 7, "api_used": "\u662f", "lines": [";\n\t\t//\u82e5\u8981\u83b7\u53d6\u5f53\u524d\u6df1\u5ea6\u6e05\u9664\u503c\uff0c\u67e5\u8be2DEPTH_CLEAR_VALUE \u5e38\u91cf\u3002\n\t\tconst clearDe", " gl.getParameter(gl.DEPTH_CLEAR_VALUE);\n\t\tconsole.info(\"w", " gl.getParameter(gl.DEPTH_CLEAR_VALUE);\n\t\t// 0.5\n\t\tconsol"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DEPTH_FUNC", "api_method_all": "readonly DEPTH_FUNC: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 32, "since": 7, "api_used": "\u662f", "lines": [";\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u51fd\u6570\uff0c\u8bf7\u67e5\u8be2DEPTH_FUNC\u5e38\u91cf\u3002\n\t\tconst depthPar", " gl.getParameter(gl.DEPTH_FUNC);\n\t\tconsole.info(\"d"], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_CLEAR_VALUE", "api_method_all": "readonly STENCIL_CLEAR_VALUE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 18, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_CLEAR_VALUE);\n\t\tconsole.info(\"w", ";\n\t\t//\u8981\u83b7\u53d6\u5f53\u524d\u6a21\u677f\u6e05\u9664\u503c\uff0c\u8bf7\u67e5\u8be2STENCIL_CLEAR_VALUE \u5e38\u91cf\u3002\n\t\tconst clearSt"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_FUNC", "api_method_all": "readonly STENCIL_FUNC: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_FUNC);\n\t\tconsole.info(\"s"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_FAIL", "api_method_all": "readonly STENCIL_FAIL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_FAIL);\n\t\tconsole.info(\"s"], "files": ["webGL.test.js", "WebGL.test13.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_PASS_DEPTH_FAIL", "api_method_all": "readonly STENCIL_PASS_DEPTH_FAIL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_PASS_DEPTH_PASS", "api_method_all": "readonly STENCIL_PASS_DEPTH_PASS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n\t\t// returns \"339"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_REF", "api_method_all": "readonly STENCIL_REF: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_REF);\n\t\t// returns \"339"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_VALUE_MASK", "api_method_all": "readonly STENCIL_VALUE_MASK: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_VALUE_MASK);\n\t\t// returns \"339"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_WRITEMASK", "api_method_all": "readonly STENCIL_WRITEMASK: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_WRITEMASK);\n\t\tconsole.info(\"s"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test15.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_BACK_FUNC", "api_method_all": "readonly STENCIL_BACK_FUNC: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_BACK_FUNC);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_BACK_FAIL", "api_method_all": "readonly STENCIL_BACK_FAIL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_BACK_FAIL);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_BACK_PASS_DEPTH_FAIL", "api_method_all": "readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_BACK_PASS_DEPTH_FAIL);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_BACK_PASS_DEPTH_PASS", "api_method_all": "readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_BACK_PASS_DEPTH_PASS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_BACK_REF", "api_method_all": "readonly STENCIL_BACK_REF: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_BACK_REF);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_BACK_VALUE_MASK", "api_method_all": "readonly STENCIL_BACK_VALUE_MASK: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_BACK_VALUE_MASK);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_BACK_WRITEMASK", "api_method_all": "readonly STENCIL_BACK_WRITEMASK: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_BACK_WRITEMASK);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "VIEWPORT", "api_method_all": "readonly VIEWPORT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["getParameter(gl.MAX_VIEWPORT_DIMS);\n\t\tconsole.lo"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SCISSOR_BOX", "api_method_all": "readonly SCISSOR_BOX: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.SCISSOR_BOX);\n\t\tconsole.info(\"s"], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "COLOR_CLEAR_VALUE", "api_method_all": "readonly COLOR_CLEAR_VALUE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.COLOR_CLEAR_VALUE);\n\n\t\tvar float32Arr", " gl.getParameter(gl.COLOR_CLEAR_VALUE);\n\t\tconsole.info(\"w"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "COLOR_WRITEMASK", "api_method_all": "readonly COLOR_WRITEMASK: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 18, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.COLOR_WRITEMASK);\n\t\t// [true, true,", "\n\t\t// \u8981\u83b7\u53d6\u5f53\u524d\u7684\u989c\u8272\u63a9\u7801\uff0c\u8bf7\u67e5\u8be2COLOR_WRITEMASK\u8fd4\u56deArray.\n\t\tconst col"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "UNPACK_ALIGNMENT", "api_method_all": "readonly UNPACK_ALIGNMENT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.UNPACK_ALIGNMENT);\n\t\tconsole.info(\"p", "\t\tgl.pixelStorei(gl.UNPACK_ALIGNMENT, 8);\n\t\tconst pixelS", "\t\tgl.pixelStorei(gl.UNPACK_ALIGNMENT, 8);\n\t\t//\u8981\u68c0\u67e5\u50cf\u7d20\u6570\u636e\u7684\u6253\u5305", "\t\tgl.pixelStorei(gl.UNPACK_ALIGNMENT, 8);\n\t\tconst packVa"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "PACK_ALIGNMENT", "api_method_all": "readonly PACK_ALIGNMENT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 18, "since": 7, "api_used": "\u662f", "lines": ["gl.pixelStorei(gl.UNPACK_ALIGNMENT, 8);\n\t\tconst packVa", "\t\tgl.pixelStorei(gl.PACK_ALIGNMENT, 2);\n\t\tgl.pixelStor", "l.getParameter(gl.UNPACK_ALIGNMENT);\n\t\tconsole.info(\"p", "gl.pixelStorei(gl.UNPACK_ALIGNMENT, 8);\n\t\tconst pixelS", " gl.getParameter(gl.PACK_ALIGNMENT);\n\t\tconst unpackVal", "\t\tgl.pixelStorei(gl.PACK_ALIGNMENT, 4);\n\t\tgl.pixelStor", "gl.pixelStorei(gl.UNPACK_ALIGNMENT, 8);\n\t\t//\u8981\u68c0\u67e5\u50cf\u7d20\u6570\u636e\u7684\u6253\u5305"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MAX_TEXTURE_SIZE", "api_method_all": "readonly MAX_TEXTURE_SIZE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MAX_VIEWPORT_DIMS", "api_method_all": "readonly MAX_VIEWPORT_DIMS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.MAX_VIEWPORT_DIMS);\n\t\tconsole.log('vi"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SUBPIXEL_BITS", "api_method_all": "readonly SUBPIXEL_BITS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.SUBPIXEL_BITS);\n\t\t// returns \"339"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RED_BITS", "api_method_all": "readonly RED_BITS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.RED_BITS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "GREEN_BITS", "api_method_all": "readonly GREEN_BITS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.GREEN_BITS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BLUE_BITS", "api_method_all": "readonly BLUE_BITS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.BLUE_BITS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ALPHA_BITS", "api_method_all": "readonly ALPHA_BITS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.ALPHA_BITS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DEPTH_BITS", "api_method_all": "readonly DEPTH_BITS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.DEPTH_BITS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_BITS", "api_method_all": "readonly STENCIL_BITS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.STENCIL_BITS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "POLYGON_OFFSET_UNITS", "api_method_all": "readonly POLYGON_OFFSET_UNITS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.POLYGON_OFFSET_UNITS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "POLYGON_OFFSET_FACTOR", "api_method_all": "readonly POLYGON_OFFSET_FACTOR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.POLYGON_OFFSET_FACTOR);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_BINDING_2D", "api_method_all": "readonly TEXTURE_BINDING_2D: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.TEXTURE_BINDING_2D);\n\t\tconsole.info(\"t", "gl.getParameter(gl2.TEXTURE_BINDING_2D_ARRAY);\n\t\t// return"], "files": ["WebGL.test12.js", "webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SAMPLE_BUFFERS", "api_method_all": "readonly SAMPLE_BUFFERS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.SAMPLE_BUFFERS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SAMPLES", "api_method_all": "readonly SAMPLES: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 17, "since": 7, "api_used": "\u662f", "lines": ["l2.getQuery(gl2.ANY_SAMPLES_PASSED_CONSERVATIVE", "R, gl2.RENDERBUFFER_SAMPLES);\n\t\texpect(size).as", "FFER, gl2.RGBA8, gl.SAMPLES);\n\t\tconsole.info(\"s", ".beginQuery(gl2.ANY_SAMPLES_PASSED_CONSERVATIVE", "l2.getQuery(gl2.ANY_SAMPLES_PASSED, 0x8865);\n\t\t", "etParameter(gl2.MAX_SAMPLES);\n\t\t// returns \"339"], "files": ["WebGL.test12.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test01.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SAMPLE_COVERAGE_VALUE", "api_method_all": "readonly SAMPLE_COVERAGE_VALUE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 11, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.SAMPLE_COVERAGE_VALUE); // 0.5\n\t\tconst sa", " gl.getParameter(gl.SAMPLE_COVERAGE_VALUE); // 0.5\n\t\tconsole.", "e values, query the SAMPLE_COVERAGE_VALUE and SAMPLE_COVERAGE", "(x5).assertEqual(gl.SAMPLE_COVERAGE_VALUE);\n\t\tvar x6 = 0x80AB"], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SAMPLE_COVERAGE_INVERT", "api_method_all": "readonly SAMPLE_COVERAGE_INVERT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 11, "since": 7, "api_used": "\u662f", "lines": ["(x6).assertEqual(gl.SAMPLE_COVERAGE_INVERT);\n\t\tvar x7 = 0x1400", " gl.getParameter(gl.SAMPLE_COVERAGE_INVERT); // false\n\t\tconsol", "_COVERAGE_VALUE and SAMPLE_COVERAGE_INVERT constants.\n\t\tconst "], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "COMPRESSED_TEXTURE_FORMATS", "api_method_all": "readonly COMPRESSED_TEXTURE_FORMATS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.COMPRESSED_TEXTURE_FORMATS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DONT_CARE", "api_method_all": "readonly DONT_CARE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["ATE_MIPMAP_HINT, gl.DONT_CARE);\n\t\tgl.generateMipm"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FASTEST", "api_method_all": "readonly FASTEST: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["ATE_MIPMAP_HINT, gl.FASTEST);\n\t\tgl.generateMipm"], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "NICEST", "api_method_all": "readonly NICEST: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["ATE_MIPMAP_HINT, gl.NICEST);\n\t\tgl.generateMipm"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "GENERATE_MIPMAP_HINT", "api_method_all": "readonly GENERATE_MIPMAP_HINT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["(gl));\n\t\tgl.hint(gl.GENERATE_MIPMAP_HINT, gl.FASTEST);\n\t\tgl.", "(gl));\n\t\tgl.hint(gl.GENERATE_MIPMAP_HINT, gl.DONT_CARE);\n\t\tg", "(gl));\n\t\tgl.hint(gl.GENERATE_MIPMAP_HINT, gl.NICEST);\n\t\tgl.g"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BYTE", "api_method_all": "readonly BYTE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 159, "since": 7, "api_used": "\u662f", "lines": ["l.RGBA, gl.UNSIGNED_BYTE,\n\t\t\t\t1);\n\t\t\tconst t", "B8, gl\n\t\t\t.UNSIGNED_BYTE, z);\n\t\tconst texIma", "l.RGBA, gl.UNSIGNED_BYTE,\n\t\t\t\tbuffer);\n\t\t\tco", "l.RGBA, gl.UNSIGNED_BYTE,\n\t\t\t\t0);\n\t\t\tconst t", "BA, gl\n\t\t\t.UNSIGNED_BYTE, pixels);\n\t\tconst r", "l.RGB8, gl.UNSIGNED_BYTE,\n\t\t\tview);\n\t\tconst ", "l.RGBA, gl.UNSIGNED_BYTE, view);\n\t\tconst err", "lse, 4, gl.UNSIGNED_BYTE, 20, 16);\n\n\t\tlet er", "l.RGBA, gl.UNSIGNED_BYTE, 1);\n\t\t\tconst texSu", "l.RGBA, gl.UNSIGNED_BYTE,\n\t\t\t\tbuffer, 0);\n\t\t", "er(locNormal, 4, gl.BYTE, true, 20, 12);\n\t\t\t", ", 7, 8, gl.UNSIGNED_BYTE, 0);\n\n\t\tlet errorCo", "r(2, 4, gl.UNSIGNED_BYTE, 20, 16);\n\n\t\tlet er", "ribPointer(1, 4, gl.BYTE, true, 20, 12);\n\t\t\t", "gl.RGB, gl.UNSIGNED_BYTE, 0);\n\t\tconst errorC", "l.RGBA, gl.UNSIGNED_BYTE, 0);\n\t\t\tconst texIm", ".RGBA, gl2.UNSIGNED_BYTE, view, 0);\n\t\tconst ", ".RGBA, gl2.UNSIGNED_BYTE, 0);\n\t\tconst errorC", "l.RGB8, gl.UNSIGNED_BYTE, z);\n\t\tconst texIma", ".RGBA, gl2.UNSIGNED_BYTE, view);\n\t\tconst err", "ngth * Float32Array.BYTES_PER_ELEMENT);\n\t\tgl"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test13.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "UNSIGNED_BYTE", "api_method_all": "readonly UNSIGNED_BYTE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 131, "since": 7, "api_used": "\u662f", "lines": ["200, 1, gl.RGBA, gl.UNSIGNED_BYTE,\n\t\t\t\t1);\n\t\t\tconst t", " 512, gl2.RGBA, gl2.UNSIGNED_BYTE, 0);\n\t\tconst errorC", "512, 0, gl.RGB8, gl.UNSIGNED_BYTE, z);\n\t\tconst texIma", ", 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, view,\n\t\t\t0);\n\t\tcon", "[0, 0], gl.RGB8, gl.UNSIGNED_BYTE, z);\n\t\tconst texIma", ", 200, 1, gl.R8, gl.UNSIGNED_BYTE, 1);\n\t\t\tconst texSu", "l.LINE_STRIP, 8, gl.UNSIGNED_BYTE, 0);\n\n\t\tlet errorCo", "TS, false, 7, 8, gl.UNSIGNED_BYTE, 0);\n\n\t\tlet errorCo", ", 1, 0, gl.RGBA, gl.UNSIGNED_BYTE,\n\t\t\t\tbuffer);\n\t\t\tco", ", 1, 0, gl.RGBA, gl.UNSIGNED_BYTE,\n\t\t\t\t0);\n\t\t\tconst t", "200, 1, gl.RGBA, gl.UNSIGNED_BYTE,\n\t\t\t\tbuffer, 0);\n\t\t", "ht, gl.RGBA, gl\n\t\t\t.UNSIGNED_BYTE, pixels);\n\t\tconst r", ".LUMINANCE, gl\n\t\t\t\t.UNSIGNED_BYTE, 1);\n\t\t\tconst texSu", "l2.RGBA_INTEGER, gl.UNSIGNED_BYTE,\n\t\t\tview, 0);\n\t\tcon", "2, -0, -gl.RGB8, gl.UNSIGNED_BYTE,\n\t\t\tview);\n\t\tconst ", ", 1, 0, gl.RGBA, gl.UNSIGNED_BYTE,\n\t\t\t\tbuffer, 0);\n\t\t", "2, 512, gl.RGBA, gl.UNSIGNED_BYTE, view);\n\t\tconst err", " gl2.RG_INTEGER, gl.UNSIGNED_BYTE, view,\n\t\t\t0);\n\t\tcon", " 512, gl2.RGBA, gl2.UNSIGNED_BYTE, view);\n\t\tconst err", ", 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, 0);\n\t\t\tconst texIm", " 0, gl.RGB8, gl\n\t\t\t.UNSIGNED_BYTE, z);\n\t\tconst texIma", " 512, 0, gl.RGB, gl.UNSIGNED_BYTE, 0);\n\t\tconst errorC", "ointer(false, 4, gl.UNSIGNED_BYTE, 20, 16);\n\n\t\tlet er", "200, 1, gl.RGBA, gl.UNSIGNED_BYTE, 1);\n\t\t\tconst texSu", "POINTS, 0, 7, 8, gl.UNSIGNED_BYTE, 0);\n\n\t\tlet errorCo", "ibIPointer(2, 4, gl.UNSIGNED_BYTE, 20, 16);\n\n\t\tlet er", " 512, gl2.RGBA, gl2.UNSIGNED_BYTE, view, 0);\n\t\tconst ", "0, 1, gl.RGB8UI, gl.UNSIGNED_BYTE,\n\t\t\t\t1);\n\t\t\tconst t"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test13.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SHORT", "api_method_all": "readonly SHORT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 26, "since": 7, "api_used": "\u662f", "lines": [".RGBA, gl2.UNSIGNED_SHORT_5_5_5_1, view);\n\t\tc", "xUV, 2, gl.UNSIGNED_SHORT, true, 20, 16);\n\t\t\t", "r(2, 2, gl.UNSIGNED_SHORT, true, 20, 16);\n\t\t\t", ".RGBA, gl2.UNSIGNED_SHORT_5_6_5, view);\n\t\tcon", ".RGBA, gl2.UNSIGNED_SHORT_4_4_4_4, view);\n\t\tc", " 512, gl2.RGBA, gl2.SHORT, view);\n\t\tconst err", "length, gl.UNSIGNED_SHORT, 0);\n\n\t\tlet errorCo", "ribPointer(0, 3, gl.SHORT, false, 20, 0);\n\t\t\t", "NTS, 2, gl.UNSIGNED_SHORT, 0, 4);\n\n\t\tlet erro", " false, gl.UNSIGNED_SHORT, 0, 4);\n\n\t\tlet erro"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test13.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "UNSIGNED_SHORT", "api_method_all": "readonly UNSIGNED_SHORT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 22, "since": 7, "api_used": "\u662f", "lines": ["ter(locTexUV, 2, gl.UNSIGNED_SHORT, true, 20, 16);\n\t\t\t", " 512, gl2.RGBA, gl2.UNSIGNED_SHORT_5_6_5, view);\n\t\tcon", "l.POINTS, false, gl.UNSIGNED_SHORT, 0, 4);\n\n\t\tlet erro", " indices.length, gl.UNSIGNED_SHORT, 0);\n\n\t\tlet errorCo", "ed(gl.POINTS, 2, gl.UNSIGNED_SHORT, 0, 4);\n\n\t\tlet erro", " 512, gl2.RGBA, gl2.UNSIGNED_SHORT_5_5_5_1, view);\n\t\tc", " 512, gl2.RGBA, gl2.UNSIGNED_SHORT_4_4_4_4, view);\n\t\tc", "ribPointer(2, 2, gl.UNSIGNED_SHORT, true, 20, 16);\n\t\t\t"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test13.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "INT", "api_method_all": "readonly INT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 150, "since": 7, "api_used": "\u662f", "lines": ["A, gl2\n\t\t\t.UNSIGNED_INT_2_10_10_10_REV, vie", "A,\n\t\t\t\tgl2.UNSIGNED_INT_2_10_10_10_REV, 0);", "_SHADER_DERIVATIVE_HINT);\n\t\t// returns \"339", "gl.GENERATE_MIPMAP_HINT, gl.FASTEST);\n\t\tgl.", "gl.GENERATE_MIPMAP_HINT, gl.NICEST);\n\t\tgl.g", "\tgl.drawArrays(gl.POINTS, 0, 8);\n\t\tlet erro", "rraysInstanced(gl.POINTS, 0, 8, 4);\n\n\t\tlet ", "TEX_SHADER, gl.HIGH_INT);\n\t\tconsole.info('s", "wRangeElements(gl.POINTS, 0, 7, 8, gl.UNSIG", "0, 512, 512, gl2.RG_INTEGER, gl.FLOAT, view", ", 1, 1, 0, gl2.RGBA_INTEGER, gl.UNSIGNED_BY", "wRangeElements(gl.POINTS, false, 7, 8, gl.U", "NES, 8, gl.UNSIGNED_INT, 0);\n\n\t\tlet errorCo", " 512, gl2.RGBA, gl2.INT, view);\n\t\tconst err", "rraysInstanced(gl.POINTS, false, 8, 4);\n\n\t\t", "_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS)", "TexImage3D_UNSIGNED_INT_2_10_10_10_REV', 0,", "ameter(gl.ALIASED_POINT_SIZE_RANGE);\n\t\t// r", "mentsInstanced(gl.POINTS, 2, gl.UNSIGNED_SH", "\tgl.drawArrays(gl.POINTS, 0, -8);\n\t\tlet err", "G, gl2\n\t\t\t.UNSIGNED_INT_2_10_10_10_REV, vie", "\t.FLOAT_32_UNSIGNED_INT_24_8_REV, view, 0);", "gl.GENERATE_MIPMAP_HINT, gl.DONT_CARE);\n\t\tg", "l2.RG, gl2.UNSIGNED_INT_5_9_9_9_REV,\n\t\t\tvie", "l.drawElements(gl.POINTS, 8, gl.UNSIGNED_IN", "TexImage3D_UNSIGNED_INT_10F_11F_11F_REV\n\t *", "mentsInstanced(gl.POINTS, false, gl.UNSIGNE", "TexImage3D_UNSIGNED_INT_2_10_10_10_REV\n\t * ", "gl\n\t\t\t.RENDERBUFFER_INTERNAL_FORMAT);\n\t\texp", "G, gl2\n\t\t\t.UNSIGNED_INT_10F_11F_11F_REV, vi", "l2.RG, gl2.UNSIGNED_INT_24_8, view,\n\t\t\t0);\n", "MENT_SHADER, gl.LOW_INT);\n\t\tconsole.info('s", ", 512, 512, gl2.RED_INTEGER, gl.FLOAT, view", ", 512, 512, gl2.RGB_INTEGER, gl.FLOAT, view", "ER, gl.RENDERBUFFER_INTERNAL_FORMAT);\n\t\texp", "UI, 1, 1, 0, gl2.RG_INTEGER, gl.UNSIGNED_BY", "eedbackOutputs, -gl.INTERLEAVED_ATTRIBS);\n\t", "ADER, gl\n\t\t\t.MEDIUM_INT);\n\t\tconsole.info('s", " 512, 512, gl2.RGBA_INTEGER, gl.FLOAT, view", "RTEX_ATTRIB_ARRAY_POINTER);\n\t\tconsole.info(", "NTS, 8, gl.UNSIGNED_INT, 0);\n\n\t\tlet errorCo", "OOP, 8, gl.UNSIGNED_INT, 0);\n\n\t\tlet errorCo", "FeedbackOutputs, gl.INTERLEAVED_ATTRIBS);\n\t", "GB,\n\t\t\tgl2.UNSIGNED_INT_10F_11F_11F_REV, vi"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test06.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "UNSIGNED_INT", "api_method_all": "readonly UNSIGNED_INT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 56, "since": 7, "api_used": "\u662f", "lines": [", gl.RGBA, gl2\n\t\t\t\t.UNSIGNED_INT_5_9_9_9_REV, 0);\n\t\t", "\tit('testTexImage3D_UNSIGNED_INT_10F_11F_11F_REV', 0", ", 0, gl.RGB,\n\t\t\tgl2.UNSIGNED_INT_10F_11F_11F_REV, vi", "name testTexImage3D_UNSIGNED_INT_5_9_9_9_REV\n\t * @tc", "\tit('testTexImage3D_UNSIGNED_INT_2_10_10_10_REV', 0,", "\tit('testTexImage3D_UNSIGNED_INT_24_8', 0, async fun", "name testTexImage3D_UNSIGNED_INT_2_10_10_10_REV\n\t * ", ", 1, 0, gl2.RG, gl2.UNSIGNED_INT_5_9_9_9_REV,\n\t\t\tvie", "0, gl.RGBA,\n\t\t\t\tgl2.UNSIGNED_INT_10F_11F_11F_REV, 0)", "ts(gl.POINTS, 8, gl.UNSIGNED_INT, 0);\n\n\t\tlet errorCo", " 0, gl2.RG, gl2\n\t\t\t.UNSIGNED_INT_10F_11F_11F_REV, vi", "SAMPLER_2D,\n\t\t\t\tgl2.UNSIGNED_INT_SAMPLER_3D, gl2.UNS", "0, gl.RGBA,\n\t\t\t\tgl2.UNSIGNED_INT_2_10_10_10_REV, 0);", ", gl.RGBA, gl2\n\t\t\t\t.UNSIGNED_INT_24_8, 0);\n\t\t\tconst ", "\tit('testTexImage3D_UNSIGNED_INT_5_9_9_9_REV', 0, as", "G, gl2\n\t\t\t.FLOAT_32_UNSIGNED_INT_24_8_REV, view, 0);", "0, gl.RGBA, gl2\n\t\t\t.UNSIGNED_INT_2_10_10_10_REV, vie", "_2D_ARRAY, gl2\n\t\t\t\t.UNSIGNED_INT_SAMPLER_2D,\n\t\t\t\tgl2", "se {\n\t\t\ttype = [gl2.UNSIGNED_INT_VEC2, gl2.UNSIGNED_", "PLER_CUBE, gl2\n\t\t\t\t.UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\t", "D_INT_VEC3,\n\t\t\t\tgl2.UNSIGNED_INT_VEC4, gl2.FLOAT_MAT", "IGNED_INT_VEC2, gl2.UNSIGNED_INT_VEC3,\n\t\t\t\tgl2.UNSIG", "INT_SAMPLER_3D, gl2.UNSIGNED_INT_SAMPLER_CUBE, gl2\n\t", " 0, gl2.RG, gl2\n\t\t\t.UNSIGNED_INT_2_10_10_10_REV, vie", "name testTexImage3D_UNSIGNED_INT_24_8\n\t * @tc.desc T", "gl.LINE_LOOP, 8, gl.UNSIGNED_INT, 0);\n\n\t\tlet errorCo", "name testTexImage3D_UNSIGNED_INT_10F_11F_11F_REV\n\t *", ", 1, 0, gl2.RG, gl2.UNSIGNED_INT_24_8, view,\n\t\t\t0);\n", "nts(gl.LINES, 8, gl.UNSIGNED_INT, 0);\n\n\t\tlet errorCo"], "files": ["WebGL.test12.js", "webGL.test.js", "WebGL.test11.js", "WebGL.test13.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FLOAT", "api_method_all": "readonly FLOAT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 127, "since": 7, "api_used": "\u662f", "lines": ["rtexPosition, 3, gl.FLOAT, false, 20, 0);\n\n\t\t", "ADER, gl\n\t\t\t.MEDIUM_FLOAT);\n\t\tconsole.info('s", ", gl.RGBA, gl2.HALF_FLOAT, view, 0);\n\t\tconst ", "lse {\n\t\t\ttype = [gl.FLOAT_VEC2, gl.FLOAT_VEC3", "0, gl2.RG, gl2.HALF_FLOAT, view, 0);\n\t\tconst ", "12, 512, gl.RED, gl.FLOAT, 0);\n\t\tconst errorC", "MENT_SHADER, gl.LOW_FLOAT);\n\t\tconsole.info('s", "l2.RGBA_INTEGER, gl.FLOAT, view, 0);\n\t\tconst ", " 0, gl2.RG, gl2\n\t\t\t.FLOAT_32_UNSIGNED_INT_24_", "12, 512, gl.RED, gl.FLOAT, view, 0);\n\t\tconst ", "rtexPosition, 4, gl.FLOAT, false, 0, 0);\n\n\t\tg", "ribPointer(0, 3, gl.FLOAT, false, 20, 0);\n\t\t\t", "1, 1, 0, gl2.RG, gl.FLOAT, view, 0);\n\t\tconst ", " testTexImage3D_HALFFLOAT\n\t * @tc.desc Test t", "gl2.RED_INTEGER, gl.FLOAT, view, 0);\n\t\tconst ", ", 1, 0, gl.RGBA, gl.FLOAT, view, 0);\n\t\tconst ", ", 1, 0, gl2.RED, gl.FLOAT, view, 0);\n\t\tconst ", "er(aPosition, 2, gl.FLOAT, false, 0, 0);\n\n\t\t/", "SHADER, gl\n\t\t\t.HIGH_FLOAT);\n\t\tconsole.info('s", "1, 1, 0, gl.RGB, gl.FLOAT, view, 0);\n\t\tconst ", "rtexPosition, 4, gl.FLOAT, false, 0, 0);\n\t\tgl", ", 512, -gl.RED, -gl.FLOAT, view);\n\t\tconst tte", " 512, 0, gl.RED, gl.FLOAT, view, 0);\n\t\tconst ", "12, 512, gl.RED, gl.FLOAT,\n\t\t\tview, 0);\n\t\tcon", "0, gl.RGB, gl2.HALF_FLOAT, view, 0);\n\t\tconst ", ", 512, -gl.RED, -gl.FLOAT,\n\t\t\tview);\n\t\tconst ", ", gl.FLOAT_VEC3, gl.FLOAT_VEC4, gl.INT_VEC2, ", "gl2.RGB_INTEGER, gl.FLOAT, view, 0);\n\t\tconst ", "'testTexImage3D_HALFFLOAT', 0, async function", "12, 512, gl.RED, gl.FLOAT, z, 0);\n\t\tconst tte", " gl2.RG_INTEGER, gl.FLOAT, view, 0);\n\t\tconst ", "(locPosition, 3, gl.FLOAT, false, 20, 0);\n\t\t\t", "12, 512, gl2.RG, gl.FLOAT, view, 0);\n\t\tconst ", ", gl.RGBA, gl2.HALF_FLOAT,\n\t\t\t\t0);\n\t\t\tconst t", ", -512, -gl.RED, gl.FLOAT, -\n\t\t\tnew ArrayBuff", " [gl.FLOAT_VEC2, gl.FLOAT_VEC3, gl.FLOAT_VEC4"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DEPTH_COMPONENT", "api_method_all": "readonly DEPTH_COMPONENT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 11, "since": 7, "api_used": "\u662f", "lines": ["RENDERBUFFER, 4, gl.DEPTH_COMPONENT16, 256, 256);\n\t\tcon", "RENDERBUFFER, 4, gl.DEPTH_COMPONENT32F, 256, 256);\n\t\tco", "RENDERBUFFER, 4, gl.DEPTH_COMPONENT24, 256, 256);\n\t\tcon", "gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 256, 256);\n\n\t\tco", ".TEXTURE_2D, 0, gl2.DEPTH_COMPONENT, 512, 512, 0, gl.RG", "dth).assertEqual(gl.DEPTH_COMPONENT16);\n\t\tdone();\n\t});\n"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ALPHA", "api_method_all": "readonly ALPHA: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 108, "since": 7, "api_used": "\u662f", "lines": ["gl.blendFunc(gl.SRC_ALPHA, gl.DST_ALPHA);\n\n\t\t", "isEnabled(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t// ", "r(gl.BLEND_EQUATION_ALPHA);\n\t\tconsole.info(\"b", "l.RGB8, gl.CONSTANT_ALPHA, z);\n\t\tconst texIma", "exStorage2D(-gl.SRC_ALPHA_SATURATE, -0, -gl.R", ".assertEqual(gl.DST_ALPHA);\n\n\t\t//deleteContex", "ameter(gl.BLEND_DST_ALPHA);\n\t\t// returns \"339", "2D, 0, gl.LUMINANCE_ALPHA, 0, 0, 512, 512, 0)", " gl.getParameter(gl.ALPHA_BITS);\n\t\t// returns", "HA_SATURATE, gl.SRC_ALPHA_SATURATE, 0, 0, len", "FuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_A", "testTexImage3D_SRGB8ALPHA8', 0, async functio", "A, gl.ONE_MINUS_SRC_ALPHA, gl.DST_ALPHA, gl\n\t", "testTexImage3D_SRGB8ALPHA8\n\t * @tc.desc Test ", ".UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n\t\tconsole.i", "ufferSubData(gl.SRC_ALPHA_SATURATE, 0, new Fl", "ufferSubData(gl.SRC_ALPHA_SATURATE, gl.SRC_AL", "ices), gl.BLEND_SRC_ALPHA);\n\t\tvar arrBuffer =", "dBufferBase(-gl.SRC_ALPHA_SATURATE, -0, progr", "P_POSITIVE_X, 0, gl.ALPHA, 0, 0, 512, 512, 0)", "), gl.ONE_MINUS_DST_ALPHA);\n\t\tconst bufferDat", "l.RGB8, gl.CONSTANT_ALPHA, -1);\n\t\tconst texIm", "S_SRC_ALPHA, gl.DST_ALPHA, gl\n\t\t\t.ONE_MINUS_D", "l.SRC_ALPHA, gl.DST_ALPHA);\n\n\t\tconst blendFun", ".UNPACK_PREMULTIPLY_ALPHA_WEBGL, 4);\n\t\tconst ", "), gl.ONE_MINUS_SRC_ALPHA);\n\t\tconst bufferDat", "_COLOR, gl.CONSTANT_ALPHA, gl\n\t\t\t.ONE_MINUS_C", ".ONE_MINUS_CONSTANT_ALPHA);\n\n\t\tconst blendFun", "ER, gl.RENDERBUFFER_ALPHA_SIZE);\n\t\texpect(siz", "HA_SATURATE, gl.SRC_ALPHA_SATURATE, 0, 0, gl\n", ".ONE_MINUS_CONSTANT_ALPHA, 0, 0, 0);\n\t\tconst ", "1, gl.ONE_MINUS_SRC_ALPHA, view);\n\t\tconst rea", "RE_3D, 0, gl2.SRGB8_ALPHA8, 1, 1, 1, 0, gl.RG", "HA_SATURATE, gl.SRC_ALPHA_SATURATE, 0, 0, 0);", "gl.enable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\n\t\tco", ".assertEqual(gl.SRC_ALPHA);\n\n\t\t//deleteContex", "RE_2D, 0, gl2.SRGB8_ALPHA8, 1, 1, 0, gl.RGBA,", "l\n\t\t\t.ONE_MINUS_DST_ALPHA);\n\n\t\tconst blendFun", ".ONE_MINUS_CONSTANT_ALPHA, gl.ONE_MINUS_CONST", "FuncSeparate(gl.DST_ALPHA, gl.CONSTANT_COLOR,", "UFFER, 1024, gl.SRC_ALPHA);\n\t\tconst bufferDat"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test08.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RGB", "api_method_all": "readonly RGB: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 390, "since": 7, "api_used": "\u662f", "lines": [" 0, 0, 512, 512, gl.RGBA, gl.UNSIGNED_BYTE,", "l.TEXTURE_2D, 0, gl.RGBA, 0, 0, 512, 512, 0", "0, 0, 512, 512, gl2.RGBA, gl2.UNSIGNED_BYTE", "ubData(gl.BLEND_DST_RGB, 0, new Int32Array(", "2.TEXTURE_3D, 0, gl.RGBA, 1, 1, 1, 0, gl.RG", "ingBufferHeight, gl.RGBA, gl\n\t\t\t.UNSIGNED_B", "ameter(gl.BLEND_SRC_RGB)\n\t\tconsole.info(\"bl", "B8, 512, 512, 0, gl.RGB8, gl.UNSIGNED_BYTE,", "l.TEXTURE_2D, 1, gl.RGB8, 256, 256);\n\t\tcons", "l.TEXTURE_2D, 0, gl.RGB8, 512, 512, [0, 0],", "B8, 512, 512, 0, gl.RGB8, gl.FUNC_SUBTRACT,", "l.TEXTURE_3D, 1, gl.RGB8, 256, 256, 256);\n\t", "mat).assertEqual(gl.RGBA4);\n\t\tdone();\n\t});\n", "ingBufferHeight, gl.RGBA, gl.DST_COLOR,\n\t\t\t", "B8, 512, 512, 0, gl.RGB, gl.UNSIGNED_BYTE, ", "ameter(gl.BLEND_SRC_RGB);\n\t\tconsole.info(\"b", "GBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE,", "dth).assertEqual(gl.RGBA4);\n\t\tdone();\n\t});\n", "l.TEXTURE_2D, 0, gl.RGB8, 512, 512, 0, gl.R", "12, 512, [0, 0], gl.RGB8, gl.UNSIGNED_BYTE,", "OR, 512, 512, 0, gl.RGB8, gl.CONSTANT_ALPHA", "r(gl.BLEND_EQUATION_RGB);\n\t\tconsole.info(\"b", " 0, 200, 200, 1, gl.RGBA, gl.UNSIGNED_BYTE,", "l.RENDERBUFFER, gl2.RGBA8, gl.SAMPLES);\n\t\tc", "gl.RENDERBUFFER, gl.RGBA4, 256, 256);\n\n\t\tco", "B8, 512, 512, 0, gl.RGB8, gl.CONSTANT_ALPHA", "l.TEXTURE_2D, 0, gl.RGBA, 0, 0, '512', 512,", "2.TEXTURE_2D, 0, gl.RGB8, 512, 512, 0, gl.R", "gl.RENDERBUFFER, gl.RGBA4, 256, 256);\n\t\tcon"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RGBA", "api_method_all": "readonly RGBA: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 164, "since": 7, "api_used": "\u662f", "lines": ["ingBufferHeight, gl.RGBA, gl\n\t\t\t.UNSIGNED_BY", "dth).assertEqual(gl.RGBA4);\n\t\tdone();\n\t});\n\n", "l.TEXTURE_2D, 0, gl.RGBA, 0, 0, 512, 512, 0)", " 0, 200, 200, 1, gl.RGBA, gl.UNSIGNED_BYTE,\n", "l.TEXTURE_2D, 0, gl.RGBA, 0, 0, '512', 512, ", "mat).assertEqual(gl.RGBA4);\n\t\tdone();\n\t});\n\n", " 0, 0, 512, 512, gl.RGBA, gl.UNSIGNED_BYTE, ", "l.RENDERBUFFER, gl2.RGBA8, gl.SAMPLES);\n\t\tco", ".R8, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, ", "ingBufferHeight, gl.RGBA, gl.DST_COLOR,\n\t\t\tp", "GBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE,\n", "gl.RENDERBUFFER, gl.RGBA4, 256, 256);\n\n\t\tcon", "gl.RENDERBUFFER, gl.RGBA4, 256, 256);\n\t\tcons", "GBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, ", " 0, 200, 200, 1, gl.RGBA, gl.UNSIGNED_BYTE, ", "8UI, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, ", "RE_2D_ARRAY, 1, gl2.RGBA8, 256, 256, 8);\n\t\tg", "ingBufferHeight, gl.RGBA, gl.DST_COLOR,\n\t\t\t0", "0, 0, 512, 512, gl2.RGBA, gl2.UNSIGNED_BYTE,", "XTURE_3D, false, gl.RGBA, 1, 1, 1, 0, gl.RGB", "NCE, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE,\n", "2.TEXTURE_3D, 0, gl.RGBA, 1, 1, 1, 0, gl.RGB"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LUMINANCE", "api_method_all": "readonly LUMINANCE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 7, "since": 7, "api_used": "\u662f", "lines": ["P_POSITIVE_Y, 0, gl.LUMINANCE, 0, 0, 512, 512, 0)", "l.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, 0, 0, 512, 5", "2.TEXTURE_3D, 0, gl.LUMINANCE, 1, 1, 1, 0, gl.RGB", " 0, 200, 200, 1, gl.LUMINANCE, gl\n\t\t\t\t.UNSIGNED_B"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LUMINANCE_ALPHA", "api_method_all": "readonly LUMINANCE_ALPHA: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["l.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, 0, 0, 512, 512, 0)"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "UNSIGNED_SHORT_4_4_4_4", "api_method_all": "readonly UNSIGNED_SHORT_4_4_4_4: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" 512, gl2.RGBA, gl2.UNSIGNED_SHORT_4_4_4_4, view);\n\t\tconst err"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "UNSIGNED_SHORT_5_5_5_1", "api_method_all": "readonly UNSIGNED_SHORT_5_5_5_1: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" 512, gl2.RGBA, gl2.UNSIGNED_SHORT_5_5_5_1, view);\n\t\tconst err"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "UNSIGNED_SHORT_5_6_5", "api_method_all": "readonly UNSIGNED_SHORT_5_6_5: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" 512, gl2.RGBA, gl2.UNSIGNED_SHORT_5_6_5, view);\n\t\tconst err"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRAGMENT_SHADER", "api_method_all": "readonly FRAGMENT_SHADER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 160, "since": 7, "api_used": "\u662f", "lines": [" gl.createShader(gl.FRAGMENT_SHADER);\n\t\tgl.linkProgram(", " gl.createShader(gl.FRAGMENT_SHADER);\n\t\t\tgl.shaderSourc", " gl.createShader(gl.FRAGMENT_SHADER);\n\t\t//        gl.de", " gl.createShader(gl.FRAGMENT_SHADER);\n\t\tconst uniformlo", "= loadShader(gl, gl.FRAGMENT_SHADER, fshader);\n\t\tif (!v", " gl.createShader(gl.FRAGMENT_SHADER)\n\t\tconst isShader =", " gl.createShader(gl.FRAGMENT_SHADER); //\u521b\u5efa WebGLShader\u3002", " gl.createShader(gl.FRAGMENT_SHADER);\n\t\tgl.shaderSource", " gl.createShader(gl.FRAGMENT_SHADER);\n\t\t//        gl.sh", " gl.createShader(gl.FRAGMENT_SHADER);\n\t\tgl.deleteShader"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "VERTEX_SHADER", "api_method_all": "readonly VERTEX_SHADER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 227, "since": 7, "api_used": "\u662f", "lines": [" gl.createShader(gl.VERTEX_SHADER);\n\t\tconst isShader ", " gl.createShader(gl.VERTEX_SHADER);\n\t\t//        const", "rPrecisionFormat(gl.VERTEX_SHADER, gl\n\t\t\t.MEDIUM_FLOA", " gl.createShader(gl.VERTEX_SHADER);\n\t\tconst uniformlo", "'getShaderParameter VERTEX_SHADER: ' + vertex);\n\n\n\t\tr", " gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.shaderSource", " gl.createShader(gl.VERTEX_SHADER);\n\n\t\tvar source = g", " gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.linkProgram(", "arameter(shader, gl.VERTEX_SHADER);\n\t\tconsole.log('ge", " gl.createShader(gl.VERTEX_SHADER);\n\t\tconst programEr", " gl.createShader(gl.VERTEX_SHADER);\n\t\tconst isShader1", " gl.createShader(gl.VERTEX_SHADER)\n\t\tconst isShader =", " gl.createShader(gl.VERTEX_SHADER);\n\n\t\tgl.deleteShade", "= loadShader(gl, gl.VERTEX_SHADER, vshader);\n\t\tconsol", " gl.createShader(gl.VERTEX_SHADER)\n\t\tconst isFramebuf"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MAX_VERTEX_ATTRIBS", "api_method_all": "readonly MAX_VERTEX_ATTRIBS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MAX_VERTEX_UNIFORM_VECTORS", "api_method_all": "readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MAX_VARYING_VECTORS", "api_method_all": "readonly MAX_VARYING_VECTORS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.MAX_VARYING_VECTORS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MAX_COMBINED_TEXTURE_IMAGE_UNITS", "api_method_all": "readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MAX_VERTEX_TEXTURE_IMAGE_UNITS", "api_method_all": "readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MAX_TEXTURE_IMAGE_UNITS", "api_method_all": "readonly MAX_TEXTURE_IMAGE_UNITS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MAX_FRAGMENT_UNIFORM_VECTORS", "api_method_all": "readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SHADER_TYPE", "api_method_all": "readonly SHADER_TYPE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["er(vertexShader, gl.SHADER_TYPE);\n\t\tconsole.info('s"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DELETE_STATUS", "api_method_all": "readonly DELETE_STATUS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["rameter(program, gl.DELETE_STATUS);\n\t\tconsole.info('d", "er(vertexShader, gl.DELETE_STATUS);\n\t\tconsole.info('d"], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LINK_STATUS", "api_method_all": "readonly LINK_STATUS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["rameter(program, gl.LINK_STATUS);\n\t\tconsole.info('l"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "VALIDATE_STATUS", "api_method_all": "readonly VALIDATE_STATUS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["rameter(program, gl.VALIDATE_STATUS);\n\t\tconsole.info('v"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ATTACHED_SHADERS", "api_method_all": "readonly ATTACHED_SHADERS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["rameter(program, gl.ATTACHED_SHADERS);\n\t\tconsole.info('a", "eter(programObj, gl.ATTACHED_SHADERS);\n\t\tconsole.info('a"], "files": ["webGL.test.js", "WebGL.test02.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ACTIVE_UNIFORMS", "api_method_all": "readonly ACTIVE_UNIFORMS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["2\n\t\t\t.UNIFORM_BLOCK_ACTIVE_UNIFORMS);\n\t\tconsole.info(\"g", "rameter(program, gl.ACTIVE_UNIFORMS);\n\t\tconsole.info('a"], "files": ["WebGL.test12.js", "webGL.test.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ACTIVE_ATTRIBUTES", "api_method_all": "readonly ACTIVE_ATTRIBUTES: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 3, "since": 7, "api_used": "\u662f", "lines": ["x11).assertEqual(gl.ACTIVE_ATTRIBUTES);\n\t\tvar x12 = 0x0DE", "rameter(program, gl.ACTIVE_ATTRIBUTES);\n\t\tconst info = gl"], "files": ["webGL.test.js", "WebGL.test02.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SHADING_LANGUAGE_VERSION", "api_method_all": "readonly SHADING_LANGUAGE_VERSION: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n\t\tconsole.info(\"g"], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "CURRENT_PROGRAM", "api_method_all": "readonly CURRENT_PROGRAM: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 105, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.CURRENT_PROGRAM);\n\t\tconsole.info(\"t", " gl.getParameter(gl.CURRENT_PROGRAM);\n\t\tconsole.log(\"te", " gl.getParameter(gl.CURRENT_PROGRAM);\n\t\t\tconsole.log(\"t"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "NEVER", "api_method_all": "readonly NEVER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["ter).assertEqual(gl.NEVER);\n\t\tdone();\n\t});\n\n\t", "\t\tgl.stencilFunc(gl.NEVER, 0, 0b1110011);\n\t\tc", ";\n\t\tgl.depthFunc(gl.NEVER);\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u51fd\u6570\uff0c\u8bf7\u67e5", "ter).assertEqual(gl.NEVER);\n\n\t\t//deleteContex"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LESS", "api_method_all": "readonly LESS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": [";\n\t\tgl.depthFunc(gl.LESS);\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u51fd\u6570\uff0c\u8bf7\u67e5", "ter).assertEqual(gl.LESS);\n\t\tdone();\n\t});\n\n\t", "\t\tgl.stencilFunc(gl.LESS, 0, 0b1110011);\n\t\tc", "= gl.stencilFunc(gl.LESS);\n\t\tconsole.info(\"s", "ter).assertEqual(gl.LESS);\n\n\t\t//deleteContex", "parate(gl.FRONT, gl.LESS, 0.2, 1110011);\n\t\tc"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "EQUAL", "api_method_all": "readonly EQUAL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 26, "since": 7, "api_used": "\u662f", "lines": ["eparate(gl.BACK, gl.EQUAL, 0.2, 1110011);\n\t\tc", "\n\t\tgl.depthFunc(gl.LEQUAL);\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u51fd\u6570\uff0c\u8bf7\u67e5", "ter).assertEqual(gl.EQUAL);\n\n\t\t//deleteContex", "er).assertEqual(gl.LEQUAL);\n\n\t\t//deleteContex", "\n\t\tgl.depthFunc(gl.GEQUAL);\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u51fd\u6570\uff0c\u8bf7\u67e5", "ter).assertEqual(gl.EQUAL);\n\t\tdone();\n\t});\n\n\t", "er).assertEqual(gl.LEQUAL);\n\t\tdone();\n\t});\n\n\t", "er).assertEqual(gl.GEQUAL);\n\n\t\t//deleteContex", ";\n\t\tgl.depthFunc(gl.EQUAL);\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u51fd\u6570\uff0c\u8bf7\u67e5", "\tgl.depthFunc(gl.NOTEQUAL);\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u51fd\u6570\uff0c\u8bf7\u67e5", ").assertEqual(gl.NOTEQUAL);\n\n\t\t//deleteContex", "FRONT_AND_BACK, gl.LEQUAL, 0.2, 1110011);\n\t\tc", "\t\tgl.stencilFunc(gl.EQUAL, 0, 0b1110011);\n\t\tc"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LEQUAL", "api_method_all": "readonly LEQUAL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [".FRONT_AND_BACK, gl.LEQUAL, 0.2, 1110011);\n\t\tc", "ter).assertEqual(gl.LEQUAL);\n\n\t\t//deleteContex", ";\n\t\tgl.depthFunc(gl.LEQUAL);\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u51fd\u6570\uff0c\u8bf7\u67e5", "ter).assertEqual(gl.LEQUAL);\n\t\tdone();\n\t});\n\n\t"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "GREATER", "api_method_all": "readonly GREATER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["ter).assertEqual(gl.GREATER);\n\n\t\t//deleteContex", "ter).assertEqual(gl.GREATER);\n\t\tdone();\n\t});\n\n\t", ";\n\t\tgl.depthFunc(gl.GREATER);\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u51fd\u6570\uff0c\u8bf7\u67e5", "\t\tgl.stencilFunc(gl.GREATER, 0, 0b1110011);\n\t\tc"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "NOTEQUAL", "api_method_all": "readonly NOTEQUAL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": [";\n\t\tgl.depthFunc(gl.NOTEQUAL);\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u51fd\u6570\uff0c\u8bf7\u67e5", "ter).assertEqual(gl.NOTEQUAL);\n\n\t\t//deleteContex"], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "GEQUAL", "api_method_all": "readonly GEQUAL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["ter).assertEqual(gl.GEQUAL);\n\n\t\t//deleteContex", ";\n\t\tgl.depthFunc(gl.GEQUAL);\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u51fd\u6570\uff0c\u8bf7\u67e5"], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ALWAYS", "api_method_all": "readonly ALWAYS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": [";\n\t\tgl.depthFunc(gl.ALWAYS);\n\t\t// \u8981\u68c0\u67e5\u5f53\u524d\u6df1\u5ea6\u51fd\u6570\uff0c\u8bf7\u67e5", "ter).assertEqual(gl.ALWAYS);\n\n\t\t//deleteContex"], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "KEEP", "api_method_all": "readonly KEEP: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["ter).assertEqual(gl.KEEP);\n\t\tdone();\n\t});\n\n\n", "ter).assertEqual(gl.KEEP);\n\t\tdone();\n\t});\n\n\t", ";\n\t\tgl.stencilOp(gl.KEEP, gl.REPLACE, gl.DEC", ";\n\t\tgl.stencilOp(gl.KEEP, gl.REPLACE, gl.INC"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "REPLACE", "api_method_all": "readonly REPLACE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["encilOp(gl.KEEP, gl.REPLACE, gl.DECR_WRAP);\n\t\tc", "encilOp(gl.KEEP, gl.REPLACE, gl.INCR_WRAP);\n\t\tc"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "INCR", "api_method_all": "readonly INCR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 12, "since": 7, "api_used": "\u662f", "lines": ["ter).assertEqual(gl.INCR);\n\t\tdone();\n\t});\n\n\t", "parate(gl.FRONT, gl.INCR, gl.DECR, gl.INVERT", "ter).assertEqual(gl.INCR);\n\t\tdone();\n\t});\n\n\n", "parate(gl.FRONT, gl.INCR, gl.DECR, gl\n\t\t\t.IN", ";\n\t\tgl.stencilOp(gl.INCR, gl.DECR, gl.INVERT", "EEP, gl.REPLACE, gl.INCR_WRAP);\n\t\tconst sten"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test13.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DECR", "api_method_all": "readonly DECR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["encilOp(gl.INCR, gl.DECR, gl.INVERT);\n\t\tcons", ".FRONT, gl.INCR, gl.DECR, gl.INVERT);\n\t\tcons", "EEP, gl.REPLACE, gl.DECR_WRAP);\n\t\tconst sten", ".FRONT, gl.INCR, gl.DECR, gl\n\t\t\t.INVERT);\n\t\t"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test13.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "INVERT", "api_method_all": "readonly INVERT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 17, "since": 7, "api_used": "\u662f", "lines": ["l.INCR, gl.DECR, gl.INVERT);\n\t\tconst stencilOp", "(gl.SAMPLE_COVERAGE_INVERT); // false\n\t\tconsol", "(gl.SAMPLE_COVERAGE_INVERT);\n\t\tvar x7 = 0x1400", "and SAMPLE_COVERAGE_INVERT constants.\n\t\tconst ", "CR, gl.DECR, gl\n\t\t\t.INVERT);\n\t\tconsole.info(\"s"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "INCR_WRAP", "api_method_all": "readonly INCR_WRAP: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["EEP, gl.REPLACE, gl.INCR_WRAP);\n\t\tconst stencilOp"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DECR_WRAP", "api_method_all": "readonly DECR_WRAP: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["EEP, gl.REPLACE, gl.DECR_WRAP);\n\t\tconst stencilOp"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "VENDOR", "api_method_all": "readonly VENDOR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.VENDOR);\n\t\t// returns \"339"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RENDERER", "api_method_all": "readonly RENDERER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.RENDERER);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "VERSION", "api_method_all": "readonly VERSION: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["gl.SHADING_LANGUAGE_VERSION);\n\t\tconsole.info(\"g", "NPACK_COLORSPACE_CONVERSION_WEBGL);\n\t\tconsole.i", " gl.getParameter(gl.VERSION);\n\t\t// returns \"339"], "files": ["WebGL.test09.js", "WebGL.test12.js", "webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "NEAREST", "api_method_all": "readonly NEAREST: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 80, "since": 7, "api_used": "\u662f", "lines": ["TURE_MIN_FILTER, gl.NEAREST);\n\n\t\tlet errorCode ", "UFFER_BIT, -gl2\n\t\t\t.NEAREST);\n\t\tconst blitFrame", "TURE_MAG_FILTER, gl.NEAREST);\n\n\t\tlet errorCode ", "TURE_MIN_FILTER, gl.NEAREST_MIPMAP_NEAREST);\n\t\t", "al(gl.LINEAR_MIPMAP_NEAREST);\n\t\tdone();\n\t});\n\n\n", ".TEXTURE_WRAP_S, gl.NEAREST);\n\n\t\tlet errorCode ", "R, gl.LINEAR_MIPMAP_NEAREST);\n\t\tconst texParame", "lue).assertEqual(gl.NEAREST_MIPMAP_NEAREST);\n\t\t", "RE_COMPARE_FUNC, gl.NEAREST);\n\n\t\tlet errorCode ", "EST, -0, -400, -gl2.NEAREST, -0, -0, 400, 1080,", "l(gl.NEAREST_MIPMAP_NEAREST);\n\t\tdone();\n\t});\n\n\t", "RE_COMPARE_MODE, gl.NEAREST);\n\n\t\tlet errorCode ", "OR_BUFFER_BIT, -gl2.NEAREST);\n\t\tconst blitFrame", "al(gl.LINEAR_MIPMAP_NEAREST);\n\t\tdone();\n\t});\n\n\t", "TEXTURE_MAX_LOD, gl.NEAREST);\n\n\t\tlet errorCode ", "TURE_MIN_FILTER, gl.NEAREST_MIPMAP_LINEAR);\n\t\tc", "TEXTURE_MIN_LOD, gl.NEAREST);\n\n\t\tlet errorCode ", "litFramebuffer(-gl2.NEAREST, -0, -400, -gl2.NEA", "== gl.LINEAR_MIPMAP_NEAREST);\n\t\texpect(type).as", "URE_MAG_FILTER, gl2.NEAREST);\n\t\tconst framebuff", ".TEXTURE_WRAP_T, gl.NEAREST);\n\n\t\tlet errorCode ", ", gl.NEAREST_MIPMAP_NEAREST);\n\t\tconst texParame", ".TEXTURE_WRAP_R, gl.NEAREST);\n\n\t\tlet errorCode ", "lue).assertEqual(gl.NEAREST_MIPMAP_LINEAR);\n\t\td", "LOR_BUFFER_BIT, gl2.NEAREST);\n\t\tconst blitFrame"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LINEAR", "api_method_all": "readonly LINEAR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 38, "since": 7, "api_used": "\u662f", "lines": ["TURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n\t\t", "lue).assertEqual(gl.LINEAR_MIPMAP_LINEAR);\n\t\td", ", gl.NEAREST_MIPMAP_LINEAR);\n\t\tconst texParame", "TURE_MAG_FILTER, gl.LINEAR);\n\t\tconst texParame", "TURE_BASE_LEVEL, gl.LINEAR);\n\t\tconst texParame", "rameterValue === gl.LINEAR_MIPMAP_NEAREST);\n\t\t", "XTURE_MAX_LEVEL, gl.LINEAR);\n\t\tconst texParame", "lue).assertEqual(gl.LINEAR);\n\t\tdone();\n\t});\n\n\t", "R, gl.LINEAR_MIPMAP_LINEAR);\n\t\tconst texParame", "lue).assertEqual(gl.LINEAR);\n\t\tdone();\n\t});\n\n\n", "TURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n\t\tc", "lue).assertEqual(gl.LINEAR_MIPMAP_NEAREST);\n\t\t", "al(gl.LINEAR_MIPMAP_LINEAR);\n\t\tdone();\n\t});\n\n\t", "l(gl.NEAREST_MIPMAP_LINEAR);\n\t\tdone();\n\t});\n\n\t"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "NEAREST_MIPMAP_NEAREST", "api_method_all": "readonly NEAREST_MIPMAP_NEAREST: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["TURE_MIN_FILTER, gl.NEAREST_MIPMAP_NEAREST);\n\t\tconst texParame", "lue).assertEqual(gl.NEAREST_MIPMAP_NEAREST);\n\t\tdone();\n\t});\n\n\t"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LINEAR_MIPMAP_NEAREST", "api_method_all": "readonly LINEAR_MIPMAP_NEAREST: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["lue).assertEqual(gl.LINEAR_MIPMAP_NEAREST);\n\t\tdone();\n\t});\n\n\t", "lue).assertEqual(gl.LINEAR_MIPMAP_NEAREST);\n\t\tdone();\n\t});\n\n\n", "TURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n\t\tconst texParame", "rameterValue === gl.LINEAR_MIPMAP_NEAREST);\n\t\texpect(type).as"], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "NEAREST_MIPMAP_LINEAR", "api_method_all": "readonly NEAREST_MIPMAP_LINEAR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["TURE_MIN_FILTER, gl.NEAREST_MIPMAP_LINEAR);\n\t\tconst texParame", "lue).assertEqual(gl.NEAREST_MIPMAP_LINEAR);\n\t\tdone();\n\t});\n\n\t"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LINEAR_MIPMAP_LINEAR", "api_method_all": "readonly LINEAR_MIPMAP_LINEAR: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["TURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n\t\tconst texParame", "lue).assertEqual(gl.LINEAR_MIPMAP_LINEAR);\n\t\tdone();\n\t});\n\n\t"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_MAG_FILTER", "api_method_all": "readonly TEXTURE_MAG_FILTER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 33, "since": 7, "api_used": "\u662f", "lines": ["EXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER);\n\t\tconsole.info('t", "ameteri(sampler, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\tle", "ameteri(sampler, gl.TEXTURE_MAG_FILTER);\n\n\t\tlet errorCode ", "rameter(sampler, gl.TEXTURE_MAG_FILTER);\n\n\t\tconsole.info(\"", "XTURE_CUBE_MAP, gl2.TEXTURE_MAG_FILTER, gl2.NEAREST);\n\t\tco", "ameterf(sampler, gl.TEXTURE_MAG_FILTER);\n\n\t\tlet errorCode ", "f(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\tcons", "r(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER);\n\t\tconsole.info('t", "ameterf(sampler, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\tle"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_MIN_FILTER", "api_method_all": "readonly TEXTURE_MIN_FILTER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 28, "since": 7, "api_used": "\u662f", "lines": ["rameter(sampler, gl.TEXTURE_MIN_FILTER);\n\n\t\tconsole.info(\"", "ameterf(sampler, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\n\t\tle", "i(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST_MIPMAP_", "r(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER);\n\t\tconsole.info('t", "i(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_L", "i(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_N", "ameteri(sampler, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\n\t\tle"], "files": ["webGL.test.js", "WebGL.test02.js", "WebGL.test03.js", "WebGL.test09.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_WRAP_S", "api_method_all": "readonly TEXTURE_WRAP_S: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 18, "since": 7, "api_used": "\u662f", "lines": ["f(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n\t\tcons", "ameteri(sampler, gl.TEXTURE_WRAP_S, gl.NEAREST);\n\n\t\tle", "ameterf(sampler, gl.TEXTURE_WRAP_S, gl.NEAREST);\n\n\t\tle", "f(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.MIRRORED_REPEAT", "EXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S);\n\t\tconsole.info('t", "rameter(sampler, gl.TEXTURE_WRAP_S);\n\n\t\tconsole.info(\"", "f(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);"], "files": ["WebGL.test14.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_WRAP_T", "api_method_all": "readonly TEXTURE_WRAP_T: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["ameterf(sampler, gl.TEXTURE_WRAP_T, gl.NEAREST);\n\n\t\tle", "ameteri(sampler, gl.TEXTURE_WRAP_T, gl.NEAREST);\n\n\t\tle"], "files": ["webGL.test.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_2D", "api_method_all": "readonly TEXTURE_2D: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 339, "since": 7, "api_used": "\u662f", "lines": [".getTexParameter(gl.TEXTURE_2D, gl.TEXTURE_MAG_FIL", "\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.DST_COLOR, 5", "\tgl2.texImage2D(gl2.TEXTURE_2D, 0, gl.R16F, 512, 5", "LOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n\t\t\t0);\n\n\t", "\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\tgl.com", "gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FIL", "\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB8, 512, 5", "opyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, fal", "LOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n\t\t\t\"123\")", "gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAG_FIL", ".generateMipmap(gl2.TEXTURE_2D);\n\t\tconst error = g", "\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\tconst ", ".getTexParameter(gl.TEXTURE_2D, gl.TEXTURE_MIN_FIL", "gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 512, 512,", "edTexSubImage2D(gl2.TEXTURE_2D, 0, 256, 256, 512, ", "essedTexImage2D(gl2.TEXTURE_2D, 0, 0x83F3, 512, 51", "\t\tgl.bindTexture(gl.TEXTURE_2D, tex);\n\t\tgl.pixelSt", "l.generateMipmap(gl.TEXTURE_2D);\n\t\tconst error = g", "\tgl2.texImage2D(gl2.TEXTURE_2D, 0, 32, 512, 512, 0", "2.texSubImage2D(gl2.TEXTURE_2D, 0, 0, 0, 512, 512,", "opyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, 16,", "l.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 0, 0, ", "\tgl2.texImage2D(gl2.TEXTURE_2D, 0, gl.RGB8, 512, 5", "ressedTexImage2D(gl.TEXTURE_2D, 0, 0x0307, 512, 51", "ressedTexImage2D(gl.TEXTURE_2D, 0, 0x83F3, 512, 51", "sedTexSubImage2D(gl.TEXTURE_2D, 0, 256, 256, 512, ", "\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\tconst"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE", "api_method_all": "readonly TEXTURE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1304, "since": 7, "api_used": "\u662f", "lines": ["Parameter(gl.ACTIVE_TEXTURE);\n\t\t// returns \"339", "gl.activeTexture(gl.TEXTURE0);\n\t\tvar texturePar", "gl.activeTexture(gl.TEXTURE0);\n\t\tconst activeTe", "\t\tgl.bindTexture(gl.TEXTURE_2D, tex);\n\t\tgl.pixe", "\tgl2.texImage2D(gl2.TEXTURE_2D, 0, gl.R16F, 512", "gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAG_", "Parameter(gl.ACTIVE_TEXTURE);\n\t\tconsole.info(\"w", ".getTexParameter(gl.TEXTURE_2D, gl.TEXTURE_MIN_", "ameteri(sampler, gl.TEXTURE_MAG_FILTER, gl.NEAR", "l.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 0, ", ".getTexParameter(gl.TEXTURE_2D, gl.TEXTURE_MAG_", "\"33984\" (0x84C0, gl.TEXTURE0 enum value)\n\t\tcons", "LOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n\t\t\t\"12", "r(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER);\n\t\tcons", "gl.activeTexture(gl.TEXTURE1);\n\t\tconst activeTe", "opyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, ", " gl.getParameter(gl.TEXTURE_BINDING_2D);\n\t\tcons", "\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\tcon", "i(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINE", "f(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINE", "\tgl2.texImage2D(gl2.TEXTURE_2D, 0, 32, 512, 512", "\tgl2.texImage2D(gl2.TEXTURE_2D, 0, gl.RGB8, 512", "rameter(sampler, gl.TEXTURE_WRAP_S);\n\n\t\tconsole", "l.generateMipmap(gl.TEXTURE_2D);\n\t\tconst error ", "LOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n\t\t\t0);", "r(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER);\n\t\tcons", "rameter(sampler, gl.TEXTURE_MIN_FILTER);\n\n\t\tcon", "gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_", ".generateMipmap(gl2.TEXTURE_2D);\n\t\tconst error ", "ameterf(sampler, gl.TEXTURE_MAG_FILTER, gl.NEAR", "\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t\tco", "rameter(sampler, gl.TEXTURE_COMPARE_FUNC);\n\n\t\tc", "rameter(sampler, gl.TEXTURE_MAG_FILTER);\n\n\t\tcon"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_CUBE_MAP", "api_method_all": "readonly TEXTURE_CUBE_MAP: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 128, "since": 7, "api_used": "\u662f", "lines": ["ATTACHMENT0, gl\n\t\t\t.TEXTURE_CUBE_MAP_POSITIVE_Y, texture", "ressedTexImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, 0x83", "\tgl2.texImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 32, ", "essedTexImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 0x83", "l.copyTexImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.A", "\n\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.R", "opyTexSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 0, 0", "sedTexSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, 256,", "\n\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.R", "\tgl2.texImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 32, ", "ATTACHMENT0, gl\n\t\t\t.TEXTURE_CUBE_MAP_POSITIVE_Z, texture", "\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n\n\t\tconst", ".getTexParameter(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FIL", "\n\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.R", "gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, 0, 0", "sedTexSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 256,", "2.texSubImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 0, 0", "ressedTexImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, 0x83", "gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, 0, 0", "2.texSubImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 0, 0", "\tgl2.texImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 32, ", "essedTexImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 0x83", "2.texSubImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 0, 0", "sedTexSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 256,", "gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, 0, 0", "ATTACHMENT0, gl\n\t\t\t.TEXTURE_CUBE_MAP_POSITIVE_X, texture", "gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 0, 0", "ressedTexImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 0x83", "opyTexSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 0, 0", "opyTexSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, 0, 0", "ressedTexImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 0x83", "ressedTexImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, 0x83", "\n\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.R", "sedTexSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 256,", "ressedTexImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 0x83", "gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 0, 0", "l.copyTexImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.L", ".generateMipmap(gl2.TEXTURE_CUBE_MAP);\n\t\tconst error = g", "gl2.texStorage2D(gl.TEXTURE_CUBE_MAP, 1, gl.RGB8, 256, 2", "gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 0, 0", "\n\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.R", "sedTexSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, 256,", "\n\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.R", "l.texParameteri(gl2.TEXTURE_CUBE_MAP, gl2.TEXTURE_MAG_FI", "sedTexSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, 256,"], "files": ["WebGL.test10.js", "WebGL.test14.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test13.js", "WebGL.test09.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_BINDING_CUBE_MAP", "api_method_all": "readonly TEXTURE_BINDING_CUBE_MAP: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.TEXTURE_BINDING_CUBE_MAP);\n\t\t// returns \"339"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_CUBE_MAP_POSITIVE_X", "api_method_all": "readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 22, "since": 7, "api_used": "\u662f", "lines": ["2.texSubImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 0, 0, 512, 512,", "l.copyTexImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.ALPHA, 0, 0,", "ressedTexImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 0x83F3, 512, 51", "\n\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGB8, 512, 5", "essedTexImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 0x83F3, 512, 51", "gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 0, 0, 512, 512,", "\tgl2.texImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 32, 512, 512, 0", "edTexSubImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 256, 256, 512, ", "opyTexSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 0, 0, 0, 0, 16,", "ATTACHMENT0, gl\n\t\t\t.TEXTURE_CUBE_MAP_POSITIVE_X, texture, 0);\n\n\t\tle", "sedTexSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, 256, 256, 512, "], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test09.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_CUBE_MAP_NEGATIVE_X", "api_method_all": "readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["sedTexSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, 256, 256, 512, ", "\n\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGB8, 512, 5", "gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, 0, 0, 512, 512,", "opyTexSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, 0, 0, 0, 0, 16,", "ressedTexImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, 0x83F3, 512, 51"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test11.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_CUBE_MAP_POSITIVE_Y", "api_method_all": "readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 20, "since": 7, "api_used": "\u662f", "lines": ["\tgl2.texImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 32, 512, 512, 0", "2.texSubImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 0, 0, 512, 512,", "ressedTexImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 0x83F3, 512, 51", "gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 0, 0, 512, 512,", "l.copyTexImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.LUMINANCE, 0", "edTexSubImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 256, 256, 512, ", "essedTexImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 0x83F3, 512, 51", "\n\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGB8, 512, 5", "sedTexSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, 256, 256, 512, ", "ATTACHMENT0, gl\n\t\t\t.TEXTURE_CUBE_MAP_POSITIVE_Y, texture, 0);\n\n\t\tle"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test09.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_CUBE_MAP_NEGATIVE_Y", "api_method_all": "readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, 0, 0, 512, 512,", "\n\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGB8, 512, 5", "opyTexSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, 0, 0, 0, 0, 16,", "sedTexSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, 256, 256, 512, ", "ressedTexImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, 0x83F3, 512, 51"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_CUBE_MAP_POSITIVE_Z", "api_method_all": "readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 20, "since": 7, "api_used": "\u662f", "lines": ["opyTexSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 0, 0, 0, 0, 16,", "gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 0, 0, 512, 512,", "\tgl2.texImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 32, 512, 512, 0", "edTexSubImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 256, 256, 512, ", "ressedTexImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 0x83F3, 512, 51", "ATTACHMENT0, gl\n\t\t\t.TEXTURE_CUBE_MAP_POSITIVE_Z, texture, 0);\n\n\t\tle", "sedTexSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 256, 256, 512, ", "2.texSubImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 0, 0, 512, 512,", "\n\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGB8, 512, 5", "essedTexImage2D(gl2.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, 0x83F3, 512, 51"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test09.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE_CUBE_MAP_NEGATIVE_Z", "api_method_all": "readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 10, "since": 7, "api_used": "\u662f", "lines": ["ressedTexImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, 0x83F3, 512, 51", "sedTexSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, 256, 256, 512, ", "gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, 0, 0, 512, 512,", "\n\t\tgl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGB8, 512, 5", "opyTexSubImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, 0, 0, 0, 0, 16,"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test11.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MAX_CUBE_MAP_TEXTURE_SIZE", "api_method_all": "readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE0", "api_method_all": "readonly TEXTURE0: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 421, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE0);\n\t\tvar texturePara", "\"33984\" (0x84C0, gl.TEXTURE0 enum value)\n\t\tconso", "gl.activeTexture(gl.TEXTURE0);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE1", "api_method_all": "readonly TEXTURE1: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE14);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE11);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE17);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE10);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE15);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE19);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE13);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE18);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE16);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE1);\n\t\tconst activeTex", "gl.activeTexture(gl.TEXTURE12);\n\t\tconst activeTe"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE2", "api_method_all": "readonly TEXTURE2: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 22, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE23);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE24);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE20);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE26);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE25);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE29);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE2);\n\t\tconst activeTex", "gl.activeTexture(gl.TEXTURE22);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE21);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE28);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE27);\n\t\tconst activeTe"], "files": ["WebGL.test12.js", "webGL.test.js", "WebGL.test13.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE3", "api_method_all": "readonly TEXTURE3: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE31);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE30);\n\t\tconst activeTe", "gl.activeTexture(gl.TEXTURE3);\n\t\tconst activeTex"], "files": ["webGL.test.js", "WebGL.test13.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE4", "api_method_all": "readonly TEXTURE4: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE4);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE5", "api_method_all": "readonly TEXTURE5: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE5);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE6", "api_method_all": "readonly TEXTURE6: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE6);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE7", "api_method_all": "readonly TEXTURE7: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE7);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE8", "api_method_all": "readonly TEXTURE8: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE8B4C);\n\t\tconst active", "gl.activeTexture(gl.TEXTURE8);\n\t\tconst activeTex"], "files": ["WebGL.test06.js", "webGL.test.js", "WebGL.test12.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE9", "api_method_all": "readonly TEXTURE9: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE9);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE10", "api_method_all": "readonly TEXTURE10: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE10);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE11", "api_method_all": "readonly TEXTURE11: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE11);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE12", "api_method_all": "readonly TEXTURE12: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE12);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE13", "api_method_all": "readonly TEXTURE13: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE13);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE14", "api_method_all": "readonly TEXTURE14: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE14);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE15", "api_method_all": "readonly TEXTURE15: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE15);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE16", "api_method_all": "readonly TEXTURE16: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE16);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE17", "api_method_all": "readonly TEXTURE17: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE17);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE18", "api_method_all": "readonly TEXTURE18: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE18);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE19", "api_method_all": "readonly TEXTURE19: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE19);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE20", "api_method_all": "readonly TEXTURE20: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE20);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE21", "api_method_all": "readonly TEXTURE21: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE21);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE22", "api_method_all": "readonly TEXTURE22: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE22);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE23", "api_method_all": "readonly TEXTURE23: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE23);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE24", "api_method_all": "readonly TEXTURE24: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE24);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE25", "api_method_all": "readonly TEXTURE25: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE25);\n\t\tconst activeTex"], "files": ["WebGL.test12.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE26", "api_method_all": "readonly TEXTURE26: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE26);\n\t\tconst activeTex"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE27", "api_method_all": "readonly TEXTURE27: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE27);\n\t\tconst activeTex"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE28", "api_method_all": "readonly TEXTURE28: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE28);\n\t\tconst activeTex"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE29", "api_method_all": "readonly TEXTURE29: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE29);\n\t\tconst activeTex"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE30", "api_method_all": "readonly TEXTURE30: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE30);\n\t\tconst activeTex"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "TEXTURE31", "api_method_all": "readonly TEXTURE31: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.activeTexture(gl.TEXTURE31);\n\t\tconst activeTex"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "ACTIVE_TEXTURE", "api_method_all": "readonly ACTIVE_TEXTURE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 72, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.ACTIVE_TEXTURE);\n\t\t// returns \"339", " gl.getParameter(gl.ACTIVE_TEXTURE);\n\t\tconsole.info(\"w"], "files": ["WebGL.test12.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test06.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "REPEAT", "api_method_all": "readonly REPEAT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["lue).assertEqual(gl.REPEAT);\n\t\tdone();\n\t});\n\n\t", ".TEXTURE_WRAP_S, gl.REPEAT);\n\t\tconst texParame", "WRAP_S, gl.MIRRORED_REPEAT);\n\t\tconst texParame"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "CLAMP_TO_EDGE", "api_method_all": "readonly CLAMP_TO_EDGE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [".TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tconst texParame"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MIRRORED_REPEAT", "api_method_all": "readonly MIRRORED_REPEAT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [".TEXTURE_WRAP_S, gl.MIRRORED_REPEAT);\n\t\tconst texParame"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FLOAT_VEC2", "api_method_all": "readonly FLOAT_VEC2: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["lse {\n\t\t\ttype = [gl.FLOAT_VEC2, gl.FLOAT_VEC3, gl."], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FLOAT_VEC3", "api_method_all": "readonly FLOAT_VEC3: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" [gl.FLOAT_VEC2, gl.FLOAT_VEC3, gl.FLOAT_VEC4, gl."], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FLOAT_VEC4", "api_method_all": "readonly FLOAT_VEC4: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [", gl.FLOAT_VEC3, gl.FLOAT_VEC4, gl.INT_VEC2, gl.IN"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "INT_VEC2", "api_method_all": "readonly INT_VEC2: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": [", gl.FLOAT_VEC4, gl.INT_VEC2, gl.INT_VEC3, gl\n\t\t", "ype = [gl2.UNSIGNED_INT_VEC2, gl2.UNSIGNED_INT_V"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "INT_VEC3", "api_method_all": "readonly INT_VEC3: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["C4, gl.INT_VEC2, gl.INT_VEC3, gl\n\t\t\t\t.INT_VEC4, ", "_VEC2, gl2.UNSIGNED_INT_VEC3,\n\t\t\t\tgl2.UNSIGNED_I"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "INT_VEC4", "api_method_all": "readonly INT_VEC4: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["l.INT_VEC3, gl\n\t\t\t\t.INT_VEC4, gl.FLOAT_MAT2,\n\t\t\t", "3,\n\t\t\t\tgl2.UNSIGNED_INT_VEC4, gl2.FLOAT_MAT2x3, "], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BOOL", "api_method_all": "readonly BOOL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["l2.FLOAT_MAT4x3, gl.BOOL_VEC2, gl.BOOL_VEC3,", "n') {\n\t\t\ttype = [gl.BOOL];\n\t\t} else if ((typ", "4, gl.BOOL_VEC2, gl.BOOL_VEC3, gl.BOOL_VEC4\n", ", gl.FLOAT_MAT4, gl.BOOL_VEC2, gl.BOOL_VEC3,", "2, gl.BOOL_VEC3, gl.BOOL_VEC4\n\t\t\t]\n\t\t}\n\t\tcon", "3, gl.BOOL_VEC2, gl.BOOL_VEC3, gl.BOOL_VEC4\n"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BOOL_VEC2", "api_method_all": "readonly BOOL_VEC2: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": [", gl.FLOAT_MAT4, gl.BOOL_VEC2, gl.BOOL_VEC3, gl.B", "l2.FLOAT_MAT4x3, gl.BOOL_VEC2, gl.BOOL_VEC3, gl.B"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BOOL_VEC3", "api_method_all": "readonly BOOL_VEC3: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["4, gl.BOOL_VEC2, gl.BOOL_VEC3, gl.BOOL_VEC4\n\t\t\t]\n", "3, gl.BOOL_VEC2, gl.BOOL_VEC3, gl.BOOL_VEC4\n\t\t\t]\n"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BOOL_VEC4", "api_method_all": "readonly BOOL_VEC4: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["2, gl.BOOL_VEC3, gl.BOOL_VEC4\n\t\t\t]\n\t\t}\n\t\tconst ty"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FLOAT_MAT2", "api_method_all": "readonly FLOAT_MAT2: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["l\n\t\t\t\t.INT_VEC4, gl.FLOAT_MAT2,\n\t\t\t\tgl.FLOAT_MAT3,", "2.FLOAT_MAT2x3, gl2.FLOAT_MAT2x4, gl2.FLOAT_MAT3x2", "IGNED_INT_VEC4, gl2.FLOAT_MAT2x3, gl2.FLOAT_MAT2x4"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FLOAT_MAT3", "api_method_all": "readonly FLOAT_MAT3: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["2.FLOAT_MAT2x4, gl2.FLOAT_MAT3x2, gl2\n\t\t\t\t.FLOAT_M", "AT_MAT3x2, gl2\n\t\t\t\t.FLOAT_MAT3x4,\n\t\t\t\tgl2.FLOAT_MA", ".FLOAT_MAT2,\n\t\t\t\tgl.FLOAT_MAT3, gl.FLOAT_MAT4, gl."], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FLOAT_MAT4", "api_method_all": "readonly FLOAT_MAT4: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": ["2.FLOAT_MAT4x2, gl2.FLOAT_MAT4x3, gl.BOOL_VEC2, gl", "OAT_MAT3x4,\n\t\t\t\tgl2.FLOAT_MAT4x2, gl2.FLOAT_MAT4x3", "\t\tgl.FLOAT_MAT3, gl.FLOAT_MAT4, gl.BOOL_VEC2, gl.B"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SAMPLER_2D", "api_method_all": "readonly SAMPLER_2D: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 16, "since": 7, "api_used": "\u662f", "lines": ["2\n\t\t\t\t.UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\t\t];\n\t\t} els", "HADOW, gl2\n\t\t\t\t.INT_SAMPLER_2D,\n\t\t\t\tgl2.INT_SAMPLE", "AMPLER_3D, gl2\n\t\t\t\t.SAMPLER_2D_SHADOW,\n\t\t\t\tgl2.SAM", "2\n\t\t\t\t.UNSIGNED_INT_SAMPLER_2D,\n\t\t\t\tgl2.UNSIGNED_I", "MPLER_2D_ARRAY, gl2.SAMPLER_2D_ARRAY_SHADOW, gl2.S", "MPLER_CUBE, gl2.INT_SAMPLER_2D_ARRAY, gl2\n\t\t\t\t.UNS", "r') {\n\t\t\ttype = [gl.SAMPLER_2D, gl.SAMPLER_CUBE];\n", "_2D_SHADOW,\n\t\t\t\tgl2.SAMPLER_2D_ARRAY, gl2.SAMPLER_"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "SAMPLER_CUBE", "api_method_all": "readonly SAMPLER_CUBE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": [" [gl.SAMPLER_2D, gl.SAMPLER_CUBE];\n\t\t} else {\n\t\t\ttyp", "D_ARRAY_SHADOW, gl2.SAMPLER_CUBE_SHADOW, gl2\n\t\t\t\t.IN", "SAMPLER_3D, gl2.INT_SAMPLER_CUBE, gl2.INT_SAMPLER_2D", "D, gl2.UNSIGNED_INT_SAMPLER_CUBE, gl2\n\t\t\t\t.UNSIGNED_"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "VERTEX_ATTRIB_ARRAY_ENABLED", "api_method_all": "readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["tVertexAttrib(0, gl.VERTEX_ATTRIB_ARRAY_ENABLED);\n\t\tconsole.info(\"g"], "files": ["webGL.test.js", "WebGL.test15.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "VERTEX_ATTRIB_ARRAY_SIZE", "api_method_all": "readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["tVertexAttrib(0, gl.VERTEX_ATTRIB_ARRAY_SIZE);\n\t\tconst isBuffer "], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "VERTEX_ATTRIB_ARRAY_STRIDE", "api_method_all": "readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["tVertexAttrib(0, gl.VERTEX_ATTRIB_ARRAY_STRIDE);\n\t\tconst isBuffer "], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "VERTEX_ATTRIB_ARRAY_TYPE", "api_method_all": "readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["tVertexAttrib(0, gl.VERTEX_ATTRIB_ARRAY_TYPE);\n\t\tconst isBuffer "], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "VERTEX_ATTRIB_ARRAY_NORMALIZED", "api_method_all": "readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["tVertexAttrib(0, gl.VERTEX_ATTRIB_ARRAY_NORMALIZED);\n\t\tconst isBuffer "], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "VERTEX_ATTRIB_ARRAY_POINTER", "api_method_all": "readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["xAttribOffset(0, gl.VERTEX_ATTRIB_ARRAY_POINTER);\n\t\tconsole.info(\"g"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", "api_method_all": "readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["tVertexAttrib(0, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING);\n\t\tconst isBuffer "], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "IMPLEMENTATION_COLOR_READ_TYPE", "api_method_all": "readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.IMPLEMENTATION_COLOR_READ_TYPE);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "IMPLEMENTATION_COLOR_READ_FORMAT", "api_method_all": "readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.IMPLEMENTATION_COLOR_READ_FORMAT);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "COMPILE_STATUS", "api_method_all": "readonly COMPILE_STATUS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 22, "since": 7, "api_used": "\u662f", "lines": ["er(vertexShader, gl.COMPILE_STATUS);\n\t\tconsole.info('c", "arameter(shader, gl.COMPILE_STATUS);\n\t\tif (!compiled) ", "(fragmentShader, gl.COMPILE_STATUS);\n\t\tconsole.info('c"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LOW_FLOAT", "api_method_all": "readonly LOW_FLOAT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["FRAGMENT_SHADER, gl.LOW_FLOAT);\n\t\tconsole.info('s"], "files": ["WebGL.test10.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MEDIUM_FLOAT", "api_method_all": "readonly MEDIUM_FLOAT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["RTEX_SHADER, gl\n\t\t\t.MEDIUM_FLOAT);\n\t\tconsole.info('s", "l.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMax;\n\t\texpect", "l.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMin;\n\t\tgl.get"], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "HIGH_FLOAT", "api_method_all": "readonly HIGH_FLOAT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["MENT_SHADER, gl\n\t\t\t.HIGH_FLOAT);\n\t\tconsole.info('s"], "files": ["WebGL.test10.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "LOW_INT", "api_method_all": "readonly LOW_INT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["FRAGMENT_SHADER, gl.LOW_INT).rangeMin;\n\t\tconst ", "FRAGMENT_SHADER, gl.LOW_INT);\n\t\tconsole.info('s"], "files": ["WebGL.test10.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MEDIUM_INT", "api_method_all": "readonly MEDIUM_INT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["MENT_SHADER, gl\n\t\t\t.MEDIUM_INT);\n\t\tconsole.info('s"], "files": ["WebGL.test10.js", "webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "HIGH_INT", "api_method_all": "readonly HIGH_INT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["l.VERTEX_SHADER, gl.HIGH_INT);\n\t\tconsole.info('s"], "files": ["webGL.test.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRAMEBUFFER", "api_method_all": "readonly FRAMEBUFFER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 341, "since": 7, "api_used": "\u662f", "lines": ["ramebufferStatus(gl.FRAMEBUFFER);\n\t\tconsole.info(\n\t", "us2).assertEqual(gl.FRAMEBUFFER_COMPLETE);\n\n\t\t//del", "achmentParameter(gl.FRAMEBUFFER, gl\n\t\t\t.COLOR_ATTAC", "ramebufferStatus(gl.FRAMEBUFFER);\n\t\tconsole.info(\"c", "Framebuffer(gl.READ_FRAMEBUFFER,\n\t\t\t[gl.COLOR_ATTAC", "tus).assertEqual(gl.FRAMEBUFFER_INCOMPLETE_MISSING_", ".bindFramebuffer(gl.FRAMEBUFFER, 'framebuffer');\n\n\t", ".bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n\t\tg", "ramebuffer(-gl.READ_FRAMEBUFFER,\n\t\t\t[gl.COLOR_ATTAC", "ertEqual(gl.INVALID_FRAMEBUFFER_OPERATION);\n\t\t//del", "fferTextureLayer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMEN", ".bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\tco", ".bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n\t\tc", "ertEqual(gl.INVALID_FRAMEBUFFER_OPERATION);\n\n\t\t//de", "enderbuffer(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMEN", " gl.getParameter(gl.FRAMEBUFFER_BINDING);\n\t\tconsole", "enderbuffer(gl.DRAW_FRAMEBUFFER, gl.DEPTH_ATTACHMEN", "_ATTACHMENT0,\n\t\t\tgl.FRAMEBUFFER_ATTACHMENT_OBJECT_T", "fferTextureLayer(gl.FRAMEBUFFER, gl2.COLOR_ATTACHME", "entParameter(gl\n\t\t\t.FRAMEBUFFER_ATTACHMENT_OBJECT_T", ".bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\t\tc", "erTexture2D(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMEN", "enderbuffer(gl.DRAW_FRAMEBUFFER, \"11\", gl.RENDERBUF", "ferTextureLayer(-gl.FRAMEBUFFER, -gl.COLOR_ATTACHME", "fferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMEN", "ramebuffer(-gl.READ_FRAMEBUFFER,\n\t\t\t[-0, -gl.COLOR_", ".bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\tgl"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RENDERBUFFER", "api_method_all": "readonly RENDERBUFFER: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 315, "since": 7, "api_used": "\u662f", "lines": ["rbufferParameter(gl.RENDERBUFFER, gl.RENDERBUFFER_WI", "rbufferParameter(gl.RENDERBUFFER, gl\n\t\t\t.RENDERBUFFE", "_ATTACHMENT, gl\n\t\t\t.RENDERBUFFER, renderbuffer);\n\n\t\t", "gl.RENDERBUFFER, gl.RENDERBUFFER_GREEN_SIZE);\n\t\texpe", "derbufferStorage(gl.RENDERBUFFER, gl.RGBA4, 256, 256", "NCIL_ATTACHMENT, gl.RENDERBUFFER,\n\t\t\trenderbuffer);\n", "gl.RENDERBUFFER, gl.RENDERBUFFER_WIDTH);\n\t\texpect(wi", "bindRenderbuffer(gl.RENDERBUFFER, renderBuffer);\n\t\tg", "gl.RENDERBUFFER, gl.RENDERBUFFER_WIDTH);\n\t\tconsole.i", "gl.RENDERBUFFER, gl.RENDERBUFFER_INTERNAL_FORMAT);\n\t", "orageMultisample(gl.RENDERBUFFER, 4, gl.RBGA4, 256, ", "LOR_ATTACHMENT0, gl.RENDERBUFFER,\n\t\t\trenderbuffer);\n", "orageMultisample(gl.RENDERBUFFER, 4, gl.R8UI, 256, 2", "AMEBUFFER, \"11\", gl.RENDERBUFFER, renderbuffer);\n\n\t\t", "orageMultisample(gl.RENDERBUFFER, 4, gl.R8I, 256, 25", "rbufferParameter(gl.RENDERBUFFER, gl.RENDERBUFFER_IN", "orageMultisample(gl.RENDERBUFFER, 4, gl.R16I, 256, 2", "orageMultisample(gl.RENDERBUFFER, 4, gl.R8, 256, 256", "bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n\n\t\t", "bindRenderbuffer(gl.RENDERBUFFER, 'renderbuffer');\n\n", "bindRenderbuffer(gl.RENDERBUFFER, renderBuffer);\n\t\t/", "rageMultisample(-gl.RENDERBUFFER, -4, -gl.RBGA4, -25", "rbufferParameter(gl.RENDERBUFFER, gl.RENDERBUFFER_GR", " gl.getParameter(gl.RENDERBUFFER_BINDING);\n\t\tconsole", "orageMultisample(gl.RENDERBUFFER, 4, gl.R16UI, 256, ", "LOR_ATTACHMENT0, gl.RENDERBUFFER,\n\t\t\trenderBuffer);\n", "EPTH_ATTACHMENT, gl.RENDERBUFFER,\n\t\t\trenderbuffer);\n", "bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n\t\tc", "ENDERBUFFER, gl\n\t\t\t.RENDERBUFFER_INTERNAL_FORMAT);\n\t", "lformatParameter(gl.RENDERBUFFER, gl2.RGBA8, gl.SAMP"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RGBA4", "api_method_all": "readonly RGBA4: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 30, "since": 7, "api_used": "\u662f", "lines": ["dth).assertEqual(gl.RGBA4);\n\t\tdone();\n\t});\n\n\t", "gl.RENDERBUFFER, gl.RGBA4, 256, 256);\n\n\t\tcons", "dth).assertEqual(gl.RGBA4);\n\t\tdone();\n\t});\n\n\n", "gl.RENDERBUFFER, gl.RGBA4, 256, 256);\n\t\tconst", "mat).assertEqual(gl.RGBA4);\n\t\tdone();\n\t});\n\n\n"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test02.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RGB5_A1", "api_method_all": "readonly RGB5_A1: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["gl.RENDERBUFFER, gl.RGB5_A1, 256, 256);\n\n\t\tcons", "dth).assertEqual(gl.RGB5_A1);\n\t\tdone();\n\t});\n\n\t"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RGB565", "api_method_all": "readonly RGB565: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["gl.RENDERBUFFER, gl.RGB565, 256, 256);\n\n\t\tcons", "dth).assertEqual(gl.RGB565);\n\t\tdone();\n\t});\n\n\t"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DEPTH_COMPONENT16", "api_method_all": "readonly DEPTH_COMPONENT16: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 256, 256);\n\n\t\tcons", "dth).assertEqual(gl.DEPTH_COMPONENT16);\n\t\tdone();\n\t});\n\n\t", "RENDERBUFFER, 4, gl.DEPTH_COMPONENT16, 256, 256);\n\t\tconst"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_INDEX8", "api_method_all": "readonly STENCIL_INDEX8: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["gl.RENDERBUFFER, gl.STENCIL_INDEX8, 256, 256);\n\n\t\tcons", "dth).assertEqual(gl.STENCIL_INDEX8);\n\t\tdone();\n\t});\n\n\n", "RENDERBUFFER, 4, gl.STENCIL_INDEX8, 256, 256);\n\t\tconst"], "files": ["webGL.test.js", "WebGL.test13.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DEPTH_STENCIL", "api_method_all": "readonly DEPTH_STENCIL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 53, "since": 7, "api_used": "\u662f", "lines": ["2.clearBufferuiv(gl.DEPTH_STENCIL, 0, new Uint32Array", "l2.clearBufferiv(gl.DEPTH_STENCIL, 0, new Int32Array(", "l2.clearBufferfv(gl.DEPTH_STENCIL, 0, [0.0, 0.0, 0.0,", "RAW_FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl\n\t\t\t.", "FRAMEBUFFER,\n\t\t\t[gl.DEPTH_STENCIL_ATTACHMENT, gl.COLO", "gl.FRAMEBUFFER, gl2.DEPTH_STENCIL_ATTACHMENT, texture", "FRAMEBUFFER, gl\n\t\t\t.DEPTH_STENCIL_ATTACHMENT,\n\t\t\tgl.F", "gl.RENDERBUFFER, gl.DEPTH_STENCIL, 256, 256);\n\n\t\tcons", "l2.clearBufferfi(gl.DEPTH_STENCIL, \"0\", 1.0, 0);\n\n\t\tl", "FRAMEBUFFER,\n\t\t\t[gl.DEPTH_STENCIL_ATTACHMENT, gl.STEN", "l2.clearBufferfi(gl.DEPTH_STENCIL, 0, 1.0, 0);\n\n\t\tlet", "FRAMEBUFFER, gl\n\t\t\t.DEPTH_STENCIL_ATTACHMENT,\n\t\t\tgl2."], "files": ["WebGL.test10.js", "WebGL.test14.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RENDERBUFFER_WIDTH", "api_method_all": "readonly RENDERBUFFER_WIDTH: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["gl.RENDERBUFFER, gl.RENDERBUFFER_WIDTH);\n\t\texpect(width).a", "gl.RENDERBUFFER, gl.RENDERBUFFER_WIDTH);\n\t\tconsole.info(\"g"], "files": ["webGL.test.js", "WebGL.test02.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RENDERBUFFER_HEIGHT", "api_method_all": "readonly RENDERBUFFER_HEIGHT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.RENDERBUFFER, gl.RENDERBUFFER_HEIGHT);\n\t\texpect(height)."], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RENDERBUFFER_INTERNAL_FORMAT", "api_method_all": "readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 14, "since": 7, "api_used": "\u662f", "lines": ["ENDERBUFFER, gl\n\t\t\t.RENDERBUFFER_INTERNAL_FORMAT);\n\t\texpect(internal", "gl.RENDERBUFFER, gl.RENDERBUFFER_INTERNAL_FORMAT);\n\t\texpect(width).a"], "files": ["WebGL.test11.js", "webGL.test.js", "WebGL.test13.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RENDERBUFFER_RED_SIZE", "api_method_all": "readonly RENDERBUFFER_RED_SIZE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.RENDERBUFFER, gl.RENDERBUFFER_RED_SIZE);\n\t\texpect(size).as"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RENDERBUFFER_GREEN_SIZE", "api_method_all": "readonly RENDERBUFFER_GREEN_SIZE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["gl.RENDERBUFFER, gl.RENDERBUFFER_GREEN_SIZE);\n\t\texpect(greenSiz"], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RENDERBUFFER_BLUE_SIZE", "api_method_all": "readonly RENDERBUFFER_BLUE_SIZE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.RENDERBUFFER, gl.RENDERBUFFER_BLUE_SIZE);\n\t\texpect(size).as"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RENDERBUFFER_ALPHA_SIZE", "api_method_all": "readonly RENDERBUFFER_ALPHA_SIZE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.RENDERBUFFER, gl.RENDERBUFFER_ALPHA_SIZE);\n\t\texpect(size).as"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RENDERBUFFER_DEPTH_SIZE", "api_method_all": "readonly RENDERBUFFER_DEPTH_SIZE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.RENDERBUFFER, gl.RENDERBUFFER_DEPTH_SIZE);\n\t\texpect(size).as"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RENDERBUFFER_STENCIL_SIZE", "api_method_all": "readonly RENDERBUFFER_STENCIL_SIZE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["gl.RENDERBUFFER, gl.RENDERBUFFER_STENCIL_SIZE);\n\t\texpect(size).as"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", "api_method_all": "readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 9, "since": 7, "api_used": "\u662f", "lines": ["H_ATTACHMENT,\n\t\t\tgl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE);\n\t\tconsole.info('F", "L_ATTACHMENT,\n\t\t\tgl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE);\n\t\tconsole.info('F", "entParameter(gl\n\t\t\t.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE);\n\t\tconsole.info('F", "_ATTACHMENT0,\n\t\t\tgl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE);\n\t\tconsole.info('F"], "files": ["WebGL.test10.js", "WebGL.test06.js", "webGL.test.js", "WebGL.test02.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", "api_method_all": "readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["L_ATTACHMENT,\n\t\t\tgl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME);\n\t\tconsole.info('F"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", "api_method_all": "readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["L_ATTACHMENT,\n\t\t\tgl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL);\n\t\tconsole.info('F"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE", "api_method_all": "readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 8, "since": 7, "api_used": "\u662f", "lines": ["L_ATTACHMENT,\n\t\t\tgl.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE);\n\t\tconsole.info('F"], "files": ["webGL.test.js", "WebGL.test13.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "COLOR_ATTACHMENT0", "api_method_all": "readonly COLOR_ATTACHMENT0: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 90, "since": 7, "api_used": "\u662f", "lines": ["gl.FRAMEBUFFER, -gl.COLOR_ATTACHMENT0, shader, -0, -8)\n\t\t", "FRAMEBUFFER, gl\n\t\t\t.COLOR_ATTACHMENT0,\n\t\t\tgl.FRAMEBUFFER_", "RAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tex", "FRAMEBUFFER,\n\t\t\t[gl.COLOR_ATTACHMENT0, gl.COLOR_ATTACHMEN", "AD_FRAMEBUFFER, gl2.COLOR_ATTACHMENT0, texture, 0, 8)\n\t\tc", "\t\tgl2.readBuffer(gl.COLOR_ATTACHMENT0);\n\t\tconst readBuffe", "\tgl2.readBuffer(-gl.COLOR_ATTACHMENT0);\n\t\tconst readBuffe", "AW_FRAMEBUFFER, gl2.COLOR_ATTACHMENT0, texture, 0, 8)\n\t\tc", "FRAMEBUFFER,\n\t\t\t[gl.COLOR_ATTACHMENT0, gl.DEPTH_ATTACHMEN", "(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0,\n\t\t\ttexture, 0, 8)\n", "FRAMEBUFFER,\n\t\t\t[gl.COLOR_ATTACHMENT0, gl.STENCIL_ATTACHM", "(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER,\n\t", "RAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER,\n\t", "gl.FRAMEBUFFER, gl2.COLOR_ATTACHMENT0, texture, 0, 8)\n\t\tc", "FRAMEBUFFER,\n\t\t\t[gl.COLOR_ATTACHMENT0, -gl.COLOR_ATTACHME", "RAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl\n\t\t\t.TEXTURE_CUB"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test02.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test05.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DEPTH_ATTACHMENT", "api_method_all": "readonly DEPTH_ATTACHMENT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 13, "since": 7, "api_used": "\u662f", "lines": ["RAW_FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER,\n\t", "FRAMEBUFFER,\n\t\t\t[gl.DEPTH_ATTACHMENT, gl.COLOR_ATTACHMEN", "FRAMEBUFFER, gl\n\t\t\t.DEPTH_ATTACHMENT,\n\t\t\tgl.FRAMEBUFFER_", "gl.FRAMEBUFFER, gl2.DEPTH_ATTACHMENT, texture, 0, 8)\n\t\tc", "FRAMEBUFFER,\n\t\t\t[gl.DEPTH_ATTACHMENT, gl.STENCIL_ATTACHM", "LOR_ATTACHMENT0, gl.DEPTH_ATTACHMENT]);\n\t\tconst invalida", "RAW_FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, tex"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test08.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "STENCIL_ATTACHMENT", "api_method_all": "readonly STENCIL_ATTACHMENT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 56, "since": 7, "api_used": "\u662f", "lines": ["UFFER,\n\t\t\t[gl.DEPTH_STENCIL_ATTACHMENT, gl.COLOR_ATTACHMEN", "MEBUFFER, gl2.DEPTH_STENCIL_ATTACHMENT, texture, 0, 8)\n\t\tc", "LOR_ATTACHMENT0, gl.STENCIL_ATTACHMENT],\n\t\t\t0, 0, 256, 256", "RAW_FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.TEXTURE_2D, tex", "EPTH_ATTACHMENT, gl.STENCIL_ATTACHMENT]);\n\t\tconst invalida", "UFFER,\n\t\t\t[gl.DEPTH_STENCIL_ATTACHMENT, gl.STENCIL_ATTACHM", "FRAMEBUFFER,\n\t\t\t[gl.STENCIL_ATTACHMENT, gl.COLOR_ATTACHMEN", "FRAMEBUFFER, gl\n\t\t\t.STENCIL_ATTACHMENT,\n\t\t\tgl.FRAMEBUFFER_", "UFFER, gl\n\t\t\t.DEPTH_STENCIL_ATTACHMENT,\n\t\t\tgl2.FRAMEBUFFER", "RAW_FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.RENDERBUFFER,\n\t", "AMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl\n\t\t\t.RENDERBUFFE", "NCIL_ATTACHMENT, gl.STENCIL_ATTACHMENT],\n\t\t\t0, 0, 256, 256", "gl.FRAMEBUFFER, gl2.STENCIL_ATTACHMENT, texture, 0, 8)\n\t\tc", "UFFER, gl\n\t\t\t.DEPTH_STENCIL_ATTACHMENT,\n\t\t\tgl.FRAMEBUFFER_"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test13.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "DEPTH_STENCIL_ATTACHMENT", "api_method_all": "readonly DEPTH_STENCIL_ATTACHMENT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 40, "since": 7, "api_used": "\u662f", "lines": ["FRAMEBUFFER,\n\t\t\t[gl.DEPTH_STENCIL_ATTACHMENT, gl.COLOR_ATTACHMEN", "RAW_FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl\n\t\t\t.RENDERBUFFE", "FRAMEBUFFER,\n\t\t\t[gl.DEPTH_STENCIL_ATTACHMENT, gl.STENCIL_ATTACHM", "FRAMEBUFFER, gl\n\t\t\t.DEPTH_STENCIL_ATTACHMENT,\n\t\t\tgl2.FRAMEBUFFER", "FRAMEBUFFER, gl\n\t\t\t.DEPTH_STENCIL_ATTACHMENT,\n\t\t\tgl.FRAMEBUFFER_", "gl.FRAMEBUFFER, gl2.DEPTH_STENCIL_ATTACHMENT, texture, 0, 8)\n\t\tc"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test13.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "NONE", "api_method_all": "readonly NONE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 9, "since": 7, "api_used": "\u662f", "lines": ["x18).assertEqual(gl.NONE);\n\t\tvar x19 =0x9242", "l2.drawBuffers([gl2.NONE, gl2.COLOR_ATTACHME", "2.drawBuffers([\"gl2.NONE\", \"gl2.COLOR_ATTACH"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRAMEBUFFER_COMPLETE", "api_method_all": "readonly FRAMEBUFFER_COMPLETE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["us2).assertEqual(gl.FRAMEBUFFER_COMPLETE);\n\n\t\t//deleteContex"], "files": ["webGL.test.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT", "api_method_all": "readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["bufferStatus(gl\n\t\t\t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT);\n\t\tconsole.info(\"c"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", "api_method_all": "readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 5, "since": 7, "api_used": "\u662f", "lines": ["tus).assertEqual(gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT);\n\n\t\t//deleteContex"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test01.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS", "api_method_all": "readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["bufferStatus(gl\n\t\t\t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS);\n\t\tconsole.info(\"c"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRAMEBUFFER_UNSUPPORTED", "api_method_all": "readonly FRAMEBUFFER_UNSUPPORTED: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": ["ramebufferStatus(gl.FRAMEBUFFER_UNSUPPORTED);\n\t\tconsole.info(\"c"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "FRAMEBUFFER_BINDING", "api_method_all": "readonly FRAMEBUFFER_BINDING: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 7, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.FRAMEBUFFER_BINDING);\n\t\tconst isFramebu", " gl.getParameter(gl.FRAMEBUFFER_BINDING);\n\t\tconsole.info(\"f", "tParameter(gl2.DRAW_FRAMEBUFFER_BINDING);\n\t\t// returns \"339", "tParameter(gl2.READ_FRAMEBUFFER_BINDING);\n\t\t// returns \"339"], "files": ["WebGL.test12.js", "webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "RENDERBUFFER_BINDING", "api_method_all": "readonly RENDERBUFFER_BINDING: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.RENDERBUFFER_BINDING);\n\t\tconsole.info(\"r"], "files": ["webGL.test.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "MAX_RENDERBUFFER_SIZE", "api_method_all": "readonly MAX_RENDERBUFFER_SIZE: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.MAX_RENDERBUFFER_SIZE);\n\t\t// returns \"339"], "files": ["webGL.test.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "INVALID_FRAMEBUFFER_OPERATION", "api_method_all": "readonly INVALID_FRAMEBUFFER_OPERATION: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 44, "since": 7, "api_used": "\u662f", "lines": ["ode).assertEqual(gl.INVALID_FRAMEBUFFER_OPERATION);\n\t\t//deleteContext", "ode).assertEqual(gl.INVALID_FRAMEBUFFER_OPERATION);\n\n\t\t//deleteContex", "ode).assertEqual(gl.INVALID_FRAMEBUFFER_OPERATION);\n\t\tdone();\n\t});\n\n\t"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test08.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "UNPACK_FLIP_Y_WEBGL", "api_method_all": "readonly UNPACK_FLIP_Y_WEBGL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 4, "since": 7, "api_used": "\u662f", "lines": ["\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 4);\n\t\tconst unpack", " gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n\t\tconsole.info(\"u"], "files": ["webGL.test.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "UNPACK_PREMULTIPLY_ALPHA_WEBGL", "api_method_all": "readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 6, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n\t\tconsole.info(\"u", "\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 4);\n\t\tconst unpack"], "files": ["webGL.test.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "CONTEXT_LOST_WEBGL", "api_method_all": "readonly CONTEXT_LOST_WEBGL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1, "since": 7, "api_used": "\u662f", "lines": ["x19).assertEqual(gl.CONTEXT_LOST_WEBGL);\n\t\tvar x20 = 0x889"], "files": ["webGL.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "UNPACK_COLORSPACE_CONVERSION_WEBGL", "api_method_all": "readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL);\n\t\tconsole.info(\"u"], "files": ["webGL.test.js", "WebGL.test09.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "BROWSER_DEFAULT_WEBGL", "api_method_all": "readonly BROWSER_DEFAULT_WEBGL: GLenum", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" gl.getParameter(gl.BROWSER_DEFAULT_WEBGL);\n\t\tconsole.info(\"a"], "files": ["webGL.test.js", "WebGL.test14.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "canvas", "api_method_all": "readonly canvas: HTMLCanvasElement | OffscreenCanvas", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 34, "since": 7, "api_used": "\u662f", "lines": ["tValue);\n\n\t\t// \u6307\u5b9a\u6e05\u7a7a<canvas>\u7684\u989c\u8272\n\t\tgl.clearColor", "bal.el = this.$refs.canvas1;\n        global.el", "0.0, 1.0);\n\n\t\t// \u6e05\u7a7a<canvas>\n\t\t// COLOR_BUFFER_", "ext start');\n\t\t// \u83b7\u53d6canvas\u5143\u7d20\n\t\tconst el = glob", "al.el2 = this.$refs.canvas2;\n        \n        "], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "index.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "drawingBufferWidth", "api_method_all": "readonly drawingBufferWidth: GLsizei", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["readPixels(0, 0, gl.drawingBufferWidth, gl.drawingBufferHe", "adPixels(-1, -1, gl.drawingBufferWidth, gl.drawingBufferHe", "= new Uint8Array(gl.drawingBufferWidth * gl.drawingBufferH"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextBase", "api_method_name": "drawingBufferHeight", "api_method_all": "readonly drawingBufferHeight: GLsizei", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 24, "since": 7, "api_used": "\u662f", "lines": ["ingBufferWidth * gl.drawingBufferHeight * 4);\n\t\tgl.readPixe", "wingBufferWidth, gl.drawingBufferHeight, -1, gl.DST_COLOR, ", "wingBufferWidth, gl.drawingBufferHeight, gl.RGBA, gl.DST_CO", "wingBufferWidth, gl.drawingBufferHeight, gl.RGBA, gl\n\t\t\t.UN", "wingBufferWidth, gl.drawingBufferHeight, -1, gl.CONSTANT_CO"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_all": "interface WebGLRenderingContextOverloads {\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(target: GLenum, data: BufferSource | null, usage: GLenum): void;\n    bufferSubData(target: GLenum, offset: GLintptr, data: BufferSource): void;\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, data: ArrayBufferView): void;\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, data: ArrayBufferView): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    uniform1fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform2fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform3fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform4fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform1iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform2iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform3iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform4iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n}", "api_method_name": "WebGLRenderingContextOverloads", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 0, "since": 7, "api_used": "\u5426", "lines": [], "files": [], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "bufferData", "api_method_all": "bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 679, "since": 7, "api_used": "\u662f", "lines": ["ATIC_DRAW);\n\t\tconst bufferDataError = gl.getError(", "sole.info('jsWebGL2 bufferData test start ...' + J", "ole.info(\"webgltest bufferData getError: \" + error", "4\n\t * @tc.desc Test bufferData.\n\t */\n\tit('testBuff", "a\n\t * @tc.desc Test bufferData.\n\t */\n\tit('testBuff", "ingify(gl2));\n\t\tgl2.bufferData(1024, gl.STATIC_DRA", "1\n\t * @tc.desc Test bufferData.\n\t */\n\tit('testBuff", "r\n\t * @tc.desc Test bufferData.\n\t */\n\tit('testBuff", "FFER, buffer);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BU", "SRC_COLOR);\n\t\tconst bufferDataError = gl.getError(", "2\n\t * @tc.desc Test bufferData.\n\t */\n\tit('testBuff", "\t// \u5411\u7f13\u51b2\u533a\u5bf9\u8c61\u5199\u5165\u6570\u636e\n\t\tgl.bufferData(gl.ARRAY_BUFFER, ve", "le.info(\"webgl2test bufferData getError: \" + error", "3\n\t * @tc.desc Test bufferData.\n\t */\n\tit('testBuff", "ingify(gl2));\n\t\tgl2.bufferData(gl.ELEMENT_ARRAY_BU", "SRC_ALPHA);\n\t\tconst bufferDataError = gl.getError(", "ufferDataError: \" + bufferDataError);\n\t\texpect(buf", "();\n\t\tconsole.info(\"bufferDataError: \" + bufferDat", "ataError);\n\t\texpect(bufferDataError).assertEqual(0", "reateBuffer();\n\t\tgl.bufferData(gl.ARRAY_BUFFER, 10", "FFER, buffer);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, 10", "ataError);\n\t\texpect(bufferDataError).assertEqual(g", "FER, buffer);\n\t\tgl2.bufferData(gl.ARRAY_BUFFER, 10", "ALID_ENUM);\n\t\tconst bufferDataError = gl.getError("], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "bufferData", "api_method_all": "bufferData(target: GLenum, data: BufferSource | null, usage: GLenum): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 679, "since": 7, "api_used": "\u662f", "lines": ["ATIC_DRAW);\n\t\tconst bufferDataError = gl.getError(", "sole.info('jsWebGL2 bufferData test start ...' + J", "ole.info(\"webgltest bufferData getError: \" + error", "4\n\t * @tc.desc Test bufferData.\n\t */\n\tit('testBuff", "a\n\t * @tc.desc Test bufferData.\n\t */\n\tit('testBuff", "ingify(gl2));\n\t\tgl2.bufferData(1024, gl.STATIC_DRA", "1\n\t * @tc.desc Test bufferData.\n\t */\n\tit('testBuff", "r\n\t * @tc.desc Test bufferData.\n\t */\n\tit('testBuff", "FFER, buffer);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BU", "SRC_COLOR);\n\t\tconst bufferDataError = gl.getError(", "2\n\t * @tc.desc Test bufferData.\n\t */\n\tit('testBuff", "\t// \u5411\u7f13\u51b2\u533a\u5bf9\u8c61\u5199\u5165\u6570\u636e\n\t\tgl.bufferData(gl.ARRAY_BUFFER, ve", "le.info(\"webgl2test bufferData getError: \" + error", "3\n\t * @tc.desc Test bufferData.\n\t */\n\tit('testBuff", "ingify(gl2));\n\t\tgl2.bufferData(gl.ELEMENT_ARRAY_BU", "SRC_ALPHA);\n\t\tconst bufferDataError = gl.getError(", "ufferDataError: \" + bufferDataError);\n\t\texpect(buf", "();\n\t\tconsole.info(\"bufferDataError: \" + bufferDat", "ataError);\n\t\texpect(bufferDataError).assertEqual(0", "reateBuffer();\n\t\tgl.bufferData(gl.ARRAY_BUFFER, 10", "FFER, buffer);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, 10", "ataError);\n\t\texpect(bufferDataError).assertEqual(g", "FER, buffer);\n\t\tgl2.bufferData(gl.ARRAY_BUFFER, 10", "ALID_ENUM);\n\t\tconst bufferDataError = gl.getError("], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test02.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test15.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "bufferSubData", "api_method_all": "bufferSubData(target: GLenum, offset: GLintptr, data: BufferSource): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 163, "since": 7, "api_used": "\u662f", "lines": ["ingify(gl2));\n\t\tgl2.bufferSubData(gl.COPY_READ_BUFFER", "a\n\t * @tc.desc Test bufferSubData.\n\t */\n\tit('testBuff", "erSubDataError: \" + bufferSubDataError);\n\t\texpect(buf", "3\n\t * @tc.desc Test bufferSubData.\n\t */\n\tit('testBuff", "ataError);\n\t\texpect(bufferSubDataError).assertEqual(0", "IANGLE_STRIP);\n\t\tgl.bufferSubData(gl.COPY_READ_BUFFER", "ingify(gl2));\n\t\tgl2.bufferSubData(-gl.COPY_READ_BUFFE", ".STATIC_DRAW);\n\t\tgl.bufferSubData(gl.COPY_READ_BUFFER", ".STATIC_DRAW);\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BU", "();\n\t\tconsole.info(\"bufferSubDataError: \" + bufferSub", "ataError);\n\t\texpect(bufferSubDataError).assertEqual(g", "4\n\t * @tc.desc Test bufferSubData.\n\t */\n\tit('testBuff", ".STATIC_DRAW);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 51", "TRIANGLE_FAN);\n\t\tgl.bufferSubData(gl.TRIANGLE_FAN, 51", "2\n\t * @tc.desc Test bufferSubData.\n\t */\n\tit('testBuff", ".STATIC_DRAW);\n\t\tgl.bufferSubData(gl2.COPY_WRITE_BUFF", "le.info(\"webgl2test bufferSubData getError: \" + error", "Buffer(8));\n\t\tconst bufferSubDataError = gl.getError("], "files": ["webGL.test.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "compressedTexImage2D", "api_method_all": "compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, data: ArrayBufferView): void;", "api_type": "", "api_args_count": 7, "api_level": 21, "api_used_count": 222, "since": 7, "api_used": "\u662f", "lines": ["_2D, texture);\n\t\tgl.compressedTexImage2D(gl.TEXTURE_2D, 0, 0", "3\n\t * @tc.desc Test compressedTexImage2D.\n\t */\n\tit('testComp", "1\n\t * @tc.desc Test compressedTexImage2D.\n\t */\n\tit('testComp", "le.info(\"webgl2test compressedTexImage2D getError: \" + error", "4\n\t * @tc.desc Test compressedTexImage2D.\n\t */\n\tit('testComp", "9\n\t * @tc.desc Test compressedTexImage2D.\n\t */\n\tit('testComp", "e2DError);\n\t\texpect(compressedTexImage2DError).assertEqual(g", "12, -1, 0);\n\t\tconst compressedTexImage2DError = gl.getError(", " -8, view);\n\t\tconst compressedTexImage2DError = gl.getError(", "sole.info('jsWebGL2 compressedTexImage2D test start ...' + J", "ingify(gl2));\n\t\tgl2.compressedTexImage2D(gl2.TEXTURE_2D, 0, ", "Int16(1, 42);\n\t\tgl2.compressedTexImage2D(gl2.TEXTURE_2D, 0, ", "_3D, texture);\n\t\tgl.compressedTexImage2D(gl.SRC_COLOR, -1, 0", " framebuffer);\n\t\tgl.compressedTexImage2D(gl.TEXTURE_2D, 0, 0", "r\n\t * @tc.desc Test compressedTexImage2D.\n\t */\n\tit('testComp", "ingify(gl2));\n\t\tgl2.compressedTexImage2D(-gl.TEXTURE_2D, -0,", "512, 0, 0);\n\t\tconst compressedTexImage2DError = gl.getError(", "6\n\t * @tc.desc Test compressedTexImage2D.\n\t */\n\tit('testComp", "5\n\t * @tc.desc Test compressedTexImage2D.\n\t */\n\tit('testComp", "ure, texture);\n\t\tgl.compressedTexImage2D(-texture, -8, -\"abc", "_3D, program);\n\t\tgl.compressedTexImage2D(gl.TEXTURE_3D, 0, [", "exImage2DError: \" + compressedTexImage2DError);\n\t\texpect(com", " 0, \"abc\");\n\t\tconst compressedTexImage2DError = gl.getError(", "-1], 0, 0);\n\t\tconst compressedTexImage2DError = gl.getError(", "D\n\t * @tc.desc Test compressedTexImage2D.\n\t */\n\tit('testComp", "e2DError);\n\t\texpect(compressedTexImage2DError).assertEqual(0", "_3D, texture);\n\t\tgl.compressedTexImage2D(gl.TEXTURE_3D, [0, ", "2\n\t * @tc.desc Test compressedTexImage2D.\n\t */\n\tit('testComp", "();\n\t\tconsole.info(\"compressedTexImage2DError: \" + compresse"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "compressedTexSubImage2D", "api_method_all": "compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, data: ArrayBufferView): void;", "api_type": "", "api_args_count": 8, "api_level": 21, "api_used_count": 156, "since": 7, "api_used": "\u662f", "lines": ["();\n\t\tconsole.info(\"compressedTexSubImage2DError: \" + compresse", "sole.info('jsWebGL2 compressedTexSubImage2D test start ...' + J", "r\n\t * @tc.desc Test compressedTexSubImage2D.\n\t */\n\tit('testComp", "4\n\t * @tc.desc Test compressedTexSubImage2D.\n\t */\n\tit('testComp", "BUFFER, 0);\n\t\tconst compressedTexSubImage2DError = gl.getError(", "e2DError);\n\t\texpect(compressedTexSubImage2DError).assertEqual(g", ", 512, 0, -0);\n\t\tgl.compressedTexSubImage2D(-texture, -0, -256,", "0\n\t * @tc.desc Test compressedTexSubImage2D.\n\t */\n\tit('testComp", "FER, view);\n\t\tconst compressedTexSubImage2DError = gl.getError(", "e2DError);\n\t\texpect(compressedTexSubImage2DError).assertEqual(0", ", 512, 0, -0);\n\t\tgl.compressedTexSubImage2D(-texture, -8, -256,", ",\n\t\t\tview);\n\t\tconst compressedTexSubImage2DError = gl.getError(", "le.info(\"webgl2test compressedTexSubImage2D getError: \" + error", "2\n\t * @tc.desc Test compressedTexSubImage2D.\n\t */\n\tit('testComp", "3\n\t * @tc.desc Test compressedTexSubImage2D.\n\t */\n\tit('testComp", "1\n\t * @tc.desc Test compressedTexSubImage2D.\n\t */\n\tit('testComp", "ubImage2DError: \" + compressedTexSubImage2DError);\n\t\texpect(com", "ingify(gl2));\n\t\tgl2.compressedTexSubImage2D(gl2.TEXTURE_2D, 0, ", "Int16(1, 42);\n\t\tgl2.compressedTexSubImage2D(gl2.TEXTURE_2D, 0, ", "ingify(gl2));\n\t\tgl2.compressedTexSubImage2D(-gl.TEXTURE_2D, -0,", "2, 512, 0, 0);\n\t\tgl.compressedTexSubImage2D(gl.TEXTURE_CUBE_MAP", "2, 512, 0, 0);\n\t\tgl.compressedTexSubImage2D(gl.TEXTURE_2D, 0, 2"], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "readPixels", "api_method_all": "readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;", "api_type": "", "api_args_count": 7, "api_level": 21, "api_used_count": 154, "since": 7, "api_used": "\u662f", "lines": ["E, pixels);\n\t\tconst readPixelsError = gl.getError(", "d\n\t * @tc.desc Test readPixels.\n\t */\n\tit('testRead", "st returnVale = gl2.readPixels(0, 0, 512, 512, gl2", "r\n\t * @tc.desc Test readPixels.\n\t */\n\tit('testRead", "2\n\t * @tc.desc Test readPixels.\n\t */\n\tit('testRead", "PHA, view);\n\t\tconst readPixelsError = gl.getError(", "le.info(\"webgl2test readPixels getError: \" + error", "elsError);\n\t\texpect(readPixelsError).assertEqual(0", "\t\t\tpixels);\n\t\tconst readPixelsError = gl.getError(", "();\n\t\tconsole.info(\"readPixelsError: \" + readPixel", "eadPixelsError: \" + readPixelsError);\n\t\texpect(rea", "sole.info('jsWebGL2 readPixels test start ...' + J", "t\n\t * @tc.desc Test readPixels.\n\t */\n\tit('testRead", "s\n\t * @tc.desc Test readPixels.\n\t */\n\tit('testRead", "erHeight * 4);\n\t\tgl.readPixels(0, 0, gl.drawingBuf", "COLOR, -2);\n\t\tconst readPixelsError = gl.getError(", "erHeight * 4);\n\t\tgl.readPixels(-0, 0, -1, -1, -1, ", "Int16(1, 42);\n\t\tgl2.readPixels(0, 0, 512, 512, gl2", "erHeight * 4);\n\t\tgl.readPixels(-1, -1, gl.drawingB", "3\n\t * @tc.desc Test readPixels.\n\t */\n\tit('testRead", "4\n\t * @tc.desc Test readPixels.\n\t */\n\tit('testRead", "1\n\t * @tc.desc Test readPixels.\n\t */\n\tit('testRead", "ingify(gl2));\n\t\tgl2.readPixels(0, 0, 512, 512, gl2", "LOR,\n\t\t\t0);\n\t\tconst readPixelsError = gl.getError("], "files": ["WebGL.test07.js", "webGL.test.js", "WebGL.test13.js", "WebGL.test05.js", "WebGL.test04.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "texImage2D", "api_method_all": "texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;", "api_type": "", "api_args_count": 9, "api_level": 21, "api_used_count": 587, "since": 7, "api_used": "\u662f", "lines": ["buffer, 1, 4);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, g", "1\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "D\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "ingify(gl2));\n\t\tgl2.texImage2D(gl2.TEXTURE_2D, 0, ", "D_BYTE, z);\n\t\tconst texImage2DError = gl.getError(", "TRACT, -1);\n\t\tconst texImage2DError = gl.getError(", "sole.info('jsWebGL2 texImage2D test start ...' + J", "e2DError);\n\t\texpect(texImage2DError).assertEqual(0", "_ALPHA, z);\n\t\tconst texImage2DError = gl.getError(", "le.info(\"webgl2test texImage2D getError: \" + error", "6\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "Int16(1, 42);\n\t\tgl2.texImage2D(gl2.TEXTURE_2D, 0, ", "();\n\t\tconsole.info(\"texImage2DError: \" + texImage2", "exImage2DError: \" + texImage2DError);\n\t\texpect(tex", "ingify(gl2));\n\t\tgl2.texImage2D(-gl.TEXTURE_2D, -0,", "4\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "2\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "3\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "r\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "ALPHA, -1);\n\t\tconst texImage2DError = gl.getError("], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test13.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "texImage2D", "api_method_all": "texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;", "api_type": "", "api_args_count": 6, "api_level": 21, "api_used_count": 587, "since": 7, "api_used": "\u662f", "lines": ["buffer, 1, 4);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, g", "1\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "D\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "ingify(gl2));\n\t\tgl2.texImage2D(gl2.TEXTURE_2D, 0, ", "D_BYTE, z);\n\t\tconst texImage2DError = gl.getError(", "TRACT, -1);\n\t\tconst texImage2DError = gl.getError(", "sole.info('jsWebGL2 texImage2D test start ...' + J", "e2DError);\n\t\texpect(texImage2DError).assertEqual(0", "_ALPHA, z);\n\t\tconst texImage2DError = gl.getError(", "le.info(\"webgl2test texImage2D getError: \" + error", "6\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "Int16(1, 42);\n\t\tgl2.texImage2D(gl2.TEXTURE_2D, 0, ", "();\n\t\tconsole.info(\"texImage2DError: \" + texImage2", "exImage2DError: \" + texImage2DError);\n\t\texpect(tex", "ingify(gl2));\n\t\tgl2.texImage2D(-gl.TEXTURE_2D, -0,", "4\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "2\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "3\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "r\n\t * @tc.desc Test texImage2D.\n\t */\n\tit('testTexI", "ALPHA, -1);\n\t\tconst texImage2DError = gl.getError("], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test14.js", "WebGL.test13.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "texSubImage2D", "api_method_all": "texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;", "api_type": "", "api_args_count": 9, "api_level": 21, "api_used_count": 204, "since": 7, "api_used": "\u662f", "lines": ["D\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "\t\tview[0] = 2;\n\t\tgl.texSubImage2D(gl.TEXTURE_CUBE_MAP", "r\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "ingify(gl2));\n\t\tgl2.texSubImage2D(gl2.TEXTURE_2D, 0, ", "ingify(gl2));\n\t\tgl2.texSubImage2D(-gl.TEXTURE_2D, -0,", "1\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "sole.info('jsWebGL2 texSubImage2D test start ...' + J", "5\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "Int16(1, 42);\n\t\tgl2.texSubImage2D(gl2.TEXTURE_2D, 0, ", "2DError);\n\t\texpect(ttexSubImage2DError).assertEqual(g", ");\n\t\tconsole.info(\"ttexSubImage2DError: \" + ttexSubIm", "6\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "\t\tview[0] = 2;\n\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0", "2DError);\n\t\texpect(ttexSubImage2DError).assertEqual(0", "\n\t\t\tview);\n\t\tconst ttexSubImage2DError = gl.getError(", "AT, view);\n\t\tconst ttexSubImage2DError = gl.getError(", "le.info(\"webgl2test texSubImage2D getError: \" + error", "buffer, 0, 4);\n\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0", "8\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "7\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "bImage2DError: \" + ttexSubImage2DError);\n\t\texpect(tte", "AT, z, 0);\n\t\tconst ttexSubImage2DError = gl.getError(", "2\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "\t\tview[0] = 2;\n\t\tgl.texSubImage2D(-gl.TEXTURE_2D, -gl"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "texSubImage2D", "api_method_all": "texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;", "api_type": "", "api_args_count": 7, "api_level": 21, "api_used_count": 204, "since": 7, "api_used": "\u662f", "lines": ["D\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "\t\tview[0] = 2;\n\t\tgl.texSubImage2D(gl.TEXTURE_CUBE_MAP", "r\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "ingify(gl2));\n\t\tgl2.texSubImage2D(gl2.TEXTURE_2D, 0, ", "ingify(gl2));\n\t\tgl2.texSubImage2D(-gl.TEXTURE_2D, -0,", "1\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "sole.info('jsWebGL2 texSubImage2D test start ...' + J", "5\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "Int16(1, 42);\n\t\tgl2.texSubImage2D(gl2.TEXTURE_2D, 0, ", "2DError);\n\t\texpect(ttexSubImage2DError).assertEqual(g", ");\n\t\tconsole.info(\"ttexSubImage2DError: \" + ttexSubIm", "6\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "\t\tview[0] = 2;\n\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0", "2DError);\n\t\texpect(ttexSubImage2DError).assertEqual(0", "\n\t\t\tview);\n\t\tconst ttexSubImage2DError = gl.getError(", "AT, view);\n\t\tconst ttexSubImage2DError = gl.getError(", "le.info(\"webgl2test texSubImage2D getError: \" + error", "buffer, 0, 4);\n\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, 0", "8\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "7\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "bImage2DError: \" + ttexSubImage2DError);\n\t\texpect(tte", "AT, z, 0);\n\t\tconst ttexSubImage2DError = gl.getError(", "2\n\t * @tc.desc Test texSubImage2D.\n\t */\n\tit('testTexS", "\t\tview[0] = 2;\n\t\tgl.texSubImage2D(-gl.TEXTURE_2D, -gl"], "files": ["WebGL.test10.js", "WebGL.test07.js", "webGL.test.js", "WebGL.test12.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "uniform1fv", "api_method_all": "uniform1fv(location: WebGLUniformLocation | null, v: Float32List): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 78, "since": 7, "api_used": "\u662f", "lines": ["4\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUnif", "ray([-1, -2]);\n\t\tgl.uniform1fv(uniformlocationObj,", "2\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUnif", "3\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUnif", "v\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUnif", "1\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUnif", "r\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUnif", "niform1fvError: \" + uniform1fvError);\n\t\tconst erro", "etError();\n\t\texpect(uniform1fvError).assertEqual(g", "etError();\n\t\texpect(uniform1fvError).assertEqual(0", "niform1fvError: \" + uniform1fvError);\n\t\texpect(uni", "([1.2, 2.2]);\n\t\tgl2.uniform1fv(uniformLocation, fl", "Array([1, 2]);\n\t\tgl.uniform1fv(uniformlocationObj,", "sole.info('jsWebGL2 uniform1fv test start ...' + J", "aot32list);\n\t\tconst uniform1fvError = gl.getError(", "_Position\");\n\n\t\tgl2.uniform1fv(uniformLocation, [1", "1fvError);\n\t\texpect(uniform1fvError).assertEqual(g", "d\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUnif", "t\n\t * @tc.desc Test uniform1fv.\n\t */\n\tit('testUnif", "();\n\t\tconsole.info(\"uniform1fvError: \" + uniform1f"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "uniform2fv", "api_method_all": "uniform2fv(location: WebGLUniformLocation | null, v: Float32List): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 78, "since": 7, "api_used": "\u662f", "lines": ["iform2fvError1: \" + uniform2fvError);\n\t\texpect(uni", "v\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUnif", "r\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUnif", "2fvError);\n\t\texpect(uniform2fvError).assertEqual(0", "Array([1, 2]);\n\t\tgl.uniform2fv(uniformlocationObj,", "t\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUnif", "3\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUnif", "d\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUnif", "2fvError);\n\t\texpect(uniform2fvError).assertEqual(g", "_Position\");\n\n\t\tgl2.uniform2fv(uniformLocation, [1", "2\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUnif", "();\n\t\tconsole.info(\"uniform2fvError: \" + uniform2f", "([1.2, 2.2]);\n\t\tgl2.uniform2fv(uniformLocation, fl", "aot32list);\n\t\tconst uniform2fvError = gl.getError(", "();\n\t\tconsole.info(\"uniform2fvError1: \" + uniform2", "sole.info('jsWebGL2 uniform2fv test start ...' + J", "4\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUnif", "niform2fvError: \" + uniform2fvError);\n\t\texpect(uni", "1\n\t * @tc.desc Test uniform2fv.\n\t */\n\tit('testUnif", " 2.2], 0, 0);\n\t\tgl2.uniform2fv(uniformLocation, fl"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "uniform3fv", "api_method_all": "uniform3fv(location: WebGLUniformLocation | null, v: Float32List): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 76, "since": 7, "api_used": "\u662f", "lines": ["d\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUnif", "sole.info('jsWebGL2 uniform3fv test start ...' + J", "3\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUnif", "_Position\");\n\n\t\tgl2.uniform3fv(uniformLocation, [1", "Array([1, 2]);\n\t\tgl.uniform3fv(uniformlocationObj,", "v\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUnif", "niform3fvError: \" + uniform3fvError);\n\t\texpect(uni", "();\n\t\tconsole.info(\"uniform3fvError: \" + uniform3f", "r\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUnif", "3fvError);\n\t\texpect(uniform3fvError).assertEqual(0", "([1.2, 2.2]);\n\t\tgl2.uniform3fv(uniformLocation, fl", "aot32list);\n\t\tconst uniform3fvError = gl.getError(", "3fvError);\n\t\texpect(uniform3fvError).assertEqual(g", "2\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUnif", "1\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUnif", "4\n\t * @tc.desc Test uniform3fv.\n\t */\n\tit('testUnif"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "uniform4fv", "api_method_all": "uniform4fv(location: WebGLUniformLocation | null, v: Float32List): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 78, "since": 7, "api_used": "\u662f", "lines": ["sole.info('jsWebGL2 uniform4fv test start ...' + J", "t\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUnif", "_Position\");\n\n\t\tgl2.uniform4fv(uniformLocation, [1", "Array([1, 2]);\n\t\tgl.uniform4fv(uniformlocationObj,", "r\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUnif", "([1.2, 2.2]);\n\t\tgl2.uniform4fv(uniformLocation, fl", "();\n\t\tconsole.info(\"uniform4fvError: \" + uniform4f", "niform4fvError: \" + uniform4fvError);\n\t\texpect(uni", "4fvError);\n\t\texpect(uniform4fvError).assertEqual(0", "1\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUnif", "aot32list);\n\t\tconst uniform4fvError = gl.getError(", "3\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUnif", "4fvError);\n\t\texpect(uniform4fvError).assertEqual(g", "4\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUnif", "d\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUnif", "v\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUnif", "2\n\t * @tc.desc Test uniform4fv.\n\t */\n\tit('testUnif"], "files": ["webGL.test.js", "WebGL.test05.js", "WebGL.test03.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "uniform1iv", "api_method_all": "uniform1iv(location: WebGLUniformLocation | null, v: Int32List): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 84, "since": 7, "api_used": "\u662f", "lines": ["rray([1, 2]);\n\t\tgl2.uniform1iv(uniformLocation, in", "v\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUnif", "1ivError);\n\t\texpect(uniform1ivError).assertEqual(0", "_Position\");\n\n\t\tgl2.uniform1iv(uniformLocation, [1", "4\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUnif", "sole.info('jsWebGL2 uniform1iv test start ...' + J", "1ivError);\n\t\texpect(uniform1ivError).assertEqual(g", "int32list);\n\t\tconst uniform1ivError = gl.getError(", "();\n\t\tconsole.info(\"uniform1ivError: \" + uniform1i", "r\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUnif", "niform1ivError: \" + uniform1ivError);\n\t\texpect(uni", "Array([1, 2]);\n\t\tgl.uniform1iv(uniformlocationObj,", "t\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUnif", "2\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUnif", "1\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUnif", "3\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUnif", "d\n\t * @tc.desc Test uniform1iv.\n\t */\n\tit('testUnif"], "files": ["WebGL.test10.js", "webGL.test.js", "WebGL.test03.js", "WebGL.test09.js", "WebGL.test05.js", "WebGL.test06.js", "WebGL.test04.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "uniform2iv", "api_method_all": "uniform2iv(location: WebGLUniformLocation | null, v: Int32List): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 65, "since": 7, "api_used": "\u662f", "lines": ["3\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUnif", "sole.info('jsWebGL2 uniform2iv test start ...' + J", "d\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUnif", "rray([1, 2]);\n\t\tgl2.uniform2iv(uniformLocation, in", "int32list);\n\t\tconst uniform2ivError = gl.getError(", "niform2ivError: \" + uniform2ivError);\n\t\texpect(uni", "2\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUnif", "v\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUnif", "2ivError);\n\t\texpect(uniform2ivError).assertEqual(0", "4\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUnif", "1\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUnif", "r\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUnif", "t\n\t * @tc.desc Test uniform2iv.\n\t */\n\tit('testUnif", "2ivError);\n\t\texpect(uniform2ivError).assertEqual(g", "_Position\");\n\n\t\tgl2.uniform2iv(uniformLocation, [1", "Array([1, 2]);\n\t\tgl.uniform2iv(uniformlocationObj,"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "uniform3iv", "api_method_all": "uniform3iv(location: WebGLUniformLocation | null, v: Int32List): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 65, "since": 7, "api_used": "\u662f", "lines": ["3ivError);\n\t\texpect(uniform3ivError).assertEqual(g", "niform3ivError: \" + uniform3ivError);\n\t\texpect(uni", "r\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUnif", "v\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUnif", "sole.info('jsWebGL2 uniform3iv test start ...' + J", "rray([1, 2]);\n\t\tgl2.uniform3iv(uniformLocation, in", "d\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUnif", "Array([1, 2]);\n\t\tgl.uniform3iv(uniformlocationObj,", "2\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUnif", "1\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUnif", "3ivError);\n\t\texpect(uniform3ivError).assertEqual(0", "_Position\");\n\n\t\tgl2.uniform3iv(uniformLocation, [1", "3\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUnif", "int32list);\n\t\tconst uniform3ivError = gl.getError(", "4\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUnif", "t\n\t * @tc.desc Test uniform3iv.\n\t */\n\tit('testUnif"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "uniform4iv", "api_method_all": "uniform4iv(location: WebGLUniformLocation | null, v: Int32List): void;", "api_type": "", "api_args_count": 2, "api_level": 21, "api_used_count": 77, "since": 7, "api_used": "\u662f", "lines": ["_Position\");\n\n\t\tgl2.uniform4iv(uniformLocation, [1", "3\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUnif", "rray([1, 2]);\n\t\tgl2.uniform4iv(uniformLocation, in", "v\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUnif", "int32list);\n\t\tconst uniform4ivError = gl.getError(", "d\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUnif", "t\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUnif", "4ivError);\n\t\texpect(uniform4ivError).assertEqual(0", "Array([1, 2]);\n\t\tgl.uniform4iv(uniformlocationObj,", "4ivError);\n\t\texpect(uniform4ivError).assertEqual(g", "4\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUnif", "sole.info('jsWebGL2 uniform4iv test start ...' + J", "1\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUnif", "niform4ivError: \" + uniform4ivError);\n\t\texpect(uni", "r\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUnif", "2\n\t * @tc.desc Test uniform4iv.\n\t */\n\tit('testUnif"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "uniformMatrix2fv", "api_method_all": "uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 84, "since": 7, "api_used": "\u662f", "lines": ["3\n\t * @tc.desc Test uniformMatrix2fv.\n\t */\n\tit('testUnif", "1\n\t * @tc.desc Test uniformMatrix2fv.\n\t */\n\tit('testUnif", "Array([1, 2]);\n\t\tgl.uniformMatrix2fv(uniformlocationObj,", "2fvError);\n\t\texpect(uniformMatrix2fvError).assertEqual(0", "();\n\t\tconsole.info(\"uniformMatrix2fvError: \" + uniformMa", "v\n\t * @tc.desc Test uniformMatrix2fv.\n\t */\n\tit('testUnif", "Matrix2fvError: \" + uniformMatrix2fvError);\n\t\texpect(uni", "aot32list);\n\t\tconst uniformMatrix2fvError = gl.getError(", "sole.info('jsWebGL2 uniformMatrix2fv test start ...' + J", "2\n\t * @tc.desc Test uniformMatrix2fv.\n\t */\n\tit('testUnif", "rray([1, 2]);\n\t\tgl2.uniformMatrix2fv(uniformLocation, tr", "4\n\t * @tc.desc Test uniformMatrix2fv.\n\t */\n\tit('testUnif", "2fvError);\n\t\texpect(uniformMatrix2fvError).assertEqual(g", "r\n\t * @tc.desc Test uniformMatrix2fv.\n\t */\n\tit('testUnif", "_Position\");\n\n\t\tgl2.uniformMatrix2fv(uniformLocation, tr"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "uniformMatrix3fv", "api_method_all": "uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 90, "since": 7, "api_used": "\u662f", "lines": ["2\n\t * @tc.desc Test uniformMatrix3fv.\n\t */\n\tit('testUnif", "_Position\");\n\n\t\tgl2.uniformMatrix3fv(uniformLocation, tr", "v\n\t * @tc.desc Test uniformMatrix3fv.\n\t */\n\tit('testUnif", "();\n\t\tconsole.info(\"uniformMatrix3fvError: \" + uniformMa", "3fvError);\n\t\texpect(uniformMatrix3fvError).assertEqual(0", "aot32list);\n\t\tconst uniformMatrix3fvError = gl.getError(", "3fvError);\n\t\texpect(uniformMatrix3fvError).assertEqual(g", "Matrix3fvError: \" + uniformMatrix3fvError);\n\t\texpect(uni", "t\n\t * @tc.desc Test uniformMatrix3fv.\n\t */\n\tit('testUnif", "sole.info('jsWebGL2 uniformMatrix3fv test start ...' + J", "4\n\t * @tc.desc Test uniformMatrix3fv.\n\t */\n\tit('testUnif", "1\n\t * @tc.desc Test uniformMatrix3fv.\n\t */\n\tit('testUnif", "r\n\t * @tc.desc Test uniformMatrix3fv.\n\t */\n\tit('testUnif", "3\n\t * @tc.desc Test uniformMatrix3fv.\n\t */\n\tit('testUnif", "Array([1, 2]);\n\t\tgl.uniformMatrix3fv(uniformlocationObj,", "rray([1, 2]);\n\t\tgl2.uniformMatrix3fv(uniformLocation, tr"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContextOverloads", "api_method_name": "uniformMatrix4fv", "api_method_all": "uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;", "api_type": "", "api_args_count": 3, "api_level": 21, "api_used_count": 90, "since": 7, "api_used": "\u662f", "lines": ["v\n\t * @tc.desc Test uniformMatrix4fv.\n\t */\n\tit('testUnif", "sole.info('jsWebGL2 uniformMatrix4fv test start ...' + J", "3\n\t * @tc.desc Test uniformMatrix4fv.\n\t */\n\tit('testUnif", "Matrix4fvError: \" + uniformMatrix4fvError);\n\t\texpect(uni", "();\n\t\tconsole.info(\"uniformMatrix4fvError: \" + uniformMa", "4\n\t * @tc.desc Test uniformMatrix4fv.\n\t */\n\tit('testUnif", "4fvError);\n\t\texpect(uniformMatrix4fvError).assertEqual(0", "1\n\t * @tc.desc Test uniformMatrix4fv.\n\t */\n\tit('testUnif", "2]);\n\t\tconst a = gl.uniformMatrix4fv(uniformlocationObj,", "_Position\");\n\n\t\tgl2.uniformMatrix4fv(uniformLocation, tr", "rray([1, 2]);\n\t\tgl2.uniformMatrix4fv(uniformLocation, tr", "\"a: \" + a);\n\t\tconst uniformMatrix4fvError = gl.getError(", "4fvError);\n\t\texpect(uniformMatrix4fvError).assertEqual(g", "r\n\t * @tc.desc Test uniformMatrix4fv.\n\t */\n\tit('testUnif", "t\n\t * @tc.desc Test uniformMatrix4fv.\n\t */\n\tit('testUnif", "2\n\t * @tc.desc Test uniformMatrix4fv.\n\t */\n\tit('testUnif"], "files": ["webGL.test.js", "WebGL.test04.js", "WebGL.test05.js"], "is_white": " ", "desc": " "}, {"api_class_name": "WebGLRenderingContext", "api_method_all": "export interface WebGLRenderingContext extends WebGLRenderingContextBase, WebGLRenderingContextOverloads {\n}", "api_method_name": "WebGLRenderingContext", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 40, "since": 7, "api_used": "\u662f", "lines": ["gContext.enable()\u65b9\u6cd5\u548cWebGLRenderingContext.disable()\u65b9\u6cd5\uff1a\n\t\tgl.d", "\n\t\t// \u542f\u7528\u6216\u8bf4\u660e\u7ed9\u5b9a\u7684\u80fd\u529b\u9879\uff0c\u4f7f\u7528WebGLRenderingContext.enable()\u65b9\u6cd5\u548cWebGLRen", "\u89e3\u5305\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528 \u67e5\u8be2\u76f8\u540c\u7684\u50cf\u7d20\u5b58\u50a8\u53c2\u6570WebGLRenderingContext.getParameter()\u3002\n\t\tc", "\t// \u8981\u68c0\u67e5\u529f\u80fd\u662f\u5426\u88ab\u7981\u7528\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0bWebGLRenderingContext.isEnabled()\u65b9\u6cd5\uff1a\n\t\tco"], "files": ["webGL.test.js", "WebGL.test08.js", "WebGL.test03.js", "WebGL.test13.js", "WebGL.test01.js", "WebGL.test11.js"], "is_white": " ", "desc": " "}]}