{"subsystem_ch": "\u516c\u5171\u57fa\u7840\u7c7b\u5e93", "subsystem_en": "compileruntime", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\@ohos.uri", "api": [{"api_class_name": "uri", "api_method_all": "declare namespace uri {\r\n    class URI {\r\n        \r\n        constructor(uri: string);\r\n\r\n        \r\n        toString(): string\r\n\r\n        \r\n        equals(other: URI): boolean;\r\n\r\n        \r\n        checkIsAbsolute(): boolean;\r\n\r\n        \r\n        normalize(): URI;\r\n\r\n        \r\n        scheme: string;\r\n\r\n        \r\n        userInfo: string;\r\n\r\n        \r\n        host: string;\r\n\r\n        \r\n        port: string;\r\n\r\n        \r\n        path: string;\r\n\r\n        \r\n        query: string;\r\n\r\n        \r\n        fragment: string;\r\n\r\n        \r\n        authority: string;\r\n\r\n        \r\n        ssp: string;\r\n    }\r\n}", "api_method_name": "uri", "api_type": "", "api_level": null, "api_args_count": 0, "api_used_count": 4, "since": 0, "api_used": "\u662f", "lines": ["rt  URI from '@ohos.uri'\ndescribe('UriTest'", "place({\n            uri: 'pages/second/seco", "st.js')", "place({\n            uri: \"pages/index/index"], "files": ["second.js", "index.js", "List.test.js", "uri.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_all": "class URI {\r\n        \r\n        constructor(uri: string);\r\n\r\n        \r\n        toString(): string\r\n\r\n        \r\n        equals(other: URI): boolean;\r\n\r\n        \r\n        checkIsAbsolute(): boolean;\r\n\r\n        \r\n        normalize(): URI;\r\n\r\n        \r\n        scheme: string;\r\n\r\n        \r\n        userInfo: string;\r\n\r\n        \r\n        host: string;\r\n\r\n        \r\n        port: string;\r\n\r\n        \r\n        path: string;\r\n\r\n        \r\n        query: string;\r\n\r\n        \r\n        fragment: string;\r\n\r\n        \r\n        authority: string;\r\n\r\n        \r\n        ssp: string;\r\n    }", "api_method_name": "URI", "api_type": "", "api_level": 10, "api_args_count": 0, "api_used_count": 92, "since": 8, "api_used": "\u662f", "lines": ["   let gaogao = new URI('http://gg:gaogao@[", "     let that = new URI('ht@tp://username:p", "   let gaogao = new URI('http://49.99.54.12", "     let that = new URI('1http://username:p", "   let gaogao = new URI('http://user@www.ba", "   let gaogao = new URI('http://user@[::]/p", "   let gaogao = new URI('http://[::192:0:5]", "     let that = new URI({name: 'gaogao'});\n", "     let that = new URI('ht/tp://username:p", ".desc: Constructs a URI by parsing the give", "tc.desc: Tests this URI for equality with a", "     let that = new URI('#http://username:p", "   let gaogao = new URI('http://user@hostho", "   let gaogao = new URI('ht2tp://user@www.1", "   let gaogao = new URI('http://gg:gaogao@1", "     let that = new URI('http://username:pa", "   let gaogao = new URI('http://16.9.5.4:99", "unit/index'\nimport  URI from '@ohos.uri'\nde", "   let gaogao = new URI('http://gg:gaogao@w", "   let gaogao = new URI('http://user@www.hw", "   let gaogao = new URI('http://user@49.10p", " let gaogao =\n\t\tnew URI('http://gg:gaogao@[", "   let gaogao = new URI('ht2tp://user@www.h"], "files": ["uri.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "constructor", "api_method_all": "constructor(uri: string)", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 32, "since": 0, "api_used": "\u662f", "lines": ["    * @tc.desc: URL constructor, which is used to i", " })\n\n    it('worker_constructor_test_002', 0, async", " })\n\n    it('worker_constructor_test_004', 0, async", "s Temperature {\n    constructor(value) {\n        th", "      {\n            constructor()\n            {\n   ", "sc: A parameterized constructor used to create an U", " })\n\n    it('worker_constructor_test_003', 0, async", "s ok\n    it('worker_constructor_test_001', 0, async", "    // check worker constructor is ok\n    it('worke"], "files": ["url.test.js", "util.test.js", "Worker.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "toString", "api_method_all": "toString(): string\r\n\r\n        \r\n        equals(other: URI): boolean;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 131, "since": 8, "api_used": "\u662f", "lines": ["      expect(result.toString()).assertEqual('')\n", "      expect(result.toString()).assertEqual(\"DEF", "   let res = vector.toString();\n    expect(res).", "      expect(result.toString()).assertEqual(\"da,", "   var res = params.toString();\n        expect(r", "es = lightWeightMap.toString();\n    expect(res).", "t res1 = plainArray.toString();\n    expect(res1)", "      expect(result.toString()).assertEqual(\"val", "\n        expect(res.toString()).assertEqual(\"htt", "es = lightWeightSet.toString();\n    expect(res).", "et res = plainArray.toString();\n    expect(res).", "var result = params.toString()\n        expect(re", "var result = params.toString();\n        expect(r", "   let res = gaogao.toString();\n        expect(r", "         expect(err.toString()).assertEqual(\"Err"], "files": ["LightWeightSet.test.js", "url.test.js", "util.test.js", "uri.test.js", "LightWeightMap.test.js", "Vector.test.js", "PlainArray.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "equals", "api_method_all": "equals(other: URI): boolean;", "api_type": "", "api_args_count": 1, "api_level": 11, "api_used_count": 10, "since": 8, "api_used": "\u662f", "lines": ["   let res = gaogao.equals(gaogao1);\n        e", "      var res = pro.equals(proc)\n        expec"], "files": ["util.test.js", "uri.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "checkIsAbsolute", "api_method_all": "checkIsAbsolute(): boolean;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["   let res = gaogao.checkIsAbsolute();\n        expect(r"], "files": ["uri.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "normalize", "api_method_all": "normalize(): URI;", "api_type": "", "api_args_count": 0, "api_level": 11, "api_used_count": 5, "since": 8, "api_used": "\u662f", "lines": ["   let res = gaogao.normalize();\n        expect(r"], "files": ["uri.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "scheme", "api_method_all": "scheme: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 61, "since": 8, "api_used": "\u662f", "lines": ["      expect(gaogao.scheme).assertEqual(\"http\"", "      expect(gaogao.scheme).assertEqual(\"ht2tp", "the Base64 encoding scheme.\n     * @tc.require", "assertEqual(\"Error: scheme does not conform to"], "files": ["util.test.js", "uri.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "userInfo", "api_method_all": "userInfo: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 1, "since": 8, "api_used": "\u662f", "lines": ["assertEqual(\"Error: userInfo does not conform to"], "files": ["uri.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "host", "api_method_all": "host: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 155, "since": 8, "api_used": "\u662f", "lines": ["//username:password@host:8080/directory/file", "//username:password@host:8080')\n        var ", ").assertEqual(\"user@hosthost\");\n        expe", "      expect(gaogao.host).assertEqual(\"[::FF", "ssertEqual(\"http1://host/directory/file?quer", "t).assertEqual(\"hosthost\");\n        expect(g", "new Url.URL('http://host:8080/directory/file", "      expect(gaogao.host).assertEqual(\"www.b", "      expect(gaogao.host).assertEqual(\"hosth", "rtEqual(\"//user@hosthost/path/path23?query\")", "      expect(gaogao.host).assertEqual(\"[1:0:", "RI('http://user@hosthost/path/path23?query#q", "ew Url.URL('http1://host/directory/file?quer", "      expect(gaogao.host).assertEqual(\"16.9.", ".host).assertEqual(\"hosthost\");\n        expe", "      expect(gaogao.host).assertEqual(\"[::]\"", "assertEqual(\"http://host:8080/directory/file", "= new Url.URL('http:host:8080/directory/file", "      expect(gaogao.host).assertEqual(\"199.9", "      expect(gaogao.host).assertEqual(\"[::19", "ew URI('http://user@hosthost/path/path23?que", "assertEqual(\"//user@hosthost/path/path23?que", "      expect(gaogao.host).assertEqual(\"[fe80", "      expect(gaogao.host).assertEqual(\"null\"", "//username:password@host:8080#fragment')\n   ", "      expect(gaogao.host).assertEqual(\"49.99", "//username:password@host:8080/#fragment\")\n  ", "sertEqual(\"user@hosthost\");\n        expect(g", "      expect(gaogao.host).assertEqual(\"www.h", "      expect(gaogao.host).assertEqual(\"[1080", "      expect(gaogao.host).assertEqual(\"[22::", "/username:pas sword@host:8080/directory/file", "//username:password@host:8080/\")\n    })\n\n   "], "files": ["url.test.js", "uri.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "port", "api_method_all": "port: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 323, "since": 8, "api_used": "\u662f", "lines": ["", "eccjsunit/index';\nimport Vector from \"@ohos.", "eccjsunit/index';\nimport HashSet from \"@ohos", "rom '@ohos.intl';\nimport {describe,beforeAll", "rom '@system.app'\nimport {describe, beforeAl", " '@system.device'\nimport router from '@syste", "eccjsunit/index';\nimport LinkedList from \"@o", "eccjsunit/index';\nimport HashMap from \"@ohos", "eccjsunit/index';\nimport Deque from \"@ohos.u", "eccjsunit/index';\nimport ArrayList from \"@oh", "eccjsunit/index'\n\nexport default {\n    data:", "eccjsunit/index';\nimport Stack from \"@ohos.u", "om '@system.file'\nimport app from '@system.a", "eccjsunit/index';\nimport List from \"@ohos.ut", "rom '@system.app'\nimport device from '@syste", "eccjsunit/index';\nimport Queue from \"@ohos.u", "eccjsunit/index';\nimport LightWeightMap from", " '@system.router'\nimport {Core} from 'deccjs"], "files": ["List.test.js", "Deque.test.js", "LinkedList.test.js", "util.test.js", "worker_010.js", "Vector.test.js", "Stack.test.js", "ArrayList.test.js", "HashSet.test.js", "xml.test.js", "worker_0121.js", "Queue.test.js", "ExampleJsunit.test.js", "worker_0151.js", "worker_0091.js", "worker_0131.js", "worker_003.js", "convertxml.test.js", "url.test.js", "LightWeightMap.test.js", "app.js", "intlCollator_test.js", "worker_0141.js", "worker_011.js", "worker_006.js", "worker_0111.js", "worker_012.js", "LightWeightSet.test.js", "worker_008.js", "worker_009.js", "worker_013.js", "intlLocale_test.js", "worker_004.js", "HashMap.test.js", "intlDateTimeFormat_test.js", "uri.test.js", "index.js", "second.js", "Worker.test.js", "worker_005.js", "worker_0101.js", "worker_014.js", "TreeSet.test.js", "worker_0152.js", "Process.test.js", "numberFormat_test.js", "PlainArray.test.js", "TreeMap.test.js", "worker_007.js", "worker_015.js", "worker.js", "worker_002.js", "worker_0122.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "path", "api_method_all": "path: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 227, "since": 8, "api_used": "\u662f", "lines": ["ao@www.baidu.com:99/path/path?query#fagment'", "8:800:200C:417A]:99/path/66path1?query#fagme", "@[22::22:2:2%ss]:99/path/path?query#fagment'", ":44ff:1233:5678]:99/path/path?query#fagment'", "1:0:0:1:2:1:2:1]:99/path/66path1?query#fagme", "00C:417A]:99/path/66path1?query#fagment');\n ", ".assertEqual(\"/path/path66\");\n        expect", ".assertEqual(\"/path/path\");\n        expect(g", ":192.9.5.5]:99/path/path?query#fagment');\n  ", "w.baidu.com:99/path/path?query\");\n        ex", "@[22::22:2:2%ss]:99/path/path?query\");\n     ", "w.baidu.com:99/path/path?query#fagment');\n  ", "path).assertEqual(\"/path/path66\");\n        e", "gaogao@[::]:88/path/path66?foooo#gaogao');\n ", "00C:417A]:99/path/66path1?query\");\n        e", ":2:1:2:1]:99/path/66path1?query#fagment');\n ", "ao@www.baidu.com:99/path/path?query\");\n     ", "1:0:0:1:2:1:2:1]:99/path/66path1?query\");\n  ", "path).assertEqual(\"/path/path\");\n        exp", "F:129.144.52.38]:99/path/path?query#fagment'", ".144.52.38]:99/path/path?query#fagment');\n  ", "F:129.144.52.38]:99/path/path?query\");\n     ", ":2:1:2:1]:99/path/66path1?query\");\n        e", "      expect(gaogao.path).assertEqual(\"/path", ":22:2:2%ss]:99/path/path?query#fagment');\n  ", "ao@[::192.9.5.5]:99/path/path?query#fagment'", "path).assertEqual(\"/path/66path1\");\n        ", ".144.52.38]:99/path/path?query\");\n        ex", "8:800:200C:417A]:99/path/66path1?query\");\n  ", "ao@[::192.9.5.5]:99/path/path?query\");\n     ", "ssertEqual(\"/path/66path1\");\n        expect(", ":192.9.5.5]:99/path/path?query\");\n        ex", "//gg:gaogao@[::]:88/path/path66?foooo#gaogao", ":22:2:2%ss]:99/path/path?query\");\n        ex", "//gg:gaogao@[::]:88/path/path66?foooo\");\n   ", "gaogao@[::]:88/path/path66?foooo\");\n        "], "files": ["url.test.js", "uri.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "query", "api_method_all": "query: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 201, "since": 8, "api_used": "\u662f", "lines": [":5678]:99/path/path?query#fagment');\n        ", ":1]:99/path/66path1?query#fagment');\n        ", ":0000]:99/path/path?query#fagment');\n        ", "9.5.5]:99/path/path?query#fagment');\n        ", "9.5.5]:99/path/path?query\");\n        expect(g", "      expect(gaogao.query).assertEqual(\"query", "4.12:50/path/path23?query#fagment');\n        ", "52.38]:99/path/path?query\");\n        expect(g", "4.12:50/path/path23?query\");\n        expect(g", ":1]:99/path/66path1?query\");\n        expect(g", "du.com:99/path/path?query\");\n        expect(g", "      expect(gaogao.query).assertEqual(\"foooo", ".55.44:99/path/path?query\");\n        expect(g", ".9.5.4:99/path/path?query#fagment');\n        ", ".55.44:99/path/path?query#fagment');\n        ", "4.12:80/path/path23?query\");\n        expect(g", "idu.com/path/path23?query#qwer');\n        exp", "du.com:99/path/path?query#fagment');\n        ", "4.12:80/path/path23?query#qwer');\n        exp", ".9.5.4:99/path/path?query\");\n        expect(g", ":2%ss]:99/path/path?query\");\n        expect(g", "7A]:99/path/66path1?query\");\n        expect(g", "7A]:99/path/66path1?query#fagment');\n        ", ":2%ss]:99/path/path?query#fagment');\n        ", ":5678]:99/path/path?query\");\n        expect(g", "query).assertEqual(\"query\");\n        expect(g", "52.38]:99/path/path?query#fagment');\n        ", ":0000]:99/path/path?query\");\n        expect(g"], "files": ["url.test.js", "uri.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "fragment", "api_method_all": "fragment: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 88, "since": 8, "api_used": "\u662f", "lines": ["      expect(gaogao.fragment).assertEqual(\"qwer\"", "irectory/file?query#fragment')\n        var resul", "irectory/file?query#fragment')\n        params.us", ":password@host:8080#fragment')\n        var resul", "      expect(gaogao.fragment).assertEqual(\"fagme", "irectory/file?query#fragment')\n        params.hr", "irectory/file?query#fragment')\n        params.pr", "irectory/file?query#fragment\")\n    })\n\n    /**\n ", "password@host:8080/#fragment\")\n    })\n\n    /**\n ", "password@host22:100#fragment')\n        var resul", "      expect(gaogao.fragment).assertEqual(\"gaoga"], "files": ["url.test.js", "uri.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "authority", "api_method_all": "authority: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 20, "since": 8, "api_used": "\u662f", "lines": ["      expect(gaogao.authority).assertEqual(\"gg:ga", "      expect(gaogao.authority).assertEqual(\"49.99", "      expect(gaogao.authority).assertEqual(\"[::19", "      expect(gaogao.authority).assertEqual(\"user@", "      expect(gaogao.authority).assertEqual(\"16.9."], "files": ["uri.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "URI", "api_method_name": "ssp", "api_method_all": "ssp: string", "api_type": "", "api_args_count": 1, "api_level": 12, "api_used_count": 20, "since": 0, "api_used": "\u662f", "lines": ["      expect(gaogao.ssp).assertEqual(\"//16.", "      expect(gaogao.ssp).assertEqual(\"//use", "      expect(gaogao.ssp).assertEqual(\"//gg:", "      expect(gaogao.ssp).assertEqual(\"//[::", "      expect(gaogao.ssp).assertEqual(\"//49."], "files": ["uri.test.js"], "is_white": " ", "desc": " "}]}