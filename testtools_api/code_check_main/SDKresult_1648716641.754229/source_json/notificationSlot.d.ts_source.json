{"subsystem_ch": "\u4e8b\u4ef6\u901a\u77e5\u5b50\u7cfb\u7edf", "subsystem_en": "notification", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\notification\\notificationSlot", "api": [{"api_class_name": "NotificationSlot", "api_method_all": "export interface NotificationSlot {\n  \n  type: notification.SlotType;\n\n  \n  level?: notification.SlotLevel;\n\n  \n  desc?: string;\n\n  \n  badgeFlag?: boolean;\n\n  \n  bypassDnd?: boolean;\n\n  \n  lockscreenVisibility?: number;\n\n  \n  vibrationEnabled?: boolean;\n\n  \n  sound?: string;\n\n  \n  lightEnabled?: boolean;\n\n  \n  lightColor?: number;\n\n  \n  vibrationValues?: Array<number>;\n}", "api_method_name": "NotificationSlot", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 2, "since": 7, "api_used": "\u662f", "lines": [" = \"\u6d4b\u8bd5addSlot(slot: NotificationSlot)\u63a5\u53e3\";\n    },\n    onS", "e: \"\u6d4b\u8bd5addSlot(slot: NotificationSlot)\u63a5\u53e3\"\n    },\n    onIn"], "files": ["index.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationSlot", "api_method_name": "type", "api_method_all": "type: notification.SlotType", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 483, "since": 0, "api_used": "\u662f", "lines": ["ef = Object.getPrototypeOf(global) || global", "     expect(data[0].type).assertEqual(2)\n   ", "     expect(data[0].type).assertEqual(65535)", "        expect(data.type).assertEqual(notifi", "     expect(data[0].type).assertEqual(1)\n   ", "  {\n                type: notification.SlotT", "     expect(data[0].type).assertEqual(3)\n   "], "files": ["ExampleJsunit.test.js", "BadgeDisplay.js", "EnableNotification.js", "doNotDisturbTest.js", "ActsAnsPublishInput.js", "WantAgent.test.js", "index.js", "ActiveButton.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationSlot", "api_method_name": "level", "api_method_all": "level?: notification.SlotLevel", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 174, "since": 0, "api_used": "\u662f", "lines": ["ES,\n                level: notification.SlotL", "        expect(data.level).assertEqual(notifi", "        expect(data.level).assertEqual(3);\n  ", "     expect(data[0].level).assertEqual(2)\n   ", "CATION,\n            level: 3\n        }\n      ", "        expect(data.level).assertEqual(2);\n  ", "     expect(data[0].level).assertEqual(1)\n   ", "        expect(data.level).assertEqual(1);\n  ", "     expect(data[0].level).assertEqual(3)\n   ", "        expect(data.level).assertEqual(4);\n  ", "N_TYPE,\n            level: 4\n        }\n      ", "ON,\n                level: notification.SlotL", "PE,\n                level: notification.SlotL", "     expect(data[0].level).assertEqual(4)\n   ", "MATION,\n            level: 4\n        }\n      "], "files": ["ExampleJsunit.test.js", "doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationSlot", "api_method_name": "desc", "api_method_all": "desc?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 477, "since": 0, "api_used": "\u662f", "lines": ["NE,\n                desc: \"slot_SOCIAL_COMMU", "): void;\n     * @tc.desc: Verify that the re", ">):void;\n     * @tc.desc: Verify that the ca", "nst TIMEOUT = 2000;\ndescribe('ActsAnsAddSlot", "e<void>;\n     * @tc.desc: Verify that the in", "OW,\n                desc: \"slot_CONTENT_INFO", ">):void;\n     * @tc.desc: Verify that the re", ">): void\n     * @tc.desc: Verify that the ca", "OCIAL_COMMUNICATION_desc\");\n            expe", "IN,\n                desc: \"slot_SERVICE_INFO", "): void;\n     * @tc.desc: Verify that the in", "tification'\nimport {describe, beforeAll, bef", "CONTENT_INFORMATION_desc\");\n            expe", "OCIAL_COMMUNICATION_desc\",\n                b", "se<void>\n     * @tc.desc: Verify that the re", "se<void>\n     * @tc.desc: Verify that the ca", "\nlet timeout = 300;\ndescribe('ActsAnsNotific", "se<void>\n     * @tc.desc: Verify that the no", "\nlet timeout = 500;\ndescribe('ActsAnsNotific", "        expect(data.desc).assertEqual(\"slot_", "e<void>;\n     * @tc.desc: Verify that the re", "): void;\n     * @tc.desc: Verify that the ca", "e<void>;\n     * @tc.desc: Verify that the ca", "CONTENT_INFORMATION_desc\",\n                b", "SERVICE_INFORMATION_desc\");\n            expe", "SERVICE_INFORMATION_desc\",\n                b"], "files": ["publishIcon.js", "getAllActive.js", "activeotherapp.js", "EmitterTest.js", "Subscriber.js", "ExampleJsunit.test.js", "BadgeDisplay.js", "EnableNotification.js", "ActsAnsPublishInput.js", "WantAgent.test.js", "ActsAnsPublishConversation.js", "getActive.js", "ActiveButton.js", "ActsSubscriber_test_unorder.js", "ActsSubscriber_test_ordered.js", "ActsAnsNotificationCancel.test.js", "doNotDisturbTest.js", "ActsAnsCancelGroup.js", "publishImage.js", "ActsAnsRemoveGroup.js", "publish.js", "ActsAnsNotificationRemove.test.js", "UnSubscriber.js", "actsansdistributedtest.js", "ActsPublish.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationSlot", "api_method_name": "badgeFlag", "api_method_all": "badgeFlag?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 152, "since": 0, "api_used": "\u662f", "lines": ["     expect(data[0].badgeFlag).assertEqual(true)\n", "        expect(data.badgeFlag).assertEqual(true);", "        expect(data.badgeFlag).assertEqual(false)", "c\",\n                badgeFlag: false,\n           "], "files": ["ExampleJsunit.test.js", "doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationSlot", "api_method_name": "bypassDnd", "api_method_all": "bypassDnd?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 152, "since": 0, "api_used": "\u662f", "lines": ["se,\n                bypassDnd: true,\n            ", "        expect(data.bypassDnd).assertEqual(true);", "        expect(data.bypassDnd).assertEqual(false)", "     expect(data[0].bypassDnd).assertEqual(false)"], "files": ["ExampleJsunit.test.js", "doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationSlot", "api_method_name": "lockscreenVisibility", "api_method_all": "lockscreenVisibility?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 72, "since": 0, "api_used": "\u662f", "lines": ["     expect(data[0].lockscreenVisibility).assertEqual(2)\n   ", "     expect(data[0].lockscreenVisibility).assertEqual(1)\n   ", "ON,\n                lockscreenVisibility: 1\n            }\n  ", "     expect(data[0].lockscreenVisibility).assertEqual(3)\n   ", "        expect(data.lockscreenVisibility).assertEqual(2);\n  ", "PE,\n                lockscreenVisibility: 1\n            }\n  ", "        expect(data.lockscreenVisibility).assertEqual(3);\n  "], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationSlot", "api_method_name": "vibrationEnabled", "api_method_all": "vibrationEnabled?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 226, "since": 0, "api_used": "\u662f", "lines": ["     expect(data[0].vibrationEnabled).assertEqual(true)\n", "        expect(data.vibrationEnabled).assertEqual(true);", "        expect(data.vibrationEnabled).assertEqual(false)", "ue,\n                vibrationEnabled: true,\n            ", "     expect(data[0].vibrationEnabled).assertEqual(false)"], "files": ["ExampleJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationSlot", "api_method_name": "sound", "api_method_all": "sound?: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 318, "since": 0, "api_used": "\u662f", "lines": ["OCIAL_COMMUNICATION_sound\",\n                l", "        expect(data.sound).assertEqual(SOUNDU", "SERVICE_INFORMATION_sound\");\n            expe", "SERVICE_INFORMATION_sound\");\n        expect(d", "CONTENT_INFORMATION_sound\");\n        expect(d", "ue,\n                sound: \"slot_SOCIAL_COMMU", "CONTENT_INFORMATION_sound\");\n            expe", "SERVICE_INFORMATION_sound\",\n                l", ": \"slot_OTHER_TYPES_sound\",\n                l", "        expect(data.sound).assertEqual(\"slot_", "ue,\n                sound: \"slot_SERVICE_INFO", "l(\"slot_OTHER_TYPES_sound\");\n            expe", "l(\"slot_OTHER_TYPES_sound\");\n        expect(d", "ue,\n                sound: \"slot_CONTENT_INFO", "CONTENT_INFORMATION_sound\",\n                l", "ue,\n                sound: \"slot_OTHER_TYPES_", "OCIAL_COMMUNICATION_sound\");\n            expe", "OCIAL_COMMUNICATION_sound\");\n        expect(d", "        expect(data.sound).assertEqual(\"\");\n "], "files": ["ExampleJsunit.test.js", "doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationSlot", "api_method_name": "lightEnabled", "api_method_all": "lightEnabled?: boolean", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 147, "since": 0, "api_used": "\u662f", "lines": ["        expect(data.lightEnabled).assertEqual(true);", "d\",\n                lightEnabled: true,\n            ", "        expect(data.lightEnabled).assertEqual(false)", "     expect(data[0].lightEnabled).assertEqual(false)"], "files": ["ExampleJsunit.test.js", "doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationSlot", "api_method_name": "lightColor", "api_method_all": "lightColor?: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 152, "since": 0, "api_used": "\u662f", "lines": ["ue,\n                lightColor: 1\n            },\n ", "ue,\n                lightColor: 3\n            });\n", "        expect(data.lightColor).assertEqual(0);\n  ", "        expect(data.lightColor).assertEqual(2);\n  ", "        expect(data.lightColor).assertEqual(1);\n  ", "ue,\n                lightColor: 2\n            });\n", "ue,\n                lightColor: 4\n            })\n ", "        expect(data.lightColor).assertEqual(3);\n  ", "ue,\n                lightColor: 3\n            },\n ", "        expect(data.lightColor).assertEqual(4);\n  ", "ue,\n                lightColor: 2\n            },\n ", "ue,\n                lightColor: 4\n            });\n", "ue,\n                lightColor: 1\n            });\n", "     expect(data[0].lightColor).assertEqual(0)\n   ", "ue,\n                lightColor: 4\n            },\n "], "files": ["ExampleJsunit.test.js", "doNotDisturbTest.js"], "is_white": " ", "desc": " "}, {"api_class_name": "NotificationSlot", "api_method_name": "vibrationValues", "api_method_all": "vibrationValues?: Array<number>", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 101, "since": 0, "api_used": "\u662f", "lines": ["                    vibrationValues:[2,0,2,0],\n        ", "t.sound\n        var vibrationValues = data.sortingMap.s", "ibra_0300 onConsume vibrationValues============>\" + vib", "ibra_0500 onConsume vibrationValues============>\" + vib", "ibra_0200 onConsume vibrationValues============>\" + vib", "ibra_0400 onConsume vibrationValues============>\" + vib", "                    vibrationValues:[4,0,4,0],\n        ", "ound_1100 onConsume vibrationValues============>\" + vib", "ings[hashCode].slot.vibrationValues\n        var vibrati", "                    vibrationValues:[1,0,1,0],\n        ", "                    vibrationValues:[11,11,11,11],\n    ", "ibra_0100 onConsume vibrationValues============>\" + vib", "ashCode\n        var vibrationValues = data.sortingMap.s", "ues============>\" + vibrationValues);\n        console.i", "ings[hashCode].slot.vibrationValues\n        console.log", "pect(JSON.stringify(vibrationValues)).assertEqual(JSON.", "                    vibrationValues:[3,0,3,0],\n        ", "olor:1,\n            vibrationValues:[1,0,1,0,1,0],\n    ", "_1100\",\n            vibrationValues:[11,0,11,0],\n      "], "files": ["ExampleJsunit.test.js", "doNotDisturbTest.js"], "is_white": " ", "desc": " "}]}