{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\ability\\startAbilityParameter", "api": [{"api_class_name": "StartAbilityParameter", "api_method_all": "export interface StartAbilityParameter {\r\n  \r\n  want: Want;\r\n\r\n  \r\n  abilityStartSetting?: {[key: string]: any};\r\n\r\n}", "api_method_name": "StartAbilityParameter", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 30, "since": 6, "api_used": "\u662f", "lines": ["bility.startAbility(StartAbilityParameter);\n        if (promi", "bility.startAbility(StartAbilityParameter)\n        if (promis", "----\");\n        var StartAbilityParameter = {}\n        var pr", "     }\n\n        var StartAbilityParameter = {\n            wan", "  }\n            var StartAbilityParameter = {\n               ", " }\n\n            var StartAbilityParameter = {\n               ", "nt = {}\n        var StartAbilityParameter = {\n            wan", "bility.startAbility(StartAbilityParameter,(err,data)=>{\n     "], "files": ["ActsStServiceAbilityClientCaseTest.test.js", "FeatureAbilityJsunit.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "StartAbilityParameter", "api_method_name": "want", "api_method_all": "want: Want", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 981, "since": 6, "api_used": "\u662f", "lines": ["     expect(info[i].want.abilityName.length)", "ect(typeof (data[i].want.bundleName)).assert", "ect(typeof (info[i].want.abilityName)).asser", "ect(typeof (data[i].want)).assertEqual(\"obje", "' + error.code + ', want.bundleName:' + data", "     expect(info[i].want.bundleName.length).", "ist.indexOf(data[i].want.bundleName)).assert", "      if (result[i].want.abilityName != 'com", "dleName:' + data[i].want.bundleName);\n      ", "     expect(data[i].want.abilityName.length)", "ect(typeof (info[i].want.bundleName)).assert", "     expect(data[i].want.bundleName.length).", "ect(typeof (data[i].want.abilityName)).asser", "ect(typeof (info[i].want.deviceId)).assertEq", "ist.indexOf(data[i].want.abilityName)).asser", "ist.indexOf(info[i].want.abilityName)).asser", "        if (data[i].want.bundleName != 'com.", "ect(typeof (data[i].want.deviceId)).assertEq", "ist.indexOf(info[i].want.bundleName)).assert", "ect(typeof (info[i].want)).assertEqual(\"obje", "  {\n                want:\n                {\n"], "files": ["ActsGetWantAllTest.js", "ActsProcessManageJsTest.test.js", "taskSwitchJsunit.test.js", "app.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "amsMissionSnapshotTest.test.js", "service.js", "MangerAbilityJsunit.test.js", "LockNew.js", "startFULL.test.js", "ActsKillProcessTest.test.js", "index.js", "MissionManager.test.js", "index.ets", "ActsStServiceAbilityClientCaseTest.test.js", "FeatureAbilityJsunit.test.js", "AbilityDisableTest.js", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "StartAbilityParameter", "api_method_name": "abilityStartSetting", "api_method_all": "abilityStartSetting?: {[key: string]: any}", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 25, "since": 0, "api_used": "\u662f", "lines": [" }\n\n            let abilityStartSetting ={\n                ", "dlame: \"com.example.abilityStartSettingApp\",\n            ab", "nt,\n                abilityStartSetting:abilityStartSetting", "eName: \"com.example.abilityStartSettingApp\",\n            ab", "eName: \"com.example.abilityStartSettingApp\",\n              ", "     }\n\n        let abilityStartSetting ={\n            [fea", "yName: \"com.example.abilityStartSettingApp.MainAbility2\",\n ", "abilityStartSetting:abilityStartSetting\n        }\n\n        ", "t:Want,\n            abilityStartSetting:abilityStartSetting", "abilityStartSetting:abilityStartSetting\n            }\n\n    ", "eName: \"com.example.abilityStartSettingApp2\",\n            a", "yName: \"com.example.abilityStartSettingApp.MainAbility\",\n  "], "files": ["ActsStServiceAbilityClientCaseTest.test.js"], "is_white": " ", "desc": " "}]}