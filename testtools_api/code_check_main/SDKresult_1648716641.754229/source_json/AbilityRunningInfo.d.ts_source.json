{"subsystem_ch": "\u5143\u80fd\u529b\u5b50\u7cfb\u7edf", "subsystem_en": "aafwk", "api_module_name": "D:\\WORK\\NEW_SDK_package_0329\\interface_sdk-js-master\\api\\application\\AbilityRunningInfo", "api": [{"api_class_name": "AbilityRunningInfo", "api_method_all": "export interface AbilityRunningInfo {\r\n    \r\n    ability: ElementName;\r\n\r\n    \r\n    pid: number;\r\n\r\n    \r\n    uid: number;\r\n\r\n    \r\n    processName: string;\r\n\r\n    \r\n    startTime: number;\r\n\r\n    \r\n    abilityState: abilityManager.AbilityState;\r\n}", "api_method_name": "AbilityRunningInfo", "api_type": "", "api_level": 20, "api_args_count": 0, "api_used_count": 9, "since": 8, "api_used": "\u662f", "lines": ["onsole.log('ACTS_getAbilityRunningInfos_0200====<begin');\n", "   \n    it('ACTS_getAbilityRunningInfos_0100', 0, async fu", "info('====> ACTS_getAbilityRunningInfos_0200 ====>' + JSON", "t abilityManager.getAbilityRunningInfos()\n        console.", "onsole.log('ACTS_getAbilityRunningInfos_0100====<begin');\n", "ger'\n\ndescribe('ActsAbilityRunningInfosTest', function () ", "info('====> ACTS_getAbilityRunningInfos_0100 ====>' + JSON", "  abilityManager.getAbilityRunningInfos((err,data)=>{\n    ", "   \n    it('ACTS_getAbilityRunningInfos_0200', 0, async fu"], "files": ["ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityRunningInfo", "api_method_name": "ability", "api_method_all": "ability: ElementName", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 1044, "since": 8, "api_used": "\u662f", "lines": ["                    abilityName: \"com.example.V", "cjsunit/index'\n\nlet abilityNameList = [\n    \"co", "Ability from '@ohos.ability.featureability'\nimp", "ndexOf(data[i].want.abilityName)).assertLarger(", "m 'deccjsunit'\n\nvar abilityNameList = [\n    \"co", "ypeof (info[i].want.abilityName)).assertEqual(\"", "ohos.ability.featureability'\nimport missionMana", "m 'deccjsunit'\n\nlet abilityNameList = [\n    \"co", "expect(info[i].want.abilityName.length).assertL", "                    abilityName: \"com.example.S", "ndexOf(info[i].want.abilityName)).assertLarger(", " if (result[i].want.abilityName != 'com.example", "             expect(abilityNameList.indexOf(dat", "ypeof (data[i].want.abilityName)).assertEqual(\"", "expect(data[i].want.abilityName.length).assertL", "m.ohos.telephonydataability\",\n    \"com.ohos.con", "om.ohos.contactsdataability\",\n    \"com.ix.simul", "             expect(abilityNameList.indexOf(inf"], "files": ["FormFuzzArray.test.js", "getHapModuleInfoJsunit.test.ets", "ContextJsunit.test.ets", "FormsOneAndOneJsunit.test.js", "ActsGetWantAllTest.js", "coverApiTest.js", "ActsProcessManageJsTest.test.js", "getAbilityInfoJsunit2.test.ets", "FormFuzzString.test.js", "taskSwitchJsunit.test.js", "app.js", "MissionManagerTest.js", "getAbilityInfoJsunit.test.ets", "ApplicationInfoJsunit.test.js", "ActsAbilityLifecycleStateNewTest.test.js", "amsMissionSnapshotTest.test.js", "getApplicationContextJsunit.test.ets", "MangerAbilityJsunit.test.js", "LockNew.js", "FormFuzzFunction.test.js", "startFULL.test.js", "getHapModuleInfoJsunit_app1.test.ets", "ActsDataAbilityJsTest.test.js", "DataUriUtilsJsSt.test.js", "ActsAbilityDelegatorCaseTest.test.js", "FeatureAbilityDistribute.test.js", "FormFuzzNull.test.js", "ActsKillProcessTest.test.js", "index.js", "MissionManager.test.js", "index.ets", "addContextAndAbilityJsunit.test.ets", "Getactive.test.js", "ActsStServiceAbilityClientCaseTest.test.js", "FormFuzzNum.test.js", "FeatureAbilityJsunit.test.js", "FormsOneAndTwoJsunit.test.js", "FormFuzzUndefined.test.js", "FormFuzzObject.test.js", "FormFuzzBool.test.js", "FormsZeroAndOneJsunit.test.js", "ContextJsunit.test.js", "FormsZeroJsunit.test.js", "AbilityDisableTest.js", "getAppVersionInfoJsunit.test.ets", "lanuageConfigapi7.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityRunningInfo", "api_method_name": "pid", "api_method_all": "pid: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 39, "since": 8, "api_used": "\u662f", "lines": ["JSON.stringify(list.pid))\n        expect(li", "     expect(data[i].pid > 0).assertTrue();\n", "        expect(list.pid > 0).assertTrue()\n ", "     expect(data[0].pid > 0).assertTrue();\n", "expect(typeof (info.pid)).assertEqual(\"numb", "ect(typeof (info[i].pid)).assertEqual(\"numb", "g(\"checkProcessInfo pid : \" + info.pid);\n\n ", "     expect(info[i].pid).assertLarger(0);\n\n", "console.log('==list.pid==>' + JSON.stringif", " expect(dataInfo[i].pid).assertLarger(500);", "Info pid : \" + info.pid);\n\n        expect(t", "ons = {\n            pid :0,\n            uid"], "files": ["Getactive.test.js", "MangerAbilityJsunit.test.js", "startFULL.test.js", "FeatureAbilityJsunit.test.js", "ContextJsunit.test.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityRunningInfo", "api_method_name": "uid", "api_method_all": "uid: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 45, "since": 8, "api_used": "\u662f", "lines": ["      uid :datainfo.uid\n        }\n        v", "     expect(data[0].uid > 0).assertTrue();\n", " expect(dataInfo[i].uid).assertLarger(2000)", "\n        expect(app.uid > 0).assertTrue();\n", "console.log('==list.uid==>' + JSON.stringif", "JSON.stringify(list.uid))\n    }\n\n    functi", "     expect(data[i].uid > 0).assertTrue();\n", "      uid :datainfo.uid\n        }\n        c", "        expect(list.uid > 0).assertTrue()\n ", "ect(typeof (info[i].uid)).assertEqual(\"numb", "     expect(info[i].uid).assertLarger(0);\n ", " expect(dataInfo[i].uid).assertLarger(10000", "pid :0,\n            uid :datainfo.uid\n     "], "files": ["MangerAbilityJsunit.test.js", "startFULL.test.js", "ContextJsunit.test.js", "ActsProcessManageJsTest.test.js", "Getactive.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityRunningInfo", "api_method_name": "processName", "api_method_all": "processName: string", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 44, "since": 8, "api_used": "\u662f", "lines": ["g(\"checkProcessName processName : \" + info);\n      ", "     expect(data[0].processName !=  null).assertTru", "        expect(info.processName).assertEqual(\"proce", "g(\"checkProcessInfo processName : \" + info.processN", "    if (dataInfo[i].processName == name) {\n        ", "Infos(processInfos, processName) {\n        for (var", "expect(typeof (info.processName)).assertEqual(\"stri", "     expect(info[i].processName.length).assertLarge", "ect(typeof (info[i].processName)).assertEqual(\"stri", "     expect(data[i].processName !=  null).assertTru", "s[i].processName == processName) {\n                ", "if (processInfos[i].processName == systemAMultiProc", "if (processInfos[i].processName == processName) {\n ", "if (processInfos[i].processName == systemAProcessNa", "cessName : \" + info.processName);\n        console.l", "Infos(processInfos, processName));\n                ", "ckPromiseExistDelay(processName) {\n        return n"], "files": ["MangerAbilityJsunit.test.js", "FeatureAbilityJsunit.test.js", "ActsKillProcessTest.test.js", "ActsProcessManageJsTest.test.js", "Getactive.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityRunningInfo", "api_method_name": "startTime", "api_method_all": "startTime: number", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 29, "since": 8, "api_used": "\u662f", "lines": ["Time(TAG_TEST_0100, startTime, endTime)\n         ", "face startTime: ' + startTime);\n    console.info(", "getDurationTime(msg,startTime, endTime) {\n       ", "ration = (endTime - startTime)\n    console.info(m", "Time(TAG_TEST_0200, startTime, endTime)\n         ", "etDurationTime(msg, startTime, endTime) {\n    con", "ration = (endTime - startTime)\n            consol", "ed;\n            var startTime = await Utils.getNo", "face startTime: ' + startTime);\n            conso", "                var startTime = await Utils.getNo", "');\n            var startTime = await Utils.getNo", "(msg+'Get Interface startTime: ' + startTime);\n  ", " expect(dataInfo[i].startTime).assertLarger(3000)", "Time(TAG_TEST_0500, startTime, endTime)\n         ", "Time(TAG_TEST_0300, startTime, endTime)\n         ", "sg + 'Get Interface startTime: ' + startTime);\n  "], "files": ["addContextAndAbilityJsunit.test.ets", "Utils.ets", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}, {"api_class_name": "AbilityRunningInfo", "api_method_name": "abilityState", "api_method_all": "abilityState: abilityManager.AbilityState", "api_type": "", "api_args_count": 1, "api_level": 22, "api_used_count": 7, "since": 0, "api_used": "\u662f", "lines": ["        dataInfo[i].abilityState==abilityManager.Abi", " expect(dataInfo[i].abilityState).assertLarger(0);\n ", " expect(dataInfo[i].abilityState==abilityManager.Abi", "  ) || (dataInfo[i].abilityState!=abilityManager.Abi", "    || (dataInfo[i].abilityState!=abilityManager.Abi", "     console.log('==abilityState==>' + JSON.stringif"], "files": ["startFULL.test.js", "ActsProcessManageJsTest.test.js"], "is_white": " ", "desc": " "}]}