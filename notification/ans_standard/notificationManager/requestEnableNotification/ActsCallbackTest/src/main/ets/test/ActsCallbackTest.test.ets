/*
* Copyright (c) 2023 Huawei Device Co., Ltd.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

import notificationManager from '@ohos.notificationManager';
import { BusinessError } from '@ohos.base';
import { Driver, ON } from '@ohos.UiTest';
import common from '@ohos.app.ability.common';
import { describe, beforeAll, beforeEach, afterEach, afterAll, it } from '@ohos/hypium';
let context = getContext(this) as common.UIAbilityContext;


export default function ActsCallbackTest() {
  describe('SUB_ACTS_CALLBACK_TEST', () => {
    const TAG = 'SUB_ACTS_CALLBACK_TEST ===>';

    /*
     * @tc.number    : Sub_Notification_Ans_NotificationManager_RequestEnableNotification_Callback_Test_0100
     * @tc.name      : function requestEnableNotification(context, callback): void
     * @tc.desc      : requestEnableNotification allowed button is clicked
     */
    it('Sub_Notification_Ans_NotificationManager_RequestEnableNotification_Callback_Test_0100', 0,
      async (done: Function) => {
      let requestEnableNotificationCallback = (err: BusinessError): void => {
        if (err) {
            console.error(`requestEnableNotification failed, code is ${err.code}, message is ${err.message}`);
            expect(false).assertEqual(true)
            done()
        } else {
            console.info("requestEnableNotification success");
        }
      };
      notificationManager.requestEnableNotification(context, requestEnableNotificationCallback);

      let driver = Driver.create();
      await sleep(1500)
      let button = await driver.findComponent(ON.text('允许'));

      if (button !== null) {
        await sleep(1500);
        await button.click();
      } else {
        console.info('null button');
        expect(false).assertEqual(true)
        done()
      }
    });
  });
};
