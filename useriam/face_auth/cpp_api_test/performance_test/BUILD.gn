# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/user_iam/face_auth/useriam.gni")
import("//build/test.gni")

module_output_path = "faceauth/faceauthtest"

ohos_systemtest("FaceAuthPerformanceCppAutoRunAuthTest") {
  module_out_path = module_output_path

  include_dirs = [
    "//test/xts/acts/useriam/face_auth/cpp_api_test/performance_test/include"
  ]

  sources = [
    "//test/xts/acts/useriam/face_auth/cpp_api_test/performance_test/src/face_auth_performance_cpp_auto_run_auth_test.cpp",
  ]

  configs = [
    "//test/xts/acts/useriam/face_auth/cpp_api_test:face_auth_system_test_config",
  ]
  deps = [
    "${useriam_common_path}:faceauth_common",
    "${useriam_auth_kits_path}:faceauth_auth_kits",
    "${face_auth_innerkits_path}:face_auth_innerkits",
    "${face_auth_services_path}:face_auth_services",
    "//base/security/permission/interfaces/innerkits/permission_standard/permissionsdk:libpermissionsdk_standard",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//utils/native/base:utils",
    "//foundation/graphic/standard:libsurface",
    "${aafwk_path}/interfaces/innerkits/want:want",
    "${aafwk_path}/services/abilitymgr:abilityms",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core:appexecfwk_core",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
    "//foundation/aafwk/standard/interfaces/innerkits/base:base",
    "//base/startup/syspara_lite/interfaces/innerkits/native/syspara:syspara",
    "//base/startup/appspawn_standard/interfaces/innerkits:appspawn_socket_client",
    "//third_party/googletest:gtest_main",

  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  external_deps = [
    "ability_runtime:app_manager",
    "ability_runtime:want",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
    "ces_standard:cesfwk_core",
    "ces_standard:cesfwk_innerkits",
  ]
}

ohos_systemtest("FaceAuthPerformanceCppAutoRunEnrollTest") {
  module_out_path = module_output_path

  include_dirs = [
    "//test/xts/acts/useriam/face_auth/cpp_api_test/performance_test/include"
  ]

  sources = [
    "//test/xts/acts/useriam/face_auth/cpp_api_test/performance_test/src/face_auth_performance_cpp_auto_run_enroll_test.cpp",
  ]

  configs = [
    "//test/xts/acts/useriam/face_auth/cpp_api_test:face_auth_system_test_config",
  ]
  deps = [
    "${useriam_common_path}:faceauth_common",
    "${useriam_auth_kits_path}:faceauth_auth_kits",
    "${face_auth_innerkits_path}:face_auth_innerkits",
    "${face_auth_services_path}:face_auth_services",
    "//base/security/permission/interfaces/innerkits/permission_standard/permissionsdk:libpermissionsdk_standard",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//utils/native/base:utils",
    "//foundation/graphic/standard:libsurface",
    "${aafwk_path}/interfaces/innerkits/want:want",
    "${aafwk_path}/services/abilitymgr:abilityms",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core:appexecfwk_core",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
    "//foundation/aafwk/standard/interfaces/innerkits/base:base",
    "//base/startup/syspara_lite/interfaces/innerkits/native/syspara:syspara",
    "//base/startup/appspawn_standard/interfaces/innerkits:appspawn_socket_client",
    "//third_party/googletest:gtest_main",

  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  external_deps = [
    "ability_runtime:app_manager",
    "ability_runtime:want",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
    "ces_standard:cesfwk_core",
    "ces_standard:cesfwk_innerkits",
  ]
}

group("performance_test") {
  testonly = true
  deps = [ 
    ":FaceAuthPerformanceCppAutoRunAuthTest",
    ":FaceAuthPerformanceCppAutoRunEnrollTest"
   ]
}