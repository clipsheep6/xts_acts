# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//test/xts/tools/build/suite.gni")
import("//drivers/adapter/uhdf2/uhdf.gni")
import("//foundation/communication/netmanager_base/netmanager_base_config.gni")


ohos_moduletest_suite("NetworkManagerPerformanceTest") {
    install_enable = true
    sources = [
        "src/network_manager_performance_test.cpp"
    ]

    include_dirs = [
        "//test/xts/acts/telephony/telephonycpptest/utils",
        "//test/xts/acts/telephony/telephonycpptest/network_manager/include",
        "$INNERKITS_ROOT/native/ethernetclient/include/ipc",
        "$INNERKITS_ROOT/native/ethernetclient/include",
        "$INNERKITS_ROOT/native/netconnclient/include",
        "//foundation/aafwk/standard/frameworks/kits/ability/native/include",
        "$INNERKITS_ROOT/native/dnsresolverclient/include",
        "$INNERKITS_ROOT/native/dnsresolverclient/include/ipc",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/include",
        "//foundation/communication/netmanager_base/services/dnsresolvermanager/include/ipc",
        "//foundation/communication/netmanager_base/services/dnsresolvermanager/include",
        "//foundation/communication/netmanager_base/services/common/include",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/dnsresolverclient/include",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/ethernetclient/include",
        "$NETSTATSMANAGER_INNERKITS_SOURCE_DIR/include",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/netstatsclient/include/proxy",
        "$NETSTATSMANAGER_SOURCE_DIR/include/stub",
        "$NETPOLICYMANAGER_SOURCE_DIR/include/ipc",
        "$NETPOLICYMANAGER_SOURCE_DIR/include",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/netstatsclient/include/proxy/",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/netstatsclient/include",
        "//foundation/communication/netmanager_base/services/netpolicymanager/include/",
        "//foundation/communication/netmanager_base/services/netpolicymanager/include/stub",
        "//foundation/communication/netmanager_base/services/netpolicymanager/include/net_policy_controller",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/netpolicyclient/include/",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/netpolicyclient/include/proxy",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/dnsresolverclient/include/proxy/"
    ]

   deps = [
        "$NETMANAGER_BASE_ROOT/utils:net_manager_common",
        "$INNERKITS_ROOT/native/netpolicyclient:net_policy_manager_if",
        "$INNERKITS_ROOT/native/ethernetclient:ethernet_manager_if",
        "$INNERKITS_ROOT/native/dnsresolverclient:dns_resolver_manager_if",
        "$INNERKITS_ROOT/native/netconnclient:net_conn_manager_if",
        "$NETMANAGER_BASE_ROOT/services/netstatsmanager:net_stats_manager",
        "//third_party/googletest:gtest_main",
        "//third_party/jsoncpp:jsoncpp",
    ]

    external_deps = [
        "safwk:system_ability_fwk",
        "ipc:ipc_core",
        "netmanager_base:net_stats_manager_if",
        "netmanager_base:net_conn_manager_if",
        "ces_standard:cesfwk_innerkits",
        "samgr_standard:samgr_proxy",
    ]

  defines = [
        "TAG = \"NetworkManagerPerformanceTest\"",
        "LOG_DOMAIN = 0xD002B01",
    ]

  if (is_standard_system) {
    external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }
  part_name = "telephonycpptest"

  subsystem_name = "telephony"
}