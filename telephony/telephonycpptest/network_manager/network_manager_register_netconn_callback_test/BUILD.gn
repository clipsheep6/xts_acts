# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//test/xts/tools/build/suite.gni")
import("//drivers/adapter/uhdf2/uhdf.gni")
import("//foundation/communication/netmanager_base/netmanager_base_config.gni")

ohos_moduletest_suite("NetworkManagerRegisterNetconnCallbackTest") {
    install_enable = true
    sources = [
        "src/network_manager_register_netconn_callback_test.cpp",
        "src/test_net_conn_callback.cpp",
        "//base/telephony/cellular_data/frameworks/native/cellular_data_service_proxy.cpp",
    ]

    include_dirs = [
        "//test/xts/acts/telephony/telephonycpptest/network_manager/include",
        "$INNERKITS_ROOT/native/ethernetmanager/include/ipc",
        "$INNERKITS_ROOT/native/ethernetmanager/include",
        "$INNERKITS_ROOT/native/netconnmanager/include",
        "//foundation/aafwk/standard/frameworks/kits/ability/native/include",
        "$INNERKITS_ROOT/native/dnsresolvermanager/include",
        "$INNERKITS_ROOT/native/dnsresolvermanager/include/ipc",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/include",
        "//foundation/communication/netmanager_base/services/dnsresolvermanager/include/ipc",
        "//foundation/communication/netmanager_base/services/dnsresolvermanager/include",
        "//foundation/communication/netmanager_base/services/common/include",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/dnsresolvermanager/include",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/netconnclient/include/proxy",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/netpolicymanager/include",
        "//foundation/communication/netmanager_base/interfaces/innerkits/native/ethernetmanager/include",
        "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include",
        "//base/telephony/core_service/common/cellular_data/",
        "//base/telephony/core_service/utils/log/include/",
        "//base/telephony/core_service/common/core/",
        "../../utils",
        "//base/telephony/cellular_data/interfaces/innerkits/",
        "//build/toolchain/aosp:aosp_clang_arm",
        "//base/telephony/core_service/interfaces/innerkits/proxy",
        "//base/telephony/core_service/interfaces/innerkits/common",
        "//base/telephony/cellular_data/services/include",
        "//base/telephony/cellular_data/services/include/common",
        "//base/telephony/ril_adapter/interfaces/innerkits",
        "//base/telephony/core_service/interfaces/innerkits/state_registry/proxy",
        "//base/telephony/cellular_data/services/include/state_machine",
        "//base/telephony/core_service/utils/log/include/",
        "//base/telephony/core_service/common/core/",
        "//base/telephony/core_service/interfaces/innerkits/cellular_data",
        "//base/telephony/core_service/interfaces/innerkits/core",
        "//base/telephony/core_service/interfaces/innerkits/call_manager",
        "//base/telephony/ril_adapter/interfaces/innerkits/include/",
        "//foundation/communication/wifi/interfaces/innerkits/native_cpp/wifi_standard/include",
        "//foundation/communication/wifi/interfaces/innerkits/native_cpp/wifi_standard/interfaces",
        "//foundation/communication/wifi/services/wifi_standard/wifi_framework/common/net_helper",
        "//test/xts/acts/telephony/telephonycpptest/utils",
        "//foundation/communication/netmanager_base/interfaces/innerkits/netconnclient/include/proxy",
        "//foundation/communication/netmanager_base/interfaces/innerkits/netconnclient/include",
        "//foundation/communication/netmanager_base/interfaces/innerkits/include",
        "//foundation/communication/netmanager_base/interfaces/innerkits/dnsresolverclient/include",
        "//foundation/communication/netmanager_base/interfaces/innerkits/ethernetclient/include",
        "//foundation/communication/netmanager_base/interfaces/innerkits/ethernetclient/include/proxy",
        "//foundation/communication/netmanager_base/interfaces/innerkits/dnsresolverclient/include/proxy",
        "//foundation/communication/netmanager_base/utils/log/include",
        "//foundation/communication/netmanager_base/services/netconnmanager/include",

    ]

   deps = [
        "$NETMANAGER_BASE_ROOT/utils:net_manager_common",
        "//third_party/googletest:gtest_main",
        "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
        "$NETDCONTROLLER_ROOT_DIR:netd_controller",
        "//foundation/communication/wifi/interfaces/innerkits/native_cpp/wifi_standard:wifi_sdk",
        "//utils/native/base:utils",
        "$NETDCONTROLLER_ROOT_DIR:netd_controller",
        "//third_party/curl:curl",
        "$INNERKITS_ROOT/netconnclient:net_conn_manager_if",
        "$INNERKITS_ROOT/dnsresolverclient:dns_resolver_manager_if",
        "$INNERKITS_ROOT/netstatsclient:net_stats_manager_if",
    ]

    external_deps = [
            "safwk:system_ability_fwk",
            "appexecfwk_standard:libeventhandler",
            "samgr_standard:samgr_proxy",
            "ipc:ipc_core",
            "aafwk_standard:want",
            "ces_standard:cesfwk_innerkits",

    ]

  defines = [
        "TAG = \"NetworkManagerRegisterNetconnCallbackTest\"",
        "LOG_DOMAIN = 0xD002B01",
    ]

  if (is_standard_system) {
    external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }
  part_name = "telephonycpptest"

  subsystem_name = "telephony"
}