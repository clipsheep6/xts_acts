# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#import("//build/test.gni")
import("//test/xts/tools/build/suite.gni")

#module_output_path = "hits/huks_standard"
########################################################
config("module_private_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "//utils/native/base/include",
    "//third_party/bounds_checking_function/include",
    "//third_party/musl/porting/linux/user/include",

    #"unittest/include",
    #"include",
    "//test/xts/acts/security_lite/huks/common/include",
  ]
}

########################################################
ohos_moduletest_suite("ActToolChainMathTest") {
  configs = [ ":module_private_config" ]
  cflags_cc = [ "-DHILOG_ENABLE" ]
  defines = [ "_STANDARD_SYSTEM_" ]

  sources = [
    "acos.cpp",
    "acosf.cpp",
    "acosh.cpp",
    "acoshf.cpp",
    "acoshl.cpp",
    "acosl.cpp",
    "asin.cpp",
    "asinf.cpp",
    "asinh.cpp",
    "asinhf.cpp",
    "asinhl.cpp",
    "asinl.cpp",
    "atan.cpp",
    "atan2.cpp",
    "atan2f.cpp",
    "atan2l.cpp",
    "atanf.cpp",
    "atanh.cpp",
    "atanhf.cpp",
    "atanhl.cpp",
    "atanl.cpp",
    "cbrt.cpp",
    "cbrtf.cpp",
    "cbrtl.cpp",
    "ceil.cpp",
    "ceilf.cpp",
    "ceill.cpp",
    "copysign.cpp",
    "copysignf.cpp",
    "copysignl.cpp",
    "cos.cpp",
    "cosf.cpp",
    "cosh.cpp",
    "coshf.cpp",
    "coshl.cpp",
    "cosl.cpp",
    "drem.cpp",
    "dremf.cpp",
    "erf.cpp",
    "erfc.cpp",
    "erfcf.cpp",
    "erfcl.cpp",
    "erff.cpp",
    "erfl.cpp",
    "exp.cpp",
    "exp10.cpp",
    "exp10f.cpp",
    "exp10l.cpp",
    "exp2.cpp",
    "exp2f.cpp",
    "exp2l.cpp",
    "expf.cpp",
    "expl.cpp",
    "expm1.cpp",
    "expm1f.cpp",
    "expm1l.cpp",
    "fabs.cpp",
    "fabsf.cpp",
    "fabsl.cpp",
    "fdim.cpp",
    "fdimf.cpp",
    "fdiml.cpp",
    "fenv.cpp",
    "floor.cpp",
    "floorf.cpp",
    "floorl.cpp",
    "fma.cpp",
    "fmaf.cpp",
    "fmal.cpp",
    "fmax.cpp",
    "fmaxf.cpp",
    "fmaxl.cpp",
    "fmin.cpp",
    "fminf.cpp",
    "fminl.cpp",
    "fmod.cpp",
    "fmodf.cpp",
    "fmodl.cpp",
    "fpclassify.cpp",
    "frexp.cpp",
    "frexpf.cpp",
    "frexpl.cpp",
    "hypot.cpp",
    "hypotf.cpp",
    "hypotl.cpp",
    "ilogb.cpp",
    "ilogbf.cpp",
    "ilogbl.cpp",
    "isless.cpp",
    "j0.cpp",
    "j0f.cpp",
    "j1.cpp",
    "j1f.cpp",
    "jn.cpp",
    "jnf.cpp",
    "ldexp.cpp",
    "ldexpf.cpp",
    "ldexpl.cpp",
    "lgamma.cpp",
    "lgamma_r.cpp",
    "lgammaf.cpp",
    "lgammaf_r.cpp",
    "lgammal.cpp",
    "lgammal_r.cpp",
    "llrint.cpp",
    "llrintf.cpp",
    "llrintl.cpp",
    "llround.cpp",
    "llroundf.cpp",
    "llroundl.cpp",
    "log.cpp",
    "log10.cpp",
    "log10f.cpp",
    "log10l.cpp",
    "log1p.cpp",
    "log1pf.cpp",
    "log1pl.cpp",
    "log2.cpp",
    "log2f.cpp",
    "log2l.cpp",
    "logb.cpp",
    "logbf.cpp",
    "logbl.cpp",
    "logf.cpp",
    "logl.cpp",
    "lrint.cpp",
    "lrintf.cpp",
    "lrintl.cpp",
    "lround.cpp",
    "lroundf.cpp",
    "lroundl.cpp",
    "modf.cpp",
    "modff.cpp",
    "modfl.cpp",
    "nearbyint.cpp",
    "nearbyintf.cpp",
    "nearbyintl.cpp",
    "nextafter.cpp",
    "nextafterf.cpp",
    "nextafterl.cpp",
    "nexttoward.cpp",
    "nexttowardf.cpp",
    "nexttowardl.cpp",
    "pow.cpp",
    "pow10.cpp",
    "pow10f.cpp",
    "pow10l.cpp",
    "powf.cpp",
    "powl.cpp",
    "remainder.cpp",
    "remainderf.cpp",
    "remainderl.cpp",
    "remquo.cpp",
    "remquof.cpp",
    "remquol.cpp",
    "rint.cpp",
    "rintf.cpp",
    "rintl.cpp",
    "round.cpp",
    "roundf.cpp",
    "roundl.cpp",
    "scalb.cpp",
    "scalbf.cpp",
    "scalbln.cpp",
    "scalblnf.cpp",
    "scalblnl.cpp",
    "scalbn.cpp",
    "scalbnf.cpp",
    "scalbnl.cpp",
    "sin.cpp",
    "sincos.cpp",
    "sincosf.cpp",
    "sincosl.cpp",
    "sinf.cpp",
    "sinh.cpp",
    "sinhf.cpp",
    "sinhl.cpp",
    "sinl.cpp",
    "sqrt.cpp",
    "sqrtf.cpp",
    "sqrtl.cpp",
    "tan.cpp",
    "tanf.cpp",
    "tanh.cpp",
    "tanhf.cpp",
    "tanhl.cpp",
    "tanl.cpp",
    "tgamma.cpp",
    "tgammaf.cpp",
    "tgammal.cpp",
    "trunc.cpp",
    "truncf.cpp",
    "truncl.cpp",
    "y0.cpp",
    "y0f.cpp",
    "y1.cpp",
    "y1f.cpp",
    "yn.cpp",
    "ynf.cpp",
  ]

  include_dirs = [
    "src",
    "crlibm/",
    "gen/",
    "gen/template",
    "sanity/",
    "special/",
    "ucb/",
    "//test/xts/acts/toolchain/libc-test/commom",
    "//third_party/musl/porting/linux/user/src/sched",
  ]

  deps = [
    "//third_party/bounds_checking_function:libsec_static",
    "//utils/native/base:utils",
  ]

  libs = [
    "${root_out_dir}/obj/test/xts/acts/toolchain/libc-test/commom/libcommom.a",
  ]
}
