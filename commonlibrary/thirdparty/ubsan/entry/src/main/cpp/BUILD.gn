# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/ohos/config.gni")
import("//build/ohos.gni")
import("//foundation/arkui/napi/napi.gni")

config("config") {
  visibility = [ ":*" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Wunused-variable",
    "-fexceptions",
  ]

  cflags_cc = [ "-fexceptions" ]
  cflags_objcc = cflags_cc
}

config("public_config") {
}

ohos_shared_library("ubalignment") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./alignment.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubbool") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./undefinedBool.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubdivide0") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./divide0.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubbounds") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./bounds.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubenum") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./enum.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubfloatCastOverflow") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./floatCastOverflow.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubpointerOverflow") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./pointerOverflow.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubobjectSize") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./objectSize.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubnull") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./null.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubnonnullAttribute") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./nonnullAttribute.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubreturnNonnullAttribute") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./returnNonnullAttribute.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubshift") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./shift.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubintegerOverflow") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./integerOverflow.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}

ohos_shared_library("ubvlaBound") {
  sanitize = {
    boundary_sanitize = true
    integer_overflow = true
    all_ubsan = true
    debug = false
  }

  testonly = true
  subsystem_name = "thirdparty"
  part_name = "musl"
  sources = [ "./vlaBound.cpp" ]

  include_dirs = [ "../cpp" ]
  configs = [ ":config" ]

  external_deps = [ "napi:ace_napi" ]

  output_extension = "so"
}
