# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//test/xts/tools/build/suite.gni")
import("//foundation/multimodalinput/input/multimodalinput_mini.gni")
module_output_path = "acts/multimodalinput"


ohos_copy("KeyEventTest_Copy") {
   sources = [
    "src/json/keyboard_KEY_A_click.json",
    "src/json/keyboard_KEY_A_click2.json",
    "src/json/keyboard_KEY_A_click3.json",
	"src/json/keyboard_KEY_B_press.json",
    "src/json/keyboard_KEY_B_release.json",
	"src/json/keyboard_KEY_CTRL_LEFT_C.json"
	]
   outputs = ["${root_out_dir}/suites/acts/multimodalinput/json/{{sources_file_part}}"]
   module_source_dir = "${target_out_dir}/build/bin/multimodalinput"
   module_install_name = ""
}

config("libmmi_client_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "//foundation/multimodalinput/input/frameworks/proxy/event_handle/include",
    "//foundation/multimodalinput/input/frameworks/proxy/module_loader/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/common/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/event/include",
    "//foundation/multimodalinput/input/interfaces/native/innerkits/proxy/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//utils/native/base/include",
  ]
}

ohos_moduletest_suite("KeyEventTest") {
  module_out_path = module_output_path
  include_dirs = [
    "//utils/native/base/include",
    "//third_party/googletest/googletest/include",
    "${mmi_path}/frameworks/util/common",
    "${mmi_path}/frameworks/util/common/include",
    "${mmi_path}/frameworks/util/network",
    "${mmi_path}/frameworks/util/network/include",
    "${mmi_path}/frameworks/util/socket",
    "${mmi_path}/frameworks/util/socket/include",
    "${mmi_path}/frameworks/proxy/event_handle",
    "${mmi_path}/frameworks/proxy/event_handle/include",
    "${mmi_path}/frameworks/proxy/module_loader",
    "${mmi_path}/frameworks/proxy/module_loader/include",
    "${mmi_path}/common/include",
    "${mmi_path}/interfaces/native/innerkits/common/include",
    "${mmi_path}/interfaces/native/innerkits/proxy/include",
    "${mmi_path}/interfaces/native/innerkits/event/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
  ]

  if (is_mmi_have_libinput) {
    include_dirs += [ "$root_out_dir/diff_libinput_mmi/src" ]
  }

  cflags = [
    "-DOHOS_BUILD",
    "-DOHOS_AUTO_TEST_FRAME",
  ]

  if (is_mmi_have_debug) {
    cflags += [ "-DOHOS_BUILD_MMI_DEBUG" ]
  }

  if (is_mmi_have_libinput) {
    cflags += [ "-DOHOS_BUILD_LIBINPUT" ]
  }

  if (is_mmi_have_hdf) {
    cflags += [ "-DOHOS_BUILD_HDF" ]
  }

  if (is_mmi_have_ai) {
    cflags += [ "-DOHOS_BUILD_AI" ]
  }

  sources = [ "./simple/key_event_test.cpp" ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/frameworks/util:libmmi-util",
    "//test/xts/acts/multimodalinput/input_standard/lib:mmi_xts_lib",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
}

group("KeyEvent") {
  testonly = true
  deps = []
  deps += [
    ":KeyEventTest",
	":KeyEventTest_Copy"
  ]
}
