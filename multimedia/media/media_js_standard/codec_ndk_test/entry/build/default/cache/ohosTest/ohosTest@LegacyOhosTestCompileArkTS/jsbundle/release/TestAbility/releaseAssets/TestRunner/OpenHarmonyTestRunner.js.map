{"version":3,"file":"OpenHarmonyTestRunner.js","sources":["/home/wsl/openharmony/0620/test/xts/acts/multimedia/media/media_js_standard/codec_ndk_test/entry/src/ohosTest/ets/TestRunner/OpenHarmonyTestRunner.ts"],"sourcesContent":["import hilog from '@ohos.hilog';\nimport TestRunner from '@ohos.application.testRunner';\nimport AbilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry';\n\nvar abilityDelegator = undefined\nvar abilityDelegatorArguments = undefined\n\nasync function onAbilityCreateCallback() {\n    hilog.info(0x0000, 'testTag', '%{public}s', 'onAbilityCreateCallback');\n}\n\nasync function addAbilityMonitorCallback(err: any) {\n    hilog.info(0x0000, 'testTag', 'addAbilityMonitorCallback : %{public}s',\n        JSON.stringify(err) ?? '');\n}\n\nexport default class OpenHarmonyTestRunner implements TestRunner {\n    constructor() {\n    }\n\n    onPrepare() {\n        hilog.info(0x0000, 'testTag', '%{public}s', 'OpenHarmonyTestRunner OnPrepare');\n    }\n\n    onRun() {\n        hilog.info(0x0000, 'testTag', '%{public}s', 'OpenHarmonyTestRunner onRun run');\n        abilityDelegatorArguments = AbilityDelegatorRegistry.getArguments()\n        abilityDelegator = AbilityDelegatorRegistry.getAbilityDelegator()\n        var testAbilityName = abilityDelegatorArguments.parameters['-p'] + '.TestAbility'\n        let lMonitor = {\n            abilityName: testAbilityName,\n            onAbilityCreate: onAbilityCreateCallback,\n        };\n        abilityDelegator.addAbilityMonitor(lMonitor, addAbilityMonitorCallback)\n        var cmd = 'aa start -d 0 -a ' + testAbilityName + ' -b ' + abilityDelegatorArguments.bundleName\n        var debug = abilityDelegatorArguments.parameters['-D']\n        if (debug == 'true')\n        {\n            cmd += ' -D'\n        }\n        hilog.info(0x0000, 'testTag', 'cmd : %{public}s', cmd);\n        abilityDelegator.executeShellCommand(cmd,\n            (err: any, d: any) => {\n                hilog.info(0x0000, 'testTag', 'executeShellCommand : err : %{public}s',\n                    JSON.stringify(err) ?? '');\n                hilog.info(0x0000, 'testTag', 'executeShellCommand : data : %{public}s',\n                    d.stdResult ?? '');\n                hilog.info(0x0000, 'testTag', 'executeShellCommand : data : %{public}s',\n                    d.exitCode ?? '');\n            })\n        hilog.info(0x0000, 'testTag', '%{public}s', 'OpenHarmonyTestRunner onRun end');\n    }\n};"],"names":["hilog","globalThis","requireNapi","AbilityDelegatorRegistry","abilityDelegator","undefined","abilityDelegatorArguments","async","onAbilityCreateCallback","info","addAbilityMonitorCallback","err","JSON","stringify","_a","constructor","onPrepare","onRun","getArguments","getAbilityDelegator","testAbilityName","parameters","lMonitor","abilityName","onAbilityCreate","addAbilityMonitor","cmd","bundleName","executeShellCommand","d","_b","stdResult","_c","exitCode"],"mappings":";;;;;EAAA,IAAOA,IAAKC,WAAMC,YAAc;EAEhC,IAAOC,IAAwBF,WAAMC,YAAA;EAErC,IAAIE,SAAmBC;EACvB,IAAIC,SAA4BD;EAEhCE,eAAeC;IACXR,EAAMS,KAAK,GAAQ,WAAW,cAAc;AAChD;EAEAF,eAAeG,EAA0BC;;IACrCX,EAAMS,KAAK,GAAQ,WAAW,+CAC1BG,KAAKC,UAAUF,QAAQ,QAAAG,WAAA,IAAAA,IAAA;AAC/B;oBAEc;IACVC,eACC;IAEDC;MACIhB,EAAMS,KAAK,GAAQ,WAAW,cAAc;AAC/C;IAEDQ;MACIjB,EAAMS,KAAK,GAAQ,WAAW,cAAc;MAC5CH,IAA4BH,EAAyBe;MACrDd,IAAmBD,EAAyBgB;MAC5C,IAAIC,IAAkBd,EAA0Be,WAAW,QAAQ;MACnE,IAAIC,IAAW;QACXC,aAAaH;QACbI,iBAAiBhB;;MAErBJ,EAAiBqB,kBAAkBH,GAAUZ;MAC7C,IAAIgB,IAAM,sBAAsBN,IAAkB,SAASd,EAA0BqB;MAErF,IADYrB,EAA0Be,WAAW,SACpC;QAETK,KAAO;;MAEX1B,EAAMS,KAAK,GAAQ,WAAW,oBAAoBiB;MAClDtB,EAAiBwB,oBAAoBF,IACjC,CAACf,GAAUkB;;QACP7B,EAAMS,KAAK,GAAQ,WAAW,+CAC1BG,KAAKC,UAAUF,QAAQ,QAAAG,WAAA,IAAAA,IAAA;QAC3Bd,EAAMS,KAAK,GAAQ,WAAW,4CAC1BqB,IAAAD,EAAEE,eAAa,QAAAD,WAAA,IAAAA,IAAA;QACnB9B,EAAMS,KAAK,GAAQ,WAAW,4CAC1BuB,IAAAH,EAAEI,cAAY,QAAAD,WAAA,IAAAA,IAAA;AAAG;MAE7BhC,EAAMS,KAAK,GAAQ,WAAW,cAAc;AAC/C;;"}