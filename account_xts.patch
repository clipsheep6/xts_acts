diff --git a/account/appaccount/actsaccountoperatetest/src/main/js/test/AccountCredential.test.js b/account/appaccount/actsaccountoperatetest/src/main/js/test/AccountCredential.test.js
index 4bb7bcf47..a567efe09 100644
--- a/account/appaccount/actsaccountoperatetest/src/main/js/test/AccountCredential.test.js
+++ b/account/appaccount/actsaccountoperatetest/src/main/js/test/AccountCredential.test.js
@@ -20,29 +20,6 @@ const EACHTIMEOUT = 500;
 const ERR_JS_CREDENTIAL_NOT_EXIST = 12300102;
 export default function ActsAppAccountCredential() {
     describe('ActsAppAccountCredential', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        })
-
-        beforeEach(async function (done) {
-            console.debug("====>beforeEach enter====");
-            await sleep(EACHTIMEOUT);
-            done();
-        })
-
         /*
         * @tc.number    : ActsAppAccountCredential_0100
         * @tc.name      : The correct calls setAssociatedData and getCredential get the credential
diff --git a/account/appaccount/actsaccountoperatetest/src/main/js/test/AccountManager.test.js b/account/appaccount/actsaccountoperatetest/src/main/js/test/AccountManager.test.js
index cd5d68676..c4c7c3048 100644
--- a/account/appaccount/actsaccountoperatetest/src/main/js/test/AccountManager.test.js
+++ b/account/appaccount/actsaccountoperatetest/src/main/js/test/AccountManager.test.js
@@ -15,26 +15,8 @@
 import account from '@ohos.account.appAccount'
 import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect } from '@ohos/hypium'
 
-const TIMEOUT = 5000;
 export default function ActsAccountManager() {
     describe('ActsAccountManager', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        });
-        
         /*
         * @tc.number    : ActsAccountManager_0100
         * @tc.name      : createAppAccountManager
diff --git a/account/appaccount/actsaccountoperatetest/src/main/js/test/AuthToken.test.js b/account/appaccount/actsaccountoperatetest/src/main/js/test/AuthToken.test.js
index ceb7a224b..2387afcb4 100644
--- a/account/appaccount/actsaccountoperatetest/src/main/js/test/AuthToken.test.js
+++ b/account/appaccount/actsaccountoperatetest/src/main/js/test/AuthToken.test.js
@@ -19,9 +19,6 @@ import featureAbility from '@ohos.ability.featureAbility'
 import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect } from '@ohos/hypium'
 import {AccountErrCode} from './AccountErrCode.test.js'
 
-
-const TIMEOUT = 1000;
-const EACHTIMEOUT = 500;
 const LENGTHLIMIT = 512;
 const TOKENLENGTHLIMIT = 1024;
 const AUTHTYPELENGTHLIMIT = 1024;
@@ -30,28 +27,6 @@ const ERR_JS_AUTH_TYPE_NOT_FOUND = 12300107;
 const OWNERSELF = "com.example.actsaccountoperatetest";
 export default function ActsAccountAuthToken() {
     describe('ActsAccountAuthToken', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        });
-
-        beforeEach(async function (done) {
-            console.debug("====>beforeAll enter====");
-            await sleep(EACHTIMEOUT);
-            done();
-        });
 
         /*
             * @tc.number    : testGetEntriesString101
diff --git a/account/appaccount/actsaccountoperatetest/src/main/js/test/Authenticator.test.js b/account/appaccount/actsaccountoperatetest/src/main/js/test/Authenticator.test.js
index 43345b7b3..3c00204c0 100644
--- a/account/appaccount/actsaccountoperatetest/src/main/js/test/Authenticator.test.js
+++ b/account/appaccount/actsaccountoperatetest/src/main/js/test/Authenticator.test.js
@@ -23,16 +23,6 @@ const owner = 'com.example.accountauthenticator'
 const createAccountOptions = {customData:{age:'12'}}
 export default function ActsAccountAppAccess() {
     describe('ActsAccountAuthenticator', function () {
-
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
         beforeAll(async function (done) {
             console.debug("====>ActsAccountAuthenticator beforeAll start====");
             await featureAbility.startAbilityForResult(
@@ -167,6 +157,8 @@ export default function ActsAccountAppAccess() {
                         done();
                     }).catch((err) =>{
                         console.debug("====>ActsAccountCheckAccountLabels_0400 delete_account_err");
+                        expect().assertFail();
+                        done();
                     });                    
                 }).catch((err) =>{
                     console.debug("====>ActsAccountCheckAccountLabels_0400 err:" + JSON.stringify(err))
@@ -197,10 +189,12 @@ export default function ActsAccountAppAccess() {
                     expect(account.Constants.KEY_BOOLEAN_RESULT).assertEqual('booleanResult')
                     appAccountManager.removeAccount(name).then((data) =>{
                         console.debug("====>ActsAccountCheckAccountLabels_0500 delete_account_success");
+                        done();
                     }).catch((err) =>{
                         console.debug("====>ActsAccountCheckAccountLabels_0500 delete_account_err");
+                        expect().assertFail();
+                        done();
                     });
-                    done()
                 }).catch((err) =>{
                     console.debug("====>ActsAccountCheckAccountLabels_0500 err:" + JSON.stringify(err))
                     expect(typeof(err) != undefined).assertTrue();
@@ -228,10 +222,12 @@ export default function ActsAccountAppAccess() {
                     console.debug("====>ActsAccountCheckAccountLabels_0600 data:" + JSON.stringify(data));
                     appAccountManager.removeAccount('CheckAccountLabels_0600').then((data) =>{
                         console.debug("====>ActsAccountCheckAccountLabels_0600 delete_account_success");
+                        done();
                     }).catch((err) =>{
                         console.debug("====>ActsAccountCheckAccountLabels_0600 delete_account_err");
+                        expect().assertFail();
+                        done();
                     });
-                    done()
                 }).catch((err) =>{
                     console.debug("====>ActsAccountCheckAccountLabels_0600 err:" + JSON.stringify(err))
                     expect().assertFail();
@@ -271,19 +267,19 @@ export default function ActsAccountAppAccess() {
                             appAccountManager.setAppAccess(name, owner, false, (err, data) =>{
                                 console.debug("====>ActsAccountCheckAppAccess_0100 disableAppAccount_err:" + JSON.stringify(err));
                                 expect(err).assertEqual(null);  
-                                appAccountManager.checkAppAccess(name, owner,(err, data)=>{
+                                appAccountManager.checkAppAccess(name, owner, async (err, data)=>{
                                     console.debug("====>ActsAccountCheckAppAccess_0100 third_err:" + JSON.stringify(err))
                                     expect(err).assertEqual(null)
                                     expect(data).assertEqual(false)
                                     try {
-                                        appAccountManager.removeAccount(name)     
-                                        console.debug('====>ActsAccountCheckAppAccess_0100 removeAccount_success')                  
-                                        done();
+                                        await appAccountManager.removeAccount(name)
+                                        console.debug('====>ActsAccountCheckAppAccess_0100 removeAccount_success')
                                     }
                                     catch{
                                         console.debug('====>ActsAccountCheckAppAccess_0100 removeAccount_err')
                                         expect().assertFail()
-                                    }    
+                                    }            
+                                    done();
                                 })
                                 
                             })
@@ -315,18 +311,18 @@ export default function ActsAccountAppAccess() {
                             expect(data).assertEqual(true);
                             appAccountManager.setAppAccess(name, owner, false).then((data)=>{
                                 console.debug("====>ActsAccountCheckAppAccess_0200 disabAppAccess_data:" + JSON.stringify(data));
-                                appAccountManager.checkAppAccess(name, owner).then((data) =>{
+                                appAccountManager.checkAppAccess(name, owner).then(async (data) =>{
                                     console.debug("====>ActsAccountCheckAppAccess_0200 third_data:" + JSON.stringify(data));
                                     expect(data).assertEqual(false);     
                                     try{
-                                        appAccountManager.removeAccount(name)
+                                        await appAccountManager.removeAccount(name)
                                         console.debug('====>ActsAccountCheckAppAccess_0200 removeAccount_success')
-                                        done();
                                     }                               
                                     catch{
                                         console.debug('====>ActsAccountCheckAppAccess_0100 removeAccount_err')
                                         expect().assertFail()
-                                    }                                
+                                    }
+                                    done();                           
                                 }).catch((err)=>{
                                     console.debug("====>ActsAccountCheckAppAccess_0200 third_err:" + JSON.stringify(err));
                                     expect().assertFail();
@@ -381,21 +377,20 @@ export default function ActsAccountAppAccess() {
                         console.debug("====>ActsAccountDeleteCredential_0100 getAccountCredential_err:" + JSON.stringify(err))
                         expect(err).assertEqual(null);
                         console.debug("====>ActsAccountDeleteCredential_0100 getAccountCredential_success:" + JSON.stringify(data));
-                        appAccountManager.deleteCredential(name, "PIN", (err, data)=>{
+                        appAccountManager.deleteCredential(name, "PIN", async (err, data)=>{
                             console.debug("====>ActsAccountDeleteCredential_0100 deleteCredential_err:" + JSON.stringify(err));
                             expect(err).assertEqual(null);
                             console.debug("====>ActsAccountDeleteCredential_0100 deleteCredential_data:" + JSON.stringify(data));                             
                             expect(data).assertEqual(null);  
                             try{
-                                appAccountManager.removeAccount(name)  
-                                console.debug('====>ActsAccountDeleteCredential_0100 removeAccount_success')                          
-                                done(); 
+                                await appAccountManager.removeAccount(name)  
+                                console.debug('====>ActsAccountDeleteCredential_0100 removeAccount_success')
                             }
                             catch{
                                 console.debug('====>ActsAccountDeleteCredential_0100 removeAccount_err')
                                 expect().assertFail()
-                                done();
-                            }
+                            }    
+                            done();
                         })                   
                     })                
                 });
@@ -417,17 +412,17 @@ export default function ActsAccountAppAccess() {
                     console.debug("====>ActsAccountDeleteCredential_0200 setAccountCredential_success");
                     appAccountManager.getCredential(name,  "PIN").then((data) =>{
                         console.debug("====>ActsAccountDeleteCredential_0200 getAccountCredential_data:" + JSON.stringify(data));
-                        appAccountManager.deleteCredential(name,  "PIN").then((data) =>{
+                        appAccountManager.deleteCredential(name,  "PIN").then(async (data) =>{
                             console.debug("====>ActsAccountDeleteCredential_0200 data:" + JSON.stringify(data));                
                             try{
-                                appAccountManager.removeAccount(name)
+                                await appAccountManager.removeAccount(name)
                                 console.debug('====>ActsAccountDeleteCredential_0200 removeAccount_success')
-                                done();
                             }                               
                             catch{
                                 console.debug('====>ActsAccountDeleteCredential_0200 removeAccount_err')
                                 expect().assertFail()
-                            }                          
+                            }         
+                            done();                
                         }).catch((err) =>{
                             console.debug("====>ActsAccountDeleteCredential_0200 err:" + JSON.stringify(err));
                             expect().assertFail();
@@ -473,12 +468,10 @@ export default function ActsAccountAppAccess() {
                     try{
                         await appAccountManager.removeAccount(name)
                         console.debug('====>ActsAccountVerifyCredential_0100 removeAccount_success')
-                        done();
-                    }                               
-                    catch{
+                    } catch{
                         console.debug('====>ActsAccountVerifyCredential_0100 removeAccount_err')
                         expect().assertFail()
-                    }    
+                    }
                     done(); 
                     },
                 onRequestRedirected:null,
@@ -511,7 +504,6 @@ export default function ActsAccountAppAccess() {
                         try{
                             await appAccountManager.removeAccount(name)
                             console.debug('====>ActsAccountVerifyCredential_0200 removeAccount_success')
-                            done();
                         }                               
                         catch{
                             console.debug('====>ActsAccountVerifyCredential_0200 removeAccount_err')
@@ -549,7 +541,6 @@ export default function ActsAccountAppAccess() {
                     try{
                         await appAccountManager.removeAccount(name)
                         console.debug('====>ActsAccountSetAuthenticatorProperties_0100 removeAccount_success')
-                        done();
                     }                               
                     catch{
                         console.debug('====>ActsAccountSetAuthenticatorProperties_0100 removeAccount_err')
@@ -586,7 +577,6 @@ export default function ActsAccountAppAccess() {
                     try{
                         await appAccountManager.removeAccount(name)
                         console.debug('====>ActsAccountSetAuthenticatorProperties_0200 removeAccount_success')
-                        done();
                     }                               
                     catch{
                         console.debug('====>ActsAccountSetAuthenticatorProperties_0200 removeAccount_err')
@@ -625,17 +615,18 @@ export default function ActsAccountAppAccess() {
                     await appAccountManager.removeAccount(name);
                     expect(err).assertEqual(null)
                     done();
+                    return
                 }
                 try{
                     await appAccountManager.removeAccount(name)
                     console.debug('====>ActsAccountSelectAccountByOptions_0100 removeAccount_success')
-                    done();
                 }                               
                 catch{
                     console.debug('====>ActsAccountSelectAccountByOptions_0100 removeAccount_err')
                     expect().assertFail()
                     done();
-                }  
+                }
+                done();
             });        
         });
 
@@ -662,17 +653,17 @@ export default function ActsAccountAppAccess() {
                     await appAccountManager.removeAccount(name);
                     expect(err).assertEqual(null)
                     done();
+                    return;
                 }
                 try{
                     await appAccountManager.removeAccount(name)
                     console.debug('====>ActsAccountSelectAccountByOptions_0200 removeAccount_success')
-                    done();
                 }                               
                 catch{
                     console.debug('====>ActsAccountSelectAccountByOptions_0200 removeAccount_err')
                     expect().assertFail()
-                    done();
-                }    
+                }
+                done();
             });        
         });
 
@@ -700,17 +691,17 @@ export default function ActsAccountAppAccess() {
                     await appAccountManager.removeAccount(name);
                     expect(err).assertEqual(null)
                     done();
+                    return;
                 }
                 try{
                     await appAccountManager.removeAccount(name)
                     console.debug('====>ActsAccountSelectAccountByOptions_0300 removeAccount_success')
-                    done();
                 }                               
                 catch{
                     console.debug('====>ActsAccountSelectAccountByOptions_0300 removeAccount_err')
                     expect().assertFail()
-                    done();
-                }    
+                }
+                done();
             });        
         }); 
         
diff --git a/account/appaccount/actsaccountoperatetest/src/main/js/test/ChangeOnOff.js b/account/appaccount/actsaccountoperatetest/src/main/js/test/ChangeOnOff.js
index 33979c5cb..691c6e17b 100644
--- a/account/appaccount/actsaccountoperatetest/src/main/js/test/ChangeOnOff.js
+++ b/account/appaccount/actsaccountoperatetest/src/main/js/test/ChangeOnOff.js
@@ -21,18 +21,14 @@ const TIMEOUT = 2000;
 export default function ActsAccountOnOff() {
     describe('ActsAccountOnOff', async function () {
 
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
+        async function sleep(delay) {
+            let timeoutId = null;
+            var promise = new Promise((resolve, reject) => {
+                timeoutId = setTimeout(() => resolve("done!"), delay);
+            });
+            await promise
+            clearTimeout(timeoutId)
         }
-        beforeAll(async function (done) {            
-            done();
-        });
 
         async function testInit(){
             console.debug("====>startAbility start====");
@@ -83,9 +79,9 @@ export default function ActsAccountOnOff() {
                 commonevent.unsubscribe(subscriber, unSubscriberCallback);
                 appAccountManager.removeAccount("onoff_setcredential", removeAccountCallback);
             }
-            function publishCallback(err){
+            async function publishCallback(err){
                 console.debug("====>publish call back err:" + JSON.stringify(err));
-                setTimeout(async function (){
+                await sleep(500)
                     console.debug("====>setCredential start====");
                     try{
                         await appAccountManager.setCredential("onoff_setcredential", "credentialType", "credential");
@@ -96,7 +92,6 @@ export default function ActsAccountOnOff() {
                         done();
                     }
                     console.debug("====>setCredential finish====");
-                }, 500)
             }
             var commonEventSubscribeInfo = {
                 events: ["account_on_change_setcredential"]
@@ -111,10 +106,9 @@ export default function ActsAccountOnOff() {
             var commonEventPublishData = {
                 code: 9
             }
-            setTimeout(function (){
-                console.debug("====>publish event account_on_change 0300====");
-                commonevent.publish("account_on_change", commonEventPublishData, publishCallback);
-            }, 1000);
+            await sleep(1000)
+            console.debug("====>publish event account_on_change 0300====");
+            commonevent.publish("account_on_change", commonEventPublishData, publishCallback);
         });
 
         /*
@@ -152,9 +146,9 @@ export default function ActsAccountOnOff() {
                 commonevent.unsubscribe(subscriber, unSubscriberCallback);
                 appAccountManager.removeAccount("onoff_removeFir", removeAccountCallback);
             }
-            function publishCallback(err){
+            async function publishCallback(err){
                 console.debug("====>publish call back err:" + JSON.stringify(err));
-                setTimeout(async function (){
+                await sleep(500)
                     console.debug("====>removeAccount start====");
                     try{
                         await appAccountManager.removeAccount("onoff_removeSec");
@@ -165,7 +159,6 @@ export default function ActsAccountOnOff() {
                         done();
                     }
                     console.debug("====>removeAccount finish====");
-                }, 500)
             }
             var commonEventSubscribeInfo = {
                 events: ["account_on_remove_another"]
@@ -180,10 +173,9 @@ export default function ActsAccountOnOff() {
             var commonEventPublishData = {
                 code: 10
             }
-            setTimeout(function (){
+            await sleep(1000)
                 console.debug("====>publish event account_on_change 0400====");
                 commonevent.publish("account_on_change", commonEventPublishData, publishCallback);
-            }, 1000);
         });
 
         /*
@@ -212,9 +204,9 @@ export default function ActsAccountOnOff() {
                 commonevent.unsubscribe(subscriber, unSubscriberCallback);
                 done();
             }
-            function publishCallback(err){
-                console.debug("====>publish call back err:" + JSON.stringify(err));
-                setTimeout(async function (){
+            async function publishCallback(err){
+                console.debug("====>publish call back err:" + JSON.stringify(err)); 
+                await sleep(500)
                     console.debug("====>removeAccount start====");
                     try{
                         await appAccountManager.removeAccount("onoff_remove");
@@ -225,7 +217,6 @@ export default function ActsAccountOnOff() {
                         done();
                     }
                     console.debug("====>removeAccount finish====");
-                }, 500)
             }
             var commonEventSubscribeInfo = {
                 events: ["account_on_change_remove"]
@@ -240,10 +231,9 @@ export default function ActsAccountOnOff() {
             var commonEventPublishData = {
                 code: 11
             }
-            setTimeout(function (){
+            await sleep(1000)
                 console.debug("====>publish event account_on_change 0500====");
                 commonevent.publish("account_on_change", commonEventPublishData, publishCallback);
-            }, 1000);
         });
 
         /*
@@ -285,9 +275,9 @@ export default function ActsAccountOnOff() {
                 commonevent.unsubscribe(subscriber, unSubscriberCallback);
                 appAccountManager.removeAccount("onoff_disableFir", removeAccountCallback);
             }
-            function publishCallback(err){
+            async function publishCallback(err){
                 console.debug("====>publish call back err:" + JSON.stringify(err));
-                setTimeout(async function (){
+                await sleep(500)
                     console.debug("====>disableAppAccess start====");
                     try{
                         await appAccountManager.setAppAccess("onoff_disableSec", "com.example.actsaccountsceneonoff", false);
@@ -298,7 +288,6 @@ export default function ActsAccountOnOff() {
                         done();
                     }
                     console.debug("====>disableAppAccess finish====");
-                }, 500)
             }
             var commonEventSubscribeInfo = {
                 events: ["account_on_set_another_disable"]
@@ -313,10 +302,9 @@ export default function ActsAccountOnOff() {
             var commonEventPublishData = {
                 code: 12
             }
-            setTimeout(function (){
+            await sleep(1000)
                 console.debug("====>publish event account_on_change 0600====");
                 commonevent.publish("account_on_change", commonEventPublishData, publishCallback);
-            }, 1000);
         });
           
     })
diff --git a/account/appaccount/actsaccountoperatetest/src/main/js/test/CustomData.test.js b/account/appaccount/actsaccountoperatetest/src/main/js/test/CustomData.test.js
index 2d4e66261..1b1c60471 100644
--- a/account/appaccount/actsaccountoperatetest/src/main/js/test/CustomData.test.js
+++ b/account/appaccount/actsaccountoperatetest/src/main/js/test/CustomData.test.js
@@ -15,32 +15,8 @@
 import account from '@ohos.account.appAccount'
 import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect } from '@ohos/hypium'
 
-const TIMEOUT = 5000;
-const EACHTIMEOUT = 500;
 export default function ActsAccountCustomData() {
     describe('ActsAccountCustomData', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        })
-
-        beforeEach(async function (done) {
-            console.debug("====>beforeEach enter====");
-            await sleep(EACHTIMEOUT);
-            done();
-        })
 
         /*
         * @tc.number    : ActsAccountCustomData_0100
diff --git a/account/appaccount/actsaccountoperatetest/src/main/js/test/ErrCode.test.js b/account/appaccount/actsaccountoperatetest/src/main/js/test/ErrCode.test.js
index 884450494..e479dd478 100644
--- a/account/appaccount/actsaccountoperatetest/src/main/js/test/ErrCode.test.js
+++ b/account/appaccount/actsaccountoperatetest/src/main/js/test/ErrCode.test.js
@@ -20,28 +20,6 @@ const STRCOUNT = 1025;
 const EACHTIMEOUT = 500;
 export default function ActsAccountErrCode() {
     describe('ActsAccountErrCode', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        })
-
-        beforeEach(async function (done) {
-            console.debug("====>beforeEach enter====");
-            await sleep(EACHTIMEOUT);
-            done();
-        })
 
         /*
         * @tc.number    : ActsAccountErrCode_0100
diff --git a/account/appaccount/actsaccountoperatetest/src/main/js/test/ErrPermission.test.js b/account/appaccount/actsaccountoperatetest/src/main/js/test/ErrPermission.test.js
index 657a930cd..809e8ee1f 100644
--- a/account/appaccount/actsaccountoperatetest/src/main/js/test/ErrPermission.test.js
+++ b/account/appaccount/actsaccountoperatetest/src/main/js/test/ErrPermission.test.js
@@ -15,26 +15,9 @@
 import account from '@ohos.account.appAccount'
 import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect } from '@ohos/hypium'
 
-const TIMEOUT = 5000;
 const ERR_PERMISSION_DENIED = 201;
 export default function ActsAccountErrPermission() {
     describe('ActsAccountErrPermission', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        });
-
         /*
         * @tc.number    : ActsAccountErrPermission_0100
         * @tc.name      : setDataSyncEnabled callback
diff --git a/account/appaccount/actsaccountoperatetest/src/main/js/test/RemoveAccount.test.js b/account/appaccount/actsaccountoperatetest/src/main/js/test/RemoveAccount.test.js
index 0a71ccc77..082f32070 100644
--- a/account/appaccount/actsaccountoperatetest/src/main/js/test/RemoveAccount.test.js
+++ b/account/appaccount/actsaccountoperatetest/src/main/js/test/RemoveAccount.test.js
@@ -15,28 +15,11 @@
 import account from '@ohos.account.appAccount'
 import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect } from '@ohos/hypium'
 const NAMELIMIT = 512;
-const TIMEOUT = 5000;
 const ERR_INVALID_PARAMETER = 12300002
 const ERR_ACCOUNT_NO_EXIST = 12300003
 const createAccountOptions = {customData:{age:'12'}}
 export default function ActsAccountRemoveAccount() {
     describe('ActsAccountRemoveAccount', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        });
 
         /*
         * @tc.number    : ActsAccountRemoveAccount_0100
diff --git a/account/appaccount/actsaccountoperatetest/src/main/js/test/SetAppAccess.test.js b/account/appaccount/actsaccountoperatetest/src/main/js/test/SetAppAccess.test.js
index 38b0c1c37..49a92f763 100644
--- a/account/appaccount/actsaccountoperatetest/src/main/js/test/SetAppAccess.test.js
+++ b/account/appaccount/actsaccountoperatetest/src/main/js/test/SetAppAccess.test.js
@@ -15,34 +15,10 @@
 import account from '@ohos.account.appAccount'
 import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect } from '@ohos/hypium'
 
-const TIMEOUT = 5000;
 const STRCOUNT = 513;
-const EACHTIMEOUT = 500;
 const createAccountOptions = {customData:{age:'12'}}
 export default function ActsAccountSetAppAccess() {
     describe('ActsAccountSetAppAccess', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        })
-
-        beforeEach(async function (done) {
-            console.debug("====>beforeEach enter====");
-            await sleep(EACHTIMEOUT);
-            done();
-        })
 
         /*
         * @tc.number    : ActsAccountSetAppAccess_0100
diff --git a/account/appaccount/actsaccounttest/src/main/js/test/AppAccess.test.js b/account/appaccount/actsaccounttest/src/main/js/test/AppAccess.test.js
index 55a5347a3..e93f74319 100644
--- a/account/appaccount/actsaccounttest/src/main/js/test/AppAccess.test.js
+++ b/account/appaccount/actsaccounttest/src/main/js/test/AppAccess.test.js
@@ -20,28 +20,6 @@ const STRCOUNT = 1025;
 const EACHTIMEOUT = 500;
 export default function ActsAccountAppAccess() {
     describe('ActsAccountAppAccess', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        })
-
-        beforeEach(async function (done) {
-            console.debug("====>beforeEach enter====");
-            await sleep(EACHTIMEOUT);
-            done();
-        })
 
         /*
         * @tc.number    : ActsAccountAppAccess_0100
diff --git a/account/appaccount/actsaccounttest/src/main/js/test/AssociatedData.test.js b/account/appaccount/actsaccounttest/src/main/js/test/AssociatedData.test.js
index 048eba2c0..c23c03191 100755
--- a/account/appaccount/actsaccounttest/src/main/js/test/AssociatedData.test.js
+++ b/account/appaccount/actsaccounttest/src/main/js/test/AssociatedData.test.js
@@ -19,29 +19,6 @@ const TIMEOUT = 5000;
 const EACHTIMEOUT = 500;
 export default function ActsAccountAssociatedData() {
     describe('ActsAccountAssociatedData', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        })
-
-        beforeEach(async function (done) {
-            console.debug("====>beforeEach enter====");
-            await sleep(EACHTIMEOUT);
-            done();
-        })
-
         /*
         * @tc.number    : ActsAccountAssociatedData_0100
         * @tc.name      : The correct calls setAssociatedData and getAssociatedData get the value
diff --git a/account/appaccount/actsaccounttest/src/main/js/test/Authenticator.test.js b/account/appaccount/actsaccounttest/src/main/js/test/Authenticator.test.js
index 3d408bf29..2d111a1af 100644
--- a/account/appaccount/actsaccounttest/src/main/js/test/Authenticator.test.js
+++ b/account/appaccount/actsaccounttest/src/main/js/test/Authenticator.test.js
@@ -20,18 +20,8 @@ const NAMELIMIT = 512;
 const LENGTHLIMIT = 1024;
 const name = 'zhangsan'
 const owner = 'com.example.accountauthenticator'
-export default function ActsAccountAppAccess() {
+export default function ActsAccountAuthenticator() {
     describe('ActsAccountAuthenticator', function () {
-
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
         beforeAll(async function (done) {  
             console.debug("====>accountauthenticatorbeforeAll start====");		
             await featureAbility.startAbility(
@@ -607,7 +597,6 @@ export default function ActsAccountAppAccess() {
         */
 
         it('ActsAccountSelectAccountByOptions_0100', 0, async function (done) {  
-            await sleep(1000)
             console.debug("====>ActsAccountSelectAccountByOptions_0100 start====");
             var appAccountManager = account.createAppAccountManager();
             var select_options = {allowedAccounts:[{"name":name,"owner":owner}]}
diff --git a/account/appaccount/actsaccounttest/src/main/js/test/CreatManager.test.js b/account/appaccount/actsaccounttest/src/main/js/test/CreatManager.test.js
index eb9eaa99d..9f1edfd8a 100755
--- a/account/appaccount/actsaccounttest/src/main/js/test/CreatManager.test.js
+++ b/account/appaccount/actsaccounttest/src/main/js/test/CreatManager.test.js
@@ -17,24 +17,7 @@ import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect } from
 
 const TIMEOUT = 5000;
 export default function ActsCreatAppAccountManager() {
-    describe('ActsCreatAppAccountManager', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        });
-        
+    describe('ActsCreatAppAccountManager', function () {        
         /*
         * @tc.number    : ActsCreatAppAccountManager_0100
         * @tc.name      : createAppAccountManager
diff --git a/account/appaccount/actsaccounttest/src/main/js/test/Credential.test.js b/account/appaccount/actsaccounttest/src/main/js/test/Credential.test.js
index 5ff3a0f07..b6725cd8c 100755
--- a/account/appaccount/actsaccounttest/src/main/js/test/Credential.test.js
+++ b/account/appaccount/actsaccounttest/src/main/js/test/Credential.test.js
@@ -19,28 +19,6 @@ const TIMEOUT = 5000;
 const EACHTIMEOUT = 500;
 export default function ActsAccountCredential() {
     describe('ActsAccountCredential', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        })
-
-        beforeEach(async function (done) {
-            console.debug("====>beforeEach enter====");
-            await sleep(EACHTIMEOUT);
-            done();
-        })
 
         /*
         * @tc.number    : ActsAccountCredential_0100
diff --git a/account/appaccount/actsaccounttest/src/main/js/test/DeleteAccount.test.js b/account/appaccount/actsaccounttest/src/main/js/test/DeleteAccount.test.js
index eb6ec1166..54e5bcb1c 100755
--- a/account/appaccount/actsaccounttest/src/main/js/test/DeleteAccount.test.js
+++ b/account/appaccount/actsaccounttest/src/main/js/test/DeleteAccount.test.js
@@ -18,22 +18,6 @@ const NAMELIMIT = 512;
 const TIMEOUT = 5000;
 export default function ActsAccountDeleteAccount() {
     describe('ActsAccountDeleteAccount', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        });
 
         /*
         * @tc.number    : ActsAccountDeleteAccount_0100
diff --git a/account/appaccount/actsaccounttest/src/main/js/test/ExtraInfo.test.js b/account/appaccount/actsaccounttest/src/main/js/test/ExtraInfo.test.js
index 6b5852e92..2e4a2dea6 100755
--- a/account/appaccount/actsaccounttest/src/main/js/test/ExtraInfo.test.js
+++ b/account/appaccount/actsaccounttest/src/main/js/test/ExtraInfo.test.js
@@ -19,28 +19,6 @@ const TIMEOUT = 5000;
 const EACHTIMEOUT = 500;
 export default function ActsAccountSetGetExtraInfo() {
     describe('ActsAccountSetGetExtraInfo', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        })
-
-        beforeEach(async function (done) {
-            console.debug("====>beforeEach enter====");
-            await sleep(EACHTIMEOUT);
-            done();
-        })
 
         /*
         * @tc.number    : ActsAccountSetGetExtraInfo_0100
diff --git a/account/appaccount/actsaccounttest/src/main/js/test/NoPermission.test.js b/account/appaccount/actsaccounttest/src/main/js/test/NoPermission.test.js
index 282f93b2c..beb553748 100755
--- a/account/appaccount/actsaccounttest/src/main/js/test/NoPermission.test.js
+++ b/account/appaccount/actsaccounttest/src/main/js/test/NoPermission.test.js
@@ -19,21 +19,6 @@ const TIMEOUT = 5000;
 const ERR_APPACCOUNT_SERVICE_PERMISSION_DENIED = 4521993;
 export default function ActsAccountNoPermission() {
     describe('ActsAccountNoPermission', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        });
 
         /*
         * @tc.number    : ActsAccountNoPermission_0100
diff --git a/account/appaccount/actsaccounttest/src/main/js/test/OAuthToken.test.js b/account/appaccount/actsaccounttest/src/main/js/test/OAuthToken.test.js
index 341ec5f45..c4b24715b 100644
--- a/account/appaccount/actsaccounttest/src/main/js/test/OAuthToken.test.js
+++ b/account/appaccount/actsaccounttest/src/main/js/test/OAuthToken.test.js
@@ -29,28 +29,6 @@ const OWNERLENGTHLIMIT = 1024;
 const OWNERSELF = "com.example.actsaccounttest";
 export default function ActsAccountOAuthToken() {
     describe('ActsAccountOAuthToken', function () {
-        function sleep(delay) {
-            return new Promise((resolve, reject) => {
-                setTimeout(() => {
-                    resolve()
-                }, delay)
-            }).then(() => {
-                console.info(`sleep #{time} over ...`)
-            })
-        }
-
-        beforeAll(async function (done) {
-            console.debug("====>beforeAll start====");
-            await sleep(TIMEOUT);
-            console.debug("====>beforeAll end====");
-            done();
-        });
-
-        beforeEach(async function (done) {
-            console.debug("====>beforeAll enter====");
-            await sleep(EACHTIMEOUT);
-            done();
-        });
 
         /*
             * @tc.number    : testGetEntriesString101
diff --git a/account/appaccount/actsgetaccountsbyowner/src/main/js/test/Getaccountsbyowner.test.js b/account/appaccount/actsgetaccountsbyowner/src/main/js/test/Getaccountsbyowner.test.js
index 07e7c355e..d6dd7ea09 100644
--- a/account/appaccount/actsgetaccountsbyowner/src/main/js/test/Getaccountsbyowner.test.js
+++ b/account/appaccount/actsgetaccountsbyowner/src/main/js/test/Getaccountsbyowner.test.js
@@ -22,6 +22,16 @@ const SELFBUNDLE = 'com.example.actsgetaccountsbyowner'
 const createAccountOptions = {customData:{age:'12'}}
 export default function GetAccountsByOwner() {
     describe('GetAccountsByOwner', function () {
+        async function sleep(delay) {
+            let timeoutId = null;
+            var promise = new Promise((resolve, reject) => {
+                timeoutId = setTimeout(() => {
+                    resolve("done")
+                }, delay)
+            })
+            await promise
+            clearTimeout(timeoutId)
+        }
 
         /*
         * @tc.number    : GetAccountsByOwner_0100
@@ -283,10 +293,9 @@ export default function GetAccountsByOwner() {
                     done();
                 });
             }
-            setTimeout(async function(){
-                console.debug("====>getAccountsByOwner 0900 start====");
-                appAccountManager.getAccountsByOwner(SELFBUNDLE, getAllCallback); 
-            }, TIMEOUT); 
+            await sleep(TIMEOUT)
+            console.debug("====>getAccountsByOwner 0900 start====");
+            appAccountManager.getAccountsByOwner(SELFBUNDLE, getAllCallback);
         });
 
         /*
@@ -315,31 +324,30 @@ export default function GetAccountsByOwner() {
                     },
                 },
             );
-            setTimeout(async function(){
-                console.debug("====>getAccountsByOwner 1000 start====");
-                try{
-                    var data = await appAccountManager.getAccountsByOwner(SELFBUNDLE);
-                }
-                catch(err){
-                    console.error("====>getAccountsByOwner 1000 fail err:" + JSON.stringify(err));
-                    expect().assertFail();
-                    done();
-                }
-                console.debug("====>getAccountsByOwner 1000 data:" + JSON.stringify(data));
-                try{
-                    expect(data[0].name).assertEqual("Account_application_promise");
-                    expect(data[0].owner).assertEqual("com.example.actsgetaccountsbyowner");
-                }
-                catch(err){
-                    console.error("====>check data 1000 fail err:" + JSON.stringify(err));
-                    expect().assertFail();
-                    done();
-                }
-                console.debug("====>delete account 1000 start====");
-                await appAccountManager.removeAccount("Account_application_promise");
-                console.debug("====>GetAccountsByOwner_1000 end====");
+            sleep(TIMEOUT)
+            console.debug("====>getAccountsByOwner 1000 start====");
+            try{
+                var data = await appAccountManager.getAccountsByOwner(SELFBUNDLE);
+            }
+            catch(err){
+                console.error("====>getAccountsByOwner 1000 fail err:" + JSON.stringify(err));
+                expect().assertFail();
                 done();
-            }, TIMEOUT); 
+            }
+            console.debug("====>getAccountsByOwner 1000 data:" + JSON.stringify(data));
+            try{
+                expect(data[0].name).assertEqual("Account_application_promise");
+                expect(data[0].owner).assertEqual("com.example.actsgetaccountsbyowner");
+            }
+            catch(err){
+                console.error("====>check data 1000 fail err:" + JSON.stringify(err));
+                expect().assertFail();
+                done();
+            }
+            console.debug("====>delete account 1000 start====");
+            await appAccountManager.removeAccount("Account_application_promise");
+            console.debug("====>GetAccountsByOwner_1000 end====");
+            done();
         });
 
         /*
@@ -376,10 +384,9 @@ export default function GetAccountsByOwner() {
                 console.debug("====>GetAccountsByOwner_1100 end====");
                 done();
             }
-            setTimeout(async function(){
-                console.debug("====>getAccountsByOwner 1100 start====");
-                appAccountManager.getAccountsByOwner(specifiedBundle, getAllCallback); 
-            }, TIMEOUT); 
+            sleep(TIMEOUT)
+            console.debug("====>getAccountsByOwner 1100 start====");
+            appAccountManager.getAccountsByOwner(specifiedBundle, getAllCallback);
         });
 
         /*
@@ -407,22 +414,21 @@ export default function GetAccountsByOwner() {
                     },
                 },
             );
-            setTimeout(async function(){
-                console.debug("====>getAccountsByOwner 1200 start====");
-                try{
-                    var data = await appAccountManager.getAccountsByOwner(specifiedBundle);
-                }
-                catch(err){
-                    console.error("====>getAccountsByOwner 1200 fail err:" + JSON.stringify(err));
-                    expect().assertFail();
-                    done();
-                }
-                console.debug("====>getAccountsByOwner 1200 data:" + JSON.stringify(data));
-                expect(data[0].name).assertEqual("account_name_scene_single");
-                expect(data[0].owner).assertEqual("com.example.actsscenegetallaccounts");
-                console.debug("====>GetAccountsByOwner_1200 end====");
+            await sleep(TIMEOUT)
+            console.debug("====>getAccountsByOwner 1200 start====");
+            try{
+                var data = await appAccountManager.getAccountsByOwner(specifiedBundle);
+            }
+            catch(err){
+                console.error("====>getAccountsByOwner 1200 fail err:" + JSON.stringify(err));
+                expect().assertFail();
                 done();
-            }, TIMEOUT);
+            }
+            console.debug("====>getAccountsByOwner 1200 data:" + JSON.stringify(data));
+            expect(data[0].name).assertEqual("account_name_scene_single");
+            expect(data[0].owner).assertEqual("com.example.actsscenegetallaccounts");
+            console.debug("====>GetAccountsByOwner_1200 end====");
+            done();
         });
 
         /*
diff --git a/account/appaccount/actsgetallaccounts/src/main/js/test/Getallaccounts.test.js b/account/appaccount/actsgetallaccounts/src/main/js/test/Getallaccounts.test.js
index 8e8725f85..ac41600c2 100755
--- a/account/appaccount/actsgetallaccounts/src/main/js/test/Getallaccounts.test.js
+++ b/account/appaccount/actsgetallaccounts/src/main/js/test/Getallaccounts.test.js
@@ -20,6 +20,16 @@ const TIMEOUT = 2000;
 const LENGTHLIMIT = 1024;
 export default function ActsGetAllAccounts() {
     describe('ActsGetAllAccounts', function () {
+        async function sleep(delay) {
+            let timeoutId = null;
+            var promise = new Promise((resolve, reject) => {
+                timeoutId = setTimeout(() => {
+                    resolve("done")
+                }, delay)
+            })
+            await promise
+            clearTimeout(timeoutId)
+        }
 
         /*
         * @tc.number    : ActsGetAllAccounts_0100
@@ -286,10 +296,9 @@ export default function ActsGetAllAccounts() {
                     done();
                 });
             }
-            setTimeout(async function(){
-                console.debug("====>getAllAccounts 0900 start====");
-                appAccountManager.getAllAccounts(selfBundle, getAllCallback); 
-            }, TIMEOUT); 
+            await sleep(TIMEOUT)
+            console.debug("====>getAllAccounts 0900 start====");
+            appAccountManager.getAllAccounts(selfBundle, getAllCallback);
         });
 
         /*
@@ -319,31 +328,30 @@ export default function ActsGetAllAccounts() {
                     },
                 },
             );
-            setTimeout(async function(){
-                console.debug("====>getAllAccounts 1000 start====");
-                try{
-                    var data = await appAccountManager.getAllAccounts(selfBundle);
-                }
-                catch(err){
-                    console.error("====>getAllAccounts 1000 fail err:" + JSON.stringify(err));
-                    expect().assertFail();
-                    done();
-                }
-                console.debug("====>getAllAccounts 1000 data:" + JSON.stringify(data));
-                try{
-                    expect(data[0].name).assertEqual("Account_application_promise");
-                    expect(data[0].owner).assertEqual("com.example.actsgetallaccounts");
-                }
-                catch(err){
-                    console.error("====>check data 1000 fail err:" + JSON.stringify(err));
-                    expect().assertFail();
-                    done();
-                }
-                console.debug("====>delete account 1000 start====");
-                await appAccountManager.deleteAccount("Account_application_promise");
-                console.debug("====>ActsGetAllAccounts_1000 end====");
+            await sleep(TIMEOUT)
+            console.debug("====>getAllAccounts 1000 start====");
+            try{
+                var data = await appAccountManager.getAllAccounts(selfBundle);
+            }
+            catch(err){
+                console.error("====>getAllAccounts 1000 fail err:" + JSON.stringify(err));
+                expect().assertFail();
                 done();
-            }, TIMEOUT); 
+            }
+            console.debug("====>getAllAccounts 1000 data:" + JSON.stringify(data));
+            try{
+                expect(data[0].name).assertEqual("Account_application_promise");
+                expect(data[0].owner).assertEqual("com.example.actsgetallaccounts");
+            }
+            catch(err){
+                console.error("====>check data 1000 fail err:" + JSON.stringify(err));
+                expect().assertFail();
+                done();
+            }
+            console.debug("====>delete account 1000 start====");
+            await appAccountManager.deleteAccount("Account_application_promise");
+            console.debug("====>ActsGetAllAccounts_1000 end====");
+            done();
         });       
 
         /*
diff --git a/account/appaccount/getallaccounts/actsgetallaccountsnoparameter/src/main/js/test/Getallaccounts.test.js b/account/appaccount/getallaccounts/actsgetallaccountsnoparameter/src/main/js/test/Getallaccounts.test.js
index 5527cc73d..5c904f97e 100644
--- a/account/appaccount/getallaccounts/actsgetallaccountsnoparameter/src/main/js/test/Getallaccounts.test.js
+++ b/account/appaccount/getallaccounts/actsgetallaccountsnoparameter/src/main/js/test/Getallaccounts.test.js
@@ -20,6 +20,16 @@ const TIMEOUT = 2000;
 const SELFBUNDLE = 'com.example.getallaccountsnoparameter'
 export default function ActsGetAllAccountsNoParameter() {
     describe('ActsGetAllAccountsNoParameter', function () {
+        async function sleep(delay) {
+            let timeoutId = null;
+            var promise = new Promise((resolve, reject) => {
+                timeoutId = setTimeout(() => {
+                    resolve("done")
+                }, delay)
+            })
+            await promise
+            clearTimeout(timeoutId)
+        }
 
         /*
         * @tc.number    : ActsGetAllAccountsNoParameter_0100
@@ -567,34 +577,33 @@ export default function ActsGetAllAccountsNoParameter() {
                     },
                 },
             );
-            setTimeout(async function(){
-                console.debug("====>getAllAccounts 1100 start====");
-                try{
-                    var data = await appAccountManager.getAllAccounts();
-                }
-                catch(err){
-                    console.error("====>getAllAccounts 1100 fail err:" + JSON.stringify(err));
-                    expect().assertFail();
-                    done();
-                }
-                console.debug("====>getAllAccounts 1100 data:" + JSON.stringify(data));
-                expect(data.length).assertEqual(2);
-                try{
-                    expect(data[0].name).assertEqual("account_name_scene_single");
-                    expect(data[0].owner).assertEqual("com.example.actsaccountsceneaccessible");
-                    expect(data[1].name).assertEqual("accessibleAccount_this_application");
-                    expect(data[1].owner).assertEqual("com.example.getallaccountsnoparameter");
-                }
-                catch(err){
-                    console.error("====>check data 1100 fail err:" + JSON.stringify(err));
-                    expect().assertFail();
-                    done();
-                }
-                console.debug("====>delete account 1100 start====");
-                await appAccountManager.removeAccount("accessibleAccount_this_application");
-                console.debug("====>ActsGetAllAccountsNoParameter_1100 end====");
+            await sleep(TIMEOUT)
+            console.debug("====>getAllAccounts 1100 start====");
+            try{
+                var data = await appAccountManager.getAllAccounts();
+            }
+            catch(err){
+                console.error("====>getAllAccounts 1100 fail err:" + JSON.stringify(err));
+                expect().assertFail();
                 done();
-            }, TIMEOUT);
+            }
+            console.debug("====>getAllAccounts 1100 data:" + JSON.stringify(data));
+            expect(data.length).assertEqual(2);
+            try{
+                expect(data[0].name).assertEqual("account_name_scene_single");
+                expect(data[0].owner).assertEqual("com.example.actsaccountsceneaccessible");
+                expect(data[1].name).assertEqual("accessibleAccount_this_application");
+                expect(data[1].owner).assertEqual("com.example.getallaccountsnoparameter");
+            }
+            catch(err){
+                console.error("====>check data 1100 fail err:" + JSON.stringify(err));
+                expect().assertFail();
+                done();
+            }
+            console.debug("====>delete account 1100 start====");
+            await appAccountManager.removeAccount("accessibleAccount_this_application");
+            console.debug("====>ActsGetAllAccountsNoParameter_1100 end====");
+            done();
         });
     })
 }
\ No newline at end of file
